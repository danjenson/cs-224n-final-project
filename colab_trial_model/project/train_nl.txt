Print last day of April, 2009
Print file system disk space usage
change the ownership of all the files in the file system from edwarda to earnestc
Search the current directory for PHP files
Changes group ownership of '/home/www-user/php_user.sh'  to 'www-data'.
Find all *.rb files/directories under current directory
Search the system for the file “testfile.txt” ignoring the case
forcible create a symbolic link named "/etc/file.conf" to file "/etc/configuration/file.conf"
Find all *.java files under current directory containing the string 'String'
display all regular/normal files in the current folder with the name dummy
Copy directory hierarchy "dir" and all its .txt files to "dir_txt"
Display the file type description of /bin/bash, ie. symbolic link, ELF executable, etc.
Find all files in the current directory tree except .html, ignoring .svn directories
Print symlink resolved script file name
Concatenate with a space every other line in "input.txt"
Stores system load average number in the 'proc_load_average' variable.
List all IP addresses assigned to current hostname, pausing for user interaction after each page.
Delete files in /var/tmp/stuff and below that have not been modified in over 90 days
Find all *.php files under current directory and change their permission to 644
Move all *.mp4 files from directory /foo/bar and its subdirectories to /some/path
List all files in entire file system that are newer than the file $newerthan and older than the file $olderthan in regards of modification time
Show the number of lines for each .php and .phtml file in the current directory tree
Connect to host "server_b" as ssh user "user" and copy local file "/my_folder/my_file.xml" to server_b's directory "/my_new_folder/".
Find all links to path/to/file
Count the number of lines in all ".txt" files
Write to standard error a trace for each command after it expands the command and before it executes it
find all the configuration files which have been accessed in the last 30 minutes.
Find all files on the system that have been modified in the last 10 minutes
Give all files in the /path/to/base/dir tree read privileges
find md5sum of an empty string
Find every vim undo file in the current directory tree
Find regular files readable by the world
Immediately exit the shell if a command fails
extract "backup.tar.gz" with verbose output
Get a recursive file list of directory $dir
Find all .php files in all directory trees matching pattern `/srv/www/*/htdocs/system/application/' and search those files for string "debug ("
Interpret all lines containing an equal sign in myfile (usually, grab all variables from myfile into current shell)
Get from file 'File1.txt' strings starting with 'Q', extract only part of them following after '=' sign, and print which ones are not found in 'File2.txt'
Print unique lines in "set1" and "set2" when compared to each other and remove any tabs
Print info about all mounted file systems, and grand total statistic about available and used space
Print the content of the file 'file' deleting the last four lines
List files in the current directory
find md5sum of string 'hi'
switch to user username
Search the system for the file “testfile.txt”
Report total file systems disk usage estimated in terabytes
Gets IP address of 'eth0' network interface.
Removes empty folder 'symlink'.
List all regular files under current directory (not white space sage)
find all  files that match "[a-f0-9\-]{36}\.jpg" of grep
archive all files in a current directory modified in the last 30 days
Set the system date to Sat May 11 06:00:00 IDT 2013
search for all "tif" images in the entire file system
display a long listing of all the files in the current folder which have been modified in the last 24 hours
Search the current directory recursively for files last modified within the past 24 hours ignoring .swp files and paths ./es* and ./en*
delete all the directories empty directories in the current folder
Remount "yaffs2" filesystem "/dev/block/mtdblk4" to "/system" as read and write only
Print the last line of the alphabetically sorted lines in file "set"
Search for 'example' in all regular files from the current directory tree
Find all "YourProgramName" regular files in the current directory tree and print the full paths to the directories containing them
List all files/directories under current directory matching the posix-egrep type regex ".+\.(c|cpp|h)$" in their names
Executes 'true'. then makes 'xargs' fail executing 'false' and return 123 exit code.
List all files in entire file system that are not newer than the ttt file and do not belong to the user wnj
Search the current directory tree for *.wav files that have "export" in their pathnames
Print last 10 commands in history
List all defined bash functions
Find all files under the current directory whose filenames are not "file.txt", ignoring the case
Archive files in "/mnt/source-tmp" to "/media/destination"
Merge colon-separated information from standard input and file1.txt where the first field of both files matches, print unpairable lines from both files, replace missing fields with "no-match", and output the second field from standard input and the second and third field from file1.txt
Search the current directory recursively for regular files last changed more than 2 days ago
Delete all files with 128128 inode number under current directory tree
Find all regular files named 'Waldo' under 'Books' directory tree that is located in user's home directory
remove all core files in the file system
Print timestamp as HH:MM:SS
create a tar.gz compress file with all the jpg files in the entire file system
display all the files ending with ".user" in /var/adm/logs/morelogs/ and excluding all regular files
Print all files on the system owned by group `name_of_group'
find all the files in the current folder that have been modified exactly 24*3 hours ago
Find all files/directories named 'top' (case insensitive) in the entire filesystem
Mount image "test" to loop device "/dev/loop0"
Change permissions of all files ending in ".php" under the current directory to 755 and print a '+' for each file
search for "message.txt" in the folder .cache/bower and display its contents
find all the files that are modified in the last 1 day
Delete empty regular files
Move all files excluding hidden files in "/path/subfolder/" to "/path/"
Gets IP address of 'en1' network interface.
Remove all empty directories under the current directory and below
List all non-hidden files in ~/junk
Find all 400 permission files under /data directory
Change permissions to 700 for directories at the current level and deeper
Find and delete all .zip files in the current directory tree
Create a rsa key with comment specified by variable APP and passphrase specified y SSHKEYPASS.
Run the find command with all shell positional arguments
Print lines 347340107 through 347340206 in "filename"
Print the contents of "order.txt"
display all the regular/normal files in the folder /path/ which have not been modified today ( from day start ie, 00:00 )
Print file names of all files ending with '*.csv' in  '/home/ABC/files/' directory
Copy "/new/x/y/z/" over the network to "user@remote:/pre_existing/dir/" preserving the directory hierarchy
tar all the regular java files to myfile.tar
Find files in the current directory tree whose size is less than 24000 bytes
Removes all files like '*.bak' in a current folder, and prints messages about what is being done.
find all the files in the entire file system that have been changed exactly  60 days  and display ten files
display all the .sh scripts in the folder /usr
File 'mydatafile' has a number on each line, display the sum of these numbers.
Find all *foo files/directories under current directory (error prone)
Print disk of mount point "/pa/th"
Count the *.html files residing in the /usr/src directory tree and containing string "foo"
Change onwer to "root" and group to "wheel" of "com.xxxx.adbind.plist"
Search the files from the current directory tree for "foo"
Find files under /usr that are the same age or older than file `FirstFile'
Search file /etc/logs/Server.log for lines containing "Error"
List all files under and below the directory given as variable $ARCH1
Rename "Tux.png" to ".Tux.png"
Find all regular files under $dir
Print absolute path of "YOUR_PATH"
find all files in the current directory which are bigger than 2MB
Find files/directories modified within the last day under /etc
search for a word in all the php files in the current folder and display the count of all matching lines.
Search for occurrences of string "main(" in the .c files from the current directory tree
list the files with a name ending with '.mp3' or '.jpg' and beginning with 'foo'
Make all the bugzilla subdirectories permission 775
Write output of "ls -lR /" to standard output and to "output.file"
Unzip "file.gz", list the unique first comma separated field prefixed by the number of occurrences, sort from least frequent to most frequent
Search directory tree `MyApp.app' for directories whose name is 'Headers' and delete them
Print the last file extension from standard input
display all the text files in the current folder which have been modified in the last half minute ( 30 seconds )
Recursively copies 'src' to 'dest' preserving overwriting the existing files.
Find all or single file called tecmint.txt under the / directory of owner root
view the manual page of find
Find all files/directories under current directory matching the case insensitive pattern 'pattern'
Search the current directory recursively for directories with the execute permission set for everybody
Merge content of decompressed files "$part0", "$part1", and so on
find all the files that have been modified since the last time we checked
Delete all matches to the regex '^.*iframe bla bla bla.*$' in all the php files under current directory tree and modify the files in-place
Make directory "/tmp/imaginary/" on remote host before archiving "file" to "user@remote:/tmp/imaginary/"
display a long listing of the files in current folder which have been modified in the last 60 minutes
List the directory paths of all file.ext files under present working directory
Output lines 16224 to 16482 of 'file', not recommended with large files that contain many lines after the ones needed.
Check if "\[$VLABEL\]" is mounted and save the result in variable "AMV"
Print numbered list of all top-level files in the current directory, with name containing 'android'
Archive "_vimrc" to "~/.vimrc" suppressing non-error messages and compressing data during transmission
Find directories that are directly under $workspace_ts directory (no-subdirectories) and were modified less than 30 days ago
Read a single character from standard input with prompt "Are you sure? "
Print common lines in sorted files "ignore.txt" and "input.txt"
display all the files having spaces in the current folder
display all the files in the home folder which begin with "arrow" and end with "xbm"
Find all regular files with '.jpg' (case insensitive) extension, sort them by name, print the output  and also save the list to file 'file_list.txt'
Unzip "file.gz", list the unique lines matching regex pattern '"searchstring":"[^"]*"' prefixed by the number of occurrences, sort from least frequent to most frequent
display all files in the current folder which do not match the regular expression
Print the file system disk space usage for "/dev/disk0s2" if exists
Gets IP address of 'eth0' network interface.
Make directories "bravo_dir" and "alpha_dir"
Force delete all files in the current folder
Creates temporary folder and saves path to it in 'other' variable.
List all *fink* files/directories in entire file system
Search the files from directory tree "dirname" for string "foo"
find all the text files in the current folder
Find all python files under current directory tree, save the list to 'output.txt' and search for 'something' in those files
Merge each line in "file" into a single comma separated line
Find all files in the current directory tree which do not belong to any user
Delete the oldest file with '.tgz' or '.gz' extension under '/home/backups' directory tree
Print all filenames under /proc and below
Cuts off last two parts from the path $dir, and deletes resulted folder if empty.
Find all directories with permissions 777 under and below /var/www/html, and change their permissions to 755
use regex with find command
Find all files/directories under current directory and set their permission to 775
Find all PHP files in the current directory recursively and search them for string "$test" with 8 simultaneous processes
Format and print the time string @133986838 according to the default time format
Find all JPG files under the "$SOURCE" directory and below
Create a compressed archive of "/home" and split the contents into files with at most 4000 MiB each and use prefix "/media/DRIVENAME/BACKUPNAME.tgz"
display all the text files in the current folder
find all regular files under the /etc/sysconfig directory that were accessed in the last 30 minutes
Lists all manual pages.
Find all directories under current directory and set read & execute permission for group and other for these files
Filter /path/to/logfile for any lines containing the specified date, paging interactively through the output.
Find all files whose names begin with 'Makefile' at the /usr/ports directory tree's level 3 and count the number of lines with NOPORTDOCS or NOPORTEXAMPLES in them.
Go to directory specified by variable "somedir", but replacing leading ~ character by actual home directory.
change cgi files to mode 755 under htdocs or cgi-bin directories
Search the current directory tree for directories
Archive "path/subfolder" to "path", skipping files that are newer at the destination.
Find all files named "foo_bar" in the current directory recursively
Read a line of standard input in an interactive shell
Find all files under the current directory whose pathnames do not end with "Video", ignoring the case
search for all the php files in the folder "/home/mywebsite" which have been changed in the last 30*24 hours
extract "filename.tar.xz" with verbose output
recursively change owner of the directory /usr/lib/node_modules/ to the current user
Change owner of "folder" to "user_name"
Reverse the order of lines in "dax-weekly.csv" keeping the first line the same
find all the files that have been modified in the last 1 day
Find all regular files under '/home/john' directory tree that start with 'landof' in their names
Search for the files that are owned by user rooter or by user www-data
Execute all arguments to a shell script and write the output to console and "$FILE"
Use awk command '{ ... }' on compressed files "input1.vcf.gz" and "input2.vcf.gz"
Rename all .html files to .txt
Find all the files on the system that have been accessed within the last hour
Find all *.txt files under the current directory whose names are not "File.txt"
Print the current default full path of the "java" executable
Execute the file utility for each file found under /etc or below that contains "test" in its pathname
Search the current directory tree for regular files that were changed $FTIME days ago
find all the files in the home folder which end with ".tex"
Compress all ".txt" files in the current directory tree with gzip
find all the text files in the temp folder and search for the word hello in all these files and display the matched files
Find all *.plist files/directories under current directory
Find recursively the latest modified file in the current directory
display all the directories in the current folder
display all the file in the folder /home/david/ which start with the word "index"
SSH with parameters specified in "$@" using key file "~/.ssh/gitkey_rsa"
Counts lines of 'file' file.
Print only lines from 'file1.txt' that not present in 'file2.txt' and beginning with 'Q'
find all directories in the current folder
search for text files in the folder /home/you which have been modified in the last 60*24 hours(case insensitive search) and display their contents
find the file with the name "file" in the entire file system
Find all *.mp4 files under /foo/bar and move them to /some/path
Change to folder where the oracle binary is.
Displays a tree of all process alongside their command line arguments.
Save the system host name to variable "myHostName"
Print unique lines of sorted file "file1" when compared with the list of first space separated fields of all sorted strings of file "file2"
Execute awk script "script.awk" that exists in "$PATH" with argument "arg1"
find all symbolic links under /usr
force delete all the regular files with the name "test.txt"
List files in the current directory tree which have permissions rwx for user and rw for group and others
recursively change owner of the directory /usr/local to the current user
find .bmp or .txt files
Print the paths of all files in the current directory tree that contain "abc" replacing "abc" with "xyz"
Calculate the md5 sum of the contents of the sorted list of files "$FILES"
Remove everything in a current folder prompting user on each action.
Change permissions to 644 for all directories under and below /path/to/someDirectory/
Enables shell option 'nocaseglob'.
Recursively search through directory "test" in home directory, displaying names of all directories without full paths, ie. only the name part following the last slash of each directory.
Copy all .patch files from the current directory tree to patches/
Add "prefix_" to every non-blank line in "a.txt"
Find directories named `build'
Remove the files or directories 'bin/node', 'bin/node-waf', 'include/node', 'lib/node', 'lib/pkgconfig/nodejs.pc' and 'share/man/man1/node.1'
Find *.avi and *.flv files in /path/to/your/directory and below and copy them to /path/to/specific/folder
Find all files/directories under current directory and print them with newline as the delimiter
find all the *.conf files under / (root)
Archive "/path/to/sfolder/" to "name@remote.server:/path/to/remote/dfolder" preserving hard links and compressing the data during transmission
List all *.txt files/directories under /etc
Split "hugefile.txt" into files with 100000 lines each starting with "part." and using numeric suffixes
search for the file, filename.txt in the current folder ( case insensitive search )
Search for files that are at least 1.1GB
Search all the regular files from the current directory tree for "search string"
display list of all the C files ( fuiles with ".c" extension ) in current folder
Mount "vfat" filesystem "/dev/sda7" to "/mnt/my_partition" with read and write permission, umask of files and directories set to "0000", and save in fstab and allow ordinary users to mount
Make directory and parents as needed to "$FINALPATH"
search for the file "myfile" in the current folder and display all errors apart from permission denied error
find all the normal/regular files in the current directory and search for the word mail and display the file names
Make 3 directories named "$HOME/Labs/lab4a/folder" followed by a 3 width zero padded number from 1 to 3
List characters from standard input showing backslash escapes for non-displayables
display all regular/normal files in the current folder that were accessed exactly 7*24 hours back
Copies file 'file.dat' to each top-level directory in the current directory.
List files in the current directory and below
Change the owner of all ".txt" files in directory tree "/mydir" to "root"
simulate a full login of user root
change the group of all regular/normal files in the current directory
Find all files under current directory and search for 'something' in those files
Search the directory $path recursively for regular files with the given $extension
Find directories in the /path directory tree whose names are 33 characters in length
Find all files under current directory with their size and paths, reverse sort them numerically, then print the 2nd field (with space as the delimiter) of the first 4 entries
List the files in "archive.tar.gz"
find all files in home folder which have been modified after a timestamp
List all files that have not been read in thirty days or more
Remove all .txt files in and below the current directory
Copy all files in the current directory except those containing 'Music' to '/target_directory'.
Search the current directory tree for files containing "needle" in their names
Gets MAC address of eth0 network interface.
Move all files and directories in the current directory to "/foo"
Lists all files in a current folder, separating names with comma.
Recursively change the owner of all files in "testproject/" to "ftpuser"
Move files older than 1 day to directory TMP
Search directory /Users/david/Desktop/ recursively for regular files with extensions .txt, .mpg, .jpg
Remove all files 'a.out' and *.o in the home directory tree that were accessed more than 7 days ago
Find all *.txt files under /foo and delete them
Delete characters in columns 36 through 40 from the output of "finger"
Create a directory named 'alpha_real' in the current directory
Find all files/directories with spaces in their names under ~/Library directory
find all the regular/normal files in the /path folder and delete them
Recursively list all the files and directories that are only in directory /dir1 with their full paths.
Rename file extension '.andnav' to '.tile' for all files/directories under current directory tree
display all the symbolic links in the current folder
display all regular/normal files in the folder /Users/david/Desktop/
Print 10 lines of a single "x"
Find all files under /somefolder matching the pattern expanded by $FILE_PATTERN in thier names
delete all the tmp files ( files with the extension tmp ) in the /tmp folder
Look for files with wide open permissions
Find all strings matching pattern "^${KEY}${DELIMITER}" in $FILE file and print rest of string after $DELIMITER
Forcibly create symbolic links in target directory "~/staging" for all files located in directory "~/mirror"
Calculate the md5 sum of all files in "/your/dir" including content and filenames and following symbolic links
Finds recursively all files in '/path/' that contain 'pattern', and prints matched strings with string number and file name.
Forcefully delete all files in the current directory
Print the boot time in standard date format
display all instances of the .profile file in the entire file system
Compare "fastcgi_params" and "fastcgi.conf" line by line, output 3 lines of unified context, and print the C function the change is in
Sort all files/directories under current directory according to modification time and print only the recent 7 of them
Find all the files whose name is FindCommandExamples.txt in the current working directory
Remove duplicates in variable "variable" and preserve the order
Find symlinks under and below the "test" directory and replace them with the content of the linked files
Reports count of characters in the value of ${FOO} variable as follows:  "length(FOO)==<counted number of characters>"
split file /etc/gconf/schemas/gnome-terminal.schemas into pieces per 1000000 lines
Output the file name "file.txt' from the path "some/unknown/amount/of/sub/folder/file.txt"
Find all files under minimum 1 level down the current directory
Find all files under current directory and set their permission to 775
Reversibly sorts content of the '${TMP}/${SCRIPT_NAME}.kb' file, comparing human readable numbers in file strings.
Print a list of all *.code files from the current directory tree
change the extension of all the files in the current folder to html excluding those html files and those which are present in another disk partition
Recursively search for all files with names ending with "_test.rb", renaming them to end with "_spec.rb", using at most 4 concurrent processes.
Prints "$NEWFILE" to the terminal and file '/etc/timezone' as a root user.
Make directory "aaa"
Archive all directories in /path/to/directory/* (only command line arguments, no sub-directories) to files with .tar.gz extension
Prints week day of a 31 day in a current month.
find all the files in the home folder which are empty (Size 0 bytes)
display all the ".sh" files in the current folder
list all files
display all the files in the current folder which have been modified in the last 24 hours
Rename all *.html files under and below the current directory to *.var
Save the user name in upper case of the current user in variable "v"
Find all directories under current directory whose paths are 5 characters long
split the file "file" into pieces per 2 lines
Print every 4th line from 10 lines of "y" with line numbers
find all files in the home folder which are modified in the last 2 days.
Prints process tree with command line arguments of a process having id $PID.
Print a list of JPG files residing in the current directory tree
Print the first 24 alphanumeric characters from "/dev/urandom", determining C locale for all categories
Search for all the directories in directories taken from the glob pattern '/path/to/folders/*' and add the extension ".mbox" to all and create directories named 'Messages' inside them
display all files in the current folder and do not search in the sub directories
Display all files in the folder home which are owned by the group test.
Recursively search for all files with names ending with "_test.rb", renaming them to end with "_spec.rb".
Find all regular files on the system whose size is greater than 20000k
Answer "y" to all prompts of "rm -rf foo"
Find all the files which are accessed in last 1 hour in entire file system
Print "I am USER and the program named ls is in LS_PATH" where "USER" is the current user's user name and "LS_PATH" is the full path of the command "ls"
Remove all .tmp files in and below /tmp
list all javascipts file expect files under proc folder
create a tar ball of all the jpg and png images in the current folder
delete all the files in the current folder which do not belong to any user
Print the home directory of "$username"
Eliminates partially duplicate lines by column, keeping the last occurrence
Search all regular files in the current directory tree for "example"
Search the /usr/ directory tree for files newer than file /tmp/stamp
Find all SUID set files
Search the system for files whose names begin with letters 'a', 'b', or 'c'
List non-hidden regular files in the current directory tree that were last modified more than 500 days ago
Find files modified at least 5 days in the future
Recursively prints all files in a current folders, and searches "stringYouWannaFind" in file content ignoring case differences, and preceding found string with its number in file.
Find all Executable files
Saves calendar of $month, $year in the 'cal' variable.
find all the directories in the file system which begin with "man"
find all the files in the entire file system whose size is greater than 20MB
Change owner and group of "script.sh" to "root"
find regular files under the current directory, whose name ends in .mbox and rename each file, to the same name without .mbox at the end
Search the current directory tree for hidden files skipping .htaccess
find all the files in the present directory which have the group staff and check if is a symbolic link and display it.
Print the sorted and unique parent directory paths appended with : of all the files that are executable by owner under ~/code directory without descending into hidden directories
Get directory listing of URL $1 and save them to variable 'header' by deleting '\r' characters
Lists all directories in a current folder.
Split "$1" into files of at most "$2" or default 10000 using a numeric suffix of length 6 and suffix "${tdir}/x"
Resolve symbolic link of file "FILE" even if the file does not exist
Remove all broken symlinks from the /usr/ports/packages directory tree
Prints process tree of user 'user' processes.
Find all .bak files starting from the current directory and delete them
display a long list of all the directories which have files ending with ".todo"
Dump "filename" as 2 byte wide hexadecimal and printable characters
Search the files residing in the current directory tree whose names contain "bills" for "put"
Print A record for domain 'domain.' from 8.8.8.8 nameserver
Print all files in the current directory tree as a comma separated list
Variable PID contains a process ID, send SIGTERM to this process if it exists.
find all the core files in the entire file system and  delete them
Print the list of files in the current directory tree excluding those whose paths contain "exclude3" or "exclude4"
Find all *.jpg files under current directory and print only duplicate names
Ping every address from 192.168.0.1 to 192.168.0.254 with a timeout of 1 second and filter out no responses
Search the current directory recursively for files last modified within the past 24 hours ignoring .swp files and paths ./es* and ./en*
display all the .sh scripts and perl files in the current folder
Traverse the filesystem just once, listing setuid files and directories into /root/suid.txt and large files into /root/big.txt.
Change permissions for all PHP files under the current directory tree to 755 and print the number of files changed
Find all directories under '.cache/chromium/Default/Cache' that are bigger than 100 MB in size excluding single letter directory names
List files in the current directory tree using echo
Remove all files and directories called "test" from the current directory tree
Recursively print all files and directories in the current directory tree including hidden files
Find all *.plist files/directories under current directory
find all the text files in current folder and force delete them
Print URL "http://www.blabla.bla/forum-detail/?ft=72260&fid=34&&pgr=" followed by a number ranging from 1 to 786
Find all files/directories named 'query' (case insensitive) under current directory tree
Search for empty files
Find all files/directories following symlinks under /path/to/dir/* paths and print the timestamp in YmdHMS format along with their paths
Change user ownership to `foo' for files with UID=1005
Creates temporary folder within a $mnt_dir folder and saves path to it in a 'rsync_src' variable.
Print position number of day '9' in fourth line of calendar output for September, 2009.
Search history for "part_of_the_command_i_still_remember_here"
Search the entire file hierarchy for files ending in '.old' and delete them.
find all directories with the name "lib64" in the usr folder and replace space with ':'
Print numbers from 1 to 100
Change the ownership of all files in the current directory tree to myuser:a-common-group-name
display all the file in the folder /home/david/ which start with the word "index" ( case insensitive search)
Find all *.rb (regular) files under current directory and count their line numbers
Find all files under current directory and change their permission to 644
Print first 11 characters from $line, print a tab, print the md5 sum of the file specified by the 13th and onward characters from $line and print a null character at end without a trailing new line
Rename .jpg files to .jpeg in all level 2 subdirectories of the current directory
Move all *.php~ (case insensitive) files under current directory to /mydir
Find all *.py files/directories under current directory
Make hidden directory ".hiddendir"
Search the /home/weedly directory tree for regular files named myfile
Split a file "file.tar.gz" into pieces with size 1024 MB
Finds recursively all folders named 'a' within current folder and removes only ones without files and another folders within.
Search the files in the current directory tree that are named "string to be searched" for "text"
Find files/directories in entire file system that had their meta information changed more than 3 days ago
Find all regular files in the current directory and its subdirectories.
display all the files  in the current folder excluding the perl files
List in detail all *.txt files in the current directory tree, omitting paths ./Movies/*, ./Downloads/*, and ./Music/*
Split "file.txt" into files of at most 1 MiB in size with a numeric suffix and prefix "file"
Connect to "$USER_AT_HOST" using connection sharing on "$SSHSOCKET" and request the master to exit
Find all directories in the current one with "linkin park" in their names and copy them to /Users/tommye/Desktop/LP
Find files/directories named 'sar' under '/usr', '/bin', '/sbin' and '/opt' directory tree
Find all files/directories under current directory and append a null character at the end of each path
Find all php files in current directory and delete lines matching the regex '<\?php \/\*\*\/eval(base64_decode(.*));.*\?>' in those files
Prints full path to files in a current folder.
Perform case-insensitive search for file `TeSt123.txt' on the system
Find all files and directories containing "disc" in their names
Remove all .txt files in and below the current directory
display all the java script files in a folder
Find all *.txt file and replace old word to new word with sed command
Find all $2 files in $1 path excluding /proc and search for the regex expanded by $3 in those files
Search the current directory tree for hidden files
Change directory to the directory containing the current script
Change directory to the real path of the current working directory of process "$PID"
remove all the files in current folder which have the extension "DS_Store"
find all 'js' suffix files  exclue the path *exclude/this/dir*' under current dirctory
Replace all newlines from the contents of "file" except the last with spaces
Creates temporary folder and save path to that in a TMPDIR variable.
Finds IP address of 'eth0' network interface.
Read line from file descriptor 4 and store received input in 'line' variable
Display the named characters in "line1\r\nline2"
search for files in current folder using regular expressions
Print working directory separated by newlines instead of forward slashes
Move all files/directories under current directory to ~/play
find all the files in the current folder which have set guid bit on and list the top 10 files.
Archive "/usr/local/" to "/BackUp/usr/local/" on host "XXX.XXX.XXX.XXX" via ssh and show progress
Find files containing `blah' in their names modified less than 2 days ago, case insensitive
display a long listing of the files in current folder which have been modified in the last 60 minutes
Copies 'src' to 'dest' preserving overwriting the existing files.
Split standard input into files of at most 3400000 lines each
Find all directories named $1 under $HOME directory tree and remove them
Send SIGTERM signal to last process sent to background by the current shell.
Search for the regex expanded by the variable $SEARCH in all regular files under $DIR directory tree
Find symbolic links in lpi104-6 and research/lpi104-6 to files whose pathnames end in "file1"
Move all *.pdf.marker files and their corresponding *.pdf files under ${INPUT} to ${OUTPUT}
Count the total number of lines in all HTML files under /usr/src that contain string "foo"
Rename all "thumbs" directories to "thumb" in the current directory tree
display list of all the files in the current folder which are empty.
Sets shell option 'dotglob'.
List all files under current directory with their paths and sizes
display all directories in the current folder
Rename "www_new" to "www" even if "www" directory exists
Search for the regex $greppattern in all files with '.c' or '.h' extension under $searchpath with name pattern $filepat and show the matched line numbers, file names and matched lines
Write output of "ls -hal /root/" to standard output and to "/root/test.out"
Find all files/directories that are newer than 'backup.tar.gz' by modification time
Remove what follows the forth occurrence of the character ":" in any field which contains it
display all the regular/ normal files in a folder
Prefix all files and directories in the current directory with "Unix_"
find all files in the home folder that are modified in the last 24 hours
Count non-blank lines in a file 'foo.c'
display all the home folder which end with the extension "sxw" and which have been accessed in the last 3*24 hours and which belong to the user bruno
start from current directory, skip the directory src/emacs and print it then skip all files and directories under it, and print the names of the other files found
change owner and group  of all files and directory into current directory to user and group apache
Enables shell option 'lastpipe'.
display all the files in the current folder which have been modified in one hour ago
Copy a file xyz.c to all directories or over all files matching the letter 'c' at the end of their names under current directory tree
Find all files in maximum 2 levels down the current directory
display all files in current folder in sorted order of depth
search  in root ( / ) directory downwards all files which  have exactly 2 links.
Delete all empty files/directories under test directory
Search for all files with either "sitesearch" or "demo" in their path names
Search the files from directory tree "dirname" for string "foo"
Find files/directories that have not been modified in the last one day in directories or files taken from the glob pattern '/tmp/test/*'
Prints sizes of all top-level folders in a current folder with human-readable format and descending order.
search normal files called ' banckup '  from /usr directory downward and print them.
Save hexadecimal byte 9 in binary file "file.moi" to variable "month"
Rename file "edited_blah.tmp" to "/etc/blah"
Show human-readable file type description of file "/mnt/c/BOOT.INI"
Calculate md5 checksum of $KEY, take the 1st to 10th character, append them with the string '/tmp/command_cache.' and save the rsultant string to variable FILE
force delete all the core files in the home folder
Print "*Checking Partition Permission* Hostname=$(hostname) LastChecked=" followed by the current date
Count the occurrence of 2 in the string '1 1 2 2 2 5'
create a compressed archive "compressFileName.tar.gz" with verbose output
Find files named "ppp.conf" in the /etc directory tree
Compresses all files in a current folder (not recursively).
Find all files/directories under current directory following symlinks if needed
Unzip and untar "4.56_release.tar.gz" to standard output
Silently and recursively change the ownership of all files in the current directory to "www-data"
display all scala files in the directory "src/main"
Rename all .jpg files to .jpeg under the current directory and below
Delete all empty directories in the "test" directory tree
Disables shell option 'nullglob'.
Find *.css files in the current directory tree, skipping all directories that match pattern '*/lang/en.css'
List files in the current directory and below except for GIT files
Runs `file' on every file in or below the current directory.
find regular which case-insensitive name is foo in current directory
Silently read a line into variable "passwd" with prompt "Enter your password: "
find all the files in the root folder which have been modified in the last 24 hours and print them
Check whether "/full/path" is a mount point with no output and using the exit code
Calculate the md5 sum of the list of files in the current directory
search for all the .o files in the current directory which have permisssions 664 and print them.
Replace all newlines with spaces in the contents of "file"
Find files/directories named 'foo' in the current partition of the root filesystem
Search regular files from the /path/to/dir directory tree for lines that contain "_START" and are enclosed in lines "@GROUP" and "@END_GROUP"
Records the number of occurences of 'needle' in the array 'haystack' into the variable 'inarray'
Prints day of first Tuesday in a month.
Find all the files under /tmp directory and show a few lines of output from the beginning
Find all php files whose name is tecmint.php in a current working directory
find all the png files in current folder which are present in the pattern list file "search.txt" and copy them to another directory
Find the password file between sub-directory level 2 and 4
Saves in 'result' variable list of groups which user $line belongs to, and not matching pattern "_unknown|sciences|everyone|netaccounts"
Print the list of non-hidden directories in the current directory
Find all symbolic links in the current directory tree
Abort the shell or script on the first failed command
replaces the last occurrence of 'a' with 'c'
Show who is logged on
find all the directories in the folder $LOGDIR which have been modified in the last 5 days and delete them.
Log in using key file "./device_id.pem" as user "deviceuser" on host "middle.example.org" and port 2222
find all the files in the folder .home/calvin which have been modified in th last 45 minutes
Find all regular files under '/directory_path' directory tree that have been modified within the last day
Finds strings having text "searched-string" in all files recursively in a current folder.
Find all files in the /home/ directory tree that were last accessed more than 7 days ago
Find files modified in the last 5 minutes starting from the current directory
display all the directories in the folder /path/to/dest except tmp directory
Mount partition with label "WHITE" on "/mnt/WHITE" with read and write permission
List all IPV4 addresses found in all files under /etc directory
Send SIGTERM (signal 15) signal to all process whose username is "username" and whose command is "your_command".
Search for 'foo=' in all *.png files under current directory without descending into *.gif and *.svn directories
Find all the files in the current directory recursively whose permissions are 777
Read the history file and append the contents to the history list
Recursively list contents of the current directory in a tree-like format
Sort "," delimited lines in "file" by the first field preserving only unique lines
Search the files from the current directory tree for "foo"
Read a line from standard input into variable "message" with prompt "Please Enter a Message: " followed by a newline
Find all files/directories named modules under current directory and list them twice
Recursively copy /path/to/foo on host "your.server.example.com" to local directory "/home/user/Desktop", connecting as ssh username "user".
Locating large files (> 100 MB) in /home/ for 'cleaning'
Search the /myfiles directory tree for files last modified 2 days ago
Search the current directory tree for files whose names do not end in ".exe" and ".dll"
Remount "/home/evgeny" with the "suid" flag set
display a long listing of all the files that begin with the name "Metallica" in the entire file system
search for "flac" files in current folder using regular expressions
Prints a random line from $FILE
Find all files owned by user vivek
Search for first match of the regex 're' in all *.coffee files under current directory
Find all directories under 'test' directory tree that match the regex '.*/course[0-9.]*' in their paths
Move "/usr/bin/openssl" to directory "/root/"
display the number of lines in all the ".c" files in the current folder
Move server.log to 'logs' directory with new name as the current date formatted as "%Y%m%d%H%M" and with '.log' extension
Find all HTML files starting with letter 'a' in the current directory and below
Search the /etc directory tree for symbolic links
Output all lines that have a common first colon-separated field in files 'selection2.txt' and 'selection1.txt' by displaying the common (first) field of each line, followed by the extra fields in both lines.
Remove all *.txt files, except robots.txt, under the given directory modified more than 5 minutes ago
Request MX record of 'example.com' domain, and filter out all comment strings
Find and print detailed information about all regular files in your home directory and below that have only the group permission set
find all the files ending with jpg in current folder and display their count ( case insensitive )
List all files in the /var directory tree whose size is greater than 10 megabytes
Print the base name of the current working directory
Recursively removes all files and folders named '.svn' in a current folder, handling content of removed folder before folder inself.
Recursively changes group ownership of the $PATH_TO_OUTPUT_FOLDER directory to $GROUP group.
Replace all occurrences of 'previousword' with 'newword' in all regular files with '.cpp' extension under '/home/www' directory tree and modify them in-place
Search  in current directory downwards all files which  have not been accessed since last 7 days
Search for "LOG" in jsmith's home directory tree
Find all the files which are modified more than 50 days back and less than 100 days
search for the directory "config" in the current folder
Find all *.$input_file_type files/directories under $source_dir
Verbosely compresses all files on third and fourth depth level keeping original files in place.
delete all the "wmv" "wma" files in the currnet folder,
find all the files in the home folder which are bigger than 2MB and zip them
Answer "y" to any prompts in the interactive recursive removal of "dir1", "dir2", and "dir3"
search for all the files in the current folder which start with gen and end with bt2 and assign the output list to the variable var.
Search every directory except the subdirectory excluded_path for a regular file 'myfile'
Move "caniwrite" without clobbering into "/usr/local/bin"
Find all files under current directory and show their file information
Append "\r" on each line of file "input" and display the printable characters
List all files/directories under current directory with 'FooBar' in their paths ensuring white space safety
Find all symbolic links under current directory that are not hard links
Find all directories under /home/username/public_html/themes and set their permission to 750
Search in the current directory and all sub-directories except ./D for the file named hi.dat.
display all the details of empty files in current folder
Read a line from standard input into the variable "yn" with the prompt "Do you wish to install this program?"
find all the backup files in the current folder and delete them after user confirmation
find all the backup files in the current folder and delete them
Remove all characters except ";" and digits from standard input
Compare column 3 with column 2 of the next line in "file" and format output as a table
List the commands in /usr/bin, pausing for user input after each page.
Find all files in the level 6 subdirecotries of /usr/src and below, ignoring CVS files
Print mount point of the file system containing $path.
Find all directories under current directory and change their permission to 500
Find all files/directories named 'myfile' under your home directory
find the "MyCProgram.c" file (case insensitive find) under the current directory
Create an empty file called "emptyfile.c"
removes last N lines from file.txt
search for all the files in the entire file system which have either suid or sgid bit enabled and find of diff of these files with the file "files.secure".
Send at most 3 ping requests to "8.8.8.8" with a timeout of 3 seconds on interface "eth9"
List all files that matches both the case insensitive patterns *$1* and *$2* under /home/musicuser/Music/ directory
List all regular files from the current directory tree that were modified less than 60 minutes ago
Find files using file-name
Display the named characters in "line1\r\nline2"
Update timestamps of all files in entire filesystem which are not newer than /tmp/timestamp
find all the files that have not been modified in the last (24*7) hours.
change owner and group of the file dir1 to user root and group  specialusers
display all the files ending with ".foo" excluding those that are in the directory ".snapshot"
Type unique list of all directories contiaining each file named 'myfile' under the /home directory
Move each of the 'm?' directories in $path_to_folders to another directory whose name is constituted by appending .mbox to each directory name and create a directory named Messages in this directory then move all *.emlx files into this directory
Find all files larger than 100M and delete them
Change directory to the directory containing the "oracle" executable
Find all regular files in the current directory tree last modified between 1 and 3 days ago and list them using format '%Tm %p\n'
reverse input with comma deliminators
Remove a leading "machine" from the system host name and save the result to variable "machnum"
Output the variable "filename" without the last dot-separated section.
Delete the text matched by the regex '<script>if(window.*<\/script>' in all index.html files under current directory
Search the directory tree given as variable $root_dir for regular files
create directory backup
lists txt or html files older than 5 days, null separated
create a md5sum for all the instances of the file MyCProgram.c in current folder
Search the current directory tree for regular files modified within the past 24 hours whose names do not end with ".DS_Store"
find all the symbolic links in the current folder that are broken
Find all directories under current directory and set their permission to 775
Force create a symbolic link named "$pdir" to "$pluginpath" with verbose output
change the owner of all the regular/normal files which belong to the root user to "tom" in the current folder
Reversibly sorts content of the '${TMP}/${SCRIPT_NAME}.pid' file, comparing human readable numbers in file strings.
Find all xml files under current directory and archive them to .bz2 archives
Find all files/directories in directories/files taken from the glob pattern '/folder/path/*' recursively that have not been modified in the last 2 hours and delete them
display all scala files in the directory "src/main"
display all the files in current folder which start with "file2015-0"
Display variable 'var' without leading and trailing whitespace.
Recursively finds files like '*.js', and filters out files with 'excludeddir' in path.
Find all the files that were modified within the last day
display all the html files in the current folder that have been modified exactly 7*24 hours ago
Change permission to 755 of all files/directories under current directory tree that have 777 permission
Creates temporary file in default folder and saves path to it in 'source' variable.
Open a local SSH port on 1080 for application-level port forwarding
Connect via ssh to "your.server.example.com" and recursively copy directory "/path/to/foo" on this host to direcotry "/home/user/Desktop" on local host, using "blowfish" cipher algorithm.
Calculate the md5 sum of every ".py" file in directory tree "/path"
Output the standard input followed by the line number until line 786
Recursively copies "$appname.app", preserving symlinks as symlinks to the 'Payload' directory.
create a compressed archive in my_dir directory matching '.[^.]* ..?*' glob pattern
display all the regular/normal files in the current folder excluding the files with the name mmm
find the file "httpd.log" in the folder /home/web-server/
Look for *log files in directories at most three levels down the directory tree
find all text files in the current directory and display them page wise
Find all files in the /home/ directory tree that are owned by bob
List all cron jobs which contain "word".
Find all files/directories named 'query' under current directory tree
Remove everything within parentheses and substitute all non digit characters with a space from "1/2 [3] (27/03/2012 19:32:54) word word word word 4/5" and format the output as a table
Display permissions, user, group, and full path for each file in the current directory tree as a list
search for all the mp3 files in the file system and move them to the folder /mnt/mp3
Find all directories under current directory whose names are 33 characters long
Query about which keys invoke the named function
Saves list of currently logged in users in 'userlist' variable.
display table of files with their name, owner, and size in bytes.
Move all directories from the `sourceDir' directory tree to the `destDir' directory
Create a symbolic link named "$SYMLINK" to "$ACTUAL_DIR"
Archive "foo/bar/baz.c" to "remote:/tmp/" preserving the relative path of "foo/bar/baz.c"
Print 1000 astarisk ('*')
Find directories under maximum 1 level down the directory $dir with 100 permission that are owned by the user $username
Change permissions to 600 for all regular .rb files in the current directory tree
Search the directories given as arguments to the Bash script for files whose name is not "ss"
Print all lines in file that do not match "pattern"
Search the /myfiles directory tree for regular files with at least these permissions: 647
Search the current directory recursively for regular files with the read permission set for everybody
Count number of A records of domain '$domain' on nameserver '$server' and save value in 'result' variable
Find all files/directores under /etc filter them by searching for 'test' in their name and run the file command on each of them
search for all tar.gz compress files  in the current folder
Go to directory /cygdrive/c/Program Files (x86) using quotes to escape special characters
Search the current directory tree for files AAA and BBB
find regular  file named foo.txt under root / directory.
find all the directories  with the name "c" in the current folder which are at least 3 levels deep and which are not present in the path "/p/".
Print the number of packets sent, received, and the percentage lost for each ping request to "google.com"
Read a line from standard input with prompt "Enter your age:\n"
Prints folder path where $mystring file is located.
Sort the lines of the file 'temp.txt' and change it in-place
Search the current directory tree for symlinks pointing at other symlinks
Delete all files with ' .o' extension in the entire filesystem
Find files/directories that does not have write permssion for group
display a long listing of all regular files  in current folder which have been modified in the last 60 minutes
Finds IP address of system network interface, that belongs to 192.168.111 subnet.
Print the list of regular files from the current directory tree that were modified less than 2 days ago
Change all files in "~" which are owned by the group "vboxusers" to be owned by the user group "kent"
find all  *.csv files which  modify within last 2 days in /home directory then zip ( archive )-
Find every file under the directory /usr ending in ".stat".
Split standard input into files with at most 75 lines each
Prints path to folder that contains file "/path/to/vm.vmwarevm/vm.vmx".
Mount remote "smbfs" filesystem "//username@server/share" on "/users/username/smb/share" as soft
List all directories under current directory
Unzip every ".gz" file in the current directory tree
Print second section of space-separated data coming from stdin.
Recursively change the group ownership to "laravel" in "./storage"
Monitor 3 specific process IDs: 18884, 18892, and 18919 (GNU specific)
Number every line of standard input as zero padded to 6 characters followed by "-"
Search the ./in_save directory for regular files and view the result using pager `more'
Find all files under current directory and set read-write permission for owner and group and no permission for other for those directories
Sorts content of the $tmp file and filters out all strings with ':0'.
change the permissions of all the directories in the current folder
Search all files in the current directory tree that are named "whatever" for "whatever"
Write current directory listing to standard output and to "files.txt"
Find all files under current directory matching the pattern '[error,access,error_log,access_log,mod_jk.log]*.[0-9]*' in their names
Show the number of regular files in the current directory tree
List all files/directories under current directory matching the posix-egrep type regex ".+\.(c|cpp|h)$" in their names
find all the files in the current directory which have been modified after a file
Find a directory named 'project.images' in the entire filesystem
prints the last non-empty line of a file
Print only alphanumeric values from "/dev/urandom"
Find files/directories under current directory without descending into it
Remove trailing white spaces from all files under current directory ignoring .git, .svn directories and binary files
change the permissions of all the files ending with "fits" in the folder "/store/01"
Recursively add ".jpg" to all files without an extension in the directory tree "/path"
display long listing of all normal/regular files in the current directory which have been modified in the last 2 days.
Remove all vmware-*.log files under current directory
delete all the ".doc" files in the current folder
Verbosely compresses all files on fifth and sixth depth level keeping original files in place.
Search all files called "abc" that reside in the current directory tree for string "xyz"
find all the files in the current folder which have been modified after the file disk.log
Find the largest 10 directories under current directory
Erase user's cron jobs and add one cron job to run "script" every minute.
Read first column of each row, find all other first columns which have a difference less than 10, and append that comma separated list to the row
Search directories /res/values-en-rUS and /res/xml for XML files
search all the files in the current folder using name patterns
Replace each non-blank line in "YOURFILE" preceded with "pX=" where "X" is the line number
Find all files named "filename" in the current directory tree, not descending into "FOLDER1" directories
Find all directories under current directory
Copies all files like "*FooBar*" under the current directory to the '~/foobar' directory.
search for the file "file_name" in the folder /path
Find all *.mp4 files under directory named 'working' and show the first one found
find all the configuration files in /etc folder along with the last access & modification time
Get current directory name without full path, ie. the part after the last /
Delete all regular files under $DIR directory tree that have been modified before file $a
Remove the .jpg files from the current directory whose names match regular expression ".+-[0-9]+x[0-9]+\.jpg"
find all the "error_log" files in the folder "/home" which are bigger than 5MB and force delete them
Find all files in /var/www/html/zip/data/*/*/*/*/* that are older than 90 days and print only unique parent directory paths
Print lines 15967 to 16224 in file "dump.txt"
Print common lines in files "set1" and "set2"
Remove all files from the current directory tree whose names do not match regular expression "excluded files criteria"
search for all pdf files in the folder "/home/pdf" which have been accessed in the last 60*24 hours
Print the directory name of the physical current working directory
Prints newline, word, and byte count for each *.py in a current folder.
find all the files which have been modified in the last 15 minutes excluding hidden files.
Change ownership of "/data/db" to the current user
copy the file header.shtml to each directory under dir1, dir2, dir3, or dir4
Find all files/directories matching the regex .*sql.*
Find all *shp* directories under current directory and move their contents to ../shp_all/
Delete all empty directories in the current directory tree
find all the text files in the home directory
find all files under the current folder except dir1 dir2 dir3  folder
Recursively copy all (non-hidden) files and directories in current dir except "foo" to location specified by variable "other"
find all the files in the file system which have sticky bit enabled to the user
find all the files in the folder /usr/bin which have been modified in the last 10 days
Forcefully remove files *~important-file
find all the html files in the current folder which have been modified excatly 7 days before
find all the word press configuration php files in the folder /var/www and do not search beyond two levels
Change the timestamp of symbolic link "somesymlink" to current date/time
Delete all lines matching "pattern to match" in "./infile" and make a backup with suffix ".bak"
Exit the shell on the first error encountered
delete all the trace files (".trc") which have not been been accessed in the last 30*24 hours
display all the text files and hidden files in the home folder
Print unique lines of sorted file "second.txt" compared to sorted file "first.txt"
Finds only parts of echoed string that match with regex 'run-parts (-{1,2}\S+ )*\S+', and saves them in $match variable, each matched part on a separate line.
Delete all files that were modified more than 60 days ago under '/path-to-directory' tree
search for the directory "uploads" in current folder and change the permission of the folder and all the files to 755
Recursively removes all files in a current folder but '*txt' files.
Forcibly create symlink named as '/cygdrive/c/Users/Mic/mypics' to the directory '/cygdrive/c/Users/Mic/Desktop/PENDING - Pics/'
Search the current directory tree for *.c and *.sh files
Search all regular files in the current directory tree for "string"
Set variable OS to the name of the operating system, ie. "Linux"
grep from bottom of file
Join columns in "file1" and "file2" if their first field matches and format the output as a table
Find all files under /path and below writable by `group' and `other'
Search for " 840" in history
display all the ".c" files in the current directory
SSH into "myhost.com" as user "myname" with a check every 60 seconds that the server is still alive
Gets state of shell option 'dotglob' and saves it in 'rest_cmd' variable.
List all files/directories under current directory ensuring white space safety
Find all *.txt files/directories under your home directory
Add directory "$HOME/Pictures" to the directory stack
Unzip every ".gz" file in the current directory
Find all file.ext files/directories under /home/kibab directory and print . for each of them
print the line containing TERMINATE and everything after in 'file'
find all files in the current folder and search for a word in them.
find all the php files in the current folder
Prints total number of lines of all *.php files in a current folder and subfolders.
find all the files in the current folder which have been modified in the last one minute
sort each file in the bills directory, leaving the output in that file name with .sorted appended
Find '.git' directories in directory tree /path/to/files and print the pathnames of their parents
Print all files/directories with their sizes under $WHATEVER directory tree
Find all files/directories starting with 'onlyme' in their names under current directory tree in minimum 1 level deep
Recursively finds all 'STATUS.txt' files containing text 'OPEN' and prints containing folder of them.
Print the mount point of the last mounted drive
find all the files ending with "~" in current folder and move them to temp folder
Return all of the .conf files in Pat's user folder and subdirectories
Locate all *.csv regular files under the current directory tree
display all mp3 files in the file system which have not been accessed in the last 24 hours
delete all the mp3 files in the home folder
Print 'huzzah' if /some/dir/ is empty
display all the files  in the current folder excluding those which are present in "./src/emacs" folder
Display current running kernel's compile-time config file.
search all jpg,png,jpefg  files in the current folder and calculate the total size of them
Find all files/directories under current directory tree that belong to the group 'compta'
List all leaf directories of the current directory tree
display only the file names of all the files which end with ".deb"
Find all MP3s in the /home directory tree
Read a single line from standard input and save to variable "line"
Enables shell option 'autocd'.
Set permissions to 600 for regular files under media/
Prints path to the target of symbolic link 'relative/path/to/file'
Display differences in "/tmp/ksh-9725.log" when compared to "/tmp/ksh-9781.log"
Search folder /home/ABCD/ recursively for regular files
Search directory trees /usr/local/man and /opt/local/man for files whose names begin with 'my'
Print environment variable "IFS" and its value
Find all *.php (case insensitive) files and *.js files/directories (case insensitive) under /home/jul/here excluding /home/jul/here/exclude/* paths
For each line whose first field is the same in file1 and file2, output the common first field followed by all other fields in file1 and file2.
Delete all files/directories with '.old' extension under current directory tree
List all .gif files in the current directory tree
Print all files in the current directory as a comma separated list
display all the files in the home folder which have not been modified in the last 365*24 hours
Get a list of all hidden files from the current directory tree
find all .bak files in or below the current directory and move them to ~/.old.files directory:
Get domain name with 'google' from dig reverse lookup.
Report available space on the file system containing /tmp in kilobytes.
Print a detailed list of all regular files from the current directory tree
Rename "original.filename" to "new.original.filename"
Recursively copy "/path/to/data/myappdata/*.txt" to "user@host:/remote/path/to/data/myappdata/"
Check if directory $some_dir is empty
Rename file file.txt.123456 to file.txt
Find all files and directories in the current directory tree with "linkin park" in their names and copy them to /Users/tommye/Desktop/LP
Search  all files & directoy from root directory which  are greater then 100M and delete them .
Change the ownership of "/etc/udev/rules.d/51-android.rules" to "root"
Mount the "linprocfs" filesystem on "/proc"
Sort content of files 'file1' and 'file2' by second of dot-separated fields.
find for a word in all the regular files in the current directory
Print only the number of lines in file "$f"
Find all *.txt files under current directory with their timestamps and paths, sort them and print the last entry only
Perform a default Plesk configuration
Delete all files/directories under current directory tree with '.$1' extension where $1 expands as the first positional parameter
Gets back to the foreground a job with number 2.
Find files/directories with inode number '212042' under '/var' directory tree without traversing other devices/partitions
List files larger than 10MB under /var/log
display all file in the folder /dir/to/search except ".c" files
display all the empty files in current folder
display all the C, CPP, Header files in the kat folder
Pick up a list of variable:value pairs from msgs.config and add them to the current shell or script's environment.
display a long listing of all the normal/regular files in the current folder and do not search in the sub folders
Count the number of files named 'job.history' under '/data/SpoolIn' directory tree that match 'FAIL' in their contents
find in the entire file system for the files which have sticky bit.
Sends current job to the background.
Find all files under current directory that were modified less than 1 day ago
Print out all files with their paths that have identical content and the same filename in different cases
Lookup information of the current user
Archive "/source/backup" to "/destination" with compression during transfer
Find all .py files in the current directory except "setup.py" and those beginning with "test_"
Copy "./export" recursively to "/path/to/webroot" preserving permissions
Search the current directory tree for regular files whose names end with "keep.${SUFFIX}", where $SUFFIX is a shell variable
Reports count of processors in system.
display all files in the current folder which are not empty
Find all files under $YOUR_DIR
Find all files under /path/to/Dir and set their permission to 644
list all regular files which path is not dir1 or dir2
Recursively finds all '*.pdf' files in a current folder and removes them.
search for swap files (.swp files) in temp folder and remove them
Remove all files with names like "vmware-*.log" from the current directory tree
List all .c and .h files in the current directory tree that contain "thing"
Search  in current directory downwards all files whose size is greater than 10 bytes .
search for all the directories ending with ".mp3" in the file system and move them to the folder /mnt/mp3
Read one character from standard input into variable 'c'
Print a sorted list of regular files from directory tree /folder/of/stuff
display all normal/regular files in current directory
Find all orm* files/directories under current directory
display a long list of all the files that are bigger than 10KB in current folder
Find all PHP files in the current directory recursively
create directory foo
Recursively removes all files like '*.pyc' of '*.pyo' in a current folder without prompting.
Measure the disk space taken up by all *.txt files in the current directory tree
update the permission of all the files in the folder /u/netinst to 500
Print all files and directories in the `.' directory tree skipping SCCS directories but printing out the SCCS directory name
Search  in current directory downwards all files whic  have permission 777 .
create directories foo and bar
Print list of all user names who are logged in
display the long listing detials of all the files in the folder junk which is in home folder.
find all the files in the entire file system excluding the folder proc, which do not belong to any user or any group
search through only the /usr and /home directories for any file named Chapter1.txt
Recursively change ownership of "/usr/local/lib/node_modules" to the current user
Set 644 permission to all regular files under /home/my/special/folder directory
Change the permission to 0644 for all files under current directory
Change the owner and group of "it" to "root"
Copy all files with name pattern $j.sh (case insensitive) under '/tmp/2' directory tree to $i directory
find all directories that names are 'apt' and display details
Find all Makefile's in the current directory tree and print the line 235 of each of them
Search file aaa from current direcoty downwards and print it .
force create hard link between $GIT_DIR/../apresentacao/apresentacao.pdf and $GIT_DIR/../capa/apresentacao.pdf
Find every file under the directory /var/spool that was modified more than 60 days ago.
Read a single character from standard input into variable "runCommand" with the prompt "Pick a letter to run a command [A, B, or C for more info] "
Change the owner of "/var/www/html/mysite/images/" to "nobody"
list all regular files which path is not dir1 or dir2
Find all the regular files in $DIR directory tree which have not been modified in the last 15 days and delete them
find all the files in the current directory which have the size 40 bytes in the current disk partition.
Archive directory "." to "server2::sharename/B"
Print percentage of the space used on the $FILESYSTEM.
Search directory tree $DIR for *.txt files
Find all files under current directory and show their file information
Change permissions to 644 recursively for PHP files.
Search the current user's home directory and its sub-directories for any file that ends in .tar-gz and was modified after filename was last modified.
Print the list of files in the current directory tree skipping SVN files
Search the /path/to/dir directory tree for .c files
On host "server_b", connect as ssh user "user" and copy "/my_folder/my_file.xml" to directory "/my_new_folder/".
Read a line from standard input with a timeout of 0.1 seconds and prompt "This will be sent to stderr"
search for files cart4 or cart5 or cart6 in the folder junk which is in home folder and delete it.
Recursively copies /mnt/usr/lib to the '/usr/' directory, creating symbolic links on each file instead of real copying them.
Perform a case insensitive search for *filename* files/directories under current directory tree
Find all files/directories with '.xml' extension that start with 'log4j' in their names under '/cygdrive/e/MyDocs/Downloads/work/OATS Domain related/' directory tree, search for files that contain the string 'CONSOLE' in their contents, then search for the string 'ASYNC' in the matched files and display the matched lines along with their filenames
Remove the last two alphanumeric file extensions from "mpc-1.0.1.tar.gz"
Synchronize "/home/user1/" to "wobgalaxy02:/home/user1/" including hidden files
List all *.txt files/directories under current directory
find all the files ending with undo in the current folder and calculate the total size of these files
Find all *.mp3, *.aif*, *.m4p, *.wav, *.flac files under $musicdir directory
Print "yes" 4 times followed by 1 "no"
Display the entire contents of 'file', replacing only the very first instance of "old" with "new".
Recursively move all files in "/path/to/srcdir" to "dest/"
compare each C header file in or below the current directory with the file /tmp/master
Find all 400 permission files under /data directory with null character as the delimiter
Put the absolute directory path to the current script to MY_DIR variable
remove all the files in the present directory which have space in their name.
Counts lines in file fileName ignoring empty lines and lines with spaces only.
Delete all files under /path/to/input/ that match the case insensitive string literal 'spammer@spammy.com' in their contents
Search /some/directory for files that are owned by the user "joebob"
search for mp3 files in the folder /mp3collection which are smaller than 5MB
Change permissions to 644 for all regular files under the /path/to/dir/ tree unless these permissions are already set
Print out the full path name of "mypathname" with dots resolved
Search for 'whatIWantToFind' in all files under current directory
Copy all files and directories in "/home/" to "/newhome" preserving directory hierarchy and modification time
Back up all *.txt files/directories in new files/directories with a .bak extension in their names under /etc directory
Find files with group write permission and remove the permission
Extract number from $filename of the form "something_12345_else" and set the variable "number" to this number.
Find all files/directories under current directory that match the case insensitive extended regex .*/(EA|FS)_.*
Search directory tree `MyApp.app' for directories whose name is 'Headers' and delete them
Print nothing because B.txt is compared with itself.
find and delete all the files in the entire file system whose size is greater than 100MB.
Recursively changes group ownership of every folder in a current directory to the name of that folder.
Find all the regular files under directory 'dir1' that are at least N levels deep
find all the backup files in the current folder and delete them
Print only common file names in sorted listings of directory 'dir1' and 'dir2'
Find "*.dat" files recursively in the current directory, print the lines starting on line 5 to the console and save to "concat.txt"
Search for the string 'foo' in *.html files under /usr/src/linux directory
Lists long format information about file '/bin/echo'.
Continuously send ping requests to broadcast address "10.10.0.255" and print the IP addresses who respond
Change the ownership of all aluno1's files in the current directory and below to aluno2
Clears the terminal screen.
display a list of all the normal/regular files in the file system ,excluding the folder proc which have the suid or sgid bit set
Find files in the /var/log folder which were modified modified 2 weeks ago
Count the number of times that a single "-----------\n" separated record contains both "A=2" and "dummy=2" in compressed file "file.gz"
Find all regular files with permissions 777 under and below /home/user/demo/, and change their permissions to 755
Prints the first N bytes of file.txt
Use the first non-zero exit code (if any) of a set of piped commands as the exit code of the full set of commands
Show manual page for the find utility
list files in /u/bill that were last read from 2 to 6 minutes ago
Gets list of IP addresses of all network interfaces.
Dump "FILENAME" as 2 byte wide hexadecimal numbers
Locate OGG files under the home directory larger than 100 megabytes
Find all *.xml.bz2 files under current directory
compresses all the files in the current folder with default depth
Print all user names and terminals of users who are logged in
remove all the ".core" files in the file system
recursively look for files ending in either .py or .py.server
find all directories with the name root in the entire file system.
Change the permissions of all regular files whose names end with .mp3 in the directory tree /var/ftp/mp3
Delete all regular files with '.txt' extension that were modified in more than 25 minutes ago in maximum 1 level down the directory '/home/u20806/public_html'
search for a word in all the normal/regular files in the current folder
display all the directories in the current folder which are atleast one level deep
Searches the manual page names and descriptions by 'disk' keyword.
Change symbolic link "$f" into a file
Find largest file in linux with find command
Find all files in the /etc folder that have been modified within the last 30 days and copy them to /a/path/.
Display the last slash-separated part of each filename path in file.txt
Removes all files from current folder but 5 newest ones, filtering out directories from initial search.
Save the greater version number of "$1" and "$2" into variable "ver"
Print lines in the sorted contents of "a.txt" that are not in the sorted contents of "b.txt"
Find files/directories named blah under current directory
Find and delete all core files in the user's home directory and below.
print all PIDs of stopped processes
Search the /Applications directory tree for *.app directories
find all the html files in the current folder which have been modified exactly 7 days ago
Print the first 32 hexadecimal characters from "/dev/urandom", determining C locale for character handling functions
Find all *.err files under current directory that are larger than 5120 bytes in size
display all the files in the current directory excluding those that are in the 'secret' directory
Find all directories under $FOLDER, take the first fields (dot (.) as the delimiter) from their timestamps and reverse sort them numerically
Find all files in current directory and search for 'searchName' in those files and show errors for files that are not directly on the current directory
Find user daniel's files of type jpeg
find all the files in the current folder which which have been modified yesterday and day before yesterday and whose name is of length 1
Calculate the md5 sum of all files in the current directory and formatting the output by removing parenthesis
Find all directories under current directory tree that match the case insensitive regex '^\./course\([0-9]\.\)*[0-9]$' in their paths
Find all files/directories under $something directory
find all the text files in  the current folder and do not search in somedir, bin directories
Find all *shp* files/directories under current directory
Find all the files under /home directory with name tecmint.txt
Display a long listing of all the regular files owned by the user 'bluher' in the entire filesystem
Make directory named in variable "archive" with ".tar*" stripped from the end
Find all files under current directory and print them appending a null character at the end of each file paths
find all the text files in the current folder and display their Permissions and size along with their name
Find all files under /path and below writable by `group' and `other'
find all files in the current folder which have been accessed in the last 30 minutes
Recursively finds files like 'example.com', ignoring case differences, and filters out files with 'beta' in path.
Archive directory "tata" to directory "tata2", compressing data during copy.
Print IP addresses of the host name
display all the files in current folder which have been changed in the last 2-6 days
Save number of lines with any-cased 'merge' from $COMMIT_EDITMSG file in 'MERGE' variable
Set up SSH connection forwarding in the background with no terminal or command execution from localhost port 8888 to "proxyhost" port 8888 and a reverse connection from "officefirewall" port 22222 to "localhost" port 22
Move *wp-admin/index.php files under /var/www/  to ./index_disabled
find all files in current folder which have been accessed exactly 10 minutes ago
find all the files in the current folder and display them in the sorted order of their name
Remove the first 13 characters of each ".txt" filename in the "/tmp" directory tree and number the output
Find recursively the files named "file" in the current directory ignoring all .git directories
Show the mv commands that would rename the *.so files in the current directory tree prepending their names with "lib"
display all the files in the current folder for the files which have not been accessed in the last 24 hours
return every file that does not have bar somewhere in its full pathname
Run 'make -e' with an environment variable 'HOSTNAME' set to the system hostname
unzip and search for a word in all the jar files in the current folder and display the matched file name
Remove the last 3 characters from 987654321, keeping only 987654
Remove all *.log files from the current directory tree
Search for the regex '^ERROR' in all *.log files under current directory
List all files in a current folder, separating names with semicolon
List root's regular files with permissions 4000
get all files in a current directory modified in the last 7 days
Print each line in "file1" whose first word does not exist as the first word of any line in "file2"
Recursively change ownership of "~/.npm" to the current user
Look for files with the name 'search' under current directory
Replace all occurrences of 'subdomainA.example.com' with 'subdomainB.example.com' in all regular files under '/home/www' directory tree
Remove all non-hidden files in the current directory tree
change the group to "new_group" and permissions to 770 for all the files in the current folder
Save all entries that are wrapped around with opening and closing square brackets in file 'FILENAME' to variable 'var'
Page through the contents of 'file', but excess from lines that don't fit within the screen/window width is cut.
Lists the pids of all processes that have process '1782' as their parent.
Removes all empty folders under current folder.
Search for 'string-to-find' in all files under current directory tree and show the matched lines with their filenames
search for all the regular/normal mp3 files in the file system and move them to the folder /mnt/mp3
Rename the *.so files in the current directory tree prepending their names with "lib"
Print the files in the current directory as a list of semicolon separated values
Change the permission to 644 for all files under current directory
Find all files and directories whose names end in ".rpm" and change their permissions to 755
Find all files/directories that are not newer than Jul 01 by modification time
Print the total disk usage in bytes of all files listed in "files.txt"
search for a word in all the files with the extension "ch" in the current folder
Search /usr/local recursively for directories whose names end with a number 0-9
find regular files which modification time is  7 days ago
find all files in the folder /path/to/dir which have been modified between two dates
Find all directories in maximum 1 level down the $front_element directory, sort them according to modification time and list them excluding the $front_element path from the list
delete all the empty in the current folder and all its sub directories
Find all files/directories named 'javac' under current directory
Find .rmv files in the ./root directory recursively and copy them to directory /copy/to/here
Look for *.jpg files
get all the files that are exactly 30 days old
Find any file that has "disc" somewhere in its name in the current directory and all of its sub-directories.
Replace all occurrences of edx (case insensitive) with gurukul in all *.css (case insensitive) files under ./cms/djangoapps/contentstore/views directory
Find all $1 files/directories under current directory and enter into the parent directory of the first one found
prints the names of all files in the directory tree rooted in /usr/src whose name ends with ‘.c’ and that are larger than 100 Kilobytes.
Reports count of characters in the value of ${FOO_NO_LEAD_SPACE} variable as follows: "length(FOO_NO_LEAD_SPACE)==<counted number of characters>"
Print a single line of numbers from "001" to "100"
Find the .groovy files outside the "./target" directory path
Copy the entire contents of the current directory preserving ownership, permissions, and times
find all regular/normal files in the current folder
Find all files under /home/username/public_html/sites/all/themes and set their permission to 640
Display a long listing of all the regular files under current directory tree that are newer than ‘Apr 18 23:59:59 EDT 2013’ and older than ‘Apr 20 00:00:00 EDT 2013’ by modification time
Find all filenames ending with .c in the /usr directory tree
Search for all files newer than file /tmp/t
Find all .txt files under the current directory and below
Save hexadecimal byte 10 in binary file "file.moi" to variable "day"
Treat each line of "list-of-entries.txt" as a value to be put in one cell of the table that "column" outputs
Search the regular files from directory tree 'directory_name' for "word" and print the names of the matched files
Counts sum of non-empty lines from all .php files in a current folder.
Print new line separated numbers from "001" to "100"
Find all files under /home/myfolder that match the regex 'abc.*def.*ghi' in their contents
Set trace prompt to print seconds, nnoseconds, script name, and line number
Find all PHP files under current directory that contain only one line
SSH in server 'server' as user 'user' with X11 forwarding disabled
Create intermediate directories as required and directory /tmp/test/blah/oops/something
Rename "old" to "tmp"
Find all files of the user with UID=1000
Find all directories in the current directory tree that were last modified more than 5 minutes ago but less than 60 minutes ago
find all the files in the file system which have been modified in the last 10 minutes
Disables shell option 'compat31'.
run ksh shell as user apache
Count the number of files named `file1'
Search all files in the current directory tree whose names end in "1" for string "1"
Find all files/directories under current directory that match the case insensitive regex .*/\(EA\|FS\)_.*
delete all the text files from the current folder after user confirmation
Find all .c and .h files in the current directory tree and search them for "expr"
change the permissions of all the regular/normal files in the folder "/path/to/someDirectory" to 644
search for all the regular/normal files in the current folder which start with "my"
Recursively change owner and group to "$JBOSS_AS_USER" of "$JBOSS_AS_DIR"
Represent the current time as seconds since epoch and save it to variable 'TODAY'
Print login name and full name of all users currently logged in
find all the files with the name september ( case insensitive )
find all files in the current directory and sub-directories that were modified after the /etc/passwd file was modified
Prints list of user 'myuser' groups in a format: 'groups: [comma-separated groups list]'.
Find all *.css files under /starting/directory and print filenames and the lines matching the regex '\.ExampleClass' from those files
Recursively find the latest modified file in the current directory
Search for directory foo ignoring case
Find files in /var/tmp/stuff and below that have not been modified in over 90 days
Gets IP address of first listed network interface in system.
find the file arrow.jpg in the entire file system
Find all the files which are changed in last 1 hour
Search the current directory tree for executable files
Generate the obsolete 29 character Spanish alphabet and number each character
ssh into default vagrant host without running "vagrant ssh" by passing the configuration parameters vagrant uses for ssh
Find all files/directories named 'photoA.jpg' under current directory tree
Calculate the md5sum of the executable file of command "gcc"
find files which full path name is /tmp/foo/bar under foo directory and print
Delete all filename* files under /dir directory
display all normal/regular files in the folder "$ORIG_DIR"
Compare files in "/tmp/dir1" and "/tmp/dir2", treating absent files as empty and all files as text
Removes all empty folders under '/path/to/the/folder' path.
find files ending with .jpg
Delete all HTML files under tree ~/mydir
Find all files with name ending with .txt and display only the filenames without full paths
Make directory "~/log"
Try to determine the type of contents in "myfile" located in user's home directory.
Convert the content of variable 'CLEAN' to small letters
List all environment variables (name and value) whose name either equals PATH or starts with GOBIN
Find all files/directories under 'my key phrase' directory
List all files and directories in long list format with a time style of "long-iso" and sort from oldest modifed to newest modified
Replace "inputfile" with a sorted unique list of its contents
Creates temporary file with appended suffix '.cmd' and saves path to it in 'LGT_TEMP_FILE' variable.
find all the jpg files in the directory /ftp/dir which are bigger than 500KB
Find .rmv files in the ./root directory recursively and copy them to directory /copy/to/here
Print the names of all files and directories in the current directory tree
Force create a symbolc link named "/usr/local/bin/fpdf" to "/usr/local/bin/findpdftext"
Print the largest 20 files under current directory
Find all regular files in the current directory tree ignoring directory ./source/script
Print out the names of all directories in mydir recursively
Creates temporary file in a current folder with name formatted like 'templateXXXXXX', and saves path to it in 'tempfile' variable.
search for all the files in current folder and display all the file names separated by space
Find all regular files in the current directory tree that are not readable by all
Connect as ssh user specified by variable USER to host whose IP address or host name is specified by HOST, and copy remote file specified by variable SRC to location on local host specified by variable DEST, disabling progress info but enabling debug info.
Enables shell option 'nullglob'.
Find all files/directories named file in 2 and 3 levels down the current directory
Unzip and extract "*\(userAgent=[^=]*\) [^ =][^ =]*=.*" from "input.gz"
display all executable files in the folder /home
Delete all regular files named 'FILE-TO-FIND' under current directory tree
find  js file which name is not  'glob-for-excluded-dir'  under current directory.
Find all CSS files that do something with HTML ID #content
find all the reglar files which ahve been changed in the last 5 minutes and do not search in the sub directories.
Find recursively regular files in the current directory tree
Search for 'js' in all files under current directory that match 'some string' in their names
Make a directory in the current working directory with a random 32 alphanumeric character name
Saves real path of the folder containing the current script
find  files which full path name is /tmpfoo/bar under foo directory and print
list all samba files in /var/l* directory ( /var/lib or /var/log )
Write every two lines in "infile" on a single line separated by a comma
Changes group ownership of 'public' and 'private' to 'god'.
Find all C source code files from the current directory tree that contain "keyword" in their pathnames, ignoring the case
Recursively change the owner and group of "subdir2" to "user2"
Find all files with the name "MyProgram.c" in the current directory and all of it's sub-directories.
Find all *.cls files/directories under current directory and print '{if(length($0) > L) { LINE=$0; L = length($0)}} END {print LINE"L"L}' for each of them where $0 is expanded to the file/directory path
Find all files whose names end with "~" in the /home/peter directory tree, following symlinks, and delete them
find all text files in the current directory and compress them to a cpio file
Find all files in the current directory and below with extension .php and replace "php" with "html" in their names
Find all  'custlist*' files under current directory
Read a line from standard input with prompt "Are you sure? [Y/n]" and save response in variable "response"
Display all files in a folder
Wrap each line in "longline" to a maximum of 30 characters
Recursively finds strings with the whole word 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.
Find all files/directories that belong to the group 'staff' under '/usr' directory tree
Find .java files in the current directory tree that contain 'TODO', and print their pathnames
find all the perl files in the current folder and search for a pattern
Copy all files matching "*.sh" in "$from/*" to "root@$host:/home/tmp/" compressing data during transmission
find all ".flac" files starting with "cmn-" and search for files having CJK characters using unicodes
Write "fifo forever" infinitely using the named pipe "fifo" by writing its contents to standard output and to "fifo"
find files (under root file system /) that were accessed within the last 24 hours
Create a symbolc link in the current directory to "target"
Change to directory listed in file '$HOME/.lastdir'
find any files in the current directory that begin with a number
Filnd all directory in root directory with 777 permission and change permision755  with chmod commad .
Search the current directory tree for files whose names match regular expression '.*packet.*', ignoring the case
Find all files in the current directory tree that match pattern 'a(b*'
Remove regular files whose names match Perl regular expression '\w+-\d+x\d+\.\w+$' from the current directory tree
Change permissions to u=rw,g=r,o= for all files inside the current directory tree
Recursively search for all files with names ending with "_test.rb", renaming them to end with "_spec.rb", using at most 1000000 characters per command.
Format the contents of "[file]" in a neat table
List all files under the current working directory tree
Find files/directories containing 'test' in their names and display the directory contents before the directories themselves
search for all the files in the folder /data/images which have been modified after /tmp/start and before /tmp/end
List files/directories at least three levels down the directory tree
Print 10 "#" characters in a row
create a cpio archive of the entire contents the current directory while preserving the permissions, times, and ownership of every file and sub-directory
Find and print all PDF files in the current directory and its sub-directories except for any found in the ./pdfs directory.
Change the permission to 0755 for all directories under current directory
Find all .php files in the current directory tree
Compress "my_large_file" with gzip and split the result into files of size 1024 MiB with prefix "myfile_split.gz_"
display all the files in the current directory excluding the paths "targert", "tools", "git"
change cgi files to mode 755
Search for the regex "\$wp_version =" in all the regular files that end with '/wp-includes/version.php' (case insensitive) in their paths in directories/files taken from the glob pattern '/var/www/vhosts/*/httpdocs' and show the matched lines along with the file names
Use "/var/log/wtmp" and print IPs and search for "^msw.*127.0.0.1"
find all files starting with capital letter in the current folder
Search the /etc directory tree for files accessed within the last 24 hours
Find all files under current directory that are read less than 1 minute ago
Display the contents of "file" formatted into a table, removing duplicate lines where the first 12 characters are duplicates, and display the number of occurrences at the beginning of each line.
Recursively finds all *.dbf files from the root folder and prints list of folders with such files.
delete all the files in the current folder which are bigger than 1KB
change group of the file /var/lib/php/session  to group lighttpd
Findx all files having text "texthere" recursively in a current folder, and prints only file names with matching strings.
search for all the files in the folder /home which have sticky bit set and have the permissions 553
delete recursively, without prompting, any files or directories under the current directory that case insensitively match the filename ".svn"
Set variable "extract_dir" to list of top-level directories and files contained in tar archive specified by variable FILE.
Delete all files under user's home directory tree that were accessed more than 365 days after their status was changed
Prints folder where current script is located
Find apparent size of a target directory
Change to folder where the oracle binary is.
Find files whose content was modified at least 1 minute ago
Finds strings with dot-separated sequence of numbers, and prints part of that sequence between the first and second dot.
Search the entire file hierarchy for any file that begins with zsh and exists on the ext3 file systems.
find all the regular files in current folder, that have been changed in the last 3 days and display last 5 files
Grab the output of "basename" (in this case "stuff") and echo it to stdout, which basename would do by default anyway.
Set permissions to 2770 for all directories in the current directory tree
Look for files whose names begin with letters a-j
Find all *FooBar* files/directories under current directory and copy them to ~/foo/bar
Recursively change the owner of all files in "~/tmp" to "$USER"
find all the file that have not been modified in the last 3 days ( considers day starting not 24 hours )
Recursively search through all files in all directories for any lines containing "pattern" and whose second word is not "Binary".
Sort "some_data" by the first and second ";" delimited entries and stabilizing the sort
Prints process tree with command line arguments and process id numbers.
find all the files in the entire file system that start with top
Display operating system type, ie. GNU/Linux
Find all *.htm files under current directory and print the changed names by appending 3 levels of parent directory names at the beginning and modifying the actual name to dd-nnn format
Attempt to connect as root to localhost and copy /home/reportuser/dailyReport.doc to directory /root/dailyReports/20150105/ - this will normally fail because ssh won't accept root connections by default.
Returns exit status 0 and prints exit status of previous command.
Prints long listing of directories '/tmp', '/tnt' themselves bordered with '<--' and '--->'.
Merge 10 already sorted files and display the result, pausing at each page of output.
find all pdf files in the current folder
Remove all .tmp files in and below /tmp
Find all files under images directory
display all file in the folder /dir/to/search except ".c" files
Print file size and user name with color support for each file in the current directory tree
List all files/folders in current directory by separating them with spaces
Saves 'tmux' version in the 'tmux_version' variable.
Enables shell option 'nocasematch'.
Copy the current directory tree to '/path/to/destination/dir' preserving permissions, timestamp and ownership
display all the files in the file system which do not belong to the user "wnj" and which are modified before the file "ttt"
change the permission of all php files in current folder. Plus symbol at the end is used to give multiple files as input to the chmod command
Split "ADDRESSS_FILE" into files containing at most 20 lines and prefix "temp_file_"
Continuously print the seconds since Unix epoch and the ping time to "google.com"
Find all files/directories in entire file system that are owned by "syslog" user
Create a symolic link in "/usr/local/bin/" to "/Applications/Sublime\ Text.app/Contents/SharedSupport/bin/subl"
Find all the files in file system which are accessed 50 days back
display list of all the hidden directories in the directory "/dir/to/search/"
Find all directories under /home/username/tmp and set their permission to 770
Save actual working directory in variable "target_PWD"
Search for "ifconfig" in the output of "history" and print 5 lines that precede and follow
Counts lines in each *.php file.
Find and remove multiple files such as *.mp3 or *.txt under current directory
Search the current directory tree for all regular non-hidden files except *.o
Print the contents of "$FILE" starting from line 2
Delete all files under current directory tree with '.$1' extension where $1 expands as the first positional parameter
Replace "version.old" with "version.new" in the symbolic link target of "SomeLibrary"
Print the list of regular files from the current directory that were last modified on November, 22
Report total size of the root filesystem disk usage in powers of 1000.
Set permissions to ug=rwx,o= for directories under the $d directory tree
Find all foo.mp4 files in the current directory tree and print the pathnames of their parent directories
Filters only directories from long file listing of the current directory
Changes group ownership of 'logdir' to 'loggroup'.
long list al the files in the current directory which have all the permissions
show all the regular files in current folder
find all the zip files in the current folder
Read a line from standard input and save response in variable "VARNAME"
Print unique lines in sorted file "a.txt" compared to sorted file "b.txt"
Find all *.mp3 (case insensitive) files/directories under /tmp and remove them
Sets shell options 'globstar' and 'nullglob'.
Send 5 pings to broadcast address "10.10.0.255" and print the unique IPs who responded
List empty directories in the current directory tree
Write the output of "false" to standard output and to "/dev/null"
create directory log into home directory
Make directories and parents as needed for each file path in "a.txt" excluding the basename for each path
List all directories found in the current directory and below.
Find all files in the current directory tree whose pathnames match pattern "./sr*sc"
Find all regular files under '/home/john/scripts' directory tree excluding files with '.ksh' extension
display all directories in the folder Symfony
Find all sample*_1.txt files/directories under current directory and print 'program  sample*-out sample*_1.txt sample*_2.txt' for each of them
find all files  the current folder which have not been accessed in the last 7 days and which are bigger than 20KB
Move all files/directories under current directory to destDir
find all empty files in /tmp directory .
Show all values (without the names) of variables whose name or value contains "VARIABLE_NAME"
find all files under the /etc directory and display IP address patterns in them
Show the subdirectories of the current directory
Recursively add read and directory access to all permissions of all files and directories
Search for file "file" with minimum depth set to 4
Opens gcc info manual and goes to a node pointed by index entry "funroll-loops".
Find all files in your home directory and below that are exactly 100M.
exclude vendor and app/cache dir, and search name which suffixed with php
Locate all OGG files that reside in the home directory and have not been accessed in the past 30 days
SSH into "localhost" with forced pseudo-terminal allocation, execute "$heredoc", and save the output to variable "REL_DIR"
find all the regular/normal files in the current folder and rename them to html files
Count the number of lines in all ".php" files in the current directory tree
Merge colon-separated information from standard input and file1.txt where the first field of both files matches, print unpairable lines from standard input, replace missing fields with "no-match", and output the second field from standard input and the second and third field from file1.txt
search for a word in all the php files in the current folder and display the matching lines. PLus at the end takes multilple files as input
Find all files with 644 permission and change the permission to 664
Find files/directories under current directory that matches the regex /path/to/something[^/]*$  in their paths
Archive "/path/to/files/source" to "user@remoteip:/path/to/files/destination" via ssh on port 2121
Prints long listing of content in a root folder, including hidden files, with human-readable sizes, and stores output to '/root/test.out' file.
display all the html files in the folder /var/www
Delete all regular files named 'FindCommandExamples.txt' under current directory tree
To descend at most one levels of directories below the command line arguments pass the -maxdepth 1 option. This will avoid deleting nested directories:
Find all *.ext files/directories under current directory and print their path and parent directory path
List the combined path of the current working directory and "file.txt"
Search the directories matching pattern "/path/to/some/dir/*[0-9]" for level 1 subdirectories
Prints total count of lines of all *.py files in a current folder and subfolders.
Find all files/directories with '.what_to_find' extension under current directory tree and show the list by excluding paths that contain 'excludeddir1' and 'excludeddir2'
Create a symbolic link in the current directory for each hidden file or directory in "git-stuff/home/" excluding "." and ".."
Rename "svnlog.py" to "svnlog"
search in current directory downwards all files whose size is less then 10 bytes
Remove all files and directories called "test" from the current directory tree
Return the files that are newer than file `myfile'
Update timestamps of all regular files (ie. excluding directories, symlinks, sockets, etc.) under /your/dir
find all the files in the current folder which are readable
Attempt to connect as root via ssh to host whose IP address or hostname is specified by environment variable IPADDRESS - this will normally fail because ssh servers normally don't accept root logins.
display all the files  in the current folder which have colon in their name
Find all directories in the /data1/realtime directory tree that were last modified more than 5 minutes ago but less than 60 minutes ago
Find all files/directories with '.js' extension under current directory tree without descending into  and ignoring './directory' completely
Give the location of every hard link to file1 in the /home directory tree
Recursively change ownership of "/usr/local" to the current user
list all regular files which path is not dir1 or dir2
Print the current directory tree with the date of last modification for each file or directory
Create all directories in the path specified by variable $javaUsrLib as super user
Print the last 10 lines of the file '/var/log/syslog'
Find all files/directories under current directory that were modified exactly 30 minutes ago
Display a long listing of all the files/directories under current directory tree that are newer than the file 'Nov' by modification time
Enables shell option 'histappend'.
Output two lines of "-tcp"
Check if the contents of file "subset" is a subset of file "set"
Search for ERROR in all btree*.c files under current directory
find all the files that are modified in the last 7 days
List environment variables whose name matches ".*X.*"
Find all Makefile's in the current directory tree
Force pseudo tty allocation on connection to "somehost" and execute "~/bashplay/f"
Recursively finds all files with any cased text "Text" in a current folder, and precedes found string with its number in file.
Find regular files which have 644 permission
Find all files excluding *.gz files in the current directory tree and compress them with gzip
find all '*.c' files under $HOME directory which context contains sprintf
List the current directory recursively ignoring the "dir1" subdirectory
find all the files in the current folder which have not been modified in the last 90 days and force delete them
create an archive excluding files matching patterns listed in /path/to/exclude.txt
Find directories named 'work' under '/usr/ports/' directory tree and remove them
find files in /tmp directory that named are core and deletes them, single or double quotes, spaces or newlines are correctly handled
force remove all the regular/normal files which begin with sess in the temp folder
Find all files/directories under /path directory that were modified more than 30 minutes ago
List all files under current directory with their sizes and paths
Find files whose names match the pattern given by the 2nd argument $2 of the Bash script and replace string $3 with $4 in them
Recursively finds all bzip2 compressed files in a current folder and decompresses them.
Join lines in file "A" with lines in file "B" if the lines share a common first word
Find all files under current directory whose status was changed less than 3 days ago and show last 5 lines of output
Interactively display all lines containing 'word' in all files whose name ends with .properties in the current directory, waiting for user input after each page.
Find all files/directories in entire file system that are exactly 50 bytes
Prints folder where current script is located
Recursively copies 'include/gtest' to '/usr/include', preserving all attributes, and copying symlinks as symlinks, without following in source files.
Find the current directory and all its subdirectories.
Inserts "new line" after last occurrence of ScriptAlias in a file
Prints long listing of ${0} file.
Find all files/directories newer than ttt or owned by user 'wn' in entire file system
Find all files/directories under current directory tree whose paths match the regex 'filename-regex.\*\.html'
Delete all 1US* (case insensitive) files under current directory
Takes first text field from file 'file.txt' as a domain name and gets short A record for this one.
Unzip and extract "userAgent=[^=]*'" from "input.gz"
Find all files/directories under current directory that are 10MB in size
Archive "fileToCopy" to "/some/nonExisting/dirToCopyTO" on host "ssh.myhost.net" via ssh
find all the .jpg files in / and copy them to the current folder.
Saves location of file $1 in 'dir' variable.
Show all lines in file2 that don't contain the first field of any line in file1.
Find all files/directories that are bigger than 100 bytes under '/home/apache' directory tree
Create symlinks to all  /home/folder1/*.txt files with the same name in current directory
Enables shell option 'progcomp'.
List all regular files from the current directory tree that were modified less than 60 days ago
List all ~/bin/FilesDvorak/.* (non-recursive) and ~/.PAST_RC_files/.* (recursive) files/directories and take common entries between these two lists
List all environment variables
Search the /dir directory tree for files whose names match regular expression '.*2015.*\(album.*\|picture.*\)'
Returns exit code 1.
Prints latest modified file in a directory
Find and remove the file with inode number 782263 in the current directory tree
Find all files named `file1' starting from /
find all the regular/normal files in the current folder which belong to the user "sedlav"
Search /root/directory/to/search recursively for the files matching pattern 'filename.*'
Find all .txt files in the /home/user directory tree and copy them to /home/backup
Saves date of the first Sunday in month $mo of year $yo in the 'do' variable.
display all the files in the current folder along with the modification time and display file names of the last 10 modified files
Delete all hidden files in the directory tree given as variable $FOLDER
Find all *.txt files of user Tecmint under /home directory
List all regular files modified more than 61 days
change the permissions of the directories from 777 to 755 in the folder "/var/www/html"
display all the files in the folder "/Users/Me/Desktop" which belong to the user "popo" and which have the permission 777
Delete all directories under '.cache/chromium/Default/Cache' directory tree that are at least 1 level deep and are bigger than 100 MB in size
Remove blank lines and replace " " with "/" in "struct.txt" as input to make directories with parents as needed
Find all files/directories whose names start with 'readme' (case insensitive) under '/usr/share/doc' directory tree
delete all the files in the current folder
Enable history expansion in a script
Search the file system for regular files whose names are shorter than 25 characters
Print the column count of compressed file "$file"
Create a ssh key of RSA type, and prompt for a filename to store it, presenting the default for this type of key as $HOME/.ssh/id_rsa
Counts lines of myfile.txt file.
find all the files in the home folder that have been modified between 24 to 48 hours
Search for 'String' case insensitively in all files under current directory tree and show the matched lines with their filenames
Delete all files/directories named 'FILE-TO-FIND' under current directory tree
Recursively copies everything from '/zzz/zzz/' to the '/xxx/xxx' overwriting the existing files and answering 'yes' on each request for overwriting.
Make directories "foo" and "bar"
change the owner of all the files in folder /u/netinst to netinst
Displays calendar of a previous, current and next month for December of 2120 year.
Output all lines in 'file' which contain a tab character.
Recursively find the latest modified file in the current directory
Remove empty directories from directory tree /srv/${x}
change the permissions of all regular/normal files in the current directory
Find all files in maximum 1 level down the current directory that were modified less than 1 day ago from today
Prints full path to files in a current folder.
Replace the occurrences of "HOGE" with "MOGA" once per each line of the files from the current directory tree, keeping a backup copy of every touched file
find all the text files in  the current folder and do not search in somedir, bin directories
Recursively changes group ownership of everything in 'files' to 'my_group'.
Print the base name via grep of the current working directory
Find all build* directories under /var/www/html/ and print all but first 5 appending with the string 'rf '
Look for SGID files and directories
search for the word "put" in all the files in the current folder which have the word "bills" in their name and display the matched line along with the filename.
Find all files/directories under /usr/tom which matches the extended regex '*.pl| *.pm'  in their names
Create a symbolic link in "/bar/tmp/" for each file in directory "/foo" that does not start with "runscript"
Print '"HTTP/1.1 200 OK', two new lines and the current date
Find all *.gz files/directories under asia and emea directory
Search the current directory tree for symlinks whose contents match pattern "*sysdep.c"
display all the html files in the current folder that have been modified in the last 7*24 hours
Find UTF-8 files with BOM
Find the "*.foo" files in the current directory tree that are not under ".snapshot" directories
Find all directories named CVS, and deletes them and their contents.
kill a number of background jobs
Print every two lines in "file" on a single line separated by a space
search for a files "cart1" in the folder junk which is in home folder and move the folder to ~/junk/A.
Forward port 3307 on localhost to port 3306 on 1.2.3.4 via 'user@gateway' on port 24222
Find all file paths under current directory, perform a reverse sort and show first 10 file paths with their status change time
Print revesed second from the end dot-bounded field in $i value
create a compressed archive with files newer than 1st of January 2014, 18:00:00.
display long listing of all the regular hidden files in the folder Musica
get all files in a current directory modified in the last 7 days
list all CSS files under the current directory
Change permissions to 644 for all regular files under and below /path/to/someDirectory/
Print the minimum transmission time of 10 ping requests to "google.com" from cygwin
Print second section of line <line> where sections are separated by one or more whitespace.
search for the pattern "tgt/etc/file1" in the files tgt/etc/file2, tgt/etc/file3
Search for files/directories with the case insensitive pattern anaconda.* in var/log directory and create an archive (somefile.tar) of all the files found
wait 2 seconds and then print "hello"
Split "list.txt" into files with at most 600 lines each
search for a word in all the regular/normal files in the entire filesystem. ( + is used to give more than one file as input to the grep command.
find in the file system for the directories with the name "httpdocs"
Find all empty directories in the current one and delete them
Find all files/directories named 'photo.jpg' under current directory tree
find all the files in the current directory which are bigger than 1000MB
Display all lines contiaining 'funcname' in system map file matching current kernel.
Saves number of lines of current directory listing in 'n_max' variable.
Prints full path of a 'cat.wav' file in a current folder.
Find all directories under /home/username/public_html/sites/all/themes and set their permission to 750
Lists content of the current folder.
show the list of all the files in the current folder which have been modified within the 24 hours
Find all sample*_1.txt files/directories under current directory
Locate all `readme.txt' files under the home directory
find Texinfo source files in /usr/local/doc
rename all the svg.png files to png files in the current fodler
Print the sizes and names of all TXT files from the current directory tree
Find the passwd file under the root directory and two levels down
Request IP address of 'myip.opendns.com' from name server 'resolver1.opendns.com'
Look for SUID files and directories
Unzip "file.gz" to stdout
Recursively change the owner and group of all files in "/your/directory/to/fuel/" to "nginx"
remove all core files in the file system
Remove all .php files in the /var/www/ directory
Save the first three octets of the host name's IP address to variable "subnet"
Get a sorted list of the longest line with line number for each file under current directory
Send SIGTERM signal to entire process tree starting from ID 24901 and below.
Find regular files with permissions less than 111
Set the host name to "myServersHostname"
Count the number of equal lines in "file1.txt" and "file2.txt"
Replace all matches with the regex expanded by $P_FROM with the text expanded by $P_TO in all regular files under current directory not going into subdirectories and modify the files in-place
Count the number of files named 'job.history' under '/data/SpoolIn' directory tree that match 'FAIL' in their contents
Print the files in the current directory as a list of semicolon separated values
Remount "rfs" filesystem "/dev/stl12" on "/system" with read and write permission
Find & replace broken symbolic links
Find files/directories in entire file system newer than myfile
Find files named core in or below the directory /tmp and delete them, processing filenames in such a way that file or directory names containing single or double quotes, spaces or newlines are correctly handled.
find all the html files in the current folder
search for all regular/normal files in current folder and display all the files which contain 16 lines
Remove all files named tmp or ending in .xx that have not been accessed for seven or more 24-hour periods
Save a unique list of the currently logged in usernames to variable "line"
find all the files in the folder "myfiles" which have been modified exactly 48 hours back.
display all the files in the current folder which have been modified in the last 24 hours
Find x* files/directories under /tmp directory whose status was changed less than 1 day ago and move them to ~/play
Find all *.m4a files under /home/family/Music directory
Search the /path directory tree for files matching pattern '*.foo'
Forward port 16186 on hello.com to 8888 on localhost using private key "privatekeystuffdis88s8dsf8h8hsd8fh8d" for login
display all files in the current folder along with their last accessed timestamps
display all files in the entire file system excluding those that are in the transfer directory
display a long ilsting of all the files in the file system which are bigger than 1KB and which have not been modified in the last 30*24 hours
Find hard links to the same file lpi104-6/file1 in the directory tree lpi104-6
Find all files with the SUID bit set
Look for regular files in the directory trees 'deferred', 'active', 'maildrop', 'incoming' under /var/spool/postfix/
Delete all .pyc files in the current directory tree
Print lines containing string TEXT from all log files in the current directory.
Update timestamps of all files and directories under current directory.
find all the "passwd" files in the entire file system
Find all directories under ${1:-.} directory without descending into any sub-directories
delete all the tmp files ( files with the extension tmp ) in the /tmp folder. Print0 is used to display all those files which have newline in their names or files whose name is only spaces.
Remove files modified at least five days ago in directory trees /path/to/files*
kill group leader
find StringBuffer in all *.java files, ignoring case
Print a NULL-separated list of all hidden regular files from the home directory
Lists all files in a current folder, separating names with comma.
display all regular/normal files in the current folder which are not accessed in the last 7*24 hours
Add "execute" to the permissions of all directories in the home directory tree
Make 3 directories named "~/Labs/lab4a/folder" followed by the number 1, 2, or 3
Print "hello" followed by the current user name
Find all .jpg files in the current directory and below.
Print the last 10 commands in history
Remove all *.txt files in the home directory tree with confirmation
display all the files in the current folder for the files which have been accessed in the last 24 hours
Print the time to ping "8.8.8.8" followed by a time stamp if the ping is greater than 50
Silently read standard input until the escape key is pressed ignoring backslash escapes and using the prompt $'Press escape to continue...\n'
List each directory in the current directory prefixed with its disk usage in human readable format and sorted from smallest to largest
searches through the root filesystem ("/") for the file named Chapter1, and prints the location
Find all directories under maximum 1 level down the current directory and set their permission to 700
List common files in directories "1" and "2"
Find all directories under /path/to/dir (no sub-directories) and archive them (with relative paths) into files with .tar.gz extension
find all the files in the entire file system which have been modified in the last 120 hours
display all the java, xml and action scripts (.as) files in a directory
Compare files 'file1' and 'file2' and print in three columns strings unique for first file, second file, and common ones
Case-insensitive search for "error" in file report.txt, display one page at a time, waiting for user interaction between each.
View history using "vim"
change the directory to the last found folder in the directory 'a'
Print the terminal file of the users who are logged in with "admin" in their name
Read a line of standard input into variable "_command" with the prompt as the current working directory followed by "$"
display the top 20 biggest files in the current folder which are present in the same partition as that of the current folder
change owner of the file "file" to user user_name
search for all the files which have not been modified in the last 6 months (180 days) in current folder and display the disk usage of them
Mount "tmpfs" filesystem to "/path/to/dir"
Prints day of first Tuesday in a month.
Find user daniel's files of type jpeg without `autumn' in the name
Print a count of all unique lines in "ports.txt" sorted from most frequent to least frequent
find all files in the folder /etc which have been modified after /tmp/foo
Find *.jpg screenshots that are bigger than 500k
Infinitely write "1" with line numbers to the console and "/tmp/to"
Search the regular files from directory tree 'folder_name' for "your_text"
Find all the files named 'vimrc' anywhere on the system
Find all the files in entire file system  which are modified more than 50 days back and less than 100 days and show a few lines of output from the beginning
Find all files whose name or type description includes "text", display only paths to files.
Sort and remove duplicate lines in the output of "finger"
Raise an error for using uninitialized variables
prints first line of $bigfile
Make directories "project/{lib/ext,bin,src,doc/{html,info,pdf},demo/stat/a}" as needed and do not cause an error if it exists
change the permission of all the regular files in the folder /home to 700
Replace all negative numbers in the 3rd comma-separated column of inputfile by the number notated in parenthesis instead of with a minus sign.
Find all files in the current directory tree whose size is greater than 1MB
Print whether "$file" and "${file/${dir1}/${dir2}}" differ
Print all unique file paths under "dir1" compared to "dir2"
display the version of find command
Save full path of command "cat" to variable "CAT"
Save the first word of the first difference in ".dir_list_2" compared to ".dir_list_1" into variable "extract_dir"
Show the epoch in default date/time format
Print variable "$opt" with double quotes deleted
Find all directories under 'project' directory without going into subdirectories that do not match the POSIX egrep regex $PATTERN in their paths and are not empty
Create a tar file containing all the files in ~/Library folder that contain spaces in their names
Count files accessed more than a month ago
list directories owned by group ID 100 in the file system
find all the files in the current folder which have the word cache in them and do not search in the sub directories of the folder.
Find all SGID files
search  all block spacial files called backup from /usr directory downwards and print them .
Format tab separated fields in "FILE" as a table
find setuid files and directories writing the details to /root/suid.txt , and find large files writing the details to /root/big.txt, traversing the filesystem just once
Find all files in current directory excluding hidden files and put the output into full_backup_dir variable
find for a word in all the regular files in the current directory
Find all files that are set group ID to staff
Create a copy of index.html in all directories in current directory, pausing for confirmation before overwriting any existing files - names may not contain spaces - names may not contain spaces.
List the MD5 digest of all files under "teste1" and "teste2" sorted alphabetically
split $SOURCE_FILE" into pieces per 100 lines
Print a list of each file with the full path prefix in the current directory tree excluding symbolic links
Find only number of hard link & name of files from long list
Finds IP addresses of all network interfaces.
Search for the case insensitive pattern 'search for me' in all files with '.p', '.w' and '.i' extension under current directory tree without descending into '.svn' and 'pdv' directories
Search all variables and their values for "NAME"
Find all files named 'file' in 1 level down the current directory whose status were changed more than 1 hour ago
Copies all files under the current directory like any-cased '*foobar*' to the '~/foo/bar' directory.
Find all files/directories in entire file system that are owned by "shadow" group
Search for all .html files in directory "www" and output only the basename (without containing path) of each.
Print file information of the executable file of command "g++"
Delete all files named "filename" in the current directory tree, except those with paths ending in "/myfolder/filename"
Interpret /etc/bashrc in the current shell, ignoring lines that contain "mesg".
Search the /tmp tree for files between 10kb and 20kb
list PID of a group leader
Update timestamps of all files and directories under directory /path/to/dir.
recall the second argument from a previous command by pressing alt-shift-y
find all files that names are filename and open in nano text editor
delete all the log files in the current folder
Set read, write and execute permission for all (owner, group, other) for the files/directories in foldername directory tree
display a list of all files in the folder passed as argument to a script
find all files ending with "js.compiled" in current folder and rename them.
List all aliencoders.[0-9]+ files/directories under /home/jassi/ directory
list txt files older than 5 days or html files of any age, null separated
List all your files including everything in sub-directories
find all  tools generated files  a.out , *.o and core dump files which not required to us these all junk files & delete from  current  directory .
View lines 116 through 120 of history
list files in the directory "$directory" with permissions "$permissions"
Searches through the htdocs and cgi-bin directories for files that end with the extension .cgi. When these files are found, their permission is changed to mode 755 (rwxr-xr-x).
Find all files/directories that contain 'packet' (case insensitive) in their names excluding directories that are bigger than 1500 bytes in size
Search /usr, /home, /tmp for *.jar files
Enables shell options 'nullglob' and 'dotglob'.
Print second section of data coming from stdin where sections are separated by one or more whitespace.
search the word NEEDLE and substitute it with REPLACEMENT in all the php files of the current folder
Execute "ls -l data.temp" every 2 seconds
search for all the files in the current folder and sort them in the order of their depth and display the file names
recursively change owner of the directory /Users/xxx/Library/Developer/Xcode/Templates and all files to user xxx
Execute all commands in "commands-to-execute-remotely.sh" on server "blah_server"
search for the word foo in all the js files in the current folder
Find directories in the current directory tree whose names are 33 characters in length
Find all files that are set user ID to root
Find all directories in the /data1/realtime directory tree that were modified within the last 60 minutes
Report file systems disk usage in 1GB blocks.
find files in root directory that names are game
find all the files which have size 0 bytes in temp folder
Print the last space separated word from "Your string here"
display all the files in the current folder which hare in the sub directory trees of the folders which begin with the word "kt" followed by a digit
find all the files in the current folder which have the name net or comm in them
Make directories and parents as needed to "${raw_folder}" and "${split_folder}"
Extract any line in "f1" or "f2" which does not appear in the other
List the names of all file.ext files/directories under present working directory
Find all directories that do not contain "main.cpp"
Find all files under current directory and change their permission to 400
Find all files/directories containing 'foo' in their names under current directory tree
Recursively removes all files like '*.xyz' in a current folder.
Find not-executable files under /home/www
Change permissions to u=rw,g=r,o= for all files in the current directory tree
Find all *fink* files/directories in entire file system
Search the files from the current directory tree for "chrome"
Delete all files with indoe number $inum under current directory tree
search for all the log files in the folder /apps which have not been modified in the last 60 days and which are present in the same file system as that of /apps and delete them
Print the /proc directory tree, ignoring the PID-process things
Search directory tree /srv/${x} for regular files accessed at least 10080 minutes ago, and remove those files
Print yesterday's date information in "%a %d/%m/%Y" format
Get the grandparent directory of each found 'pattern' file in $SEARCH_PATH
Find regular files named "expression -or expression" under and below /dir/to/search/
List files in the current directory and below that are exactly 1234 bytes in size
Look for "filename" in the current directory and below
List all files and directories residing in the current directory and below
Search directory tree `MyApp.app' for directories whose name is 'Headers' and delete them in an optimized way
Find files in the "dir" directory tree whose names are 33 characters in length
find all directories that names are 'project.images' and display details
Change owner to "$user" and group to "$group" of "$file"
Extract two semicolon-separated fields from specified strings, output them separated by a space.
Print a line of 99 '=' characters
Print a minimal set of differences between files in directories "teste1" and "teste2", treat absent files as empty, ignore differences in whitespace, treat all files as text, and print 3 lines of unified context
bind "\C-i" to "complete" function
find files which do not have all permissions to all the users in the current directory
Print host name without a newline
Print "on" to standard output and to files matching "/sys/bus/usb/devices/usb*/power/level"
List *.pl directories in the current directory tree
Find all empty regular files in the current directory tree
finda all the hidden files excluding those having the extension htaccess
Merge colon-separated information from file1 and file2 where second field of both files matches, sorting the result based on this field - for each line, output: first 3 fields of first file, followed by first 3 fields of second file.
Archive "./htmlguide" to "~/src/" with resolved symbolic links and delete any extraneous files from "~/src/" not found in "./htmlguide"
Print 'cp' commands that would copy a file xyz.c to all the files with '.c' extension present in the ./C directory and below
find all the files ending with "mkv" in current folder
Print the list of files from the "/zu/durchsuchender/Ordner" directory tree whose names begin with "beispieldatei" and which contain string "Beispielinhalt"
find  symbolic link file that name match  '*sysdep.c'
Remove "_dbg" from all file or directory names under the current directory
Find all files/directories named 'pattern' under current directory tree
Unzip and extract "*\(userAgent=[^=]*\) [^ =]\+=.*" from "input.gz"
Archive directory "/mnt/data" to "/media/WD_Disk_1/current_working_data/", deleting any extraneous files in destination, compress data during copy.
Verbosely compresses all files on second and third depth level keeping original files in place.
Print numbers from 1 to 10 with 2 values per line
Make directory "/data/db"
download contents from "https://www.npmjs.com/install.sh" and execute
Recursively print all directories in the current directory tree
find all the files in the home folder that are modified day before yesterday
delete all the empty files(files with size 0 bytes) in the current folder
dispaly a long listing of all the files in the current folder which have been modified in the last 14 days
Prompt user to type a list of cron jobs directly at the terminal, then use these replacing previously existing cron jobs.
Search the /path directory tree for regular files
Find all 'test' directories in the current directory tree and remove them
Display the differences between "file1.cf" and "file2.cf" side-by-side with a width of 150 characters
delete all the empty directories in the current folder
Save the canonical path of "$dir/$file" in variable "path"
find all the text files in the current folder and do not  search in the sub directories
Find all files/directories under '/home/user/' directory tree whose status were changed 10 minutes ago
get the root access
Limit each line in "your_file" to 80 characters and view via "more"
Remove all files in and below the current directory whose names begin with "not"
Finds every folder with file 'header.php' within, and copies file 'topscripts.php' to every one of them.
Find all files in /home/kos and below whose names end in ".tmp"
Search the current directory tree for executable regular files
Change permissions to 0755 for all directories in the /path directory tree
Delete all files under $INTRANETDESTINATION/monthly directory tree that were modified more than 366 days ago
Find all files/directories under current directory tree wihout descending into './src/emacs' directory
Recursively finds all files in root folder and prints all strings with 'text-to-find-here' from that files, preceding matched string with filename.
Output two lines of "-tcp"
Replace all newlines from standard input except the last with spaces
Find all the regular files under '/your/dir' directory tree which are bigger than 5 MB and display them in decreasing order of their sizes
Print each character in "orange" on a new line
delete all the empty files in the current directory
Find all directories under var/ directory and change their permission to 700
Rename "blah2" to "blah2-new"
display all sqlite files in the current directory along with their timestamp
Find all regular files whose names do not end in "*.html"
Print reverse lookup for IP address 72.51.34.34
Find and delete all hard links in the /home directory to file1
Removes 'folderName', and removes all content within if 'folderName' is folder.
find all gif files in the file system
Make directory "certs"
Display only first and second dot-separated numbers of kernel version, ie. 4.4
find all the files that have been modified in the last 12 hours
Search the current directory recursively for regular files last changed less than 2 days ago
Mount a read only ntfs filesystem
Print the help message for tree
display all the directories in the current folder which start with processor followed by digit and ends with .1 or .2
Execute "ls -l" on host "something" as user "root"
display all the hidden directories in the directory "/dir/to/search/"
Find all files under media/ directory and change their permission to 600
Delete all regular files under current directory
Find all directories on the system whose size is greater than 50k
change owner and group of the file script.sh to user root
Find all files/directories under current directory and print their paths
find all text files in the current folder which have been modified after the file /tmp/newerthan
Search for the case insensitive regex 'STRING_TO_SEARCH_FOR' in all files under current directory
Find all executables in the current directory tree
Search the "katalogi" directory tree for files named "wzorzec"
Run 'chmod 0644' on all files in the current directory tree
Recursively removes all empty folders under current folder.
find all files  that names are 'apt' and display detailed list
find -name '*.js' -not -path './node_modules/*' -not -path './vendor/*'
List the names of the directories in current directory without going into sub-directories
Delete all .svn directories under current directory
Limits the number of results from grep to 2 lines
Remount "/dev/stl12" on "/system" as read only
Find which ruby files under current directory contain the string 'jump'
Print a count of duplicate lines in "filename"
Print IP addresses of the host name
List all files in the current directory tree invoking xargs only once
Remove "\n" from "test1\ntest2\ntest3" and search for "test1.*test3"
Print amount of space available on the file system containg path to the current working directory human-readable.
show all the files in the folder /etc which have been modified in the last 24 hours
Search the current directory tree for regular files that can be read by noone
Find all *.rb (regular) files under current directory and change their mode to 600
Look for files that have SUID or SGID set
Executes 'cd /' in a subshell created by a pipeline of built-in function 'true'.
Check whether "$path_in_question" is a mount point
Remove containing directories and suffix ".wiki" from specified path, output the result.
Archive "src" to "dst" without overwriting existing files in "dst"
Get a list of all files in the /home directory tree and their coressponding inode numbers
Search the current directory tree for files matching regular expression '^myfile[0-9][0-9]?$'
Recursively change the owner of all files in "/usr/local/lib/node_modules" to the current user
Copy local file "$1" to host "$2" into host directory "$3"
search all the lines that start with the word malloc in the files ending with .c or .h or .ch
show all the files  in current directory
Run 'chmod 0755' on all directories in the current directory tree
Print full path of command "python"
use regex with find command
Find all of jzb's files
Take the section of variable "FILE" between the last slash and the following dot, if any, and store that section in variable "NAME".
find all the directories in the current folder and create the same directory structure in a remote machine using ssh
Search all files in the current directory tree, except *.html and *.svn*, for "SearchString"
Print the path names of all .png files in the /home/kibab directory tree
List files larger than 10MB in the /var directory recursively
Find all files in /dir1 and print only the filenames (not paths)
Find all .java files under and below the current directory
find all the files in the current folder with the name "test-a" and move them to the folder test-10. execdir runs the command in the directory where the file is found.
Read a line from standard input into variable "REPLY" with prompt "Press [Enter] key to release lock..."
Print how many files are inside each directory under the current one
force remove all the c files in the current folder
Remove all spaces from standard input
Find all 100MB files in file system and delete them using rm command
Reformat date "Sat Aug 09 13:37:14 2014 +1100" according to format string "%a %b %d %H:%M:%S %Y %z"
Display the count of regular files under 'home/magie/d2' directory tree which have execute permission to all the users
Recursively finds all files in a current folder excluding already compressed files and compresses them with level 9.
Remove all regular files from the current directory tree whose names do not end with "ignore1" or "ignore2"
find all the header files in /usr/include which have been modified in the last 399 days and display the number of lines, number of files, number of characters of all these files
Find all 'test' directories in the current directory tree and remove them
List the number of occurrences of each unique character in "The quick brown fox jumps over the lazy dog" sorted from most frequent to least frequent
Search the home directory for files whose names begin with "test"
find all PDFs owned by user “seamstress”
Sort file "file" by line
Execute 'echo -e "\tHello World"' every 2 seconds
Change to parent directory and resolve any symlinks in the resulting path, making the physical path the current one.
Finds recursion-related options of a 'grep' utility.
finds all directories named CVS, and deletes them and their contents.
Compare *.csv files in the current directory tree with their analogs stored in /some/other/path/ prompting before running `diff'
Move each of the directories in /path/to/folders/* to another directory whose name is constituted by appending .mbox to each directory name and create a directory named Messages in this directory
Find all files in entire file system which are larger than 20000KB and show file name/path followed by its size
find all the files in the entire file system which have been modified in the last 5 days
find CSS files, omitting results containing "CVS"
Delete files containing whitespaces without recursion
Get domain "$domain" IP address
Find all files and directories last modified less than a day ago and copy to "../changeset" creating directories as needed
Go to first directory specified in PATH which contains the command 'oracle'
search for a word in all c files in the current folder
find for xml files in current folder using regular expressions
Search the /Path directory tree for files matching pattern "file_name*" and containing "bar" in their pathnames
Remove all core dump files from user's home directory
Find all .gz archives in the current directory tree and check if they are valid
Find all file paths under current directory, sort them numerically and show last 10 lines of output with only their paths
Remove all *.tmp files from the /tmp directory tree
find all the text files in the file system and search only in the disk partition of the root.
recursively change owner of the directory /usr/local/lib to the current user
find all the files in the current folder which have executable permission to all the users and display the ten files
Find all directories under '/var/www' directory tree excluding '/var/www/web-release-data' and '/var/www/web-development-data' directories and their sub-directories
Delete files in /var/tmp/stuff and below that have not been modified in over 90 days
Save the full path of command "oracle" to variable "path"
dispaly all the empty regular/normal files in the current folder
Decompress and unarchive "hello-0.2.tar.gz"
Print all filenames under /proc and below
Split the contents of "file1 file2 ... file40000" into 1445 files in a round robin fashion with prefix "outputprefix" and numeric suffixes
Find all regular files that were modified $FTIME days ago under current directory tree
Search the current directory tree for executable regular files
Recursively remove all "*.txt" files and answer "n" to any prompt
find all the direcories in the current folder
Fix files to default permissions 644
Display summary of each specified file in human readable form
count all the regular files that are present in a directory
Remove all directories called "test" from the current directory tree
display all the files in the current folder which have been modified after the files "/bin/sh"
find all the files in the file system which have not been modified in the last 100*24 hours
Remove all regular files found in and below /path
Make directories to "/some/path" as needed
Remove sequence like '\xEF\xBB\xBF' from first string of every '*.js' file in a current folder and subfolders, creating backup file with .bak extension for every changed file, and removing backup on success.
Find all files under /myfiles with 647 permission
Find all 0644 permission files/directories under current directory tree and show only the first 10 of them
Print the first 32 hexadecimal characters from "/dev/urandom"
search for all the files ending with "fits" in the folder "/store/01"
Find all files/directories named '.todo' under $STORAGEFOLDER directory tree and print the parent directory names
find all regular files  then display the number of occurrences of banana without lines not proper end
Search the home directory for OGG and MP3 files
Print ls output for all non-empty files under under current directory
recursively change owner and group of the directory /your/directory/to/fuel/ and all files into it to user and group nginx
Make directories to file "/full/path/to/file.txt" as needed
find files under the current directory containing a space in the filename and delete them
Find all directories under current directory and set read-write-execute permission for owner, read-execute permission for group and execute permission for other for those directories
Print the list of all files under the current directory and below
Attempt to connect as root via ssh to host "IP" and copy /root/K to local machine, passing option "StrictHostKeyChecking=no" to the ssh backend - this will normally fail because ssh servers by default don't (and shouldn't) accept root logins.
Go to directory /cygdrive/c/Program Files (x86) using backslashes to escape special characters
Find all executable files under current directory and show a few lines of output from the beginning
Search the regular files of the current directory tree for string "whatever"
Split "/usr/bin/cat" into 10000 files of about equal size
Find all directories under 'test' directory tree whose paths match the regex '.*/course[0-9]\.[0-9]\.[0-9]\.[0-9]$'
Display file.txt with lines numbered, and page interactively through the result.
display all the regular/normal files in the current folder that are not accessed in the last 10 minutes
Search /etc for files modified within the last day
Find all files in the current directory tree that were last changed $minutes minutes ago
Remove all regular files with extensions php, css, ini, txt from directory tree /old/WordPress/
Search the /media/shared directory recursively for MP3 and OGG files
Locates Erlang distribution, and prints release number from 'RELEASES' file.
find all the normal/regular files in the current folder which have been accessed in the last 24 hours and display a long listing of them
Run 'somecommand' in an environment without the FOO variable.
Connect to host "remotehost" as ssh user "user" to copy remote file "/location/KMST_DataFile_*.kms" to current directory on local host.
display all the regular/normal files in the current folder excluding the files "bbb" and "yyy"
Print the list of all regular files in the current directory and below
Print unique lines in "file1" compared to "file2" in the order they appear
create directory dir
find all *.java files/directories under current directory
search for the file "foo.txt" in the entire file system
Report file system containing path to the current working directory disk usage in kilobytes.
change owner of the files into directory "/mydir" with ".txt" extension to user root
Find files/directories under current directory that matches 'projects/insanewebproject' in their paths
Search the /path directory tree for files that do not have a valid user or group
show a count of the number of filenames ending in .txt in the current directory, without descending into sub-directories
Print a colon-separated list of all directories from the $root directory tree
Count the number of files in the /usr/ports directory tree whose names begin with 'pkg-plist' and which contain 'etc/rc.d/'
Saves printed calendar for $month, $year in positional variables.
Find the core files and  remove them
Find all files/directories named 'findcommandexamples.txt' (case insensitive) in the entire filesystem
Find all files under current directory
List all files under and below the directory given as variable $FULFILLMENT
search for the file ".user.log" in a folder
display all the header files  and cpp files in the current folder
force remove all the text files that have not been modified in the last 89 days
find all the files in the file system which belong to the groep "users" and with the name "dateiname"
Send each byte in "/home/cscape/Desktop/table.sql" to awk
find all the png files in current folder which are present in the pattern list file "search.txt"
Display all environment variables, functions, and aliases, pausing for user interaction after each page of output.
search all the files in the current folder and assign them to a variable
Uncompress "archive.tar.gz" and extract the archive to "/destination"
Find all directories named "nasa"
Convert ";" separated list "luke;yoda;leila" to new line separated list
Create a symbolic link in directory "~/newlinks" for each file listed in "results2.txt"
Go into the first directory whose name contains 1670
Print a ping request and the number of packets sent, received, and the percentage lost for each ping request to "google.com"
Search for broken symlinks
Unsets 'history' shell option.
Find files/directories under current directory and force xargs to print them one by one
delete all the backup files in current directory
Find SUID files
Unzip "daily_backup.sql.gz" and search for lines matching "'x'|/x/"
Print the login time and user of the first person who logged in
display a long listing of all the directories in the entire file system
Prints the day of last Friday in a current month.
Find all files under /home that belong to user tecmint
Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end
Make all regular files in the current directory tree world-readable
List all symlinks under current directory and search for targetfile.txt in this list
find the file "httpd.log" in the entire file system
Save the physical current working directory to variable "END_ABS"
Search for "pattern" in "file" and join each line by a space
display all regular/normal files in the current folder ending with the word ummy
Search all the regular files in the current directory for "example"
Copy "*.cc", "*.h", and "SConstruct" to "rsync://localhost:40001/bledge_ce" using blocking IO
Find all regular files with space in their names under current directory and rename them by replacing all spaces with _
Get a recursive file list of directory $dir
Find files that match the executable bit for owner or group
find all the files in the current folder and search for the word "vps admin" in them.
Find all files and directories and count them
Find all files/directories under 'A' directory tree excluding the paths containing the directory 'a'
Print only second from the end field from slash-separated string in file 'datafile'
Find all .txt files in the user's home directory and below.
Removes all empty folders under path '/thepath', printing info message on each operation.
Find out all *.sh owned by user vivek
Find all files/directories under $1 which have at least write permission for their owner and set write permission for group for these files/directories
find all the links in the current directory and print them in each line and display their names.
From a script, output the name of the script itself, without containing directories - from a shell, output the name of the shell.
Print list of disk and mountpoint of disks matching "/dev/sd*"
Search the /dir directory tree for files whose names match regular expression '2015.*(album|picture)'
Print and save the ping results of 25 requests to "google.com" in "/home/user/myLogFile.log" containing at most 100000 bytes
Make directories "a", "b", "c", "d", and "e"
Split "/usr/bin/gcc" into 100000 files of about equal size
Find a size of only the target directory in MB format
change the permissions of all the regular/normal files to 644 in the folder /home/nobody/public_html
display all the files in the current folder that are at least one week old (7 days) but less then 30 days old
Gets a current job back to the foreground.
Find all *.mp3 files under current directory
Prints path to the folder that contains target of symbolic link ../../../../etc/passwd.
Prints logged in users in sorted order.
find all the normal/regualar files in the current folder which have a size of 10KB and display a long listing details of them.
Find all btree*.c files under current directory
Find all files/directoires that were modified more than 3 days ago under $dir directory tree
Remove the last file extension from standard input
Display compter's hostname
List files in directory "one" and "two" that do not exist in the other
Prints process tree of a current process with parents processes and id numbers.
Execute command "$cmd_str" on host "$SERVER" as user "$USER"
Find only directories
Remove all files under $DIR that were accessed more than 5 days ago
Locate files with user permissions rwx owned by my_user
Enables 'dotglob' shell option.
Remove all files last modified more than 10 days ago from the current directory tree
Revert $string value and print first 20 space-separated fields
Find the files that have "644" permissions and modify them to have "664" permissions
find httpd.conf file in /etc directory
Find all regular files with case insensitive pattern '*$1*' ($1 expands to first positional parameter and falls back to empty string when not given) under current directory tree and execute a command given by $2 (falls back to 'file' command when $2 is not given) with each of those files as arguments
Shows status of a shell option 'compat31'.
Concatenate files containing `test' in their names
Recursively add ".jpg" to all files in the current directory tree
Find all *company* (case-insensitive) files/directories under /basedir with null character as the delimiter
Extract host name part from URL.
Find all php files in the current directory
Change all files in the current directory tree to owner "xx"
find all the directories in the current folder that are empty(size 0 bytes)
display list of all the hidden regular/normal files in the directory "/dir/to/search/"
Find all directories under current directory having DIRNAME in their name
displays all files in the current directory
Change the owner and group of "uid_demo" to "root"
Find and remove multiple files such as *.mp3 or *.txt
Find .cpp files that differs in subdirectories PATH1 and PATH2.
Delete all contents form the files that contain the case insensitive regex 'stringtofind' in maximum 1 level down the / directory excluding other partitions
Change every reference to the colour red to green in all CSS files
Search the current directory tree for all files except SVN ones
search for pattern matched files in the current folder and subfolders exclude "excluded path"
Find all files under current directory and print only the filenames (not paths)
Write "Hello, world" to standard output and to "/tmp/outfile"
Run a "rm" process to recursively remove "cache", making it immune to all SIGHUP signals sent to it.
Find all regular files or symlinks in the entire file system
Find files/directories in entire file system that were modified a day ago
Change permissions to 777 for all directories in the current directory tree
Find files/directories writable by group and others under the /path directory
remove all core dump files from user's home directory
find all the files ending with ".sh" in the folder /dir excluding those wth the names foo and bar.
Merge lines whose first comma-separated field in file 'in1' also appears as a first comma-separated in file 'in2', also outputting unmatched lines from 'in2' - both files must be sorted, and the output format of each line will be: first field of in1, second field of in2, and third field of in2.
Backup all of the Java files in the current directory tree by copying them and appending the suffix .bk to each
find files in /u/bill directory which are access an 2 to 6 minutes ago
Find all regular files 1 level down the $dir directory
Find files containing string "#!/bin/ksh" and append their names and matching strings to /tmp/allfiles
find all directories in the current directory
Creates temporary folder in a TMPDIR folder or /tmp folder if TMPDIR doesn`t defined, with folder name like current shell name and 10-letter suffix, and saves created path in 'mydir' variable.
Find all files in your home directory and below that are larger than 100M.
Find all hard links to file /path/to/file that exist under the current directory tree
Look for `regexp' in binary files
create directory /cpuset
Find all regular files in and below the home directory that have been modified in the last 90 minutes
Find all *.dbf files/directories in entire file system
List all directories in maximum 1 level down the current directory
Search for files which are writable by somebody
Print a colon-separated list of all directories from the $root directory tree, except those matching pattern ".[a-z]*"
Add executable permission to "pretty-print"
Clean up all zombie processes by instantly killing their parent process with SIGKILL signal.
Removes 'latest' folder if empty.
Displays information about all network interfaces in system, including inactive ones.
create directory TestProject
filter output of bind -p by regex
Finds all folders that contain 'ssh' file and have 'bin' in path.
Find all the files in file system which are modified in last 1 hour
search all files in the current folder which match the regular expression
display all the regular files in the current folder that are bigger than 10KB
Find all directories in directory tree `httpdocs'
List each file or directory in the current directory prefixed with its filesize in MB and sorted from smallest to largest
Get a two column list of all regular .rb files residing in the current directory tree
find all the undo files in the current folder and display the toal lines, words, characters
Make directory "saxon_docs"
search for "some_function" in all the python files in the current directory
find all files in the file system which belong to the user pat and having the word "filename" in their name.
find all the files in the current folder which do not have the execute permission
List all files bigger than 10000 blocks
Print summary of new/missing files, and which files differ between folder1 and folder2.
Filter the contents of 'file' through sed commands written in 'commandfile', displaying the result.
Find all PNG and JPG files and append them to archive `images.tar'
Copy src_dir recursively to dest_dir, but without overwriting existing files.
Find files named core in or below the directory /tmp and delete them. Note that this will work incorrectly if there are any filenames containing newlines, single or double quotes, or spaces.
Find all files under "/path" that do not contain a "." and append ".jpg" to their file name
use find -exec with multiple commands regardless of their success or failure
Make directory "destdir"
Copy all files under director 'foo' whose name doesn't contain 'Music' to directory 'bar'.
Remove all *.bak files under current directory
display the number of lines in all the files in the current folder
Find all files called "file1.txt" that reside under and below /home/wsuNID/
find all the regular/normal files in all the directories in the /some/dir and delete them
Get the total size of all files under dir1 directory
change owner and group of the file uid_demo to user and group root
Remove sequence like '\xEF\xBB\xBF' from first string of every file in a current folder and subfolders, creating backup file with .bak extension for every changed file, and removing backup on success.
Remove all .txt files from the /full/path/dir directory tree
Print which files differ between "folder1" and "folder2" treating all files as text
Find regular files under / that contain "stringtofind" and clear out their contents
Count the number of equal lines in sorted files "ignore.txt" and "input.txt"
Create a symbolic link in the current directory for each file under the directories matching "../[12][0-9][0-9]"
Find files in the current directory tree of size between 700k and 1000k
List all environment variables whose name starts with PATH, showing the name and value of each one.
Replace all instances of "STRING_TO_REPLACE" with "STRING_TO_REPLACE_IT" in file "index.html" and make a backup with suffix "bak" on OSX
Search the current directory tree for all regular files matching pattern "*.rb"
search for the word "nameserver" in all the regular/normal files in the /etc directory and display the name of the file along with the matched line
List all *.c files in entire file system
List all .c and .h files in the current directory tree that contain "thing"
Report total file systems disk usage in 1T blocks.
change owner of the file my_test_expect.exp to user el
Find all files/directories named file1 in maximum 2 levels down the current directory
show the sum of disk used by all the files that belong to the user "test1" in the entire file system
display all regular/normal files in the folder "dir" and display the filename along with file size
find all the files that have been modified in the last 7 days,
Output the system host name and date to the console
Print concatenated content of all files ending with '.foo' under the current folder
Find all files under $source_dir that match the regex .*\.\(avi\|wmv\|flv\|mp4\) in their paths and print them with null character as the delimiter
Set permissions to 644 for all regular files under the current directory tree that have permissions 755
find all the regular/normal files in the current folder which belong to the group "flossblog"
Find all files/directories under '/abs/path/to/directory' directory non-recursively that match the pattern '.*invalidTemplateName.*' in their names
delete all the files which start with "Tes" in the current folder
Find all directories in /path/to/dir/ without going into sub-directories
Remove all files whose names end with "~" in the /home/peter directory tree
Write "foo" to the real path of the current command's standard input
Find all directories named "D" in the current directory tree and print their parents
Recursively changes group ownership of everything within a current folder to 'admin'.
find files in the current directory and sub-directories, whose content was updated within the last hour
Calculate the md5 sum of the file "filename" and print only the hash
find all the cpp files in the current folder and move them to another folder(plus takes the bulk output of the find command and gives it as input to the move command in exec)
Delete all .svn files/directories under current directory
Change the ownership of all files in the current directory tree from root to www-data
Search the current directory recursively for regular files that have been changed less than 3 days ago and print 5 of them.
Convert "595a" into characters and then print the hexadecimal and printable characters of each byte
find all the files in the current directory which end with orig
display all pdf files in the current folder
find all gzip files in a folder
Find and the 5 largest regular files in the Downloads folder of tecmint's home directory and output the file sizes in bytes.
Generate the Spanish alphabet and number each character
Enables shell option 'cmdhist'.
Search for 'foo' in all regular files under 'sources' directory tree and show the matched lines with filenames
Print each line in "f1" and "f2" separated by a space and "f3" separated by a tab
Find all files/directories under current directory tree with '.old' extension
Find all Name* files under ../../$name-module and rename them by replacing 'Name' with $Name (will be expanded in the current shell) in their names
Find all files/directories under $dir directory
Print the contents of "file" in reverse order
Find regular files modified within the last ten minutes under /etc
Search all of /usr for any directory named 'My Files', for each directory found, copy it to /iscsi preserving full paths and attributes, then remove it.
Get current directory name without full path, ie. the part after the last /
Archive directory "symdir" to "symdir_output" preserving symbolic links.
Find all files that are modified in last 3 days
search for the file "job.history" in the folder /data/Spoolln and search for multiple patterns in the file and display the count of matched lines along with the pattern
Lists all files in a current folder, separating names with space.
Find all .txt files in the /home/user1 directory tree and copy them to /home/backup
Copies all files like 'lib*.so' to '~/usr/gtest/lib/' directory.
display all the text files  in the current folder
find all files and directories that have been modified in the last seven days
Archive "/path/to/copy" to "/path/to/local/storage" on host "host.remoted.from" as user "user" updating files with different checksums, showing human readable progress and statistics, and compressing data during transmission
find all the perl files in /var/www ( case insensitive search )
Set variable "architecture" to machine architecture, ie. x86_64
List all available commands in Mac OS
Prints all Saturday days of a current month.
Merge already sorted files "*.txt" and split the result into files of at most 1000000 lines each with a numeric suffix and a prefix "output"
Find all *Company* files/directories under /root/of/where/files/are directory
Load keybindings from a file ~/.inputrc
find all files in current folder which are bigger than 1 MB and move them to another folder
Copy all files matching "file_name.extension" to "/path/to/receiving/folder" preserving directory hierarchy
find all the files in home folder which have been modified in the last 24 hours
Find files/directories named 'photo.jpg' in the entire filesystem
List the regular files of the current directory tree that contain string "texthere"
Print the list of the current directory's subdirectories
find files in current folder ending with ".c" or ".h" or ".ch" and search for a word in these files and enable color highlighting of the matched text
Finds all user session in system, and shows sorted user names with number of sessions of each user.
Prints sequentially listing of a current folder and calendar of a current month.
Print IP addresses of the host name
List all regular files under current directory ensuring white space safety
copy all the regular/normal files from temp folder which have been modified in the last 30*24 hours to /tmp/backup
find all files that names are game
Identify CMS version/releases accross all your PHPBB installations
Find all *.srt files under directory named 'working' and show the first one found
find all text files in current folder and trim the extra spaces in all lines in these files
Delete all files with '.old' extension under current directory tree
Split "input.txt" into files of at most 10 bytes each with prefix "/tmp/split-file"
Silently read a single character into variable "REPLY"
Find all regular files under $DIR directory tree whose paths match the regex ".*\.${TYPES_RE}" where ${TYPES_RE} expands as a variable
Search the current directory tree for directories that can be opened by noone
Find all 50MB files
Search directory lpi104-6 for files with inode number 1988884
Search for "vid=123" in all compressed files found under "/my_home" matching "*log.20140226*"
Count number of lines in all files matching "*R1*.fastq.gz"
Displays status of currently active network interfaces.
Search for 'Text To Find' in all regular files under current directory tree and show the matched files and matched lines with line numbers
Replaces any occurences of '*favicon.ico*' in any subfolder with file '/root/favicon.ico'.
Show manual page of find
Add the execute and read permission for all and the write permission for the user to the dir_data directory and all of its sub-directories.
find a.out, *.o and core files under the current directory and sub-directories and delete them.
Print the byte count of all regular files found in the current directory tree
Find all files/directories which have been modified within the last day in the drectories/files taken from the glob pattern '/tmp/test/*'
Print the full path of command "gcc"
create a soft link of the files in the folder /media/movies which have been modified in the last 30 days
Find all files which have 211028 inode number in current directory then Locating and renaming unprintable directories
list all regular files under the directory "$directory"
Check if process ID 1 exists (init or systemd) and current user has permission to send it signals.
check if there any files from the .git folder after excluding it using the prune command
Exclude directory from find . command
Print a listing of the /usr/local/etc/rc.d directory tree
Open a ssh connection to user@host with X11 forwarding to run GUI programs
Set shell option 'histverify'.
Change the user to daisy for directories and subdirectories owned by harry
find all the files in the entire file system starting with the word top
Find all directories under /home/username/public_html/sites/all/modules and set their permission to 750
Make directory "tata"
Compress "hello world" and save to variable "hey"
Find files with name `aaa.txt' under the current directory
display all files ending with ".ext" in current folder and append the file contents of list.txt and sort them based on name and display only uniq items
Synchronize "xxx-files" to "different-stuff/xxx-files" recursively preserving metadata with a bandwidth limit of 2000 KiB/s
Count the *.html files residing in the /usr/src directory tree and containing string "foo"
create a backup of all the files in the home folder on a partition and save the log to a file
find directory which name is Cookbook under /users/al
Report file system containing the current directory disk usage in kilobytes.
Search for files/directories which are writable by either their owner or their group
search for files in the current folder ending with ".au"
display all the text files in the current folder  and do not search in the bin directory
List all files in entire file system that are newer than the file $newerthan and older than the file $olderthan and sort them according to file modification time
delete all the text files in the current folder
recursively finds all files newer than a date
Find and show all files on the system that are larger than 900 MB
Search the current directory and all of its sub-directory for any PDF files being careful to prevent the shell from expanding anything in '*.pdf'  before it'ss passed to find.
Find all *.ogg (case insensitive) files/directories under your home directory
Print information about all users who are logged in
Find all *.rb (regular) files under current directory and count their line numbers ensuring white space safety on file name/path.
Change file owner and group of "/path/to/yourapp" to root and print a diagnostic
List all cron jobs where the minute part is either * or a number from 0 to 14.
display all files in the entire file system
A no-op on filename with sed
Find directories in the current directory (no sub-directories) and print them appended with a string literal 'Directory: '
Find all files which  are accessed after modifying /etc/passwd files.
display all files in the folder /usr/src excluding those ending with ",v"
create and list contents of the archive
Check if current system is running in 64-bit addressing.
Search for 'some string' in all *js files under current directory and show the matched lines with line numbers
remove all the files in the folder "myfiiles" which have not been accessed in the last 30*24 hours
Mount remote "cifs" filesystem "//192.168.0.111/serv_share" on "/mnt/my_share" with username "me" and password "mine"
search for the file "process.txt" in the entire file system
search for perl files in the folder /users/tom
Search all files in the current directory tree that are named "whatever" for "you_search_for_it"
Find files/directories that does not have write permssion for group
display a long listing of all regular files  in current folder which have been modified in the last 60 minutes
Find all php files under current directory
download content from "http://127.0.0.1:8000" and output to "index.html"
Print a sorted list of the extensions of the regular files from the current directory tree with counts per extension
Find all *.txt files under / and print their sizes and paths
Remove files named "core" from the /work directory tree and write their names to /dev/stderr (the standard error
Remove files under current directory with inode number $inum
Search the current directory tree for .log files containing the string "The SAS System" on the first line
search for the file, filename.txt in the current folder
Search for files whose name is "filename" and whose permissions are 777
Find all the files which are greater than 50MB and less than 100MB
Find all .sh files in the current directory tree and remove them
Print the percentage of packets lost of the 5 packets sent to "$host"
find files with the extension .conf in the /etc directory
Find all files in /tmp whose names begin with the current user's name followed by "."
Find all files on the system whose names are 'composer.json'
Find all the .mp3 files in the music folder and pass to the ls command, -print0 is required if any filenames contain whitespace
Gets MAC address of eth0 network interface.
Set variable value to current kernel release name.
Search for all files with same inode NUM
Find all the files/directories in the current directory tree which have been modified between 2014-08-25 and 2014-08-26
Search the /usr/bin directory tree for regular files modified or created less than 10 days ago
Search the system for regular files whose names are "filename" ignoring the case
display a long listing of all the files in the current folder
Print numbers from 1 to 30 with a leading 0
Creates temporary file by template provided in option '-t'.
Saves exit statuses of piped commands in a system variable PIPESTATUS='([0]="0" [1]="0" [2]="1" [3]="0" [4]="1")'
display all the html files in the current folder
Search for 'mystring' in all *.txt files under current directory
find all the php files
Display the total count of all the files/directories with '.old' extension under current directory tree
get the root access
Clean the current directory from all subversion directories recursively
Find files/directories under /tmp smaller than 100 bytes
Print newline, word, and byte counts of each '*.java' file within current directory, and total newline, word, and byte counts
Print the contents of "file" with " | " appended to each line
Find all files/directories named 'file' and print them with null character as the delimiter instead of newline
Sources script incl.sh in the folder where current script is located.
List all *jsp and *java regular files found in the current directory tree
Search the /path directory tree for files missing g+w and o+w bits
Find all directories in current directory without going into sub-directories
Find all files/directories matching the regex pattern ".*\\.rb$" under current directory
find all the files in the current directory which start with t and have been modified between one hour (60 minutes) and 12 hours (720 minutes) ago.
Rename file ~/junk/cart1 to ~/junk/A
Print the file content of command "f"
Print file name without extension assuming there is only one dot in the file name.
Find all SUID files .
find file which name like 'foo.*' in current directory.
Execute awk script "script.awk" with 2 arguments both "file.txt" and format the output as a table
Find all directories in level 1 down the $queue directory
Report all files in /mydir1 and /mydir2 larger than 2000 blocks and accessed in over 30 days
Find all files under /path/to/base/dir and change their permission to 644
Find all regular files under $FILES_PATH directory tree and save the output to 'FILES' variable
Print info about thread number of process with pid 1
Print flow of random data, showing all non-printing characters
Prints directory where the executing script ($0) is located.
Mount partition with label "WHITE" on "/mnt/WHITE"
Find directories in the current directory tree that were modified within the last 24 hours and move them to /path/to/target-dir
display all the C files or Python files in the folder "euler"
show all directories in the current folder excluding those that are present only in the paths ./media, ./images and ./backups
Find all SUID files in entire file system
Delete the line containing "start" plus the next 4 lines from standard input
Find files in two different directories (esofthub and esoft) having the "test" string and list them
Find regular files whose names end in .JPG
find all normal/regular files in the entire file system having the word "filename" in their name.
Sort standard input in alphabetical order
Search the /var/www/ tree for files owned by root or unknown group and change their group to 'apache'
Print lines unique and common to sorted files "file1" and  "file2"
Rename all "thumbs" directories to "thumb" in the current directory and 1 level below
Replace the first occurrence of "string1" on each line with "string2" in all regular files in the current directory tree
Count the number of directories under directory '/directory/' non-recursively
find all the text files which are present in the current directory excludinghidden files.
Print a list of all regular files residing in the current directory
Removes all listed folders with content in sudo mode.
Replace ",," with ", ," in "$file" and display the "," delimited result as a table in "less" with a shift value of 5 and line numbers
Search the current directory tree for files last accessed more than 10 days ago
Find files associated with an inode
find all the files in the file system which have the permission 777 and with the name "dateiname"
Silently read a single character from standard input into variable "key" without backslash escapes and using the prompt $'Press any key to continue...\n'
Print all filenames under /proc and below
find all the files ending with ".foo" in the folder /usr
find all the files within your home folder accessed more than 100 days ago
Send SIGHUP (hangup) signal to all parents of zombie processes.
Report total disk usage info on root file system, printing all sizes as power of 1000
Search for the case insensitive regex expanded by $2 in all files named $1 (to be expanded) under current directory
Find all pdf files under /dir/containing/unsigned with null character as the delimiter
Find all files/directories with space in their names under current directory and rename them by replacing all spaces with _
Find all .php files starting from the root directory and ignoring /media
Clean directories and subdirectories of the temporary files generated during normal use
Find all files/directories under /myfiles following symlinks if needed
Look up for 'myip.opendns.com' in server 'resolver1.opendns.com' and save the terse output in 'IP' variable
Numerically sort file "temp.txt" by the second "-" separated value of each line ordered from highest value to least value
display all normal/regular files in current directory
find all the files in the home folder which are less than 42 Bytes
Find all the files which are greater than 50MB but less than 100MB in size
Count number of lines in "Sample_51770BL1_R1.fastq.gz"
Print the current directory tree with file sizes
display all the files in the /usr folder which have the permissions 777
Perform a dry run to recursively copy "test/a" to "test/dest" excluding "test/a/b/c/d"
Print summary of new/missing files, and which files differ between dir_one and dir_two, sorted alphabetically.
Find all files in and below all subdirectories of the current directory
Print the contents of "n"
Find all files under current directory and set read-write permission for owner, read permission for group and no permission for other for those files
List all leaf directories (directories which don't contain any sub-directory) under current directory
display a list of all regular/normal files in the current folder
Remove the "^M" characters from all *.ext files under /home directory
Insert "insert" every 3 lines for the output of "seq 1 10"
Find files that were modified 7 days ago and archive them
Find all files in current directory that were modified less than 1 day ago excluding hidden files  and archive them and put the output into the variable file_changed
Find all files/directories under current directory that match the case insensitive glob pattern {EA,FS}_*
display all the files on the current folder excluding those that are present in the folder "./src/emacs"
Remove "-" from the contents of "/proc/sys/kernel/random/uuid" and save output to variable "comment"
Get the total sizes of all files under current directory
find all the files in the file system whcih have been modified in the last 1 day
Correct permissions for files in the web directory
Search user1's home directory tree for *.bin files
display all the files in the current folder excluding the directory aa
Find directories modified within the last 7 days
Change all directories under "./storage/" to owner "apache" and group "laravel"
Find and print the names of all files found in the current directory and all of its sub-directories
Display the last slash-separated part of path, in this case "example".
returns a list of  files create time is 1 minute ago under the root directory.
Send 5 pings to broadcast address "10.10.0.255" and print the unique IPs who responded
display all html files  in  current folder
list all files in the current directory recursively
Split "$in_file" excluding the first line into files of at most 100000 lines each with numeric suffixes of length 5 and the prefix $in_file"_"
Read a line from standard input into variable "i" with the prompt " Again? Y/n "
Print command with PID 11383
Change directory to the "lib" directory located two parent directories above the path to command "perl"
Calculate the md5sum of the executable file of command "cc"
change the permissions of all the regular files in the current folder
Create all directories in the path specified by variable $tempWork
display a long listing of all the empty files in the entire file system which are empty
Copy the entire directory tree under t1 to t2, do not create a containing t1 directory in t2.
Remount "/dev/block/mtdblock3" on "/system" with read only permission
Print the names of all files in or below the current directory, with all of the file permission bits S_ISUID, S_ISGID, and S_IWOTH set
Search the home directory for files accessed more than 10 days ago
Find all files recursively starting from / that have been modified in the past 30 minutes and list them
Exit the shell immediately if an error is encountered
Search the current directory recursively for regular files last accessed less than 2 days ago
Rename "/usr/bin/php" to "/usr/bin/~php"
Perform white space safe deletion of files named core under /tmp
Store content of uncompressed file "$file.fastq" in variable "reads"
Find and show all files in the current directory tree that are smaller than 500 kB
Delete files under $LOCATION that match $REQUIRED_FILES in their names and were modified more than 1 day ago
Print every found file like '*.cfg' under '/path/to/files/' directory followed by its content, and wait 2 seconds after each printed file
find all the text files in the current folder starting with "somefiles-"
Find all the files whose name is tecmint.txt
Add content of "filename" to the existing cron jobs of user "user", without removing the previously existing cron jobs.
Find files larger than 100MB in /var/www and exclude files with /download/ in their path from the output
Find files/directories named 'aaa.txt' under current directory tree
Find all *$VERSION* files/directories under current directory where $VERSION is a variable
change permissions of all the script files in a directory
searches through the /usr directory for the regular  file named 'Chapter1*'
display all the files ending with ".user" or beginning with "admin" or ending with ".user.gz" in /var/adm/logs/morelogs/ and excluding  all regular files
Forward port 8000 bound on localhost to port 22 in 'clusternode' via 'user@bridge'
Find all .less files in the current directory tree
Remove all CVS directories from the current directory tree
Delete all files throughout the entire filesystem that are no longer owned by a valid user.
List all the emptry files in thecurrent directory only.
delete all the normal files in the current folder and do not delete those in the subfolders
Remove all *.log files from the current directory tree
Find all files matching "abc*" in the current directory and append a column with "OK"
Make a list of all files in the current directory tree, except *.png and *.class, and view it in the vim editor
Make directory expanded by $dir variable
replace the word foo to bar in all the regular/normal files in the current folder (does not update the file)
List the current directory recursively ignoring ./src/emacs/ and all its contents
delete all the files in the current folder which end with ".bak" or ".backup" and which have not been accessed in the last 30 days
Find all empty directories in the current one and delete them
Prints long listing of content in the current folder with C-style escapes for nongraphic characters
Print list of all user names who are logged in
Replace all sequence of 'blank' characters in file 'log' with a single occurence of such symbol and print space-separated fields of each string but first two fields
Split "$file" into files with at most 1000 lines each and use a prefix length of 5
set a crontab to create or update the timestamp of "washere1" in the current directory every minute.
find all CSS files that do something with your HTML ID #content
Find all *.c files under and below the current directory that contain "wait_event_interruptible"
Save IP address of your SSH session in variable "WORKSTATION"
Find recursively all regular files in the current directory whose names contain "."
Print the common third whitespace separated fields in "file1" and "file2"
Copy the directory hierarchy of the current directory to "destdir"
remove all the ".core" files in the file system
find dirctory files which modification time is  7 days ago
Find all directories recursively starting from / and count them
Find all /path/to/check/* regular files without descending into any directory
Find all files/directories under current directory tree whose names start with 'some_text_2014.08.19'
Find all directories in 1 level down the /home directory that have two consecutive vowels in their names and count them
Find files/directories that isn't owned by the user 'apache' under /var/www
search for a file "file" in current folder and display all instances of this file
create a symbolic link in current directory named "environments" to file "../config/environments"
Find files whose name starts with "MyFile", ignoring the case
Find all *.old files and move them to directory oldfiles
Rename all files in current directory to lowerase.
Write out the entire directory hierarchy from the current directory
Find all leaf directories that include only one occurrence of "modules"
Remount "/dev/stl12" on "/system" as read and write
list broken symbolic links under "somedir"
display all the users in the current folder which do not belong to the user root
Find files/directories under current directory that matches './projects/insanewebproject' in their paths and show the first one
Archive "somedir/./foo/bar/baz.c" to "remote:/tmp/" preserving the relative path of "foo/bar/baz.c"
display all the empty files in the folder /opt (file size 0 bytes)
Answer "y" to all "Are you sure?" prompts from command "cp * /tmp"
Find all the files whose permissions are 777 in the current directory
Change permssions of *.cgi files under directories htdocs and cgi-bin to 755
split compressed content of the file www into pieces per 1073741824 bytes named as "backup.tar.NNN"
Rename all "thumbs" directories to "thumb" in the current directory tree
Find all files named 'aaa.txt' under current directory tree and display their contents
Search for regular file foo ignoring case
Numerically sort each line of standard input
Find all the files which are modified in last 1 hour
List all aliencoders.[0-9]+ files/directories under /home/jassi/ directory
Print whether the unique contents of "set1" and "set2" differ
Search for the pattern '^use strict' in all *.pl files under current directory
Unzip and untar "openssl-fips-2.0.1.tar.gz"
find all the files in the file system which have been accessed in the last 1 day
find all the files in the current folder that have a single letter in their name which have been modified in the last 3 days but not today
Add read permission for 'other' for all files/directories named 'rc.conf' under current directory tree
delete all the files in the current folder which have been modified in the last 14*24 hours
display all the files with the names "name1" and "name2" in the current folder and do not search in the sub directories
Find a used disk space of a target directory and files inside of it
Search for all jpg images on the system and archive them
keep only read access to all the files in a directory.
display the name and size of all the regular/normal files  in the var/log folder which are bigger than 100MB
Find all files recursively which end in ".php"
Prints calendar for a current month, replacing current data with asterisk.
Change the permission to 644 for all files under current directory
Repeat "image.png" 10 times on a single line
change the extension of all the ".abc" files in the folder "/the/path" to ".edefg" and do not change in the sub directories. execdir ensures that the command after it is executed only in the folder where the file is found
Find files/directories under current directory excluding the path ./src/emacs
Print name of the block device containing the file system containing $path.
Save absolute path of the script filename in variable "SCRIPT"
Execute "${MD5}" on all files found under "${1}", numerically sort the results, and save to variable "DATA"
Find all .java files whose name contains "Message"
find all files in the current directory excluding those that end with .js or have the words .min or console in their name
Locate all .txt files in and below the current directory
Replace newline with "_" in "file" then search for "_foo_" and output with "_" characters deleted
Find all files/directories under current directory
Use "$BYTES" amount of RAM for "$SECONDS" seconds with no output
Make directories "Labs/lab4a/folder1", "Labs/lab4a/myfolder", and "Labs/lab4a/foofolder"
Find files/directories with exactly read,write and execute permission for all (owner, group and others) under /path
Show the number of lines for each PHP file in the current directory tree
Search the current directory tree for symbolic links named "link1"
search for all the mp3 files in the folder /home/you which have been accessed 24 ago
find all the shell scripts or perl files in the current directory
find all the zip files in the current folder and create a tar ball of these zip files
Delete the 4th tab separated column from the output of "finger"
Lists all directories in the current folder.
Find files that were modified in less than 1 minute ago
Search all *.txt files under ~/documents for the word "DOGS"
search for files which are writable by both their owner and their group
Saves byte size of $myvar variable value in the 'var2' variable.
Prints hierarchical process tree.
change group of the file /tmp/php_session to group daemon
count all the html files having a specifc word in a folder.
List all files under current directory that are greater than 10MB in size
Find files ending in "config"
Find all files larger than 20000k
Find all files in the current user's home directory and its sub-directories with the optional constraints of опция_поиска, значение and/or опция_действия.
Filter the cron list of user "user" through "my_wonderful_sed_script" and re-apply the resulting output.
Find all *.jpg files under current directory and print only unique names
Change all directories under "./bootstrap/cache/" to owner "apache" and group "laravel"
Find files whose data was modified within the given days of the month
Search the regular files of the current directory tree for string "whatever"
split content of the files *.txt beginning with 1001st line into pieces per 1000 lines
Use "vagrant-ssh" as the config file and ssh into "default" host
search in all the regular/normal files of the current folder for the word "word" and display the matched file name
Delete files in /var/tmp/stuff and below that have not been modified in over 90 days
using exec in find command to dispaly the searched files
Find all *.py files under current directory
Find all top-level files in the current folder but ones with name like '*Music*' to the 'dest/' folder.
Get the number of regular files in the directory given as the bash script argument $1
Page through the contents of file 'file_name', positioning the view at the first occurrence of regular expression 'regex'.
find files with pattern` '*.h' and print comparison between file and /tmp/master directory
Delete all files in the /myDir directory tree that were last modfied 7 days ago
Find all files that are set group ID to 10
Perform a dry run replacing "special" with "regular" in all file names in the current directory
Check if the directory tree whose name is given as variable $somedir contains no regular files
Wrap each line in "file" to fit in 80 characters and count the number of lines
List the directory contents of the current working directory
View contents of files matching "/usr/share/doc/mysql-server-5.0/changelog*.gz" in "less"
Display the host's ECDSA fingerprint using the sha256 hasing algorithm.
display all regular/normal files in current folder
Find the directory with least modification time under current directory
Delete files in /var/tmp/stuff and below that have not been modified in over 90 days
Find directories in the current directory tree that were modified within the last 24 hours and move them to /path/to/target-dir
Write "Australia/Adelaide" to standard output and to "/etc/timezone"
create a compressed archive "filename.tar.gz" with verbose output
Search the current directory tree for files named "accepted_hits.bam"
Find all files under current directory that were modified in the last 24 hours and also include the files that were modified in less than 1 day ago
display all the regular/normal files in current directory
Print the absolute path of "$path"
change the owner and group of all the normal/regular files in the current folder and /home/admin/data/ to admin & admin
Split all files in the directory tree "/dev/shm/split/" into files of at most 1000 lines each and use the filename as the prefix
Find all files/directories with '.o' extension under '/lib/modules' directory tree
Find all files/directories not with the name 'query_to_avoid' under current directory
Print characters 2 through 4 of "abcdefg"
Delete all directories in the TBD directory that were modified more than 1 day ago
find case-insentive example.com file, omit ./beta path
force delete all the files that have been modified in the last 3 days
Create a symbolic link named ".profile" to "git-stuff/home/profile" without dereferencing ".profile"
Find and remove multiple files such as *.mp3 or *.txt under current directory
Delete all files under and below the current directory
find all the non compressed files in the current directory and compress them.
Find all regular files under current directory non-recursively that have execute permission set for all (user, group and other)
Remove all .mpg files in the /home/luser directory tree
display all files in current folder and follow the symbolic links and display the pointed file
split content of the file inputfile except lines started with "^t:" into pieces per 200 lines
ERROR - Probably means -pgoDt (capital D)
Find files in the current directory excluding CVS, SVN, GIT repository files and all binary files.
Save hexadecimal bytes 7 and 8 in binary file "file.moi" to variable "year"
display all directories in current folder
Delete and count files in $DIR_TO_CLEAN that are older than $DAYS_TO_SAVE days
find all files in the current folder with the permission 777 and modify the permissions as 755.
Saves path to the $SCRIPT file in the SCRIPTPATH variable.
Make directories "./es/es_MX.utf8/LC_MESSAGES" as needed and do not error if it exists
Display kernel release name.
split listing of the current directory into pieces per 500 lines named "outputXYZNNN"
show all files in the current directory and all subdirectories
List executable files in the current directory, sort the list and then display the differences between the list and file .gitignore.
Print unique lines of "a" and "b"
change permission of all the files in the entire file system which have the permissions 777.
find files in the current directory having name "filename"
Recursively removes all files and folders named '.svn' in a current folder.
Save host name in variable "thisHOSTNAME"
Find *.o files with permissions 664 in the current directory tree
Move each of the directories in /path/to/folders/* to another directory whose name is constituted by appending .mbox to each directory name and create a directory named Messages in this directory then move all *.emlx files into this directory
Find the string 'joomla' case insensitively in all the php and html files under current directory tree and display the matched lines along with the file names and line numbers
display all the regular files in current folder that belong to the user "tom"
Login to "host" using identity file "id_rsa"
Find root's Ruby files accessed in the last two minutes
Move all 10*jpg files under /path to 2010*jpg files under the same directory
Filters only directories from long file listing of the current directory
change the group of all the files which belong to the user edwarda to pubs
Prints long listing of the current directory, sorted from oldest to newest, with appended indicators.
Enables shell option 'lithist'.
Print and delete all directories named 'work' under '/usr/ports/' directory tree
Save long listing of all files listed in file 'filenames.txt' to 'listing' variable
Print "deb http://ppa.launchpad.net/webupd8team/java/ubuntu precise main" and append to file "/etc/apt/sources.list"
find all the files in the home folder which have been modified today
Save the line number matching "}]" in lines starting with "item_1" to "item_2" in "itemlist.json" to variable "line_to_be_replaced"
Print lines in the sorted contents of "file1" that are not in the sorted contents of "file2"
Make "bar" executable
Gets IP address of 'en0' network interface.
find all files in /usr/bin and run the "file" command on them.
Changes group ownership of '/etc/btsync/[prefered conf name].conf' to 'btsync'.
find all the cpp files in the current folder
display all the directories in the current folder excluding those that are present in the .svn directory tree
Find files matching pattern $2 in the $1 directory recursively and search them for text $3, where $1, $2, $3 are the command line arguments to the Bash script
Find all executable upvoter-* files (following symlinks) under maximum 1 level down the current directory
Find all foo.mp4 files in the current directory tree
display the number of lines in all the files in the current folder
Find all the files which are accessed 50 days back
display the count of all the files in the current folder
search for a word in all the .C files( those having the extension "c") in current directory
Find all the files in the current directory recursively whose permissions are 644 and show the first 10 of them
Find files in the current directory tree whose pathnames contain "sub"
Create a symbolic link to file "/usr/bin/perl" named with escaped characters "/usr/local/bin/perl\r\n"
list regular files under the user's home directory that are over 100KB and have not been accessed in over 30 days.
Find all *.xml.bz2 files under current directory
Search all files called "abc" that reside in the current directory tree for string "xyz"
Replace 'company' with 'newcompany' in all files under current directory and keep backups with .bakup extension
Removes first and last parts of path $path and saves the result in 'finalName' variable.
Find all the files that were modified more than one day ago
List files and directories one level deep in the current directory tree
Copy all files from the current directory tree to /path/to/destination/dir preserving their times, permissions, and ownership
Find all the files in the current directory recursively whose permissions are not 777
find all files in the current folder which start with pro
Find all the files/directories under '/var/adm' directory tree that have not been modified in the last 3 days
List first 5 files named 'something' that are found under current directory
Print the current date in '%H:%M:%S' format followed by the string ': done waiting. both jobs terminated on their own or via timeout; resuming script'
display all files in the current folder
Recursively finds 'pattern' in files from current folder, and prints matched string with number only if matching whole word.
List directories in the current working directory and remove the trailing "/"
find directories in the folder /usr/spool/uucp
Find all directories under $1/.hg and set their SGID bit
search for all perl files in the folder /nas/projects/mgmt/scripts/perl which have been modified yesterday
Set variable 'path' to name of current directory (without the containing directories).
Print amount of space available on the file system containing path to the current working directory.
show all the files in the entire file system which are bigger than 100MB
Search the home directory tree for files matching pattern '*.txt'
Find all the .c files in the current directory tree that contain the string ‘stdlib.h’
create a symbolic link with absolute path "/cygdrive/c/Program Files" to file "/cygdrive/c/ProgramFiles"
Search the files from the current directory tree for "chrome"
Find all files starting from the current directory which are exactly 100MB in size
Search the current directory tree for all image files
as root, find from / all files called "file.txt"
Go to directory /cygdrive/c/Program Files (x86)/$dollarsign using single quotes to escape special characters, including dollar signs
Recursively change the owner and group of "subdir3" to "user3"
Find files in the current directory and below that are newer than /bin/sh
Find all regular .abc files under and below /the/path and rename them prefixing their names with "version_1"
Search the regular files of the current directory tree for string "foo"
Calculate md5 checksum of '/etc/localtime' and save the first space separated part in variable 'checksum'
cope *.mp3 files to /tmp/MusicFiles
extract "phantomjs-1.9.0-linux-x86_64.tar.bz2"
Display human-readable file type description of ascii.txt
Find writable regular files omitting those that contain sites/default/files in their names
Find all files/directories named 'FindCommandExamples.txt' under '/root' directory tree
long list all the files in the curent folder starting with "Tes"
Search the /path directory recursively for TXT files
Set timestamp of all PHP files in current directory to date specified.
create directories a b c d e
Find all files files under the current directory except *.txt
Find all directories starting from YOUR_STARTING_DIRECTORY that contain the string "99966" in their names
Save absolute path of "$path" whose parents exist to variable "abspath"
display all the files in the folder /home which do not belong to the group test
Display all lines containing UTRACE in the current kernel's compile-time config file.
Set permissions of all files under "/opt/lampp/htdocs" to 644
Print the average round trip time of 5 pings to "google.com" from OSX
Search the current directory tree for .VER files
find all the files in the directory which is pointed by $1 variable ending with the name held in the variable $2 or having the extension of value saved in the argument $2.
Rename all files in current directory whose name starts with 'F0000', trimming a zero from any sequence of four zeroes in the name.
Find all regular files with '.txt' extension excluding 'README.txt' files under current directory tree
Find all files/directories under minimum 2 level down the current directory and set their permission to 700
Search for case-insensitive "string" in "log.tar.gz"
Print the minimum transmission time of 10 ping requests to "google.com" from cygwin
Add execute permission to "ComputeDate", "col", and "printdirections" for all users
Search the entire file hierarchy for files named zsh that exist on ext3 file systems and print out detailed information about the file.
display all soft links in current folder
Search the current directory tree for *bash* files printing them on a single line
Find all files throughout the entire file hierarchy with the optional constraints of опция_поиска, значение and/or опция_действия.
find all the files in the current folder and display those that are not present in the list "file.lst"
Search the current directory tree for files and directories whose names do not end in "exe" and "dll"
find all the log files in the file system which are present in the current partition
Make directory "new_dir"
display a long listing of all the xls or csv files in the entire file system
List all the file links
Display 12345 backwards
Find all *.java files under current directory
Copies file 'file.txt' to each top-level directory in the current directory.
Find all directories in the current directory tree
Search for files/directories which are writable by either their owner or their group
List each subdirectory name composing the current working directory
Display differences between /destination/dir/1 and /destination/dir/2 excluding files with names ending with extensions '.foo', '.bar' and '.baz'
View the man page of find
Search the .VER files from the current directory tree for Perl regular expression "Model-Manufacturer:.\n."
Find all .core files on the system starting from / and delete them
Forcefully delete all files in the current directory that begin with spam-
Set timestamp of old_file.dat to specified timestamp.
Go to directory named "~" (not home directory)
search the entire file system for the file "jan92.rpt"
Find recursively all regular files in directory tree b that were changed within the last 5 minutes and copy them to directory c
Search for files/directories which are writable by both their owner and their group
Search the current directory tree for directories lacking execute permissions for user, group, or others
display the contents of all the files in the current folder which start with test (case insensitive search)
Find and print the full pathname of all PDF files in the current directory and its sub-directories.
find all the files in the folder /opt which have been modified exactly 20 days ago
Find all symbolic links containg 'vim' in their names under '/usr/bin' directory tree
Print which files differ between "dir1/" and "dir2/"
Read a line from standard input into variable "password" without echoing the input
Open gcc info manual and select "option index" menu entry.
delete a hard link and create a symbolic link to file named "$link"
Change permissions to 755 for all directories in the current directory tree
Remove all files in the $backup_path directory recursively that were last modified more than 30 days ago
create directory certs
Find and list all regular files
Set permissions to 400 for regular files under the current directory
Print 'file' content, formatting output as 29-symbol wide column, regarding space symbol as a word separator
Print fourth column of space-separated data from text file text.txt.
display all the files in the folder a
Find all files/directories owned by user 'michel' under current directory
create directory /data/db
Look for files in the current directory tree to which the group users have full access
extracts text between pattern1 and pattern2 if and only if the pattern1 is followed by pattern2
search for files with the name "temp" in the /usr folder
Compare the contents of "/bin" and "/usr/bin" line by line
find all normal/regular files in current folder which end with "~" or which begin and end with "#" and and move them to  temp folder
Delete all empty files and directories in the "test" directory tree
Format the time string $timestamp according to the format string "%Y-%m-%d %H:%M:%S" and save the output to variable 'CDATE'
Find all .sql files in the current directory recursively and print their path names separated by zeroes
Move all the .c files from the current directory tree to temp/
Locate all *.txt files in the current directory tree
search for directories in the folder "test" which end have 5 digits as their name
Print argument "$1" "$number" times
Print 'infile' content with line numbers
Decompresses file 'xac.bz2', redirecting output to standard out.
Find all directories in maximum 2 levels down the /tmp/test directory
Remove all regular files from the current directory tree that were modified between August 10th and August 17th
find all ".flac" files starting with "cmn-" and search for files having CJK characters using unicodes
Search the files from the current directory tree for text "documentclass"
Make directory "~/public_html"
replace "exp_to_find_for_replacement" with "exp_to_replace" for all the files in the current folder
find a specfic video file in the current directory
Search for all files newer than file /tmp/t1 but not newer than file /tmp/t2
Find directories that are directly under /home/user/workspace directory (no-subdirectories) and were modified more than 30 days ago and print a message saying that the directory wasn't modified during last 30 days
Find all files/directories that do not belong to any user under '/home' directory tree
Find all Makefile's in the current directory tree and look for line 235 in each of them
List all nfs mount points on the system
find regular files and directories that have been modified in the last seven days
list *.bmp and *.txt files under the /home/user/Desktop directory.
Search for 'mystring' in all *.txt files under current directory
Prints process tree, showing only strings with 'MDSImporte', and chopping output after ${WIDTH} characters.
Search for the regex expaned by the variable $SEARCH in all regular files under $DIR directory tree
Find all files under $d directory and set read-write permission for owner and group and no permission for other for those files
Print a line of 3 '%' characters
find all directories with the name test in a directory
Run an awk program on every TXT file found in the current directory tree
Search for 'some string' in all *.axvw files under current directory and show the matched lines with line numbers
Save "something" into variable "param" in ksh
Search the current directory tree for files named 'Subscription.java'
generates a list of all files beneath the current directory whose filename DOES NOT end in .html, so it matches files like *.txt, *.jpg, and so on.
find all headers file *.h in /nas/projects directory
display all the files in the file system which belong to the group lighttpd
display list of all the hidden directories in the directory "/dir/to/search/"
check if myfile has 0644 permissions
Print unique lines of sorted file "A.txt" compared to sorted file "B.txt"
Search case insensitively for 'foo' in all the files with '.java' extension under current directory tree and show only the file names
list any files modified since /bin/sh was last modified
Print the base name of the current working directory
Force the group stickiness for directories under /var/www
Find files that were modified second last week and archive them
delete all files in the home directory which ahve the name core in them
Prints server name from SOA record for domain yahoo.com
print lines from last match of ^Statistics until end of file
find all files in the current directory do not display the files which are not readable
Delimit standard input with ":" and display as a table
Print command line of process with pid 17709
Find all $tofind* files/directories under $parentdir
Connect to port 2222 of example.com as ssh user "user", and copy local file "/absolute_path/source-folder/some-file" to remote directory "/absolute_path/destination-folder"
Find all files starting from the current directory which are smaller than 100MB
Find all files that have the SUID bit set
Rename all directories under current directory by replacing all occurrences of 'Foo' (case insensitive) with 'Bar' in their names
Write "error" to standard output
find all the php files in current folder and search for multiple patterns in these files
find all the swap files (files ending with ~) in the current folder and delete them
Remount "/dev/block/mtdblock3" on "/system" with read and write permission
List all files in entire file system that belong to the user wnj or modified later than the ttt file
find all text files in current folder and trim the extra spaces in all lines in these files ( MAC version )
Create the directory '.npm-packages' in the user's home directory($HOME)
Display differences between files dir1.txt and dir2.txt.
Find all files/directories which have been modified from the start of the day in directories/files taken from the glob pattern '/tmp/test/*'
Serach for all the files starting with grep in man pages
Open all .c files in the current directory tree in the vim editor
find all the directories in the current folder which have been modified in 24 hours and move them to the folder  /path/to/target-dir
Remove all *~ files under current directory with confirmation prompt
Copy *.mp3 files to /tmp/MusicFiles
Counts lines in file $file and prints number only.
Stores system load average number in the 'proc_load_average' variable.
find all directories in the current folder and do not search in sub directories
change the ownership of all regular/normal files in the current directory
prints a number stored among text in $filename
Find all files/directories with space in their names under  /tmp/ directory and rename them by replacing all spaces with _
Save the directory of the full path to the current script in variable "dir"
find all the files which end with ".deb" and display their base name (strip the extension)
Find all files/directories under current directory tree excluding files/directories with name 'query_to_avoid'
Hunting down files with at least one banana
Find all the SGID files in the current directory tree
Find writable regular files in the current directory
Set 644 permission to all regular files under /path
Change owner to "$FUID" and group to "$FGID" of "$FILE2"
search for the word bananas in the all the regular/normal files in the entire file system
dispaly a long listig of all the files in the current folder which are bigger than 100KB
display all the php files in the current folder which do not have the permission 644
Find files/directories named 'articles.jpg' under current directory tree and change their permission to 644
Find all files/directories with space in their names under  /tmp/ directory and rename them by replacing all spaces with _
find all the files in current folder ending with "ini" and search for a word in all these files
Find all files/directories under /myfiles that were modified 2 days ago
display all files in the current folder along with their last access timestamps
Counts all lines in $i file.
Saves folder path where target of symbolic link $file file is located in 'base' variable.
Find all 400 permission files under /data directory and print 'Modifying ' appended with file path for each of them
Remove all files named "filename" from the current directory tree, ignoring directory "FOLDER1"
find all txt files under the current folder except ./directory folder
Change ownership of "/vol" to the current user
Find files in entire file system with at least 644 permissions
Set environment variables using assignments are listed in '.env' file and run 'rails' command with defined environment
Copies file 'fileName.txt' to each of directories listed in the 'allFolders.txt' list.
List the entire cron job list of user "apache".
print top 10 largest files and directories
Counts all files in a current folder and subfolders.
Remove all \*~ files under dir
Receive input and print it to terminal preceeding with line number
Remove all a.out, *.o, and core files under the current directory
Print the files in the current directory as a list of comma separated values
Print the file sizes along with their paths for all *.txt (case insensitive) files/directories under current directory tree
Find all the files in the current directory with “linkin park” in their names
Find files matching `.ssh*' and append their anmes to file `ssh-stuff'
delete all the mp3 files in the current folder.
find all the files which have been changed after the modification of a file.
Split the contents of all ".txt" excluding the first 1000 lines into files of at most 1000 lines each
Find all file paths under current directory, perform a reverse numerical sort and show first 10 file paths with their status change time
Find files and directories modified in last 24 hours
delete all the files in the current folder
Find all files/directories that start with 'readme' (case insensitive) in their names under '/usr/share/doc' directory tree
Copy directory tree preserving UID and GID and leaving user files alone
Recursively set all permissions under "/directory" to 755
find all the files in the current directory whose size is equal to exactly 126MB.
Print the last 10 commands in history
Find all files/directories under current directory in maximum 3 levels deep
find all the "jpg" file in a folder.
Remove all .txt files in and below the current directory
Create 5 empty .txt files
Search for files in your home directory which have been modified in the last twenty-four hours
List regular files in current directory with read, write and execute permission for all users and also show the permissions
Removes all empty folders under path '/foo/bar' and the path itself.
List all files with their modification time in entire file system that are newer than the file $newerthan and older than the file $olderthan in regards of modification time and sort them according to file modification time
Run command 'su whoami' on host 'remotehost'
Show logged in users with idle time of each one
Add "prefix" to every non-blank line in "file.txt"
Delete all hidden files/directories under $some_directory
Find *.js UTF-8 files with BOM and correct them
Create a symbolic link named "temp" to "newtarget"
Create a symolic link in "/usr/local/bin/" to "/Applications/Sublime\ Text\ 2.app/Contents/SharedSupport/bin/subl"
Set up a local SSH tunnel from port 80 to port 3000
Find all empty directories under /tmp
find all the files in the current folder which have been modified in the 10 minutes ago
Build an "svn hotcopy" command for each subdirectory of /usr/local/svn/repos/
Set variable OS to the name of the operating system, ie. "Linux"
Search the XML files from directories /res/values-en-rUS and /res/xml for string "hovering_msg"
display the count of number of files in the current folder
Find all *1234.56789* files/directories under current directory
Print 10 space separated "x"s with at most 4 per line
Run command specified by $line, replace space (' ') with newline and save the output to variable 'arr'
find all of the executable files on your computer
Find all *.txt (case insensitive) files of user root under / directory and show a few lines of output from the beginning
Find all *-* files under current directory
Search for files/directories with the case insensitive pattern anaconda* in /var/log
find all directories that names are 'project.images'
Print which files differ in "PATH1/" and "PATH2/" recursively excluding any files that match any pattern in "file1"
Print fourth column of data from text file text.txt where columns separated by one or more whitespaces.
List all regular files in the current directory tree that were modified less than 60 minutes ago
Print the 5th space separated fields in "file" as a comma separated list
Find all files in the /home/ directory tree that were last modified less than 7 days ago
Display a long listing of all files/directories named 'file' under current directory tree
display files in current folder ending with "pdf" or "PDF"
Sort a file 'file' preserving only unique lines and change the file in-place
Run perl -V (displays informations about perl's setup) in an empty environment.
Print a sorted list of the extensions of the regular files from the current directory tree matching pattern '*.???'
change user and group of the file /usr/bin/aws to user amzadm and group root
Print the entire saved command history
Find files and directories in the /tmp/ tree that contain spaces in their names and replace those spaces with underscores
Display list of files ending with '.txt' in the current folder to the terminal twice and output it to the text file "txtlist.txt"
Find files with 002 permission in entire file system and print them with the string 'has world write permissions' printed at last
Remove all regular files from the current directory tree except textfile.txt, backup.tar.gz, script.php, database.sql, info.txt
Find all *.dbf files/directories in entire file system and print their sorted and unique parent directory paths
Search for "www.athabasca" in all files under current directory
Scan every file in /etc for IPV4 addresses while trying to elminate false positives.
search in the current folder for all the regular/normal file with the name "test"
Search directory tree $DIR for *.txt files
Find all regular files under and below /home/admin/public_html/, and change their permissions to 644
find all the files in the current folder which have been changed in the last 60 minutes
Find directories starting from /TBD that were modified more than 1 day ago
Print a single line of numbers from "001" to "010"
Find all regular files in the current directory tree ignoring GIT and SVN directories
search for the folder .dummy in the entire directory structure of "test folder" and remove it.
Find all *.tex files/directories in maximum 2 levels down the current directory
Change permissions to 500 for all regular files under and below the current directory
Look for any files that have not been modified in the last two days
Search for 'It took' in all $srch1* (case insensitive) files under current directory and run the sed script 'N;s/(.*)\n(.*)/\2 \1/' on the output
Change to folder where the oracle binary is.
Recursively print all files and directories in the directory tree "$absolute/path/of/your/dir"
search for the directory "config" in the current folder and change directory to the first instance of the search
Search the current directory tree for files whose names contain "bills"
Replace each newline in input "1\n2\n3\n4\n5" with a comma
Find all .zip files in the current directory tree
Search the current directory tree for files executable by at least someone
Delete all files under $DESTINATION directory tree that were modified more than 7 days ago
The file "files_to_find.txt" contains a list of filenames, create each file or update its timestamp if it exists.
List all regular files in and below the home directory that were modified more than 5 years ago
Recursively copy local file/directory "/copy/from/path" to remote location "/copy/to/path" on host "server", connecting as ssh user "user" and using identity key file "/path/to/your/.pemkey" instead of the default in ~/.ssh/
Find all files/directories under /home/foo/public_html/ that were modified less than 60 minutes ago
List all files 2 levels deep in the current directory tree
Replace each new line in "INPUT.txt" with ":"
find all the files in the folder /home which are exactly of size 10MB
Find all files except files with '.gz' extension in the current directory non-recursively and compress them with gzip
Search "mygzfile.gz" for "string to be searched"
Recursively finds and compresses all files in a current folder.
Print the path of all the network mounts
Search the regular files of the current directory tree for string "whatever"
Recursively changes group ownership of everything within '.git' to 'git'.
Search /dev/shm and /tmp for regular files not changed in two weeks
Find all directories under current directory
Add a line number to every line in "infile"
Find all files/directories with 664 permission under current directory tree
display all normal/regular files in current  folder
Find all *.xml files under current directory
display all files in current folder which have not been modified in the last 60 minutes
Search the "test1" directory recursively for regular files named "textfile.txt"
Search for all files and directories named foo, FOO, or any other combination of uppercase and lowercase characters beneath the current directory.
List all files/directories under /data1/Marcel which are greater than 524288 bytes and were modified or accessed more than 1 year ago
Save the md5 sum of $twofish to variable 'twofish'
display the names without extensions of all the data files in current folder which have not been changed in the last 60 mins
Saves invoked command 'check_script_call=$(history |tail -1|grep myscript.sh )' in variable 'check_script_call', preceeding by its number in history.
search for all the files which have not been modified in the last 6 months (180 days) in current folder and display the total disk usage of them in MB
create symbolic links in current directory to all files located in directory "/original" and have filename extension ".processname"
Read the first 10 characters from standard input in an interactive shell into variable "VAR"
Search the current directory recursively for files containing "needle text"
Find all regular files in the current directory tree and count them
Search the given $directory for files with permissions stored in $permissions
Find recursively all files changed within the last 5 minutes starting from directory b
Remove files whose names start with `Foo'
Read a line from standard input into variable "prompt" with the prompt "Are you sure you want to continue? <y/N> "
split file t.txt into pieces per 30000000 lines named as "t.NN" with numeric suffix
Recursively change the owner group of "/var/www" of to "www-data"
Counts all top-level files in a current folder.
Find all broken symlinks in maximum 1 level down the $path directory
Gets MAC address of p2p0 network interface.
search for the directory testdir in the folder /home
Create a symbolic link in the current directory to "../config/init"
create a symbolic link in current directory named "my_db" to file "/media/public/xampp/mysql/data/my_db"
search for the word "damian" in all the regular/normal files in the /etc folder and display only the matched file name
display the count of number html files in the current folder
Find all `doc.txt' files in the current directory tree printing "found" for each of them
Find all files/directories under $1 which have at least read permission for their owner and set read permission for group for these files/directories
Create compressed archive of all the files in the current directory tree that have been modified in the last 7 days
Write output of "ls -lR /" to standard output and append to "output.file"
Change permission to 000 of all directories named '.texturedata' under '/path/to/look/in/' directory tree
Count line numbers on files and record each count along with individual file name.
Remove all CVS directories in the current directory tree
Find files readable only by the group
Removes the last 2 lines from a file
Make directory "~/practice"
find all the files in the current folder which are modified after /bin/sh.
find all the files and folder that were created in 2012 on Friday of every month
Compare "$source_file" and "$dest_file" line by line
display a long listing of all images with the name "articles" in the current folder ( print0 is used to preserve file names with new line in their name )
Saves logged in users names in 'tmp' variable.
Find all *.gz files in the current directory and decompress them using gunzip
Go back to last directory.
Find files under [directory] that match 'pattern_to_INCLUDE' in their names without descending into directories that match 'pattern_to_exclude' and 'another_pattern_to_exclude', then search for 'pattern' in those files
Page through the contents of yourFile, adding a $ at the end of each line and replacing tab characters by ^I.
find all the files that have been modified exactly 24 hours ago
Find file1 in the level 1 directories and above
Recursively finds all files with whole word "pattern" in a current folder, and precedes found string with its number in file.
find all the files with the name "datainame" in the file system which are bigger than 50MB
display all files in the current folder which end with extension "myfile" followed by one digit or two digits
List the files in the /etc directory tree containing text "old1.old2.co.com"
Copies file 'file1' to each of directories 'dir1', 'dir2', 'dir3'.
Count the number of unique 3 to 6 character file extensions are in the current directory tree
Find all files/directories named 'foo' under current directory tree without descending into directories named 'foo'
Find all files matching "abc*" in the current directory and append "\tok"
Find files that don’t have 644 permissions
Delete files in /var/tmp/stuff and below that have not been modified in over 90 days
Print TXT record with server`s hostname from nameserver 'server'
Print mount point of the file system containing $path.
Search case insensitively for 'facebook', 'xing', 'linkedin', ''googleplus' in file 'access-log.txt', extract the matched part, sort them and print them by sorting them in asending order of the number of repeated lines
Trim leading and trailing whitespace from variable 'var'.
list *.pdf, *.bmp and *.txt files under the /home/user/Desktop directory.
Search for all the directories named 'm?' under current directory tree, add the extension ".mbox" to all, create a 'Messages' directories inside them and move all files with .emlx extension to 'Messages' directory
Create a symbolc link named "public_html" to "current/app/webroot" under the current working directory
Change to the directory of the executable "python"
Find all directories under $ROOT_DIR and show the sub-directories of the directories before the directories themselves
Find all *.rb (regular) files under current directory and count their line numbers
Find all files under /path/to/dir that were modified less than 7 days ago and show only first several lines of output
Prints lines count of each *.php file in a current folder and subfolders, and prints total count.
change permissions for directories in the entire file system
Archive "/my/dir" on host "server" as user "user" to the current local directory excluding files ending in ".svn"
Get domain name with 'google' from address $IP
Find all files, folders, symlinks, etc matching pattern "*.php" in the current directory recursively
List all variables (names only) with names containing X.
display all the files in the home folder that have been modified in the last 24 hours
Find writable files in the current directory tree
Remove all files from the current directory tree whose names contain whitespaces
Changes group ownership of 'public' to 'pub'.
Saves listing of a current folder in 'var' variable.
Saves exit statuses of piped commands in a system variable PIPESTATUS='([0]="0" [1]="1" [2]="0")'
Split "$SOURCE_FILE" into files of at most 100 lines each
display all the files in the folder /etc /srv excluding those that are present in the path of ./srv/tftp/pxelinux.cfg* and /etc/mtab
List files larger than 9MB residing in the current directory and below
Convert the contents of 'var1' variable to lowercase
display all the html files in the current folder excluding search in the paths ./foo, ./bar.
Find all directories under path_to_dir directory
find files under the current directory called "foo" or "bar"
find all files which name contain 'foo' and path is not dir1 or dir2
Replace all newlines from standard input except the last with spaces
Find files under current directory that contains the string '/bin/ksh'
Locate files not owned by any user or group
Unzip file "$empty_variable"
Delete empty lines from standard input
Simulate a full login
delete all text files in the home folder after user confirmation
find all the files in the folder /opt which have been accessed exactly 20 days ago
Search directory /path/to/check/ for regular files
Find the largest files in a particular location
Find all regular files that start with stat
List the directory paths of all file.ext files under present working directory
Serach in current directory downwards all files which  have not been modified since last 7 days
Find all files/directories under test directory
Search for a line starting with 'use strict' in all files with '.pl' extension under current directory tree and show the unmatched files only
Print a welcome message with the current user's user name
Search the current directory tree for regular files whose names end in "log"
Run rsync with options specified by variable OPTS, copying directory(ies) specified by variable FIND, and to destination specified by variable BACKUPDIR.
Find all php files that belong to user 'takuya' and have been modified in the last 1 day
Recursively change the user and group of all files in "/var/log/jenkins" to "root"
Search for all *.conf files in entire file system
search for multiple files in the current folder
find and image in current folder (case insensitive search)
Find all files/directories under current directory with a Depth-First search
Counts total lines in all *.php files in the current directory recursively
Log in as "middleuser" with key "./middle_id.pem" and forward port 22 on host "middle.example.org" to port 2222 on localhost
Move all files including hidden files and excluding ".." in "/path/subfolder/" to "/path/"
recursively change owner of the directory /usr/local/lib/node_modules/ to the current user
Find all *.foo files under current directory and print their contents
find all the files in the current directory that have the extension "bar" and donot search in the subdirecotries directories.
find all files with pattern` '*.mp3'
Search the current directory tree for files that are less than 50kb
Update timestamps of all files (not directories) under current directory. Also works on older Unix systems with obsolete 'find' command.
Set permissions to 700 for directories under media/
create directory /tmp/new
Search directory tree `MyApp.app' for directories whose name is 'Headers' and delete them
Find and clear UTF-8 files with BOM
Changes the group of defined file.
rename all the text files  in the current folder to html files
Delete all .svn files/directories under current directory
Print numbers from 1 to 10 using up to 4 processes
Extracts single file 'filename' from bzip2-compressed tarball archive.tbz.
Print history with the first field removed
Remove duplicate lines in "file_name" and print the output on stdout
Search for case insensitive pattern 'search for me' in all files that match the name pattern '*.[!r]*' under current directory tree
find all the cpp files in the current folder and move them to another folder
Print the character representations of 65 to 90
Set permissions of command "node" to 755
Find all *.py files under and below the current directory and search them for "xrange"
find all files in the current folder that are not modified in the last 10 minutes
Find all regular files starting from level 3 of directory tree ~/container and move them one level up
Change directory to the output of command '~/marker.sh go "$@"'
Find all files in the current directory tree whose names end with the suffix ".keep.$1", where $1 is the first command line argument, and remove that suffix
find all the files that are modified exactly one day ago
List in detail the regular files from the /somelocation/log_output directory tree that were last changed more than 40 days ago
display files ending with ".ext" in current folder which are present in the file "foo"
Finds recursively all files not having extension .o in '/path/' that contain 'pattern', and prints matched strings with string number and file name.
find all the word press configuration php files in the folder /var/www
Recursively rename all files under /your/target/path replacing 'special' with 'regular' - all file/diretory names may not include spaces, and directory names containing such files may not contain the word 'special' in their name.
Search all *.c files from the current directory tree for "hogehoge"
Print all files containing "word1" and "word2" in the current directory tree
display all the text files in the current folder except readme files
Print the output of history without line numbers
Print the sorted unique column of usernames of users who are currently logged in
Print which files differ in "dir_one" and "dir_two" recursively and sort the output
list all running jobs
Save the canonical path of "/usr/bin/java" with "/bin/java" removed to variable "JAVA_HOME"
find all the regular/normal files in the folder "myfiles" which have the permission 647.
Save the system load average for the past 1 minute of the currently logged in user to variable 'proc_load_average'
Find all broken symlinks under current directory
find all the video files which are bigger than 10 MB which have not been modified in the last 60 days but have been changed in the last 100 days in /tmp and /var/tmp folder home folders
Find all files under ./lib/app and redirect their sorted list to myFile
Find files that were modified more than 7 days ago and archive them
Save small letter short day name of the week to variable 'DayOfWeek'
Search the files in the current directory tree for lines containing string "vds admin"
Display a binary file as a sequence of hex codes
List all leaf directories of the current directory tree
Mount "nifs" filesystem "/dev/mapper/myldm" on "/mnt" as read only
List each file or directory in the current directory prefixed by its human readable filesize and sorted from largest to smallest
Split "mybigfile.txt" into files of at most 200000 lines each
List all files in the current directory tree that were modified 60 minutes ago
Search the /root directory recursively for the regular file named "myfile"
Remove duplicate lines in "file_name" and print the output on stdout
Find all files under $dir directory
Prints a random number between 2000 and 65000
Print the directory of the full path to the current script
Recursively search for all directories containing "foo" (case insensitive) under the current directory, renaming them to replace "foo" (case insensitive) with "Bar"
Find all files/directories under $dir directory tree which have been modified in the last 3 days
change the permissions of mp3 files in the folder /var/ftp/mp3 to 644
Recursively finds all *.txt files and prints strings with "text_pattern" ignoring text distincts.
Page through the contents of BIG_FILE.txt, letting the user move around with the arrow keys, the Q key quits.
Forcibly removes ${temp} file.
Print numbers from 1 to 5 without separating spaces
Find all duplicate ".jar" files in the current directory tree
Search  all directory from /usr downwards for files whose inode number is 1234 and print them .
Find files that were modified less than 7 days ago and archive them
Calculate and show md5 sums for every files under current directory tree
Find all directories that have been accessed $FTIME days ago under current directory tree
display all the files having the word "searched phrasse" in their name in the current folder excluding those from the paths "/tmp/" and "./var/log"
search for all the c files in the current folder
Open all .java files in the current directory tree in the vim editor
Handles shell option 'nullglob' according with flags stored in $NGV variable.
List file contents of compressed file $i
View the bash manpage, starting with the view positioned at the first occurrence of the expression "BASH_SOURCE".
Create symbolic link "$1/link" to the absolute path of "$2"
Find all files called wp-config.php in the /var/www directory and below
Print the file names along with their sizes under current directory tree
Print unique lines of "second-file-sorted.txt" compared to "first-file-sorted.txt"
find all the symbolic links in the current folder
Request NS record for com. domain, receiving only authoritative answers
Print numbers from 1 to 10 with 2 values per line
Extract, sort and print only group names from /etc/group.
Print a count of each unique line from standard input
Get the list of regular files in the current directory
Execute md5sum command on files found by the find command
Find all broken symlinks under current directory
split file abc.txt into pieces per 1500000000 bytes named as "abc.NNN"
display all the files in the current folder which contains form feed (^L) and does not contain NULL
Print a list of regular files from directory tree sort_test/ sorted with LC_COLLATE=en_US.utf8
Extract the contents of "Input.txt.gz", list the unique first comma separated field prefixed by the number of occurrences
list in long format all files from / whose filename ends in "jbd", not descending into directories that are not readable while searching, and not descending into directories on other filesystems
Find all 'test' directories in the current directory tree
Compress all directories found in directory tree $LOGDIR that have been modified within the last 24 hours
Print 'echo 'hello, world'
List all files under the current working directory last modified less than a day ago
List the largest file prefixed by its size in bytes of all files under the current directory
Do a dry run of renaming file extension '.andnav' to '.tile' for all files/directories under current directory tree
Replace "dummyvalue" with the system IP address in "filename"
Find all files of the user with UID=1000
Print each line in "file1.txt" that is not found in "file2.txt"
find all files under the current directory, filtering the output through a regular expression to find any lines that contain the word foo or bar.
display all the users in the current folder that belong to the group "sunk"
Delete all files and directories
Removes files ~/.android/adbkey and ~/.android/adbkey.pub without prompting.
Print file name without the last two extensions assuming the file name doesn't contain any other dots.
Recursively delete all files/folders named '.svn' in a current folder.
Print a count of all unique entries in "ips.txt" with the most frequent results at the top
Search the current directory tree for all files except SVN ones
Search for first match of the case insensitive regex 're' in all *.coffee files under current directory and print the file paths along with the matches
Time stamp every ping request to 8.8.8.8 in Unix epoch format
Print help on 'cat' command usage
Search only for directories
split file "$file into pieces named with 5 character suffix
Add execute permission to all files ending in ".sh"
Update the archive '2009.tar' with the files from the data/ directory tree that match pattern 'filepattern-*2009*'
Remove trailing white spaces from all *.rb, *.html, *.js, *.coffee, *.css, *.scss, *.erb, *.yml, *.ru files under current directory
Print numbers from 1 to 5 without separating spaces and without a newline
Set 644 permission to all regular files under current directory
Create symbolic links in the current directory for all files excluding "CONFIGFILE" located in "/your/project"
Locate all files in the current directory and below that have "testfile" in their names regardless of the case
Force delete all the regular/normal files in the current folder and do not search in the sub folders
Search the current directory tree for files matching sed regular expression '.*myfile[0-9]\{1,2\}'
Delete all files in the /TBD directory that were modified more than 1 day ago
Find files matching an exact set of permissions
Backup all PHP files under the current directory tree
Print summary of files present only in dir1.
Save first IP address of domain 'google.com' in 'address' variable
Find all files/directories startring with 'onlyme' in their names under current directory without going into sub-directories
Extract files from archive 'archive.tar'
recursively change owner and group of the directory  /opt/antoniod/ to user and group antoniod
Display the first 32 bytes in "foo" as printable characters with 16 characters per line
find all the files in the current directory that have the word "bash" in their name
Change the owner of "/var/www/html/mysite/tmp_file_upload/" to "nobody"
find all files in the folder "myfiles" which have not been accessed in the last 30*24 hours
Show the last 10 .conf files found by `find' in the /etc directory and 1 level below
display long listing of all files in the current directory whose size is 24 or 25 bytes.
Find all the Sticky Bit set files whose permission are 551
find all files in the file system having the name "filename"
Print the list of files in the current directory tree skipping SVN files
Sort "some_data" by the first and second ";" delimited entries, outputing unique lines and stabilizing the sort
display all the files in the folder "/Users/Me/Desktop" which have read permission to them
Print current date as epoch seconds
Search the current directory tree for all files except SVN ones
Archive "/path/to/files" to "/path" on host "user@targethost" with elevated permission on the remote host
List the full path of each directory under the current working directory
Find all directories under $x directory and set read-write-execute permission for owner and group and no permission for other for those directories
Find all regular files under and below /home/user/demo/
copy all the mp3 files from current folder to another folder
Copy permissions from "version2/somefile" to "version1/somefile"
Find all files/directories greater than 100MB and print their list along with their size in /root/big.txt file
Find all *.txt files/directories under current directory
Add a date time stamp to every line of output in "ping google.com"
find all files in current folder which are bigger than 270MB and less than 300MB
Save number of strings with $expression pattern in 'foo.txt' to 'big_lines' variable.
List all files/directories under current directory
Find files which are more than 2 days old under  ${userdir}/${i}/incoming directory and remove them
Delete empty directories
Find all "G*.html" files modified more than 7 days ago in the current directory tree
search for all the perl files in the folder /nas/projects/mgmt/scripts/perl which have been modified 8-10 days ago.
Find all directories in the current one recursively which have the write bit set for "other"
Remove files from the file system that are owned by nobody
Display all the files/directories under '/home/bozo/projects' directory tree that have been modified within the last day
rename all the png files to jpg files in the current fodler
Find all executable symlinks or upvoter-* files under maximum 1 level down the {} directory
Create symlinks to all  /home/folder1/*.txt files and 'folder1_' directory with the same name in a target directory named '+'
Recursively changes group ownership of everything within a current folder and having group 'X_GNAME' to 'Y_GNAME'.
Recursively find the latest modified file in the current directory and print the modification time and filename
Find all symbolic links under '/proc/$pid/fd' directory tree with name pattern '$save_path/sess_\*' and update their timestamps
display all hidden files in the current folder
find all regex  ".*/[a-f0-9\-]\{36\}\.jpg" files
find all the text files in the entire filesystem which belong to the user root and display the ten files.
For each line in 'file', print "result = " followed by the line backwards.
Search the current directory tree for files modified less than 5 days ago
create a hard link as directory named "new_hard_link" to the directory "existing_dir" as root
Find all executable files under the current directory and below
Searches through the /usr/local directory for files that end with the extension .html. When these files are found, their permission is changed to mode 644 (rw-r--r--).
Find files on the system bigger than 50MB but smaller than 100MB
Find all files/directories under /myfiles that are 2560 bytes in size
Find all *.ogg (case insensitive) files/directories under your home directory that are not greater than 20MB in size
display all the files in the file system which belong to the user "wnj" or which are modified after the file "ttt"
Search the /tmp/ directory recursively for files matching regular expression ".*file[0-9]+$"
Archive "blanktest/" to "test/" deleting any files in the destination not found in the source
display all files in the folder /usr and its sub directory(do not search beyond the sub directory)
Change the ownership of "/home/bob" to "root"
Find files matching pattern $2 in the $1 directory recursively and search them for text $3, where $1, $2, $3 are the command line arguments to the Bash script
Print the base name of the current working directory
Find all files/directories that are owned by user 'wnj' and are newer than 'ttt' by modification time in the entire filesystem
Check if 'nullglob' shell option is enabled, and if so, saves its status in 'is_nullglob' variable.
Print pathname of a file that is connected to the standard output of the command "yes"
Find all regular files under $dir directory tree with name pattern provided by the first positional parameter and show only the $num'th line from each of those files
Finds IP address of 'en0' network interface.
Find movies over a gigabyte in size
Find directories modified in last 7 days
Create symbolic links in the current directory for all files excluding "CONFIGFILE" located under "/your/project" directory tree
Unhide all hidden files in the current directory
Print a time stamp for each successful ping to "host"
Search the entire file system for .jpg files.
List all files in the current directory tree that were last modified in March 2007
Archive showing progress all files in "/media/2TB\ Data/data/music/" to "/media/wd/network_sync/music/" excluding files matching "*.VOB", "*.avi", "*.mkv", "*.ts", "*.mpg", "*.iso", "*ar", "*.vob", "*.BUP", "*.cdi", "*.ISO", "*.shn", "*.MPG", "*.AVI", "*.DAT", "*.img", "*.nrg", "*.cdr", "*.bin", "*.MOV", "*.goutputs*", "*.flv", "*.mov", "*.m2ts", "*.cdg", "*.IFO", "*.asf", and "*.ite"
Resolve any symlinks in working directory, and go to resulting pathname.
Show files in maximum 1 level down the current directory that were modified less than 1 day ago from today
find all the files in the current folder which have execute permission to all the users
Extract data from HTML table in "mycode.html"
Search through the /usr directory for all files that begin with the letters Chapter, followed by anything else.
find all the files in the current folder which are smaller than 9MB
Search the current directory, except the subdirectory tree ".svn", for files whose name is "foo.cpp"
show all .cpp, .c, .h, .hpp files in the folder ~/src
Request IP address for each domain name received on the command input
change the permissions of all the regular/normal files in the current folder
delete all the regular files in the temp folder which have not been modified in the last 24 hours
Find .txt files on the system whose size is greater than 12000 bytes
find the path of a specfic video file in the current directory
Print the list of files in the current directory tree skipping SVN files
Saves list of logged in users in system together with 'USER' header in the 'a' variable.
find all files in the current folder which have only the write permission for the others
Remove all white space from "infile.txt" and wrap each line to 80 characters
Locate symbolic links in /usr and below
Gets string with MAC addess of network interface eth0.
Find out all files owned by user vivek
Search for 'mystring' in all *.txt files under current directory
find all directories in the current directory
List files under current directory according to their size in descending order
Archive "myfile" to "/foo/bar/" and create directory "/foo/bar/" if "/foo/" exists
Prints Kb size of all top-level files and folders in a current folder in descending order in human readable format.
Search the file system for regular files whose names are shorter than 25 characters
Find every file/directory under the directory /home owned by the user joe
Search all regular files in the current directory tree for "string"
Save number of lines in '/some/big/file' to 'LINES' variable
Print the list of files in the current directory tree ignoring .svn, .git, and other hidden directories
find all the files ending with jpg in current folder and display their count ( case insensitive )
Create tar archive "foo.tar" and copy all files from directory tree /tmp/a1 to it
Add "new." to the beginning of the name of "original.filename", renaming it to "new.original.filename".
Search for file "file" between level 2 and 3 of the directory tree
Look for any files that were modified 2-5 days ago
Left justify number each non-blank line in "log.txt" as input to "sed ..."
Find files/directories that are bigger than 10000 KB in size uder '/usr/local' directory tree
Connect to host 'hostname' as user 'username' by forcing host key confirmation
Filnd all files in root directory with 777 permission and change permision 644  with chmod commad .
Change the group of "myfile" to "friends"
replace the word foo to bar in the current folder in all the regular/normal files which have execute permission  (does not update the file)
Find users whose names begin with "ab" and ends with "1"
Recursively search for everything under the current directory, displaying human-readable file type description for each entry.
Find files not matching the posix extended regex '.+\-[0-9]{2,4}x[0-9]{2,4}\.jpg' in their paths under Folder1 and copy them to Folder2
Removes '/var/lib/mongodb/mongod.lock' in 'sudo' mode.
Connect to host "$USER_AT_HOST" in master mode in the background without executing any commands and set the ControlPath to "$SSHSOCKET"
Copies file 'index.html' to each top-level directory in the current directory beginning with 'd'.
Recursively change owner of all files in "folder" to "user_name"
Locate all *.mov files in the current directory tree
Count the number of lines in each .java file in the current directory tree
Print the file content of command "f"
Find all files/directories under /home/baumerf/public_html/ that were modified less than 60 minutes ago excluding error_log files/directories
Save a list of all the files/directories under current directory tree to a file named 'foo'
Print a list of all the files in entire file system whose inode has been modified no later than one minute ago
Find all files in $dir directory without going into sub-directories and print only their names preceded by 3 spaces
display all the files in the kat folder
List file information of the full path of command "c++"
Replace all occurrence of "subdomainA.example.com" with "subdomainB.example.com" in all files under /home/www and below
Find all regular files in .git and replace every occurrences of 'subdomainB.example.com'  with 'subdomainA.example.com' in those files
Print the full path of command "cc"
Search for 'pattern' in file 'file' and print the matched lines by separating them with spaces instead of newlines
use find command to search for .png and .jpg files
Perform case insensitive search for *.gif files/directories under downloads directory
Find all regular files named 'Chapter1' under current directory tree
Print all business days in the current month without column titles
Search the .c files residing in the Lib/ directory tree for lines beginning with "PyErr"
Copy all files named 'script.sh' in directory 'olddir' to directory 'newdir'
same as above example with -exec , in this example with -OK it should ask for confirmation before executing the rm command . that is called user intractive command
Search for command "tail" in the maps of the process with PID 2671
find all files without 777 permision
Mount partition with label "WHITE" on "/mnt/WHITE" with read and write permission and have it accessible by user and group "test"
List the files/directories under /PATH_to_SEARCH, do a numeric sort and print the ones with different inode numbers
Search for 'string-to-find' in all HTML files under current directory tree and show the matched lines with their filenames
Print all distinct characters in input "He likes cats, really?"
find all the swap files (files ending with ~) in the current folder and delete them
Find directories in the current directory recursively that are not "executable" by all
Print a count of files and directories in the current directory tree
Query SRV records for domain '_kerberos._udp.foo.com'
Make directory and parents as needed for the directory name of file "$f"
Lists all directories in '/home/alice/Documents/'.
Compares two listings 'ls' and 'ls *Music*', showing only strings that unique for first listing.
Find all files/directories ignoring *~ files/directories without descending into .snapshot directory with null character as the delimiter
find the file "filename.txt" in the entire file system
Add the .abc suffix to the names of all *.txt regular files in the current directory tree
Reverse the text in $input by taking each 4 characters as each units and save the result in variable 'output'
Remove all vmware-*.log files/directories under current directory
List absolute path of files in the current directory
Find all *.ogg (case insensitive) files/directories under your home directory that are greater than 20MB in size
search for all mp3 files in the folder /home/you which have been accessed exactly 10*24 hours ago
Make directories "/tmp/A", "/tmp/B", "/tmp/C", and "/tmp/ dir with spaces"
Change owner to "$1" and group to "httpd" of ".htaccess"
Set permissions to 755 for every subdirectory of the current directory
Remove symbolic links and get absolute path of "${the_stuff_you_test}" and save to variable "DIR_PATH"
Delete all .svn files/directories under current directory
find list of all files with file permission , link , owner , group , reation time , size , file name
list *.pdf files under the /home/user/Desktop directory.
search for the word "foo" in all the regular/normal files in the directory "/path/to/dir"
Execute /usr/bin/find with $* arguments
find all the mp3 files in the file system
Print the names of the subdirectories of /usr/local/svn/repos/ prepending "/usr/local/backup" to them
Print "$line" in hexadecimal 2-byte units
display all the regular/normal files in current folder
search for all the foo.txt files in the current folder and move them to another location
Append "& Bytes" to the end of every line in "$TEMPFILE" and format the result as a table
create and list filenames in the archive
find all the files in the current directory which have been modified in the last 24 hours
List all *.txt files/directories under current directory ensuring white space safety
Find all files in the current directory tree, except GIT files
Unzip "file.gz" to standard output and execute in bash with arguments "-n wordpress"
Print the last white space separated field of every line in "file.txt" as a ", " separated list
Sets shell option 'nullglob'.
Find all files in /var/www/html/zip/data/*/*/*/*/* that are older than 90 days
Find all files/directories containing the case insensitive string something' in their names under current directory tree
Give all files in the /path/to/base/dir tree read privileges
find all files  that names are 'apt'
Unzip all ".gz" files in the current directory tree to their respective directories
list symbolic links under the directory "$directory" using contents of the $IFS variable between output of each one
Check if $path_in_question is mount point of filesystem
Find all files in the file system with the SUID bit
display all directories in the folder "PROD" and do not search in the sub directories
find all files in the current folder which have been modified after /etc/passwd
Find all files/directories under current directory tree that start with 'R' and end with 'VER' in their names and were modified more than 1 day ago
find all files in current folder having the name pattern "some_pattern" and move them to the folder target_location (GNU VERSION)
Search the current directory recursively for regular files last accessed 2 days ago
Find files/directories named blah (case insensitive) under current directory
Search non-recursively directory tree `MyApp.app' for directories whose name is 'Headers' and delete them in an optimized way
Extract any line in sorted file "A" that does not appear in "B", "C", or "D"
Search for 'foo' in all the java files under 'dir1', 'dir2' and 'dir3' directory tree and print only the names of the matched files
Print the last 10 lines of "great-big-file.log"
Find all files in the /home/myuser directory recursively that are older than 7 days
List all functions defined in the shell
Find all directories in entire file system which are larger than 50KB
Find all files/directories under current directory with null character as the delimiter
Delete all files in the current directory tree whose names end with ~
Print the base name of the current working directory
Display the mimetype of "filename"
Search "whatyousearchfor" in history and print 3 lines before and 4 lines after
Recursively list all files and directories in "coreutils-8.9" with "DIR: " prepending directory names
Find all files/directories named '.todo' under $STORAGEFOLDER directory tree and print the parent directory names
Search for $GROUP at the beginning of each line in /etc/group and print the last colon (':') separated entry with comma replaced with newlines
Show directory sizes in KB and sort to give the largest at the end
display all empty files(files with sisze 0 bytes) in home folder
Find all /home/folder1/*.txt files and create symlinks appending '_CUSTOM_TEXT.txt' in their names
Use 'less' to nicely display control characters from the outupt of 'grep'.
Calculate the md5 sum of all files in the current directory with the filename printed first
Search for 'stuff' in all *,txt files under current directory
Print only strings from file 'file2' that not found in 'file1'
find all the directories in the home folder do not search in sub directories
find all empty files in the current directory ( empty file = size 0 bytes )
Uncomment every entry in current user's cron job list which contains "test.sh"
display list of all the regular/normal files in the home folder which are exactly 6579 bytes
Remove all libEGL* files from the current directory tree
Print the names of the directories from the paths expanded by the glob pattern /path/to/directory/*
create directory es if it is not exist and create direcoty LC_MESSAGES
Search .c and .h files in the current directory tree for "expr"
extract archive stored in $1
Find the files in the current directory that match pattern '*.JUKEBOX.*.txt' and move them to folder ./JUKEBOX
Recursively copy directory "/path/to/data/myappdata" to "user@host:/remote/path/to/data/newdirname"
Make directory "dir" and do not cause an error if it exists
Print "#include" statements found in "file2" that are not in "file1"
list all the sqlite files in the current folder
Find all files under /mnt/naspath directory without descending into .snapshot directory that were modified in last 24 hours with null character as the delimiter
create a tar ball of all pdf files in current folder
Delete all files named 'sample' (case insensitive) under '/home/user/Series' directory tree with superuser privilege
Creates temporary file in a current folder and saves path to it in 'f' variable.
Find all files named 'Makefile' in the /usr/ports directory tree and count the number of lines in them beginning with USE_RC_SUBR
find all the png files in current folder which are present in the pattern list file "search.txt"
Search all .c and .h files in the current directory tree for string "e"
List all functions or variables containing " ()" defined in the shell
Search for files only that end with .php and look for the string $test inside those files
find all log files larger then 100MB  in /home directory and delete them .
Filters only directories from long file listing of a current directory, and prints their names.
Calculate the md5 sum of "a"
Find all *.htm files under current directory and print the changed names by appending 3 levels of parent directory names at the beginning and modifying the actual name to dd-nnn format
Find all 664 permission files/drectories under current directory tree
Numerically sort file "file.dat" by the second word of each line and output from greatest value to least value
Search for 'magic' in all regular files under current directory tree
Find all empty directories recursively starting from the current one and delete them
Read a line from standard input and save received words sequentially in variables XPID XUSERID XPRIORITY XVIRTUAL XRESIDENT XSHARED XSTATE XCPU XMEM XTIME XCOMMAND
Clear the terminal's search history
Split "database.sql" into files of at most 100000 lines each with prefix "database-"
List directories in the current working directory and remove the trailing "/"
Remove all "core" files that were last changed more than 4 days ago from the current directory tree
Create a table from '111 22 3\n4 555 66\n' with columns separated by a single space
Find all files under /home/feeds/data without descending into *def/incoming* and *456/incoming* paths
find all the files in the entire filesystem which belong to the group root and display the ten files.
Find *.html files in the current directory tree that were modified less than 7 days ago
Find *.html files in the /usr/src/linux directory tree
Find x* files/directories under /tmp directory whose status was changed less than 1 day ago and move them to ~/play
perform a case insensitive search
find files in /dir/path/look/up directory that names are dir-name-here
Find all *.log files under current directory that contain the string "Exception"
list in long format all files from / whose filename ends in "jbd", not descending into directories that are not readable while searching.
Count the number of users logged in
find all the normal/regular files in the current folder which are present in the pattern file "file_list.txt"
Find all files/directories under current directory with 'FooBar' in their paths and copy them to ~/foo/bar
find all the files that have been modified in the last 1 day ago
Print multiline text "ONBOOT=\"YES\"\nIPADDR=10.42.84.168\nPREFIX=24" to the terminal, replacing '\n' with newline symbol, and append that text to file /etc/sysconfig/network-scripts/ifcfg-eth4 as root user.
Find all files named "file.ext" within the current folder and print the path where each one is located
Print "echo ping -c 2" on each string in file 'ips'
Search for the string "ERROR" in all XML files in the current working directory tree
Print 1 byte from "/dev/urandom" as a signed decimal value and no address radix
find all the files that have been modified in the last 4 days ( daystart is used to check files according to date i.e, all files modified from currentDay-4 00:00:00 to current day) and copy them to folder.
Print the date followed by the host name
Use awk command 'FNR==NR { array[$1,$2]=$8; next } ($1,$2) in array { print $0 ";" array[$1,$2] }' on compressed files "input1.vcf.gz" and "input2.vcf.gz"
Read a line from standard input with prompt "Is this a good question (y/n)? " and save the response to variable "answer"
Print only printable characters from "/dev/urandom"
print all files in the directories except the ./src/emacs directory
change html files to mode 644
Replace any sequence of spaces in file 'text.txt' with single space and print 4th space separated field
Print "echo ping -c 2" on each string in file 'ips'
Print NS record for domain 'domain.' from 8.8.8.8 nameserver
Print as many dots as there are files named "file.ext" in the /home/kibab directory tree
Display a long listing of the oldest file under '/hom/backups' directory tree
Calculate the md5 sum of all ".py" files in "/your/dir" including content and filenames
this find command Substitute space with underscore in the file name replaces space in all the *.mp3 files with _
Count all directories in maximum 1 level down the current directory
Enable history in a script
find all the files in the entire file system that were modified in the last 10 minutes
Find *.java files in the current directory with GNU find and replace foo with bar in those files
Print appended data in "/var/log/some.log" that match "foo" and "bar"
Print the first line of "filename" as a hex dump of characters
Extract path and query part from URL
Locate all files named 'restore.php' in the current directory and 3 levels below
Search all non-hidden files in the current directory and all non-hidden sub-directories for the file hi.dat.
Find all files in the home directory with open permissions
print all files in the file system excluding those ending with ".c"
Format time string @$TIMESTAMP according to default time format
Make 999 folders one inside another where first 998 of them is named as "folderX" where X goes from 1 to 998 and the last folder named as "folder9991000"
Remove the file with inode number 752010
find files under the current directory ending in "txt" and list them, or ending in  "html" but do nothing.
Remove all tmp/*.mp3 files
Login to "$HOST" and create file "$FILE_PATH" if it does not exist
Find all files/directories named 'file' without descending into directories with the same name under current directory tree
Gets MAC address of en0 network interface.
Find all regular files with '.what_to_find' extension in the entire filesystem and move them to directory '/new_directory'
List the current directory recursively ignoring the "dir1" subdirectory
Change mode of all files ending with ".php" under the current folder to 755 and write the output to the console and "logfile.txt" file
Find only permission field & file name from long listing with find command .
Generates name for temporary file with 6-letter suffix, and saves path to that new file in 'fn' variable.
Search for the extened regex 'expr' in all files with '.c' and '.h' extension under current directory tree
Find all *gz files under asia and emea directory
Move "file.txt" to docker container "$CONTAINER_ID" in path "/var/lib/docker/devicemapper/mnt/$CONTAINER_ID/rootfs/root/file.txt"
Numerically sort standard input by the second word of each line and output from greatest value to least value
Remount "/" without writing in "/etc/mtab"
Archive "/home/path" to "path" on host "server" showing progress and statistics and remove files in the destination not found in the source
Read standard input until a null character is found and save the result in variable "line"
Sort and compare files "$def.out" and "$def-new.out"
print apparent size rather than disk usage
Find files and directories with the name RAID but don't traverse a particular directory
find all the symbolic links in the current folder and check the file type and display the output of those files which are broken
Find all files whose names begin with 'Makefile' in the /usr/ports directory tree and count how many of them contain 'QTDIR'
find all the reguar/normal php files in current directory.
Save standard input to variable "myVar"
Display all lines in 'file' containing 'something', pausing for user input after each page.
List content of 'myfile' in a subshell and returns output to parent shell
display all the normal/regular files in the current folder and do not go beyond 3 levels
Compress all files with '.txt' extension under current directory
Print the physical current working directory
Copies defined file to the target folder without overwriting existing files.
Find all files under foldername directory and set their permission to 644
Move all files including hidden files in "/path/subfolder/" to "/path/"
Delete all .pyc files in the current directory tree
Search the files from the current directory tree for "chrome"
Find all files named `file1' on the system
list all processes with its PIDs
Search everywhere for files changed within the last minute
Copy file linked to by "bar.pdf" to "bar.pdf"
find all the files in the home folder which have been modified in the last 30 minutes
Delete all files in the /myDir directory tree that were last modified 7 days ago
Recursively change the group of all files in "/var/lib/php/session" to "lighttpd"
Remove all files whose names begin with "no-such-thing" in the /home/peter directory tree
Recursively change the owner and group of "/var/antoniod-data/" to "antoniod"
Remove newline characters from "file.txt"
Find all regular files in the current directory tree last modified between 1 and 3 days ago and list them using format '%Tc %p\n'
Replace all instances of "STRING_TO_REPLACE" with "STRING_TO_REPLACE_IT" in "index.html"
Finds strings with text "searched-string" recursively in all files of current folder.
Remove all tmp/*.mp3 files
search for text files in the directory "/home/user1" and copy them to the directory /home/backup
Search for the string 'device' in all regular files in the entire filesystem
Find all broken symlinks under /path/to/search directory
Remove all regular files under and below directory "$DIR" that were last accessed more than 5 days ago
Recursively change the owner to "$USER" and group to "$GROUP" of "/var/lib/cassandra"
change owner of the file file.sh to user root
Change owner to "root" and group to "wheel" of "bin"
Find all HTML files starting with letter 'a' in the current directory and below ignoring the case
Read a line from standard input with prompt "Enter your choice: ", arrow keys enabled, and "yes" as the default input, and save the response to variable "choice"
Creates temporary file with name formatted like '.script.XXXXXX' in '/tmp/' folder and saves path to it in 'script2' variable.
Show all running processes with a name matching "postgres"
Find directories with permissions 777 and change them to 755 recursively
find all the directories in the current folder and replace the
Display infinite scroll of random ASCII art
Update the history file in the current session
search for all the files having spaces in the current folder and save the output to the variable founddata
Find files with a question mark in their names
Find all 100MB+ files and delete them
Silently read $char number of symbols from file descriptor 4, without backslash escaping, and store received input in 'line' variable
display all the files in the current folder which have been modified in the last 2 days
Display a long listing of the files/directories with human readable sizes (100M, 10G etc..) under '/var' directory tree which are bigger than 10MB
Change all files with no user under "/var/www" to have owner "root" and group "apache"
Search the current directory tree for a regular file named "file_name"
Search for files/directories with the case insensitive pattern anaconda.* in var/log directory and create an archive (file.tar) of the last file found
Split the sorted and unique lines in files "emails_*.txt" into files with at most 200 lines each with numeric suffixes of length 4
Find all files under and below the current working directory with the word California in the file, and count the number of lines in the output
Save full path of command "rm" to variable "RM"
find ".flac" files in current folder using regular expressions
Find all files/directories under current directory tree that belong to user 'john'
Read a line from standard input into variable "password" without echoing the input and using the prompt "Password: "
Find all files named "file.ext" in the current directory tree and print the path names of the directories they are in
Prints lines count in each *.c file of a current folder and total count.
Find all executable files under {} and reverse sort them
find all the wav files in the current folder and do not search in the sub directories
Find all build* directories under /var/www/html/ and reverse sort them
find all the files in the current folder which end with .o or with the name a.out and display them.
Verbosely change ownership of "$file" to "root"
search for the directory "ora10" in the entire file system
Find all *.pdf files under ./polkadots
find files which full path name like '*/*config' at current directory and print
Search for "YOURSTRING" in all files under current directory
change the permission of all php files in current folder
Takes folder path from string '/path/to/copy/file/to/is/very/deep/there' and created it with all parents.
Find directories in /proc and show only those that doesn't match the regex '/proc/[0-9]*($|/)'
Print file system disk space usage with a grand total
Set file permission to 664 and directory permission to 775 for all files and directories under htdocs
Copy and always overwrite all files in "/zzz/zzz" to "/xxx/xxx"
find all files in the current folder which have not been accessed in the last 30 days in the current folder
long list the detials of all the shell scripts in current directory
Remove all regular files named "Waldo" in the ~/Books directory tree
Find all files in the `sourceDir' directory
Find all .mp3 files starting from the current directory and delete them
Find all .gif files in the /var/www directory tree that are between 5 kB and 10 kB in size
display the manual page of find
List the z* links in the /usr/bin directory and the file to which it points to
Delete all files in directory $DIR that have not been accessed in at least 5 days
display all the files in the folder /mp3-collection which are bigger than 10MB or which start with the name "Metallica"
Remove all .sh files in the current directory tree whose names begin with "new"
Write "suspend" to standard output and to file "/sys/bus/usb/devices/usb3/power/level"
Find files under '/travelphotos' directory tree which are bigger than 200KB and do not have 2015 in their names
Execute "awk -F, '$1 ~ /F$/'" on contents of "file.gz"
Recursively copy "old/" to "new/" as a dry run skipping files that have matching checksums and output the name only
Search for 'DOGS' in all files with '.txt' extension under ~/documents and also print the file names
Unzip and untar "tarball.tar.gz"
Return a list of files newer than file poop
Find all directories under ~/code without descending into hidden directories and print them appended with : (colon)
Counts lines in each *.cpp, *.c, *.h file.
Find all files/directories under current directory
sort each file in the bills directory, leaving the output in that file name with .sorted appended
Compress and display the original filename of every file on the system that is greater than 100000 bytes and ends in ".log"
List all directories and subdirectories
Print the names and sizes of all regular files from the current directory tree
Print the hexadecimal bytes and printable characters of "Hello world"
Print information of the process running the current script as the current user
Find symlinks in the current directory tree
Find all *.htm files under current directory
find all the directories in the current folder
Find all files whose names end with "macs" in and below the current directory
Find all .txt files in the dir/ directory tree and copy them along with times, permissions, and ownership to dir_txt/
Prints total count of lines of all *.php files in a current folder and subfolders.
Changes group ownership of 'myprogram' to ${USER} (the current user)
Recursively finds all "file_pattern_name" files and folders and prints strings with "pattern", searching through found folders recursively.
Find all files/directores under /etc and run the file command on each of them
Prints processes with 'MDSImporte' in name, cutting off  lines longer than screen width, exiting from less after end of output and saving printed lines on terminal after exit.
delete all the broken symbolic links from the folder /usr/ports/packages
Find all files in the current directory tree whose size is greater than 1MB, and move them to the "files" folder
Create new crontab set for user 'test' including $job and only jobs from current crontab of 'test' user that don`t contain $command
Find files newer than main.css in ~/src
Find all the regular files in $DIR directory tree which have not been modified in the last 450 days and delete them
Wrap each line in "file.txt" to fit in 80 characters
Find all regular files in the current directory tree, except GIT files
Print the first line of each file under the home directory
Find all *.epub, *.mobi, *.chm, *.rtf, *.lit and *.djvu files/directories under current directory
Find all directories under minimum 1 level down the  $GIVEN_DIR directory with null character as the delimiter
display all the regular/normal files in a folder
find all the files in the current folder whose name starts with 2 alphabets and ends with 2 digits.
find all files in the current folder which are bigger than 10bytes
Recursively copy directory or file /something on host "myServer" to current directory on local host, connecting as ssh user matching username on local host.
Find all files, starting from / but ignoring removable media, whose names end with ".rpm"
create directory testExpress
count lines of C or C++ or Obj-C or Java code under the current directory
Remove the "123_" prefix from all filenames of .txt files in current directory.
Find all .tmp files under and below the /tmp/ directory and remove them
find foo, Foo, FOo, FOO, etc., but only files
Find all files under current directory whose file type description contains "image", display only path to each file.
Send each byte in "/home/cscape/Desktop/file" to awk script "x.awk"
Read yesterday's date with format "%a %d/%m/%Y" into variable "dt" in a subshell
delete all the regular files in the temp folder which have not been modified in the last 24 hours
find all the files in the entire file system that have been modified between 50 to 100 days and display ten files
Print the current directory tree
delete all the files ending with "~" in current folder
Find all the Sticky Bit set files in entire file system whose permission are 551
find all the files in the current folder and display adding quotations to each file and replace spaces with new line
Remove all files on the system that have been changed within the last minute
Format "file.txt" as space separated columns 28 characters in width
find all the files in the current folder which are bigger than 10MB and less than 50MB
Print the top 10 commands with their use count
Print only name and login columns of the currently logged in users
Output all lines in BigFile.csv whose secondn comma-separated second field matches first field of a line in LittleFile.csv.
Print information of the root mount point
Find all *FooBar* files/directories under current directory and copy them to ~/foo/bar
Check if "~/mnt/sdc1" is mounted
Create tar archive "dirall.tar" and copy all files from directory tree /tmp/a1 to it
Send an audible ping to "10.100.3.104"
Find all regular files under $DIR directory tree with ".$TYPE" extension (case insensitive) where $TYPE expands in the current shell
Find all test1.h files under current directory
Search all *.c files from the current directory tree for "hogehoge"
display all the files in the file system which belong to no user
Print IP addresses of the host name
Print paths to all subdirectories inside of a directory
Find all the files which were accessed 50 days ago
display all files in the current folder which end with extension "myfile" followed by one digit or two digits
use regex with find command
Removes everything from current folder but '*ddl*' and '*docs*' files.
Write output and error of "bash myscript.sh" to standard output and to "output.log"
delete all the log files in the current folder
Gets IP address of first listed active network interface in system.
Recursively removes all files like "(__pycache__|\.pyc|\.pyo$)" in a current folder.
Force create a symbolc link named "/usr/local/bin/fpt" to "/usr/local/bin/findpdftext"
Search decompressed "filename.gz" for case-insensitive "user-user"
Delete all *.zip files under current directory that are older than 2 days
search all jpg files in current folder
Copy "src/prog.js" and "images/icon.jpg" to "/tmp/package/" keeping relative path names
Remove all files that contain the word GUI in entire file system
update the permissions of the directories in the folder folder_name to 775
display all the files in the current folder that end with ".ksh"
Find all .mp3 files starting from the current directory
Gets IP address of 'en0' network interface.
Locate all *.csv files under the current directory tree
find all text files in current folder; which have been modified exactly 5 days ago
Make directories "$@" and replace "mkdir: created directory " with "$USER created folder " in the output
display all the regular files in the current folder which dont not have the permission 777
set variable r to currently running kernel release, ie. 4.4.0-81-generic
Read a single character from standard input into variable "key" without backslash escapes, with a timeout of 5 seconds, and with the prompt "Press any key in the next five seconds..."
Find all files under current directory and append a null character at the end of each of their paths
Determine if /full/path exists on a mounted file system.
Print groups of all users logged in
List all *.txt files/directories under /etc
Replace all occurrences of foo (case insensitive) with bar in all *.css (case insensitive) files under %s directory
Find all regular files under current directory tree containing 'some text' in their names without descending into hidden directories and excluding hidden files
Copy the owner and group from "file.txt" to "$tempfile"
Rename "file.txt" in directories "v_1", "v_2", and "v_3" each to "v_1.txt", "v_2.txt", and "v_3.txt" respectively and print the conversion
Print 3 space separated '%'
Opens new tmux session.
Find all files whose filename does not end with *.html.
search all mp3 files in the folder "/home/you" which have been modified yesterday (from the start of day 00:00 to 23:59)
find all files under the /etc/sysconfig directory that were accessed in the last 30 minutes
Find all directories in the current directory tree excluding hidden directories and create them in "../demo_bkp"
Print the directories that are taken by the glob pattern $SrvDir*
Recursively finds in all folders but "./output/*" all files but *.o, *.swp and prints strings with 'soc_attach' text pattern and number of matched string.
Execute awk script "script.awk" on "File2" and "File1" and format output as a table
Find recursively the latest modified .zip file in the current directory
search for a regular/normal file "myfile" in the entire file system excluding the folder in excluded_path
Find all OGG files in the home directory that are at most 20 megabytes in size
Gives longest '*.php' files with line count first, and excludes directories with "libs", "tmp", "tests" and  "vendor" in their paths.
Change permissions for all PHP files under the current directory tree to 755
display all the html files in the current folder excluding search in the path ./foo
Archive "/media/10001/music/" on host "server" to local directory "/media/incoming/music/" and skip files that are newer in the destination, delete any files in the destination not in the source, and compress data during transmission
Search the current directory for regular files whose names start with my
Creates temporary file in TMPDIR folder or /tmp/ if TMPDIR is not defined, named by template ${tempname}.XXXXXX, and saves path to new file in  a TMPPS_PREFIX variable.
Remove all directories called "test" from the /path/to/dir directory tree
find all the files that have been modified today
Write the current date and time followed by " 0" to the console and append to "log.csv"
Find all regular files in /usr/bin accessed more than 20 days ago
search all the ".sh" files in the /usr folder and follow the symbolic links to their original file
Append history lines from this session to the history list
delete all the files in the current folder  which do not belong to any user
Search for all files not newer than file /tmp/t
Create a symbolic link named "/usr/local/bin/subl" to "/Applications/Sublime Text 2.app/Contents/SharedSupport/bin/subl"
Find all files matching the pattern "${pattern}" in their name and execute ${my_command} for each of them with the file path as argument
Search in current directory downwards all files whose size is 10 bytes ( Characters ) .
Show the files or directories in the current directory whose names are not "MyCProgram.c"
Find all .core files on the system starting from / and delete them
Find all files/directores under '/usr/local' directory tree that case insensitively contain the word 'blast' in their names
Move all files not matching "Tux.png" in "~/Linux/Old" to "~/Linux/New/" using zsh with "EXTENDED_GLOB"
Set shell option 'checkwinsize'.
Create 6-letter named temporary file in a folder path $file1, and save the path to it in a variable 'tmpfile'
View history using "vim" in read only mode
Find all *.mp4 files under /foo/bar and move them to /some/path
display all the hidden files in the directory "/dir/to/search/"
find all foo.bar files in the entire file system and which are present in the same partition as root.
display all the regular/normal files in current folder
List files larger than 10MB under /var/log /tmp that haven't changed in a month
Recursively and forcibly removes $TMP folder with all content.
Find & calculate total number of caractor  in all .txt file from current directory
Find all empty files in the current directory and delete them
Creates temporary folder in a $temp_dir folder with name pattern defined by $template, and stores path to created folder in 'my_temp' variable.
Counts lines in each of *.php files in a current folder and subfolders and prints total count as well.
Save the "Pictures" directory in the current user's home directory on the directory stack
Move the directory named "some-dir" and residing under the current one to x/
Find all files/directories in directories/files taken from the glob pattern '/tmp/test/*' recursively that have not been modified from the start of the day
delete all the normal/regular files in the current folder
Print the list of files and directories of the /etc directory
Find all files under /path and below writable by `group' and `other'
Print the current user's mail file in "/var/spool/mail"
For each item in array "alpha", display the basename, that is the part following the last slash, or the whole item if no slash is present.
Remove all files from the system whose path names contain "GUI"
Find files/directories named<filetype> under current directory which were accessed less than 5 days ago
Compresses file 'example.log' keeping original file in place.
Delete all files beneath the current directory that begin with the letters 'Foo'.
Read a line from standard input with prompt "<Your Friendly Message here> : y/n/cancel" and save the response to variable "CONDITION"
find all the files in the current directory which have been accessed in the last 1 day and move them to TMP folder.
Prints real path of the folder containing $0 file.
Find all empty files starting from the current directory and delete them
Print each logged in user's full name
Print the list of regular files in the current directory and all subdirectories
Find symbolic links in /usr/lib and /usr/lib64 to files whose pathnames contain "libstdc++"
Search the /myfiles directory tree for regular files with read and write permissions set for `others'
Print file extension assuming there is only one dot in the file name.
Print inode, permissions, size, and modification date of all files in the current directory tree as a list with an extra column prepended
Find all *.* directories under /home/feeds/data directory
Find and uncompress all files in the current directory tree ending in ".csv.gz"
Find all files/directories under $1 which have at least write permission for their owner and set write permission for group for these files/directories
Silently read a single character from standard input into variable "REPLY" without backslash escapes, with a timeout of 5 seconds, and using the prompt $'Press any key or wait 5 seconds to continue...\n'
find *.gif files under the currently directory and sub-directories and list them using the ls command
Print all logins formatted as "The user USER is on TTY" where USER is the user name and TTY is the login terminal
find all the files in current directory of size greater than 2GB.
Move all Emacs backup files from the current directory tree to ~/backups/
Delete all empty subdirectories in and below directory/
Print numbers 1 through 10 separated by ":"
find all the files in the current folder which are writable
Rename all files and directories under current directory tree by converting the names to small letters without descending into 'CVS' directory
View manual page of find utility
Recursively change "/usr/local" owner to the current user and group to admin
display all the files in the usr folder and those that are in the path local
change the group of all the files in the folder /u/netinst/ to staff
Shuffles strings of text received by 'awk' command on the input.
display all directories in the folder "$ORIG_DIR"
Find all the files without permission 777 in the file system
Print 7 spaces in a row
Print the lines of file "strings" not specified in file "index"
Print file system disk space usage in posix and human readable format, format as a table
Find all files/directories under current directory and count the number of lines for the output
Find all regular files under current directory (excluding hidden directories) and replace every occurrences of 'subdomainA.example.com' with 'subdomainB.example.com' in those files
find all the files in the entire file system that have been modified exactly  50 days ago
Find all *.txt files under current directory, change their permission to 666 and copy them to /dst/ directory
Find regular files that have SUID or SGID set
Print the list of files and directories of the /etc directory
Find directories in the current directory tree that were modified within the last 24 hours and move them to /path/to/target-dir
List all leaf directories of the current directory tree
bind key "\x61" to insert itself
Find files accessed at 23:59
display all the regular files in current folder
Add "Line of text here" on top of each *.py files under current directory
Merge already sorted files in the current directory starting with "_tmp" and write the output to "data.tsv.sorted"
Find all regular files under and below /somepath that have extensions PDF, TIF, TIFF, PNG, JPG, JPEG, BMP, PCX, or DCX, ignoring the case and excluding "*_ocr.pdf" files
Save the first three octets of the current host's IP address to variable "local"
Read a line from standard input into variable "ENTERED_PASSWORD" without echoing the input
find the type of all the regular/normal files in the current folder
Dump "/dev/ttySomething" in both hex and text
Creates temporary file with file name formatted like /tmp/gnuplot_cmd_$(basename "${0}").XXXXXX.gnuplot and saves path to it in a variable 'gnuplotscript'.
Find all files/directories named Root under current directory and copy them to newRoot
Change all cron jobs running "anm.sh" to be run every 10 minutes instead of 5 minutes.
Remount "/system" with read and write permission
Find all files in  /mydir  and replace every occurrences of <string1> with <string2> in those files invoking sed as few times as possible
display all the files in the file system which are changed a minute ago
Replace all ' ' with '-' from standard input
Find all .rb files owned by root in the /apps/ folder and below that have been accessed in the last two minutes.
find all the empty directories in current folder and delete them
split content of the file file.txt started from second line into pieces per 4 lines named as split_NNN
Copies file 'index.html' to each top-level directory in the current directory.
Find all files/directories under '/usr/local' containing 'blast' (case insensitive) in their names
Print all files in the current directory tree as a comma separated list
Find all regular files under current directory (no subdirectories) and replace every occurrences of 'toreplace' with 'replace' in those files
Generates temporary file in a '/dev/shm' folder and saves path to it in a 'tFile' variable.
Lists all subdirectories in current directory with a trailing slash
Construction with additional '-exec true' to be used if both commands need to run regardless of their success or failure.
Find all catalina* files/directories under current directory
Print the ping time of a single request to "8.8.8.8"
display all the files in the current folder which have the word "bills" in their name
Save a random 4 byte unsigned integer from "/dev/urandom" to variable "RAND"
Find all directories named "0" in the current directory tree and create a tar archive of their RS* subdirectories
Find all 400 permission files under /data directory and change their permission to 755
Executes 'sleep 10' in a subshell created by a pipeline of built-in function 'true'.
Insert "|" every 30 characters in file "longline"
Find all regular files under $FOLDER directory tree that start with '".' and end with '"' in their names and were modified in less than $RETENTION days excluding the files whose contents match one of the regular expressions defined per line in file $SKIP_FILE
Hash hostnames in user's known hosts file.
List all regular files in and below the home directory that were modified more than 5 years ago
Find *.pl files/directories under /users/tom
Search for all files in the /home directory tree that have the same inode number
Rename all files in the current directory to the md5 sum followed by the extension and print the conversions
Print the names of any differing files in directories "dir1/" and "dir2/"
Show all files that have not been accessed in the $HOME directory for 30 days or more
find all the files that have been modified in the last 60 minutes
Print a minimal set of differences between files in directories "a" and "b", ignore the first 3 lines of output, and print any line starting with "-" with the first character removed
Read a line from standard input with prompt "Are you sure you wish to continue?"
List files under $CURR_DIR which were modified, accessed or whose status were changed $FTIME ago replacing the $CURR_DIR path string to './'
Puts the job 1 in the background.
Find all TXT files on the system and copy them to /tmp/txt
Archive all files specified on standard input under "/path/to/files" to "/path" on host "targethost" as user "user" with escalated privileges
Print each unique line that is duplicated in files "file1" and "file2" combined
Find all regular files in the "aaa" directory
Find all files name passwd in the root directory and all its sub-directories.
Search for files greater than 20MB under your home directory (/home/user)
Search the current directory tree for files without "test" in their path names
Recursively removes all files and folders named '.svn' in a current folder.
Replace all the mathes to regex '<script type="text\/javascript" charset="utf-8" src="file.js"><\/script>.*' with '<script type="text\/javascript" charset="utf-8" src="file2.js"><\/script>' in all HTML files under $DIR directory tree modifying the files in-place
List all regular files from the current directory tree that were modified less than 60 minutes ago
Print each logged in user's full name
Print the average round trip time of 5 pings to "google.com"
Copies all files like "*foo*" under the current directory to the '/your/dest' directory.
Change the ownership of "file.sh" to "root"
Find one file or directory in the current directory whose name matches the pattern given as a variable $a
Save a comma separated list of all $MY_DIRECTORY/*/ directories to variable 'FOLDER'
Sets 'extglob' shell option.
search files in the folder /home which have been modified after /tmp/after and before /tmp/before
delete recursively, without prompting, any files or directories under the current directory that case insensitively match the filename ".svn"
Recursively change the owner and group of all files in "public_html" to "owner"
Find files on the system modified more than 90 minutes ago
Report file system containing path to /some/dir disk usage in kilobytes.
Composes full process tree with process id numbers, and prints only those strings that contain 'git'.
Create 998 directories one inside another with sequential names folder1, folder2, ... folder998 and create an additional folder named 'folder9991000' inside the last 'folder998' directory
Move all files from "src/test/" to "dest" displaying progress
Search the current directory tree for regular files omitting directory `omit-directory'
Search for regular files of the user bluher in the file system
Delete all broken symbolic links under '/usr/ports/packages' directory tree
removes the 4th-from to 6th-from last lines in file
change permissions of files older than 30 days
Rename recursively all files in the current directory tree that are called "article.xml" to "001_article.xml"
Search in current directory downwards all files whose owner is aa1 and grop is grp .
Search the file system for regular files whose names are shorter than 25 characters
Remove all subdirectories of the current directory, except for "bar", "foo", "a", and "b"
display all the files in the entire file system which have set uid bit set.
View the contents of "file.txt" with line numbers in the pager "less"
Find '.git' directories in directory tree /home/madhu/release/workspace
Prints sorted list of logged in users.
Print lines in "file1" that exist in "file2"
Find files under current directory that contains the string '/bin/ksh'
Remove the files from the home directory tree that were last accessed more than 100 days ago, with confirmation
Find and delete all hard links in the /home directory tree to file1
Counts lines in each of *.php files in current folder with subfolders and prints total count as well.
Change to directory 'foo' and print to terminal all received on standard input
Find all files/directories under current directory which have read-write permission for owner and only read permission for group and others
Print absolute path of java executable
find all the html files in the current folder which have been modified in the last 7 days
find symbolic links with pattern` '*sysdep.c'
search for files that are readable for everybody, have at least on write bit set but are not executable for anybody
Find all *stat files/directories under /usr
Split "$INFILE" into files of at most "$SPLITLIMT" with a numeric suffix and a prefix "x_"
Find all .java files starting from the current folder
Save the latest modification time (in format "%T@ %t" of any file under "./$dir" to variable "timestamp"
Find all regular files recursively in the current directory
Search the /root directory recursively for the regular file named "myfile" ignoring "work" directories
Find files/directories modified within the last hour under current directory
Make directory "/tmp/googleTestMock"
Set up a remote port forward from port 10022 on host "server" to port 22 on localhost
search for the regular/normal file 'myfile' in the folder /root excluding those that are present in the /root/work directory
Search the current directory recursively for regular files last accessed more than 2 days ago
delete all the ".bak" or swap files in kat folder
Change every directory under "/var/www/html/" to have permissions 775
display the base name(name without extension) of all the ".NEF" files in the current folder
Find all files in the current directory tree with size bigger than 5 MB and sort them by size
Read a line from standard input with prompt "Continue (y/n)?" and save response in variable "choice"
Remove all libGLE* files from the current directory tree
set variable "uname_m" to machine architecture, ie. x86_64
Receive pattern to search for on the standard input and print only matching part of lines from file 'f.html'
Copy all .pdf files in the ./work/ directory tree with size bigger then 2 MB and modified more than 5 days ago to the ./backup/ directory
Find out if there are any files on the system owned by user `account'
Search the files from the current directory tree for "chrome"
Find files whose pathnames contain "string" and print these pathnames replacing 'search string' with 'new string'
Write "2-1" to standard output and to "/sys/bus/usb/drivers/usb/unbind"
Copy the current directory tree to "newdirpathname" preserving directory hierarchy
Format each line as 3 columns based on extraneous columns
Set the value of "to_sort" to "$1" in a subshell which no longer exists after the pipeline completes
Find and remove multiple *.txt files
Recursively print all files and directories in the current directory tree
Rename all .png files, changing the string "_h.png" into "_half.png".
Display each line in file.txt backwards
search for the word "slrn" in all the files in the current folder
Searches for 'something' in a large file and prints the matching line
Replace all instances of ";" with "\n" in "bla@some.com;john@home.com"
get the root user access
Search for .pdf files
Find all files/directories in level $i down the current directory with all positional parameters appended with the find command
list symbolic links under the directory "$directory"
Search for occurrences of string "main(" in the .c files from the current directory tree
Print bash environment variable array "fields" and its values
Replace all occurrences of '2013 Magento Inc.' with '2012 Magento Inc.' in all files with '.php, '.xml' and '.phtml' extensions under current directory tree
Push the current directory path to the dirs stack
Print differences between the sorted content of file $1 and file $2, executing 'diff' with options from "${@:3}" array slice
Remove all empty files in /tmp/ and below
Move all files and directories not starting with "l" in "/mnt/usbdisk" to "/home/user/stuff/."
Find files under /some/path that are not executable by the owner
Find all files that are less than 50 bytes
Lists all paths to all subfolders in a current folder.
Replace all occurrences of "StringA" with "StringB" in the *.php and *.html files residing in the current directory tree
Search for "largecalculation" in all processes owned by the current user
Search recursively through /mydir, outputting only the base (leaf) name of each file, directory, symlink etc. without any containing directories, that is the part following the last slash.
display all files in the directory "dir" which have been accessed in the last 60 minutes
Print contents of "file" as space separated hexadecimal bytes on a single line
Print the current directory
find all files in the current directory whose size is 24 or 25 bytes.
Find all the *.txt files in the current directory older than 48 hours
list regular file which file name is NOT end with '.html' in current directory in current directory
Display permissions, user, group, and full path for each file in the current directory tree
Give all directories in the /path/to/base/dir tree read and execute privileges
display all the files in the current folder which end with ".bash"
Find all *.c files under and below the current directory that contain "wait_event_interruptible"
Show the last 10 .conf files found by `find' in the /etc directory
Print the file sizes along with their paths for all *.txt (case insensitive) files/directories under current directory tree
Find all files/directories named 'foo.bar' in the entire filesystem
Exchanges the top two directories in the dirs stack.
display all the files in the current folder expect perl shell and python fiels
Copy the executable "python2.7" in $PATH to "myenv/bin/python"
Find all files/directories in entire file system less than 50 bytes
Save IP addresses of the host name in variable "ip"
Find all files starting from / that belong to user1
Find all directories named "D" in the "A" directory tree
Force create a symbolic link named "$*" to the canonical absolute path of "$1"
Compress all *.img files using bzip2
search for the file test in the current folder
Remove empty directories
Find all files that were last modified less than7 days ago under /home
Remove junk files modified more than 31 days ago recursively
Search for files which have read and write permission for their owner, and group, but which other users can read but not write to.
Saves list of logged in users in system together with 'USER' header in the 'b' variable.
Set variable 'path' to name of current directory (without the containing directories) converted to lowercase.
Search /etc for files modified within the last 10 minutes
Search appended data in "logfile.log" for "something" with a timeout of 3 seconds
search all jpg images in current folder and rename them
Display differences between files "a.txt" and "b.txt" side-by-side and do not output common lines.
Print relative path of device of disk with UUID "b928a862-6b3c-45a8-82fe-8f1db2863be3"
display all normal/regular files in the folder "pathfolder"
Search for *pattern* in and below current directory
Print the difference between line 2 and 3 in file "$f"
Search for the case insensitive pattern 'PATTERN' in all files under current directory tree and display the matched files
Creates temporary folder relative to directory '/path/to/dir'.
Remount subtree "/outside" to "/inside" as a bind
Archive all directories in /path/to/directory/* (only command line arguments, no sub-directories) to files with .tar.gz extension transforming the full paths to relative paths
Saves printed calendar of February,1900 in positional variables.
find  directory which case-insensitive name is too in currect directory
Recursively change the owner of all files in "/home/test" to "test"
Move all files that contain "Subject: \[SPAM\]" to "your_file"
Change to the directory pointed by variable TAG
Find the top 5 big files
Unzip all files matching "test1/*/*.gz"
Numerically sort IPv4 addresses specified on standard input with presedence to first, second, third, then fourth octet
find all the files in the current folder which have execute permission
display all the html files in the current folder that have not been modified in the last 7*24 horus
Send TERM signal to process with id listed in '/var/run/DataBaseSynchronizerClient.pid' file
Ensure all 5 of UEDP0{1..5}_20120821.csv files exist, creating empty files for any missing ones (updates the file's timestamps)
List all cron jobs for current user.
create directory destdir
Find all *.jpg files under current directory
delete what was typed in the command line and run "pwd" when button "\e[24~"
Find all directories named 'files' under current directory and set read-write-execute permission for owner and group and no permission for other for those directories
Count the number of non localhost users
Find all regular files under $dir directory tree that are bigger than $size MB in size and print them along with their sizes in decreasing order of size
Prints last modified file in a current folder.
change the owner of all the files in the current directory
Change permissions of all regular files from the current directory tree to 644
Find all target files outside the current working directory with symbolic links in the current working directory
Recursively change all permissions under "theDirectory/" to 777(read,write,execute for all users)
Find & Write Changes to a File and Print the Changes Using sed s//gpw
find all executable files in /home directory.
Print a colon-separated list of all directories from the ~/code directory tree
Counts all files in a current folder and subfolders.
Find all regular files under current directory tree that match the regex 'tgt/etc/*' in their paths
Find all files/directories under current directory that were accessed more than 25 but less than 35 minutes ago
find all read me files in a folder
Find all symlinks under /myfiles directory
Force remove all files and folders in the physical current working directory
Find all files/directories named 'file_name' under current directory tree
Remove all *.swp files/directories under current directory
search for the file picasso in the folder /home/calvin/ (case insensitive search)
Find all directories by the name `httpdocs' on the system
Find all files/directories that start with 'screen' (case insensitive) in their names under user's home directory tree
Set permissions to ug=rw,o= for files inside the ./default/files tree
split file /usr/bin/firefox into pieces per 1000 lines
Enables shell option 'expand_aliases'.
find all the perl files in the current folder
display all the files in the current folder excluding search in the paths containing the folder having the word "mmm"
Find *log files/directories within a maximum of 3 levels of directories
List all of the subdirectories in the current directory with no trailing slash.
Enable history and history expansion within a script
Display a dump of standard input as floating point values of double size
Removes 5 oldest files in the current folder.
Find all .gif files in the /var/www directory tree
Find all .sh files in or below the current directory and move them to folder ~/back.scripts
Saves value '1' in the $PIPESTATUS variable and returns 0.
Compress every file in the current directory that matches "*cache.html" and keep the original file
Rename all files in current directory with names starting with "fgh" so they start with "jkl" instead
Print a single line of numbers from "001" to "010"
Replace all commas with tab characters in 'filename.csv' and page interactively through the result.
Calculate md5 sum of file ${my_iso_file} and save it to variable 'md5'
Copy file "exist" from directory "/file/that" to a new file named "file" in "/location/for/new"
Search the entire file hierarchy for files ending in '.old' and delete them.
Find all regular files starting from level 3 of directory tree ~/container and move them to the current directory
Run commands "df -k;uname -a" on server "192.168.79.134"
find all files that do not have execute permission to all
change the ownership of all regular/normal files in the current directory after users confirmation
display all empty files in the current folder
Gets domain name from dig reverse lookup.
Read a line from standard input into variable "response" ignoring backslash escapes and using the prompt "${1:-Are you sure? [y/N]} "
Display a list of files with sizes in decreasing order of size of all the regular files under $dir directory tree that are bigger than $size in size
Print short TXT record of domain o-o.myaddr.l.google.com from nameserver 8.8.8.8
find md5sums of files named "file*.txt"
Search for the regex "\$wp_version =" in all the regular files that end with '/wp-includes/version.php' (case insensitive) in their paths in directories/files taken from the glob pattern '/home/*//public_html/' and show the matched lines along with the file names
Output lines 16224 to 16482 of 'file', and stop reading 'file' after line 16482.
Search the current directory recursively for files last modified within the past 24 hours ignoring .swp files and paths ./es* and ./en*
Search for "facebook\|xing\|linkedin\|googleplus" in "access-log.txt" and print a count of the unique entries
Stores date of last month day in the 'lastdaymonth' variable.
displays all the files in the current folder
Print your/dir if it's empty
Find all directories that start with stat
Print the names of all files and directories in the current directory tree
find all the text files in current folder and move all these to another folder appending ".bar" at the end of these files
display all files in current folder with NULL separating each file
check the type of files in the folder /usr/bin
display all the files in the current folder which are present in the path "./src/emacs"
Recursively copy "source", "dir", and "target" to "dir" as a dry run
display all the html files in the current folder
delete all files that have the extension "bam" in current directory
Search the current directory tree for regular files named `doc.txt' and print "found" for each of them
Set variable 'rav' to the contents of 'var' spelled backwards.
find all the directories in the current folder which have been modified in 24 hours and move them to the folder  /path/to/target-dir
Find all TXT files in the current directory and copy them to directory "$HOME/newdir"
Find all files/directories under current directory that were accessed 30 minutes ago
Change the owner of all files in the current directory tree excluding those who match "./var/foo*" to "www-data"
Print differences between files in directories folder1 and folder2 recursively, with unified context, ignoring changes in the amount of white space
Creates temporary file with name formatted like expression in variable ${PROG}, and saves path to it in 'mytemp' variable.
Find all files/directories under /proc and run ls command on each.
Disable jobs running in their own process group in the shell
find all the files in the current directory and sub-directories whose status was changed after /etc/fstab was modified
Find all directories under and below /home/admin/public_html/, and change their permissions to 755
Find all file in current directory with have .c extenstion & have 777 permission . delete then
display all the directories in the current folder for the files which have not been accessed in the last 48 hours
Find all regular files that reside in the current directory tree and were last modified at least 1 day ago
Archive all *html files using tar.
find all the files that have been modified exactly 2 days ago
Find all files that have additional permissions
Create a copy of the current working directory structure in the usr/project directory,
Print "y" for each line in "file2.txt" found in "file1.txt" and a blank newline otherwise
Find all files/directories under current directory
Update the timestamp of '/tmp/$$' to the current month and day
Count the number of regular files with case insensitive name pattern $srchfor under 'teste2' directory tree
Recursively change owner to "www-data" of "/var/www/.gnome2", "/var/www/.config", and "/var/www/.config/inkscape"
Find all directories at level 3 of directory tree $from_dir
Find all *.c files in /usr/src bigger than 100k
searches through the root filesystem ("/") for the file named Chapter1.
recursively look for files ending in either .py or .py.server
The cpio command is a copy command designed to copy files into and out of a cpio or tar archive, automatically preserving permissions, times, and ownership of files and subdirectories.
display all the regular files in current folder excluding all the directories and all the sub directories having "normal" in their name
search for all non empty regular/normal files in the current folder and empty them ie., delete the content not the file
Find all files/directories under '/etc' directory tree that have been modified after '/etc/motd'
SSH with trusted X11 forwarding into "user@remoteToRemote_IP" from SSH connection "user@remote_IP"
Force create a hard link named '/home/user/Musik/youtube converted/aesthesys~ I Am Free, That Is Why I'"'"'m Lost..mp3' with target '/home/user/Musik/mix-2012-13/aesthesys~ I Am Free, That Is Why I'"'"'m Lost..mp3'
Decompresses each of "*bz2" files under the current folder, redirecting output to the standard out, and prints only fourth of comma-separated fields.
Find all files under /home/username/public_html/modules  and set their permission to 640
Get domain name from dig reverse lookup.
Find all files/directories containing 'farm' in their names under '/usr/share' directory tree
Print the list of files in the current directory tree skipping Git files
copy a files from one folder to all the folder in the /raid which have an extension local_sd_customize.
Find all *text files/directories under current directory
Copy all files with '.png' (case insensitive) extension under '/home/mine' directory tree to '/home/mine/pngcoppies/' directory with new names constructed by prepending 'copy' in their names
Find all orm.* files/directories under current directory
Print the first 5 decompressed lines of compressed file "$line"
Find all directories under the current directory that is on the same filesystem, execute "/tmp/count_em_$$" with the directory as an argument, sort the result numerically from least value to greatest value
Find all files/directories that start with 'test' in their names under current directory tree
Search the dir_data directory and all of its sub-directories for regular files and remove the execute permission for all while adding the write permission for the user.
Print each logged in user's username and full name
display all the files in the current folder excluding those ending with ".disabled" in sorted order
Display the mount point of a device file "$path"
Display an infinite number of lines consisting of "y", until the user presses the Q key.
Send SIGKILL signal to processes ID 18581, 18582, and 18583, killing them instantly.
change the owner and group of all the files in the folder  /usr/lpp/FINANCIALS
Recursively removes $TMPDIR folder, prompting user on each deletion.
Search the xargstest/ directory recursively for files matching pattern 'file??'
Recursively changes group ownership of every folder in a current directory to the name of that folder.
Change permission to 755 for all directories under $d directory tree
list regular files under the current directory ending in .mbox putting a null between each file found
Search PATH for utilities called "rename", display the type of file (script, executable, ...) for each match found.
Prints strings with text "texthere" in all files recursively in a current folder.
Change permissions of ".bash_logout", ".bashrc", and ".profile" to 444
Delete everything in the current directory
Search the current directory for files whose names start with "messages." ignoring SVN and CVS files
Split the output of "tar [your params]" into files of at most 500 MiB in size and use prefix "output_prefix"
Find all files in the current directory tree and count them
Print a count of duplicate lines in "filename" sorted by most frequent
display the contents of all the files in the current folder which start with test ( case insensitive search )
Split "complete.out" into files with at most "$lines_per_file" lines each
Show all of the .conf files in Pat's user folder and subdirectories using the less pager
Find PHP files with abstract classes
Remove all "work" directories residing in /usr/ports and below
Change directory to parent directory and do not resolve any symlinks in the resulting path
Find all regular files in the current directory tree whose names end with ".DS_Store" and delete them
find all the empty files and folders in your system
display all the files in the current folder which have been modified in the last 5*24 hours
Find all TXT files in the current directory and copy them to directory "$HOME/newdir"
Delete all regular files that reside in directory $OUTPUTDIR and below, and were last modified more than 7 days ago
Merge data in file1 and file2 where second field is common in both files
Search for "search term" in a sorted list of all files under current directory
Write "\n/usr/local/boost_1_54_0/stage/lib" to standard output and append to "/etc/ld.so.conf"
delete all the text files starting with the name "oldStuff" in the file system
Print content of all files ending with '*.foo' under the current directory
Print the average time of 4 ping requests to "www.stackoverflow.com"
Print /some/dir/ if it's empty
Recursively changes group ownership on everything in the 'public_html' folder to 'website' group.
Find all files/directories with 644 permission in entire file system
Calculate md5 checksum of the list of all files/dirs in /path recursively including dot files and excluding the patterns 'run', 'sys', 'tmp' and 'proc', then check the checksum against the checksum saved in /tmp/file
Save only the digits in "$filename" to variable "number"
find  files which  full path name is /tmp/foo/bar under foo directory and print
Prints running process that has id 'pid' with command line arguments.
Print a list of differing files
Dump the character output of "echo 'hi'"
Find files/directories writable by group and others under the /path directory
Set permissions of all directories under "/path/to/base/dir" to 755
Search subdirectory `Linux' in the current directory for file `teste.tex'
Find all regular files that contain 'linux' (case insensitive) in their names under '/root' directory tree
Search the current directory tree for regular files omitting directory `omit-directory'
find all normal/regular files in current folder and replace a word in all these files
Locates bzip2 command in a system.
search for files which are writable by either their owner or their group
search for the word "foo" in all the regular/normal files with the name "file-pattern" in the directory "/path/to/dir"
Find files in the current directory tree whose names match regular expression "^.*~$\|^.*#$"
Find all *.page (case insensitive) files/directories under current directory and run ~/t.sh for each of them with the file path as argument, then sort the output
display all the normal/regular files in the current folder
Print command history
Verbosely compresses all files on sixth and seventh depth level keeping original files in place.
Print amount of space available on the file system containg path to the current working directory.
Find all files/directories under current directory tree that start with 'test' in their names without descending into directories with the same name pattern
Delete all files with inode number 804180
display all the files in the current folder which are in the path ending with the folder f
List all files and directories residing in the current directory and below
Find directories owned by user news with permissions 775
Print the second line of output of "ls -l"
delete all the empty files in the current directory only if they are ok and the user has the permission to delete them
Search directory foo for files containing "foo/bar" in their full names
Find all broken symlinks under current directory
Find all directories by the name `httpdocs' on the system
Remove all broken symbolic links in /usr/ports/packages
find files in current folder using name patterns and sort the display the file names in the sorted order
Find all .java files  under current directory
Find all directories named 'octave' under current directory tree
Search  in current directory downwards all files whose owner is aa1 or whose name is myfile .
Find all files/directories under 'A' directory tree excluding directory 'A/a' and all of it's contents
find not case sensitive all directories that names are 'apt'
Search the current directory recursively for files containing "string"
Find all directories matching the regex '.texturedata' in their names under '/path/to/look/in/' directory tree
find the file "dateiname" in the current folder ( case insensitive search)
search the file "myfile.txt" in home folder
change the owner of all the files in the file system which belong to the user with the uid 999
List all files under current directory
Search the current directory and two levels below for file `teste.tex'
Removes first and last parts of path $path and saves the result in 'finalName' variable.
Copy a large sparse file "sparse-1" to "sparse-1-copy"
Find files/directories that are owned by the user 'syslog' in entire filesystem
List the full path of each directory in the current working directory
Print a list of case insensitive duplicate filenames in the current directory
gives the chars in line 5 and chars 5 to 8 of line 5, in tst.txt
Find *.tex files in the current directory tree that contain text "documentclass"
Find all files under path_to_dir
Print the path to the pipe created for process substitution
Find all *.mp3 files in file system with more than 10MB and delete them using rm command
find all the directories in current folder and delete them
Print a tab separated table in "table.txt" with cell borders
find all the files in the current folder that have been accessed in today from the start of the day
Extract protocol part from URL.
Find all directories under foldername directory and set their permission to 755
Format space separated fields in "filename" as a table
Find files on the system whose names begin with either x or X
Processes all files recursively in /var/spool/cron/tabs folder and filters out all strings with '#'.
search  in current directory downwards all files whose status has changed more then 7  days ago
Search for the regex 'pattern_to_search' in all files under '/directory/containing/files' and show the matched lines as well as the file names
Search the current directory tree for regular files omitting directory `omit-directory'
Count the number of the regular files residing under and below ./randfiles/
Remove all regular files found in and below /path
Find files in the current directory tree that have one link
Create intermediate directories foo and bar as required and directory foo/bar/baz
Find all files under current directory and count the output line number
Find all Read Only files
Find all *.txt files under the current directory whose names are not "File.txt"
Print the contents of "numbers.txt"
Search for files/directories which have read and write permission for their owner, and group and only read permission for others
Find all *.txt, *.html files under /basedir that match the case insensitive pattern *company* in their names
Display users who are currently logged in
List all files in /home/bozo/projects directory tree that were modified exactly one day ago.
find all readable files
Edit current user's cron job list with editor specified by EDITOR environment variable, or default /usr/bin/editor if EDITOR is not set.
Display file type description of 'file-name' based on contents.
find all the perl files in /var/www
search for text files in the current folder which do not have write access to others
Change directory to the directory containing the executable file of command "oracle"
Copy file or folder linked to by "file" to "file"
Search the current directory tree for files whose names end in "rb" or "js"
Gets IP address of first listed network interface in system.
Find all files under /home/username/public_html/sites/default/files and set their permission to 660
Move all files that contain "Subject: \[SPAM\]" to "DIR"
Remove with prompting all files starting in /mydir that have not been accessed in over 100 days
Print all unique file paths under "dir1" compared to "dir2"
Find all regular files that reside in the current directory tree and were last modified more than 5 days ago
Print the full real path of "/dev/disk/by-uuid/$1" followed by "is mounted"
find all directory list which have empty list in /tmp directory
sleep for 5 seconds
Copies files 'src/prog.js' and 'images/icon.jpg' with fully-defined path to '/tmp/package' directory.
extract "passwd.tar.gz" with verbose output
Remove all .mpg files in the /home/luser directory tree
display all text files in current folder
Remove all files from the current directory tree whose names end in "~"
Unzip all files that match "*.gz" in the current directory and subdirectories to stdout and search for "test"
Prints process tree for each process owned by user 'username'.
find all files in the file system which belong to no user or which have no user
Change owner of "my_test_expect.exp" to "el"
Print the list of the current directory's subdirectories
Prefix all files and folders in the current directory with "PRE_"
print readline bindings that use key code '\\e\\C-k'
Find files under /some/path that are not executable
Recursively finds strings with 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.
find all files in the current folder which are of size 0 bytes.
Display all lines containing PROBES in the current kernel's compile-time config file.
Replace all instances of "STRING_TO_REPLACE" with "STRING_TO_REPLACE_IT" in "index.html" and write the output to standard output and "index.html"
Find all files in the current directory tree whose names are "file_name", except for those with pathnames matching pattern "./dirt to be Excluded/*"
Find all *.txt files under current directory and print their timestamps and paths
The  command runs all the directories (-type d) found in the $LOGDIR directory wherein a file's data has been modified within the last 24 hours (-mtime +0) and compresses them (compress -r {}) to save disk space.
Print details for all files in the ./work directory tree with extension .sh that were modified less than 20 days ago
Search for the extended regex expanded by"$MONTH\/$YEAR.*GET.*ad=$ADVERTISER HTTP\/1" in the decompressed contents of the /var/log/apache2/access*.gz files that are newer than ./tmpoldfile and older than ./tmpnewfile
Find files with size more than 200557600B and which are more than 2 days old under  ${userdir}/${i}/incoming directory and remove them
Remove all files whose names end with "~" in the /home/peter directory tree
Find all files/directories under '/var/log' directory tree that bave been modified today (from the start of the day)
Find all flies under current directory excluding *.png files and print the file paths (with match count) that match the case insensitive regex 'foo=' in their contents
Find all directories under /home/me/target_dir_1
Set the timestamp of B to the same one as A
Print the names of the directories from the paths expanded by the glob pattern /path/to/directory/*
display all the files in the current folder along with the hidden files with the depth
Lists content of compressed text file.
Recursively change the owner of all "*.txt" files under "/mydir" to "root"
Send ping requests to hostname specified by variable "c" for 1 second.
find files which modification time is  one day ago
find all the php files in the current folder (discards any directory which has an extension of ".php")
print all files in the current directory and all subdirectories
prints a line 19 lines from the line containing PATTERN
Find all files under current directory and show their file information
Remove all .sh files in the current directory tree whose names begin with "new"
Replace all occurrence of "toreplace" with "replaced" in all files under /home/www
Find all image.pdf files/directories under ./polkadots with null character as the delimiter
List jobs and their process ids and print them by replacing newline with '^'
search the file myfile.txt in the current folder
Lists all files in a '/home/dreftymac/' folder and subfolders without recursion.
Change directory to the real path of the directory containing the current script
find all the files that have not been modified in the last 24 hours
Search the current user's home directory and its sub-directories for any files accessed after alldata.tar was last accessed and add them to that same tar archive.
Copy all files in current directory that do not match */exlude-path/* in their paths to /destination/ preserving directory structure
when using vi-insert keymap bind command "\C-v{}\ei" to key "{"
ssh into "hostname" as user "buck"
Getting a detailed list of files/dirs
Find all files in the /myfiles directory tree following symbolic links
Copy recursively "/source/backup" to "/destination" preserving symbolic links, modification times, and permissions
get a PID of a process
Remount the root file system with read and write permission
list all the directories in the folder httpdocs
Delete all contents form the files that contain the case insensitive regex 'stringtofind' in maximum 1 level down the / directory excluding other partitions
SSH into "hostname" on port 22 as user "myName"
Find files/directories named 'somename.txt' under current directory tree
Calculate the md5 sum of the tar archive of "dir"
Find all regular files with name pattern $filename under $fileloc directory tree
Create a symbolic link in directory "new" for each file in "original" directory tree
Find all regular files that reside in the current directory tree and were last modified more than 7 days ago
Removes all files from current folder but 5 newest ones.
Mount "proc" file system on "/var/snmp3/proc"
Print the icmp sequence number and ping time of each request to "127.0.0.1"
Print the number of 'processors' (both physical and virtual/hypethereading cores) less 1.
Show system information: kernel name, hostname, kernel release and version, machine architecture, processor type, hardware platform, and operating system type.
Change string "searc" to "replace" in all files in directory hierarchy
Dump "input_file" as a 2 byte hexadecimal, character, and octal value and view the contents in "less"
For each line of the sorted output of both file1 and file2, print lines whose first field of file2 does not appear as first field of file1.
list all *.java files under the src directory
Print crontabs of all users in system, skipping messages that some users don`t have crontab.
Search directory trees /tmp and /var/tmp for "testfile.txt"
Find all '*~' files under current directory
Print all file/directory names without white space safety under the /proc directory
Search the current directory tree for files and directories whose names do not end in ".exe" and ".dll"
display all the trace files (".trc") from the folder $DBA/$ORACLE_SID/bdump/ which have not been accessed in the last 7*24 hours
Recursively change ownership of "~/.npm" to the current user
Recursively change owner to "amzadm" and group to "root" of all files in "/usr/lib/python2.6/site-packages/awscli/"
Find all 777 permission directories and use chmod command to set permissions to 755
List all files under current directory that are greater than 10000000x512 bytes in size
Find regular files in the current directory tree that have the user executable bit set
Create a rsa key of 2048 bits with comment "michael" and store it in file "key".
Find all files in /home/user/ that were created or changed 10 minutes ago
Recursively finds file some_file_name.xml file and prints strings with "PUT_YOUR_STRING_HERE" preceding each found string with file name.
Print last four bytes of string '0a.00.1 usb controller some text device 4dc9'
Search all the regular files in the current directory tree for "example"
Find all files whose names end with "~" in the /home/peter directory tree, following symlinks, and delete them
display all the files in the current folder which are present in the path "./sr*sc"
List .log files from the current directory tree
bind word "foobar" to key code "\e[24~"
Write standard input to standard output and to "foobar.txt"
Search the /storage/sdcard0/tencent/MicroMsg/ directory tree for JPG files
Copy a comlex directory tree from one machine o another while preserving copy permissions and ownership
delete all the regular files in the temp folder which have not been changed in the last 15*24 hours
search for the word "methodNameHere" in all the python files in the folder "/mycool/project/" and display color on the matched lines in the output
Search the .java files from the current directory tree for TODO lines
Show directory sizes in KB and sort to give the largest at the end
Format "$line" as a table
Report file systems disk usage using POSIX output format.
Copy a file xyz.c to all the .c files present in the C directory and below
Find all *.txt files/directories under current directory
Removes files 'junk1', 'junk2', 'junk3'.
find all the files starting with "config" in the folder Symfony ( case insensitive search)
extract /path/to/my_archive.tar.xz to /path/to/extract and preserve permissions.
Remove Mac OS X Desktop Services Store files
display all the files in the folder /home which have the setuid bit enabled
Report file system containing the current directory disk usage
find the regular/normal file "myfile" in the folder /root
Find all directories under and below directory "folder_name", and change their permissions to 775
display all the files in the directory modules
Find all directories whose status were changed $FTIME days ago
Print each line that is found only once in "file1" and "file2" combined
Mount "cpuset" filesystem on "/cpuset/"
Print all non-hidden files in the current directory and its subdirectories
Find files in the current directory tree whose size is greater than 24000 bytes
Save the user name of the current user to variable "x"
Find files larger than 50k
Find files with 777 permissions and change them to 755
Counts all *.mod files in a /boot/grub/ folder.
display all the files in the home folder which are smaller than 500 bytes
Search all .java files residing in the current directory tree and modified at least 7 days ago for string "swt"
Find all *.mp3 files in entire file system greater than 10MB and delete them
search for files which are writable by either their owner or their group
Read a single character from standard input into variable "key" without backslash escapes and using the prompt "Press any key to continue..."
find all the jpg files in current folder and sort them
Prints last modified file in a current folder with modification time.
Read a single character from standard input into variable "doit" with prompt "Do that? [y,n]"
Find all files that belong to group developer
Display all lines containing "IP_MROUTE" in the current kernel's compile-time config file.
find all the files in the current directory which have been modified in the  last 6 days.
display all the regular/normal files in the current folder which are modified after a file
find  case-insensitive StringBuffer in all *.java files
Delete all files/directories named 'sample' (case insensitive) under '/home/user/Series/' directory tree as super user
Verbosely compresses all files on fourth and fifth depth level keeping original files in place.
Search for 'sometext' in all the files with '.txt' extension under current directory tree and also print the filenames
Search for a pattern "can't" in all the files with the name "file-containing-can't" in the current directory tree
Display current system's kernel name, kernel release and version, and machine architecture
Creates temporary file in $appdir variable with name formatted like expression in variable ${template}, and saves path to it in 'launcherfile' variable.
Find all files beneath the current directory that end with the extension .java and contain the characters StringBuffer.  Print the name of the file where a match is found.
Find all directories named essbase under /fss/fin
Decompress 'file.gz' to standard output and execute the output in bash
change owner and group of the file "/path/to/yourapp" to root
Find command will list of all files & directories from current directory , before listing echo command will display ' List of files & Directory '
Save the date 222 days before today to the variable 'date_222days_before_TodayDay'
Search the home directory tree for files modified less than 7 days ago
Display environment variable "_" of the current shell
Create a symbolic link in the current directory for each .jpg file under "dir"
display a list of all the files in the file system which do not belong to any user and search only in jfs and jfs2 file systems
Save the first line of "$j" into variable "k" in ksh
Get the directory with least access time under current directory
Print the last mounted drive
Find all files/directories starting with 'readme' (case insensitive) under '/usr/share/doc' directory tree
Delete all .bam files in the current directory tree
Recursively change the owner to "ec2-user" and group to "apache" of all files in "/vol/html"
Treat references to unset variables as errors
find all files in etc which have been changed in the last 1 day
Find all files in directory tree "dirname"
Set the 'verbose' shell option causing bash to print shell input lines as they are read
Find all files that were last accessed less than7 days ago under /home
Find files in the /var/log folder which were modified an hour or more ago
Remount "/mnt/mountpoint" as read only
Search for all non-hidden files
display the name of all directories in the current folder and do not search in sub directories ( mindepth ensures that the current folder name is removed from the output)
Gets MAC address of en0 network interface.
Find files changed in the last 1 day
Rename all regular files under current directory tree with inode number 31467125 to 'new_name.html'
search for the files "foo.txt" in the current folder and rename it to foo.xml
Find deb packages in the current directory recursively
Remove the files or directories 'bin/node', 'bin/node-waf', 'include/node', 'lib/node', 'lib/pkgconfig/nodejs.pc' and 'share/man/man1/node' with superuser privilege
Search the current directory tree for *.c and *.asm files, ignoring the case
Finds recursively all files in '/path/' excluding folders dir1, dir2 and all like *.dst, that contain 'pattern', and prints matched strings with string number and file name.
Copy "/path/to/source" to '/path/to/dest' in remote "username@computer"
Display total apparent size of a file
find all the files that have been changed exactly 24 hours ago
Print all unique strings in $1.tmp file.
Find all files/directories owned by the user 'bob' under '/home' directory tree
Find all the files that end with the extension “.java” in the current directoy tree
Gets IP address of first network interface which name matches pattern "venet0:0\|eth0".
find all directory list which have empty list in /tmp directory .
find files which have all permissions to all the users in the current directory
find all files read less than 1 minute ago
Find recursively all Python files in the current directory and search them for the word ‘import’
Print the newest *.txt file under current directory with timestamp and path
List all regular files in /var/www and below that have changed in the last 10 minutes
Find all foo.mp4 files in the current directory tree and print the pathnames of their parent directories
Read a line from standard input into variable "PASSWORD"
Print the full path of executable "lshw"
Print all files/directories under ... directory by terminating their paths with a null character
Save standard input to variable 'stdin' until the first character encoded as '\004' is read
find regular/normal files in the current folder
Identify CMS version/releases accross all your Wordpress websites
Report only total size of file systems in 1T blocks.
change the permissions of all the regular/normal files in the current folder
find all the files in the folder "myfiles" which have not been accessed in the last 30 days
display a long listing of all the files in the /var folder which are bigger than 10MB. print0 is used to handle the files which have new lines in their names
Resolve symbolic link of file "/foo/bar/baz"
find all regular/normal files in current folder which have been modified in the last 60 minutes
Show manual of the find utility
List all files under current directory matching the regex '.*\.\(c\|h\|cpp\)'
bind word "pwd\n" to key code "\e[24~"
Search the specified user for the given "filename"
Find all files whose names do not begin with "zsh" on ext3 file systems
Download "http://archive.ubuntu.com/ubuntu/pool/universe/s/splint/splint_3.1.2.dfsg1-2.diff.gz", unzip it, and view the output in "less"
Go to directory named "~" (not home directory)
Search for first match of the case insensitive regex 're' in all *.coffee files under current directory
Count the number of times each person is logged in on the system
Find all the files in entire file system with the extensions txt or doc, as well as any file larger than 5MB in size
Set permissions for all regular files under /var/www to 755
Find files owned by no group
Remove everything in a current folder without prompting.
Read 10 bytes from $0 and print them by replacing the set '\000-\377' with '#'
Counts all files in a DIR_NAME folder and subfolders.
Allow all users to execute '$pathToShell"myShell.sh"'
recursively delete, without prompting, directories under /data/bin/test, that are older than 10 days and where the name starts with a number
Mount "device_name" on "mount_point"
Recursively compress every file in the current directory tree and keep the original file
display all the regular/normal files in the current folder which have been modified in the last 24 hours
Search for the extended grep regex 'expr' in all files with '.c' and '.h' extension under current directory tree
Change the owner of all files in "/empty_dir/" to "root" using at most 10 files at a time
Isolate first comma-delimited field of each line in "file", discard consecutive duplicates, and search "file" for first matching occurrence of that field.
Display differences between file1 and file2 side-by-side.
Searches the manual pages with descriptions in section 3, that name begins with lowercase letter.
Go into the first directory whose name contains 1670
Prints random line from file $FILE.
Removes trailing and starting newlines from file
Print the list of files in the home directory tree whose names begin with "Foto"
Search the current directory recursively for MOV files, following symlinks
Print the number of lines for each *.txt file from the $DIR directory tree
search for al cpp files in current folder and replace all expect the parent directory name of these files and display it them sorted order
Find all the files that are not named "MyCProgram.c" in the current directory only and without regards to case.
Read the raw input of "/dev/input/mice" as hexadecimal bytes with 3 bytes per line
find all files ending with "js.compiled" in current folder (print0 is used to handle files with newlines in their names)
Traverse the filesystem just once, listing setuid files and directories into /root/suid.txt and large files into /root/big.txt.
Find all files/directories in level 2 down the current directory
Check if a drive with UUID "$UUID" is mounted
Find all files/directories that start with 'a1a2' and end with 'txt' in their names and move their parent directories to '/home/spenx/dst/' directory
Count the number of times that a single "-----------\n" separated record contains both "A=2" and "dummy=2" and the number of records that do not have "dummy=2" in compressed file "file.gz"
Copy all regular files whose names end in "~" from the /path directory tree to ~/backups/
Delete all empty directories and directories that contain only empty directories under current directory
find all php files in the folder  /var/www/
Find all files on the system that are world writeable
Search the current directory recursively for regular files, skipping hidden files in the current directory
Report file system containing path to /dir/inner_dir/ disk usage human-readable.
Search the current directory tree for files whose name is ".note", case insensitive
Search the current directory and all of its sub-directory for any PDF files.
locate large files (> 100 MB) in /home/ for 'cleaning'
Find all *.txt files/directories under current directory
Find all files that have either a .php or a .js extension
Convert the first 16 characters in "/dev/random" to a single hexadecimal value
Dump the character output of 'echo `echo "Ho ho ho"`'
Find all *.axvw files/directories under current directory
find all normal/regular files in the current directory
find  file which case-insensitive name is too in currect directory
search in the current folder for the file with the name "test" ( case insensitive search )
List all files with name "someFile" and their modification time under the current directory sorted by oldest modified to newest modified
Print file system disk space usage in 1 KiB blocks of the current directory's file system
find all text files in user/directory/ and display the last line
Search for line number 111 in file "active_record.rb"
Search the current directory tree for regular files that contain "string"
find all files under the /etc directory and display any IP address patterns in them
Find all files/directories named '.todo' under $STORAGEFOLDER directory tree and print their parent paths
show all the regular/normal files in the folder /home/user/demo
Find all .mp3 files with more then 10MB and delete them from root directory .
Find all files/directories named 'game' under current directory tree
Find all files/directories under current directory and print their paths
Change permissions of "mksdcard" to 755
Remove all files and directories in the current directory by answering with "y" to all prompts
Counts lines in each *.php file.
Execute /usr/bin/find with $* arguments where current directory is the first argument
Find directories named `doc' in /usr and below
Search for files that are at least 100MB
Delete files older than 31 days
Write a random list of numbers to /tmp/lst and stdout.
Copy file header.shtml to directories dir1, dir2, dir3, and dir4
display all files in the current folder ($@ contains the variables passed as argument to the function)
find all the database files in the folder /var/named
Find all files/directories in entire file system that have  "write" bit set for either the owner, the group, or others
Find all files under /path/to/dir that were modified less than 7 days ago with null character as the delimiter
delete all files in $DIR that have not been accessed in at least 5 days
find all files in current folder which are less than 300MB
View history using "vim"
create backup of all the text files  present in the current folder
find all normal/regular files in current folder which end with "~" or which begin and end with "#" and and and delete them
Search the entire file hierarchy for files larger than 100 megabytes and delete them.
search for a shell script in the current folder and display the current folder path
find all the php files in the current folder
find all the foo.txt files in the current folder and move them to another directory
Find all files in your home directory and below that are smaller than 100M.
Find all your text files and page through them
Search for the query "filename" in the current directory and any subdirectories
Print the names of all files in the home directory and its subdirectories recursively whose MIME type is video
Copy all files in current directory that do not match */not-from-here/* in their names to /dest
Send 4 ping requests to host "google.comz", displaying only the summary info after the last request completed.
Find all symlinks in the /myfiles directory tree
Identify CMS version/releases accross all your Wordpress websites
Recursively change the owner and group of all files in the current directory to "apache"
Recursively finds all files and prints only names of files that contain "word" and suppressing error messages .
Find all regular files in the /path/to/base/dir tree
find all the regular/normal files in the /path folder and delete them
Replace "firstWord" with "newFirstWord", "secondWord" with "newSecondWord", "thirdWord" with "newThirdWord" in all XML files in the current directory tree
Append all regular files modified in the last 24 hours to the "$archive.tar" tar archive
Check all .txt files whose names may contain spaces whether they contain "needle"
Remove filetype suffix (last dot and following characters if any) from filename
Change permissions to 644 for all regular files under the /path/to/dir/ tree
find all the files in the file system which have been modified in the last 60 minutes
Delete all '-' character from $1 and save the resultant string to variable 'COLUMN'
Join colon-separated information in 3 files LN.txt PH.txt and AD.txt in a cascade fashion: join LN.txt and PH.txt, then join the result with AD.txt
Adds %Pathname% to the dirs stack (Windows format).
Look for directory `Cookbook'
Count the number of differing lines in "file1" and "file2"
Make directories to "$TARGET_PATH" as needed without causing an error if it exists
Display the output of "ls" for an 80 character wide display
Get the disk space used by all *.txt (case insensitive) files/directories under folder 1 and folder2
prints the last non-empty line of a file
Copies newest file under the current folder to the '/tmp/'
remove all text files from the current folder
Search for files/directories with the case insensitive pattern anaconda.* in var/log directory and create an archive (file1.tar) of the last block of files sent to xargs
display a long listing of all fles in current folder which have been modified in the last 60 minutes
Find all empty directories under /tmp and below
search for a word in all the files in the current directory (case insensitive search)
Make directory "~/temp"
Go to /tmp directory.
Find all files named "something" in the current folder and below and run them through the ls -l command in a one batch.
List all files and sub directories including hidden files in the current directory tree
Make directory "/etc/cron.5minute"
Save the current working directory with resolved symbolic links to variable "real1"
Print unique list of who is logged in and the time of login formatted in columns
Make directory "/tmp/foo"
find all regex  '\./[a-f0-9\-]\{36\}\.jpg' files
returns a list of  files modification newer than poop
find md5sum of content from "www.google.com"
Lists all subdirectories in the current directory
display the file name and the file type of all the files in the current directory
Locate files whose status was changed less than 1 day ago
execute command "who" when key "\eW" is pressed
Change to location of '$TARGET_FILE' file.
Find all SUID set files in the file system
Set variable PacketLoss to first digit of percentage of packet loss occurring when pinging host specified by TestIP
Read one character from standard input into variable "REPLY"
Find all directories under /path/to/base/dir and change their permission to 755
Delete all .svn files/directories under current directory
Print the list of files changed within the last minute
Print file system disk space usage of the current directory's file system
Search the current directory tree for files named "somename", case insensitive
Search the current directory recursively for files whose size is between 10 and 50 MB
locate large files (> 100 MB) in /home/ for 'cleaning'
Search for .zip files that are larger than 100M found anywhere in the file system and delete those files.
find all the ".JPG" files in current folder and display their count
Find all $2 files in $1 path and search for the regex expanded by $3 in those files
Replace all newlines except the last with a comma in "test.txt"
Compresses all files listed in array $*, executing in background.
Find all files modified on the 7th of June, 2007, starting from the current directory
Find all *shp* directories under current directory and move all regular files inside those directories to ../shp_all/
Set the 'xtrace' shell variable
Search directory /home/ABCD recursively, starting from one level below, for regular files
Show the list of all files on the system whose names do not end in ".c"
List all broken symlinks excluding cyclic links under current directory
List all active cron jobs, displaying only the command.
find all files in the current folder that end with ",txt"
Non-recursively finds all '*.pdf' files in a current folder and removes them.
Find all directories under and below parent_directory
Display the sizes and filepaths of all files/directories sorted in descending order of size
Compress and display the gzip compression ratio of every file on the system that is greater than 100000 bytes and ends in ".log"
Print the user name of the current user
Print linux group names on multiple lines instead of single line output
all .jpg or .png images modified in the past week
Find all files that aren't owned by user www-data
Find all filenames ending with .c in the current directory tree, case insensitive
Find "*prefs copy" files in the /mnt/zip directory tree and remove them with prompting
Set prompt to the system host name and history number
Archive file 'file' with bzip2 tool, store compressed data to a file 'logfile' and also print to screen
This will remove all files (type f) modified longer than 14 days ago under /root/Maildir/ recursively from there and deeper (mindepth 1
display all the files in the current folder and do not search in sub directories and move them to the directory /directory1/directory2.
Rename uppercase file or folder name $1 to lower case name
Recursively finds and compresses all files in a current folder with 4 parallel processes.
Force create a hard link in "/usr/local/bin" to "findpdftext"
Remove trailing white spaces from all files under current directory ignoring .git and .svn directories
List subdirectories in the current directory
Print the most recently modified file
Get the total size of all files under dir1 directory
find all the files with the name test in the current folder ( case insensitive )
display the filenames which do not have begin with dot (.)
Remove all files matching the pattern *[+{;"\\=?~()<>&*|$ ]* under current directory
Write "deb blah ... blah" to standard output and append to "/etc/apt/sources.list" as root
Read a line from standard input into variable "REPLY" with prompt "$*"
Print a colon-separated list of all directories from the ~/code directory tree, except hidden ones and those below them
Counts lines in each *.php file, sorted by number of lines, descending.
Find files whose pathnames end in "f"
Find all directories under current directory and replace all null delimiters with : in the output then remove the last :
Find all files/directories that belong to the group 'audio' under '/dev' directory tree
Counts lines in each *.php file.
find in $HOME files ending in "txt" and do nothing with them, or files ending in "html" and list them null separated.
Count the number of files in the /usr/ports directory tree whose names begin with 'pkg-plist' and which contain 'unexec.rmdir%D'
Counts lines of /dir/file.txt file.
Find all files whose permission are 777
display all the files in the usr folder which have been modified after Feburary 1st
move all the files in the current folder  to temp folder and search atleast in one subfolder
Find all files that contain the case insensitive regex 'stringtofind' in maximum 1 level down the / directory without descending into other partitions
display all the ip addresses in all the files that are present in /etc folder
Show all files in /etc that are owned by root have been modified within the last minute
Output the last slash-separated component of specified path, in this case "data_report_PD_import_script_ABF1_6"
Search the current directory tree for files containing "bash" in their names
search for *.log files starting from / (root) and only in the current file system
Unzip every ".gz" file in the current directory tree
Find all files called "INPUT.txt" in the current directory tree and remove lines starting with # in them, saving backup copies as INPUT.txt.bak
Change owner to "root" and group to "wheel" of "adbind.bash"
move all the html files from current folder to another folder and if a symbolic link is found copy the original referenced file and not the link
Create intermediate directories ~/foo/bar/ as required and directories baz, bif, bang
Rotates the dirs stack so that the second directory (counting from the right of the list shown by `dirs', starting with zero) is at the top.
Display non-hidden files in the current directory with the given output format
Join comma-separated data in file1 and file2, including extra non-matching information in both files.
Report file systems disk usage in kilobytes.
Locate all *.csv files under the current directory tree separating the file names with zeroes
Save the user name of the current user to variable "me"
Silently read a line from standard input into variable "REPLY" without backslash escapes and using the prompt $'Press enter to continue...\n'
display a long list of all the jpg files in the home folder
Make directories for each unique file path in "file1"
Creates temporary file and saves path to it in a 'tmpfile' variable.
Read a line from standard input into variable "message" with escaped prompt "\nPlease Enter\na Message: '"
Find all files in the current directory recursively with "linkin park" in their names and copy them to /Users/tommye/Desktop/LP
find the file "filename.txt" in the usr folder
Exclude directory from find . command
reverse both words and lines in file
find all the directories in the current folder which have been modified in 24 hours and move them to the folder  /path/to/target-dir
Clean up all zombie processes by sending SIGTERM signal to their parent process, which requests them to terminate.
List .html files in the current directory tree that contain string "base\-maps" but do NOT contain string "base\-maps\-bot"
Find all *.rpm files/directories under current directory
display all the files in the current folder excluding the file states_to_csv.pl and those that are present in the directories whose name starts with ".git"
find all the files in the current folder that have been accessed in today
Find all files/directories under current directory tree that belong to the user 'tom'
Prints ten latest modified files within the current directory.
Find all files starting from the current directory which are larger than 100MB
find all the files which have the write permission to the group and remove the write permission.
Find all files starting from / whose names end with ".rpm" and change their permissions to 755
Copy "src" to "dest" if "src" is newer than "dest"
search for the word foo in all the js files in the current folder
Find 10 largest files in the current directory and its subdirectories
Save the md5 sum hash of "$my_iso_file" to variable "md5"
Search the *.cc files in the current directory tree for string "xxx"
Check all .txt files whether they contain "needle"
Search the `research' directory and one level below for directories that are not owned by group `ian'
Pipe 3 newlines to sshe-keygen, answering prompts automatically.
create directories mnt and point
Print the list of all directories under the current directory and below
Execute zcat on every file matching "*20120805.gz" in the current directory and subdirectories
Create a variable CDATE in the current shell that contains the date in '%Y-%m-%d %H:%M:%S' format , and a variable EPOCH that contains the seconds since epoch
Prints name of temporary file but doesn`t create nothing.
get the git user access
Find how many files are in a path
change the permissions of all the directories in the current folder
View line 500 to line 1000 in gzipped file "bigfile.z"
SSH login in 'middle.example.org' via port 2222 as user 'deviceuser' using a private key file './device_id.pem'
Display the file size of file '/data/sflow_log' in bytes
Delete all files/directories older than 48 hours in /path/to/files* paths
get second-to-last comma-separated field of each line in file.txt
Print '-ok is an action so an implicit -print is not applied' with confirmation from the user for each file or directory found by the name 'file' under current directory tree
find all the xml files in the current folder which are present in the pattern text file
Calculate md5 sum of files $source_file and $dest_file
Find all files/directories named modules under current directory
Save IP addresses of the host name in variable "ip"
search in the current folder for the file "myletter.doc"
Kill all processes which were executed in background by the current shell.
Search the entire file hierarchy for files ending with '~' and print all matches except for those with '/media' in their pathnames.
Change permissions of all directories from the current directory tree to 644
archive all the normal/regular files in the current directory which have been modified in the last 24 hours.
Find all files/directories in maximum 1 level down the current directory which do not have only read permission for 'other'
Find all .php files in all directory trees matching pattern `/srv/www/*/htdocs/system/application/' and search those files for string "debug ("
Find all the files in the current directory
Recursively find the latest modified "zip" file in the current directory
Gets MAC address of eth0 network interface.
Set the 'verbose' shell option causing bash to print shell input lines as they are read
change permission of all the files in the entire file system which have permissions 777.
display all the empty files in the entire file system
Print the current user name associated with standard input
Search the Movies folder in the user's home directory for files larger than 1024 megabytes in size.
Find all files/directories under '/var/tmp' directory tree that belong to a user with user id 1000
List current directory, waiting for user input at each page.
Find all 15MB files in entire file system
Find all files that belong to user root
replace the word apple with orange in all the regular/normal files in the current folder
From a script, output the name of the script itself, without containing directories.
Find all *.txt files under current directory that contains the regex 'pattern' and list them with their filenames and matches
Search the current directory recursively for .m4a files
Create a symbolic link in directory "/path/to/dir" for each file and directory under the current directory starting with "."
find files having the extension "bam" in current directory
Extract all gzip-compressed files from tar archives beginning with 'myfiles_split.tgz_*'
Move all files from the `sourceDir' directory tree to the `destDir' directory
Search for 'It took' in all $srch1* (case insensitive) files under current directory
find all the files in the current folder which end with "ext1" or "ext2" or "ext3"
Print 'This should print the filename twice if an implicit -print is applied: ' appended with file paths for all files named 'file' under current directory tree
Copy all files in "/mail" to "/home/username" preserving the directory hierarchy and modification times
For each line which has a common first field in file1.csv and file2.txt, output the first 4 fields of file1.csv
force delete all the directories the folder "test folder"
Find all files/directories in entire file system for which owner has at least read/write permissions, or the group has at least read permission, or others have at least read permission
Print short TXT record of domain o-o.myaddr.l.google.com from nameserver ns1.google.com
Find all files/directories in entire file system that have  "write" bit set for either the owner, the group, or others
Find an inode and remove
See all pages in section 3.
search  in current directory downwards all files which were accessed exactly 7 days back
create a symbolic link named "/usr/bin/my-editor" to file "/usr/share/my-ditor/my-editor-executable"
Create compressed archive from "my_large_file_1" and "my_large_file_2" and split into files of size 1024 MiB with prefix "myfiles_split.tgz_"
Append the current date to variable 'LBUFFER'
list all files in /home/bozo/projects directory tree that were modified within the last day
Save the number of bytes in "$file" after decompression into variable "size"
Print a sorted list of all .jpg files in the current directory and below
Remove empty folder, and skip error message if one is not empty.
Calculate md5 sum of file $item and save it to variable 'md5'
create archive "backup.tar.gz" from /path/to/catalog
Source executable "virtualenvwrapper.sh" found in $PATH
Take the last slash-separated section of variable "FILE" and copy it to variable "NAME".
Identify CMS version/releases accross all your Drupal websites
Remove all files with names like "vmware-*.log" from the current directory tree
find all files in the file system with the permissions 777 and having the word "filename" in their name.
Remove last two underscore-delimited fields and following characters in "t1_t2_t3_tn1_tn2.sh" keeping only "t1_t2_t3"
Recursively finds strings with"text string to search” in any file within the 'directory-path', following symlinks, and prints found strings with file names.
Find all files in "/home/" which contain "string1", "string2" or the host name in its filename
Print the list of directories residing in the current directory tree
change the permission of all the normal/regular files to 644 in the current folder
Copy all files in current directory that do not match */not-from-here/* in their paths to /dest
Replace all occurrences of word "foo" with "bar" in *.c and *.h files from the current directory tree
Find all subdirectories of the current directory except hidden ones
Find all files under current directory and replace the match of the regex '^.*/S' with 'S' in every line of the output
find all the files under '/usr/local' directory tree which have been modified exactly 24 hours ago
Sort "$file" and output the result to "$file"
Find recursively the latest modified file in the current directory
Search the current user's home directory and below for all .png files and copy those files in the directory imagesdir.
Recursively changes group ownership of everything in '/home/secondacc/public_html/community/' to 'fancyhomepage'.
Recursively finds all files containing text 'OPEN' and prints folder where they are placed.
Find files under current directory that are newer than $date_time in regards of modification time
Find all directories under 'test' directory tree that match the regex '[course*]' in their paths
Search "file1" for lines matching regex patterns listed in "file2" and list the unique results (sorted alphabetically)
search for all the files which have not been modified in the last 6 months (180 days) in current folder and display the total disk usage of them
display all the files along with their group name in the folder /home which do not belong to the group test
List all files in entire file system owned by the user wnj and are newer than the file ttt
Find files named "needle" ignoring the case
Find all files/directories named orm.properties in entire file system
Print the last command in history
list all js files under currect directory exculde the directory which path contain "/path/to/search/exclude_me" or name isexclude_me_too_anywhere
Display last 100 lines of file-with-line-too-long.txt, waiting for user input after each page.
Find all *.txt files/directories under your home directory
Saves exit statuses of piped commands in a system variable PIPESTATUS='([0]="1" [1]="2")
Create intermediate directories as required
List all SGID and SUID files in entire file system
Split "randn20M.csv" into files of at most 5000000 lines each with prefix "_tmp"
Find links to any file that happens to be named `foo.txt'
Print all unique directory paths under "dir1" compared to "dir2"
Finds users with X session in system and puts the result in USERS variable.
List all *fink* files/directories under current directory
Find all directories under $path
Recursively change owner to "$1" and group to "httpd" of all files in the current directory
find all the text files in the current folder starting with "somefiles-"  and prepend the first line
Find all files/directories with '.txt' extension that are less than 100 KB in size under '/home' directory tree
Prints top-ten biggest top-level folders within a 'var' folder.
search for a word in all the files in the current directory
Prints shell option 'globstar' with indication of its status.
Print the first 10 files or directories found in the /tmp directory tree by `find'
Compare "current.log" and "previous.log" line by line and print lines containing regex pattern ">\|<"
Find files in the current directory tree whose names begin with "file" and whose size is 0, and remove them
Find files whose pathnames end in "config"
Sort numerically and compare files "ruby.test" and "sort.test"
Find all directories under dir whose names are 33 characters long
Find all *.log files under path/ that do not contain "string that should not occur"
Find all files with '.txt' extension under '/home/my_dir' dirctory tree and display the number of lines in these files
Show all files in user's home directory that have read, write and execute permissions set for user, group and others.
Print the file content of command "[whatever]"
create a zip of log files in the current directory which have not been accessed in the last 3 days (-p is for parallel processing for a 4 cpu machine)
Find files/directories in entire file system that have been modified in the last minute
set a crontab to create or update the timestamp of "washere2" in the current directory every 30 minutes.
search for MP3 files in the current folder and subfolders except in dir1 subfolder.
Find all *.rb files/directories under current directory
Search for 'invalidTemplateName' in all regular files in directories/files taken from the glob pattern './online_admin/*/UTF-8/*' and show the matched lines with the filenames
Delete all files/directories taken by the glob pattern * except the ones with the name 'b'
Display the content of YourFile.txt, waiting for user input at each page.
unsafed rm all file which name start with '#'
Find root's files in the current directory tree
Remove the regular files from the current directory tree that are newer than /tmp/date.start but not newer than /tmp/date.end
download a file "http://download.oracle.com/otn-pub/java/jce/8/jce_policy-8.zip" using cookies "oraclelicense=accept-securebackup-cookie"
Print newline, word and byte count for all .h, .c, .cpp, .php and .cc files under current directory tree and also show the total counts
Run an awk program on every TXT file found in the current directory tree
Count md5sum of all '*.py' files in a current folder with subfolders.
View history using "more"
Print extended file information for regular files found under the home directory whose names start with my
Prints full process tree with id number of each process.
find all the header files in /usr/include which have been modified in the last 400 days
Find <fileName> files/directories under current directory
delete all the mp4 files in the folder /home which are bigger than 10MB
Search for 'some string' in all *.axvw files under current directory and show the matched lines with line numbers
Find the "param1" string in regular files under and below /var
Print login information of all users except the first two and replace all instances of " " with ", "
Make directory "temp"
Find files in entire file system that are writable by group or other
Cuts off last part from the path $dir, and deletes resulted folder if empty.
Find the 5 largest regular files in the current directory and below.
Append all regular files modified in the last 24 hours to the "$archive.tar" tar archive
display a long list of all the jpg files in the home folder(plus at the end is used to give bulk data as input)
copy all files which do not have execute permission to another folder
delete all the log files which have not been modified in the last 5 days after user confirmation
Locate the httpd.conf file on the system
Find files modified in last 7 days
Search for utility "foo" in PATH, display its file type description.
Find all files/directories named 'articles.jpg' under '/home/username/public_html/images' directory tree
Prints calendars of July, 2009 and July, 2010 side-by-side.
Read and execute file 'lib/B' that located in the same directory as the current script, will fail if currently running script is not in PATH.
Remove all files under current directory
Sort file.txt ignoring the last 10 characters of each line.
Find all regular files starting from level 3 of directory tree ~/container and move them one level up
Save absolute path of the script filename in variable "MY_PATH"
find all the files in the current folder which do not belong to any user
Set permissions for all direcotries under /var/www to 755
display the file name and creation month of top 11 files in the entire file system
Search my_folder recursively for text files containing "needle text"
search for a word in all the files in the current directory and display the file paths relative to the current directory
Find all SGID set files
Archive "/media/Incoming/music/" to "/media/10001/music/" on host "server" and skip files that are newer in the destination, delete any files in the destination not in the source, and compress data during transmission
Show ls's detailed output for all files named "something"
Find all files on the system whose names are 'autoload.php'
List all files in /home/bozo/projects directory tree that were modified exactly one day ago
Send SIGHUP (hangup) signal to nginx master process, causing it to re-read its configuration and restart child processes if necessary.
Find files/directories named 'file.txt' that belong to user 'tutonics' in the entire filesystem
Check that the master SSH control socket "my-ctrl-socket" to "jm@sampledomain.com" is running
Report file system disk space usage in human readable format
Recursively removes all files like '*.pyc' in a current folder.
Find files under /usr that are newer than the first file `FirstFile'
Merge colon-separated information from file1 and file2 where first field of both files matches
find StringBuffer in all *.java files
Find all files under current directory and make them read-only for owner, read & writable by group and remove read-write-execute permission
Find all or single file called FindCommandExamples.txt under / directory of owner root
Make a copy of file.txt in all directories in current directory - names may not contain spaces.
Search the "test1" directory recursively for regular files
Read a line from standard input into variable "SSHPASS" with prompt "Password: " and without echoing the input
Find files in the current directory and its sub-directories that begin with 'f'.
Prints help on 'cp' utility.
Display only line numbers listed in 'file_of_line_numbers" from file 'source'.
Remove trailing whitespaces from all regular non-hidden files in the current directory tree
find all text files in user/directory/ which have been modified today and display the last line of these files
Search the current directory recursively for files last modified within the past 24 hours ignoring paths ./es* and ./en*
Search the directory given as variable $d for empty subdirectories
Lists '/tmp/hashmap.$1' file or folder '/tmp/hashmap.$1' content one file per line.
Find all files/directories that contain the string literal '`$VERSION`' in their names under current directory tree
Copies '[MacVim_source_folder]/src/MacVim/mvim' to the  '/usr/local/bin', printing info message on each operation.
Search directory tree $DIR for *.txt files
Add group write permission to all files and directories in the current directory including hidden files and excluding ".."
search for php files  in current directory and search for a word in all these files
find all the empty directories in the current folder
List all files/directories under current directory
find al the files that are modified exactly 2 days ago
display a long listing of all the "Trash" files in the folder /home
Creates temporary file, replacing XXXXXXXXXXXXXXXXXXXXXXX with equal length suffix.
Find all *.c files under and below the current directory that contain "wait_event_interruptible"
Go to /the/project/root//data, which in most filesystems/operating systems will be the same as cd /the/project/root/data
print disk usage of files or folders in current directory
Locate all the hard links of file `passwd'
Print unique lines in "file_a" and "file_b"
Find all files/directories with '.pdf' extension excluding 'pdfs' directory and all of its contents
convert epoch second timestamp to date
Print unique lines of sorted file "A.txt" compared to sorted file "B.txt"
Change permissions of directory "/home/sshtunnel/" to 555
Calculate md5 sum of the md5 sum of all the sorted files under $path
Find all files/directories under /path/to/dir and set directory permission to 0755 and file permission to 0644
Change the owner to "root" and group to "specialusers" of "dir1"
Print "a\nb\ncccccccccccc\nd" as two columns and neatly format into a table
display all the header files  and cpp files in the current folder
Find all the files which were modified 50 days ago
Compresses with compression level 9 all files under the current folder but already compressed '*.bz2' files, performing in background.
search for files in the current folder using name patterns
Create a full path symbolic link "$newlink" from a relative path symbolic link "$origlink"
list all java file that StringBuff in context.
display all files in the current folder with the name test excluding those that are present folder test
Search the regular files of the current directory tree for string "foo"
Archive all files (not directories) in "folder1" to "copy_of_folder1" specifying to include files info.txt and data.zip
Find all files/directories with 777 permission under '/apps/audit' and strip write permission for 'other' from them
Search for files with "demo" in their names and "sitesearch" in their path names
Find all CDC* files under current directory that were accessed less than 1 day ago and delete the first and last lines from those files and count the number of lines in the output
Find files/directories not changed in two weeks under /dev/shm
Search the current directory tree for symbolic links to files matching pattern '*test*'
Counts lines with all-cased word 'null' in file 'myfile.txt'.
Find all files/directories under current directory and print only 2nd field from output delimited by '/'
find all javascript files under the current folder
split all files in directory "/dev/shm/split/" into pieces per 1000 lines
Find all files under /path and below writable by `group' or `other'
Delete all directories in the /myDir directory tree
display all symbolic links in the folder "myfiles"
Search for first match of the case insensitive regex 'oyss' in all *.txt files under current directory and print the file paths along with the matches
Search the bla directory recursively for *.so files
Finds more than 5 days old files in two directories  and compresses them.
Change all cron jobs running "anm.sh" to be run every 10 minutes instead of 5 minutes.
Recursively removes all files in a 'path' folder but 'EXPR' files.
find all directories in the current directory which have the name foo and do not have the extension "bar"
Search for directories that contain the phrase "foo" but do not end in ".bar"
search in the current folder for the files that begin with "myletter"
Print each line in "file1" and file2" separated by tabs and "file3" separated by a space
Change permissions of "/dvtcolorconvert.rb" to 755
Read a line from standard input into variable "response" without backslash escapes using the prompt "About to delete all items from history that match \"$param\". Are you sure? [y/N] "
Find all files/directories that contain the string literal '$VERSION' in their names under current directory tree
find all regular file and create jw-htmlfiles.tar
Search the current directory tree for files and directories with permissions 775
Compress a file named '{}' in the current directory
Remove the .jpg files from the current directory whose names match regular expression ".+-[0-9]+x[0-9]+\.jpg"
Find files that are 0 bytes in size in the current directory and remove them
search for a word in all the shell scripts in the current folder and display the matched files.(case insensitive search in grep commad)
Print lines 16225 to 16482 in file "file"
Prints directory where the executing script ($0) is located.
find all the directories in the current directory which dont have the execute permission.
search for the file foo.txt in the entire file system
Remove duplicate phrases and keep the original order of lines in "$infile"
Format bash array "${arr}" in columns
Search the current directory recursively for regular files modified 2 days ago
Read a line from standard input with prompt "Are you alright? (y/n) " and save the response to variable "RESP"
Search all files and   directories either of the directory /home/oracle and  /home/databse which  contain the "zip"  anywhere in the files or directory name .
Find all files/directories with case insensitive name pattern $TARGET that are located in minimum 10 level down the current directory
find all the files in the entire file system which have been modified in the last 48 hours
Find all the files called FindCommandExamples.txt of owner root
search for the file filename in the entire file system
search for all the regular/normal files with the name "access.log" in the folder /var/www which are bigger than 100MB
Cut all remote paths from HTTP URLs received from standard input (one per line) keeping only the protocol identifier and host name, of the form http://example.com
Count the number of lines in "testfile" wrapped to fit in a width of "$COLUMNS" characters
List the commands in /usr/bin, pausing for user input after each page.
List current user's crontab.
Follow symbolic links for the full path of "lshw"
Recursively change owner to "tomcat6" of "webapps", "temp", "logs", "work", and "conf"
Print the files in the current directory as a list of comma separated values
Search the /Path directory tree for files matching pattern "file_name*"
Print directories in the the current directory as a list with no report information
Print the 6th field (delimited by '/') from the paths specified by ~/bin/FilesDvorak/.* files/directories
Search for 'ireg' in all PHP files under 'project' directory tree and show only the files that match
display the amount of disk space used by all the log files in the folder /usr/local/apache/logs/
Search three folders named foo, bar, and baz for all "*.rb" files
Find all symbolic links under the current folder and below
search for the file "process.txt" in the current directory
Split "filename" into files of at most 200000 lines each
Move all files listed in $i file to dir.$count directory
Save the numerically greater value of "$kf" and "$mp" into variable "gv"
Print the time of last boot
Search for hidden files non-recursively
Mount "/windows" using /etc/fstab entry
Gets IP address of ${NET_IF} network interface.
List every symbolic link in every home directory's subdirectory owned by group `staff'
display all directories in current folder and do not search in sub directories
Find all regular files on the system whose names are 'myfile'
print bindings for "p" and "e" with no case sensitivity
Find all 777 permission files in entire file system and set permissions to 644
Find all files/directories with '.log' extension that belong to the group 'adm' under '/var/log' directory tree
find all the error, access, ssl_engine and rewrite logs which are bigger than 300MB and are less then 5GB in the folder /opt
Kills all child process and process itself having id 24901.
Print pathnames of all files in the current directory and below skipping files under SCCS directories
Search the current directory tree for the files with extension "trc" and remove them if they are more than three days old
Find all files under current directory
Move all directories in the current directory tree that have been modified in the last day to "/path/to/target-dir"
Find broken links using the file command on each symlinks in the system and searching for the keword 'broken' with grep
Find all files in the current directory and its sub-directories that have been modified sometime in the last 24 hours.
Change the permission of all regular files under current directory tree to 644
Copies ${FILE} to COLLECT folder with unique name formatted like 'job_XXXXXXXXX'.
Show all values (without the names) of variables whose name or value contains "VARIABLE_NAME"
Print a list of regular files from directory tree sort_test/ sorted with LC_COLLATE=C
Find all files/directories with '.js' extension under current directory tree excluding paths that contain the directory './directory'
Counts lines in each of *.php files in a current folder and subfolders and prints total count.
Merge lines whose first comma-separated field in file 'in1' also appears as a first comma-separated in file 'in2' - both files must be sorted.
Print only unique lines in files 'set1' and 'set2'
Find all files in the current directory tree whose path names match pattern './sr*sc'
Find a.out and object files in the current directory tree
Print a randomly sorted list of numbers from 1 to 10 to file "/tmp/lst" and the screen followed by " -------"
show all the directories in the current folder
List files larger than 10MB under /var/log /tmp that haven't changed in a month
Change folder to the one where $0 link target file is located.
Find all lines matching "$USER" in "file" and number the output
find files in the users home directory and for each one, ask the user to confirm to delete the file.
Recursively changes group ownership of every file in '/var/tmp/jinfo' to 'www-data'.
Split "file.txt" into files of at most 1 MiB in size with a numeric suffix, prefix "file", and additional suffix ".txt"
Calculate the md5 sum of "exampleString"
Search the current directory recursively for files containing "needle text"
find all regex "./[a-f0-9\-]\{36\}\.jpg" files
display all the files in the current folder which are bigger than 100MB and save the output list to the file /root/big.txt
Pass all the files from the current directory tree as arguments to a single 'echo' command
remove all files that's older than 30 days in '/tmp'
Find all regular files residing in the current directory tree and search them for string "/bin/ksh"
Search the entire file hierarchy for all regular files owned by olduser and change their ownership to newuser.
Display long listing of all the files/directories owned by the user 'me' under '/tmp' directory tree
Saves space separated content of $RAW_LOG_DIR in FILES variable
Create a symbolic link named "$1/link" to the existing full and real path of "$2"
Add "new." to the beginning of the name of "original.filename", renaming it to "new.original.filename".
Save 'foo' into variable 'bar' in ksh
get year-month-day hour:minute:second from date
Make directories to "x/p/q" as needed
find all the files ending with .ini in the current directory.
Prints long listing of a last modified file in a current folder.
display all the directories in the folder /var and do not go beyond 2 levels during search
If variable "c" is a syntactically correct cron job, erase user's cron jobs and add "c" as the only cron job for user.
Forward all connections to client localhost 3309 via the SSH tunnel to "mysql_access_server" and then connect to host "sqlmaster.example.com" on port 3306
Archive all filepattern-*2009* files/directories under data/ into 2009.tar
Prints file.txt without the last N bytes
Calculate the total size of all *.jpg files in the directory tree
SSH into $1 with login name 'pete'
Make directory and parents as needed for each unique mime type in the current directory
display all files in the current folder
find all files in current folder which are bigger than 1MB
Change directory to "/lib/modules/" of the current kernel release
search for the directory with the name aa in the current folder
find all the files in the file system which have been changed 1 minute ago.
Set 444 permission to all regular files under current directory
Remove all vmware-*.log files under current directory ensuring white space safety in filename
Return the list of files named "filename" that are 50 megabytes or larger
Remove trailing white spaces from all files under dir directory ensuring white space safety in the filename
Get only the latest version of the file 'filename' under current directory
Search through the /usr/local directory for files that end with the extension .html, and print the file locations.
Search all files from the /tmp directory tree for the string "search string"
Print the list of files in the current directory tree with "xx" preceding and following each filename
Find all directories under media/ directory and change their permission to 700
delete all the normal files in the current directory whcih have the word "gui" in their content.
search for a regular/normal file myfile in the folder "/home/weedly"
Display difference between one.txt and two.txt side-by-side.
Print unique lines in sorted "file1" compared to sorted file "file2"
remove all the files in the current working directory which have a specifc inode number
Recursively removes all empty folders from the X folder.
Finds matched text in defined path recursively, but not follows symlinks.
For every cron job with a comment "change-enabled" at the end of its crontab entry, change the scheduled hour to 7.
Request A record from nameserver $ns for domain name $d, filter strings with domain name and exclude lines matching 'DIG'
Go to first directory specified in PATH which contains the command 'oracle'
Find all files and directories in the current directory tree except those whose name is "dirname", case insensitive
Prints last modified file in a current folder with modification time.
Display the last 3 characters of variable foo.
Print second field from semicolon-seprated line $string.
Find files in the current directory tree whose size is 24000 bytes
print the last word in a.txt
Find all the files whose permissions are 777
Sort the lines of the file 'inputfile', keep only the uniq lines and change it in-place
find all regular/normal files in the current folder that have been modified in the last 120 hours
search for the file "file" in the current folder excluding those in the sub directory ".git"
Enables shell option 'cdable_vars'.
Open a ssh connection to "user@host" with a control socket "/tmp/%r@%h:%p"
Find files under current directory without descending into other file systems and append a null character at the end of each paths
Display mime type of file specified by variable "file"
Make directories "~/foo/bar/baz", "~/foo/bar/bif", and "~/foo/boo/bang" as needed
Find all SUID files in entire file system
Find all *.txt files/directories under current directory
List files larger than 10MB in the /var directory recursively
Find all *.m4a files/directories under /home/family/Music directory
Search  in current directory downwards all files whose size is 10 blocks .
Lists all files that matches path pattern with wildcards.
display long listing of all the text files in the current folder
Search for non-empty files
Find all files/directories under /var/www/some/subset and change their owner and group to www-data
display all the files in the file system excluding all the ".c" files
Print the last space separated word from "a b c d e"
Find things changed today
Copies all files under current directory like '*FooBar*' to the '~/foo/bar' directory.
Find all files/directories under '/usr/share/doc' directory tree whose name start with 'README'
Identify files that do not have a listing in the /etc/passwd or /etc/group file
Find every vim undo file under current directory
Find all *shp* directories under current directory and move '*' (literal) file/directory inside those directories to shp_all
Make regular files from debian/fglrx-amdcccle/usr/lib/fglrx/bin/ executable for all
Archive all *.xml files under current directory tree to xml.tar excluding the files that match '/workspace/' in their paths
Find all regular files in the the user's home/mail directory and search for the word "Linux".
Set variable GZIP to the full path of command "gzip"
Remove the regular files from the current directory that were last modified on November, 22
Delete all empty directories under root
Search for files bigger than 10M
Display the current directory tree except files or directories starting with "3rd"
Search $MYGROUP in /etc/group, take the 4th colon (':') separated field, replace comma (',') with newline and save the result to variable 'MYUSERS'
Recursively finds all folders in a current folder that contain files like '.git'.
Create tar.gz files older than one day logs
Join lines in file "aa" with lines in file "bb" if the lines share a common first word
Print only group names from /etc/group.
List and remove all regular files named "core" that are larger than 500KB
Prefix each non-blank line in "filename" with a line number
search for the file foo in  the current folder and display a long listing of it in sorted order of modification date
display all regular files in current folder which have spaces in their name
Find all directories whose name is root in / directory
Set shell option 'dotglob'.
Find PHP files containing 2 or more classes
Read a line from standard input and save each word in the bash array variable "arr"
search for files that are readable for everybody, have at least on write bit set but are not executable for anybody
Find files in the current directory tree that were accessed within the last 60 minutes
print all filenames of files under current dir containing 'foo', case-insensitive
Display detailed usage help of the 'cp' (copy) command.
Find all files under ~/code that are executable by owner without descending into hidden directories and print their parent directories appended with : at the beginning and remove all newlines and the last : (colon)
Search all files in the current directory tree for "SearchString", ignoring .html files and skipping .svn directories
Print the current date followed by ' doing stuff'
Removes all files from current folder but 5 newest ones.
Split "t.txt" into files with at most 30000000 lines each and use a prefix "t" and numeric suffixes of length 2
Print "RDBMS exit code : $RC  " to the console and append to "${LOG_FILE}"
Display system information: kernel name, hostname, kernel release and version, machine architecture, processor type, hardware platform, and operating system type.
find out what group a given user has
Find all test.txt files/directories under current directory
Search the files from the current directory tree for "foo"
display all the ".c" files in the current folder excluding those that are present in the .svn sub folder
List each file or directory in the current directory prefixed with its filesize in bytes and sorted from smallest to largest
Find all the Sticky Bit set files whose permission are 551 in the file system
kill all background jobs
Recursively removes all files like '*.pyc' in a current folder.
Prints long listing of directories '/tmp', '/tnt' themselves.
Find and remove the .rhosts file in the /home directory tree
Print a count of each unique line from standard input sorted from least frequent to most frequent
search for the file "myletter.doc" in the home folder
Replace "foo" with "bar" in all PHP files in the current directory tree
Change file permissions on all regular files within a directory
Remove all directories in and below the current directory
display all the directories in the current folder
Remove all *.log files from the current directory tree
Find all files under current directory and set their permission to 775
Calculate the md5 sum of the contents of all files sorted in directory tree "/path"
Change permissions to 644 for all files in the current directory tree
Create a symbolc link named "latest" to the last modified file or directory in "target-directory"
Make directory "mybuild"
Copy file 'src' to 'dest', except if 'dest' already exists.
Find all regular files in the home directory tree that were modified in the last 24 hours
Report all files starting in the directories /mydir1 and /mydir2 larger than 2,000 blocks that have not been accessed in over 30 days
Make sure the file ".bash_profile" exists in current directory, update its timestamp to current date/time.
list files that the user does not have permissions to read, do not try to descend into directories that cannot be read.
find all the files in the entire filesystem which belong to the user root and display the ten files.
Find all .svn directories under current directory and delete them
Find all empty directories in minimum 2 levels down the root directory
Find all files/directories named 'photo.jpg' (case insensitive) under current directory tree
display the type of all the regular/normal files in the entire file system
Search the current directory tree for the files with extension "trc" and remove them if they are more than three days old
find files which modification time is  7 days ago
Changes group ownership of 'shared' to 'Workers'.
find all the files that have been modified in exactly 7*24 hours ago
Print the characters in $b that match with any character in $a without printing any whitespace in-between
Search regular files from the /path/to/dir directory tree for lines that contain "_START" and are enclosed in lines "@GROUP" and "@END_GROUP"
Search the system for the file 'myfile' ignoring permission denied errors
Write contents of "/sys/kernel/debug/tracing/trace_pipe" to standard output and to "tracelog.txt" executing as a root user
Find all regular files whose names contain "@" in directory tree ~/$folder
create directory practice into home directory
List files smaller than 9kB residing in the current directory and below
Report file system containing path-to-file disk usage human-readable.
Find all files/directories under ./var/log directory
Find regular non-hidden files containing `some text' in their names with hidden directories optimization
find all files in the file system which belong to the group users and having the word "filename" in their name.
Find all empty files (zero byte files) in your home directory and its sub-directories.
Find all files/directories under current directory that match the case insensitive regex ./\(EA\|FS\)_.*
Search the /home/pankaj directory for regular files whose status has changed within the last 5 minutes
Copy "src/prog.js" and "images/icon.jpg" to "/tmp/package" keeping relative path names
Delete all 'restore.php' files in /var/www and 3 levels below
Find all read-only files
Search for the pattern 'search string' in all the files in the ''/tmp folder and display the matched lines along with the file names
Search for 'keyword' in all javascript files under current directory tree excluding all paths that includes the directory 'node_modules'
Prints date of first Tuesday in January, 2015
Print continuous characters '/' and '\' randomly from /dev/urandom
Print file system disk space usage with sizes in powers of 1000
Check the environment variables generated by switching to the root account.
Report all C language source code files under the current directory
List the directory paths of all *.ext (case insensitive) files under /path directory
Prints long recursive listing of all content of a root folder, appending output to 'output.file'.
find the biggest files only (but not directories)
Remove all files and directories under '/home/foo' directory tree that match with one of the name patterns '.DS_Store', '._.DS_Store' , '._*', '.TemporaryItems' or '.apdisk'
Creates temporary folder in /tmp/ (by default) with 10-letter suffux.
split file data.csv into pieces per 100 lines
Find all empty directories under $somedir and copy /my/configfile into those directories
find all the xml files in current folder and which are present in the pattern list file "/tmp/a"
Force create a symbolic link named "currentDir" to "newDir" without dereferencing "currentDir"
find all files named `linux' on the system
delete all the core files in the folder /prog which are bigger than 1KB
Make directories in "/TARGET_FOLDER_ROOT/" for each ".mov" file in the current directory tree
Give all directories in the /path/to/base/dir tree read and execute privileges
Find all files/directories named 'foo.bar' under './dir1' and './dir2' directory trees
Save the UTC date represented by time string $sting2 as the seconds since epoch to variable 'FinalDate'
change owner of the files into directory "/mydir" with ".txt" extension to user root
Make $WEEKS_TO_SAVE+1 directories named "weekly.N" where N ranges from 0 to "$WEEKS_TO_SAVE"
Create 1000 files each file having a number from 1 to 1000 named "file000" to "file999"
find all the files in the current folder that are modified after the modification date of a file
Find all *.plist files/directories under current directory
Find file `Chapter1' on the system
find all regular/normal files which have cpp folder in their path
Extract five digits sequence from a filename with x number of alphanumeric characters followed by the five digit sequence surrounded by a single underscore on either side then another set of x number of alphanumeric characters.
Output "testFile.txt.1" without the ".1" suffix.
Print summary of new/missing files, and which files differ between /path/to/folder1 and /path/to/folder2, sorted alphabetically.
Replace all ocurrences of '<title>' with 'sblmtitle\n<title>' in all the regular files with '.html' extension under current directory tree
find all regular files which have been modified in the last 48 hours in home folder
Search the current directory tree for files and directories called "test"
Page through the contents of 'input_file_name' hexdumped with space-separated 2-byte units.
Print the average time of 4 ping requests to "www.stackoverflow.com"
display all jpg files in the current folder
Find all files/directories in entire file system more than 700 Megabytes
Format bash array "${arr}" in columns
Find all files/directories under current directory tree whose names start with 'test' followed by two digits and end with '.txt' extension
create an archive using pbzip2 as a compress program
Find all files in the /usr directory tree that are owned by group `staff'
Print NS record for domain 'domain.' from 'some.other.ip.address' nameserver
Print each unique entry in "ip_addresses" followed by a count
Find all files that have been modified in the last seven days.
Find all files with extension .aac in the /home directory tree
Opens gcc info manual and selects "option index" menu entry.
Finds strings with dot-separated sequence of numbers, and prints part of that sequence before the second and third dot.
Print 'Since -printf is an action the implicit -print is not applied\n' for every file named 'file' found under current directory tree
Find all symbolic links under '/some/directory' tree
Recursively removes all files with name like "*.war" in  /home/ubuntu/wars folder.
Gets list of IP addresses of all network interfaces.
Find the first file/directory named 'something' under current directory and quit
find not case sensitive all directories that names are 'project.images'
Print the name of "file1" if this file is newer than "file2"
Keep only the last two hyphen-separated sections of "abc-def-ghi-jkl"
Measure the disk space taken up by all *.txt files in directory tree /home/d
display all the files in the home folder which begin with "arrow"
display all regular/normal files which have been modified in the last 30 minutes
Delete line 2 in numbered file "file" and renumber
List recursively all files and directories in /var/www and pass the result to the `more' pager
Find recursively all files under current directory tree that contain a colon in the filename
Find all *.swp files/directories under current directory
Split "INPUT_FILE_NAME" into files of at most 500 MiB each with a numeric suffix of length 4 and prefix "input.part."
Prints the Nth line of output from 'ls -1'
Remove trailing white spaces from all files under current directory ignoring .git and .svn directories
Find all the files/directories under '/usr/local' directory tree which have been modified within the last day
Recursively finds all "*.pas" and "*.dfm" files and prints strings with "searchtext" ignoring text distinctions, suppressing error messages, highlighting found patterns and preceding each found string with file name and string number.
Find all files in the current directory tree ignoring the ".git" directory
Search for $SEARCH in all regular files under $DIR directory tree and display the number of bytes of the matched output
Decompress and extract 'archive.tar.gz' into '/destination'
Find all files called "INPUT.txt" in the current directory tree and remove lines starting with # in them, saving backup copies as INPUT.txt.bak
Find all *.txt files/directories under current directory terminating their names/paths with null character
Replace commas (',') with newlines in $MOUNT_OPTS and search for the regex '^acl$'
List all *.c, *.h and *.cpp files under current directory
find all the html files in the current folder which have not been modified in the last 7 days
Delete history entry at offset, defined in first argument of executed script
Get the number of "use" statements in all PHP files, ordered
Saves bytes count of the value of '$each' variable.
Show the list of files larger than 100 MB
Shows strings that NOT match regex '^($|\s*#|\s*[[:alnum:]_]+=)'
Returns unsuccessful exit code on each found file like '*tests*' within current directory.
Find all regular files that were modified more than 60 days ago under '/path-to-directory' directory tree, sort them according to timestamp and print the filenames preceded with the timestamps
Set 644 permission to all regular files under current directory
Find all *.txt files/directories in entire file system
Find all the files in file system which are accessed in last 1 hour
change owner of the file destination_dir to user "user:
find foo, Foo, FOo, FOO, etc., but only dirs
Print canonical filename of "/path/here/.."
Remove all empty sub-directories under current directory
Print absolute path of "PATH"
search for files in the current folder which start with "myfile" ( case insensitive search )
change the permissions of all the directories in the current folder, print0 is used for handling files with newlines in their file name
sleep for 10 seconds
Write "deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen" to standard output and append to "/etc/apt/sources.list.d/10gen.list" as root
Update the timestamp of 'filename', or create an empty file if it doesn't exist.
Compare the files in 'FOLDER1' and 'FOLDER2' and show which ones are indentical and which ones differ
search files in current folder using name patterns
Find all regular files under  $somedir directory and print each of their paths after a string literal 'Found unexpected file '
Recursively finds all '*.pdf' files in a current folder and removes them.
Print linker search path using gcc formatted on new lines
change the permissions of all the directories in the folder root_dir to 555
find all the files in the folder Musica and display them in a single line null separated
Print content of 'a' file, showing all non-printing characters including TAB characters, and displaying $ at the end of each line.
Find all directories under /home/mywebsite/public_html/sites/all/modules and set their permission to 750
Search the system for files and directories owned by group `managers'
Save the user name of the current user to variable "whoami"
Find all files with '.conf' extension under '/etc' directory tree that have been modified in the last 30 minutes
Report file systems disk usage human-readable using POSIX output format.
Remove all .txt files in and below the current directory
Recursively from current folder searches only files that names match ".*xxx" pattern, ignores binary files and prints file name before every string that contains "my Text to grep".
Create a symbolic link in target directory "$tmpdir" for each file under the current directory
Remount "/media/Working/" with a umask of 000
Move all files matching patterns "*.old", ".old", ".*.old" from the current directory to directory "../old/"
Create intermediate directories as required and directory  /my/other/path/here
prevents curl from returning error (23) Failed writing body when grepping for foo
Find all CDC* files under current directory that were accessed less than 1 day ago and delete the first and last lines from those files
Execute awk command '{ ...}' on compressed file "FILE"
Read a single character from standard input with prompt "Is this a good question (y/n)?" and save the response to variable "answer"
Determine DISPLAY variable for the session when logged in via SSH
Find all the .mp3 files in the music folder recursively and pass them to the ls command
Print file information of the executable file of command "gcc"
search for text files in the folders /home/hobbes/ /home/calvin/
remove all the log files which have not been modified in the last 5 days
Print the sorted unique column of usernames of users who are currently logged in without the header
login as user root
Find all files/directories under $1 which have at least execute permission for their owner and set execute permission for group for these files/directories
Make directories to "/tmp/test/blah/oops/something" as needed
display all directories in the folder "/myfiles"
Search for files "file1" or "file9"
List each subdirectory name composing the current working directory
Archive "path/to/working/copy" to "path/to/export" excluding files or directories named ".svn"
Find all files/directories named 'testfile.txt' under current directory tree
Removes all files from current folder but 5 newest ones, ignoring folders in a files list.
create directory dirname with permissions 777
Archive all files beginning with .env or .bash in current directory to user's home directory on host "app1", preserving timestamps and skipping files that are newer on "app1"
Recursively removes all folders named '.svn' in a current folder.
Recursively findsfiles with text pattern in current folder, ingnoring case differences, prefixes each matched line with number in file and suppresses error messages about nonexistent or unreadable files.
copy all the regular files in the current directory to the temporary diectory.
Print a sorted list of the extensions of the regular files from the current directory tree
display all the regular files in the current folder that are modified after the file "file.log"
Replace all instances of "STRING_TO_REPLACE" with "REPLACE_WITH" in file "index.html" and make a backup with suffix "bak"
Calculate md5 sum of empty string
find all the files that have been modified in the last 2 day
find all png files in the current folder
Find all files/directories under current directory and put the output into full_backup_dir variable
display all files in the file system which are bigger than 50MB and having size "filename" in them
Find all hidden files in the current directory
search for the files "foo.txt" in the current folder
Archive "/top/a/b/c/d" to host "remote" using relative path names
Find all files/directories under current directory with null character as the delimiter and then replace the null characters with :
Finds file 'Subscription.java' and changes to containing folder.
Add "Line of text here" on top of each *.py files under current directory
Find all IP addresses in /etc directory files
Find strings with 'Features' in /var/run/dmesg.boot' file
Find the largest original ".gz" file in the current directory tree
find all jpg,png,jpeg,pdf,tif,tiff,bmp and other image formats using regular expressions excluding those ending with "_ocr.pdf"
Search the current directory and all of its sub-directory for any PDF files being careful to prevent the shell from expanding "*"  before it's passed to find.
Read a line from standard input in an interactive shell into variable "input" with prompt "Do that? [Y,n]" and suggestion "Y"
display all the files in the current folder which do not belong to any user
show the disk use of all the regular/normal files in the current folder which are bigger than 50MB
Perform a default cPanel configuration
List all files/directories under current directory by replacing all spaces with commas (,)
Find recursively all files in the "." directory tree whose names end with ".class" and delete them
Filters only directories from long file listing of the current directory.
Find all MP3 files in the home directory tree that were modified in the last 24 hours
finda ll the files in the current folder that are modified today.
change the permissions of all the regular/normal files to 664 in the current folder
Print lines in "file1.txt" that do not exist in "file2.txt"
Enables shell options 'expand_aliases', 'extglob', 'xpg_echo'.
tar all files in the current folder and ask for user confirmation before creating the tar ball
Search for files/directories that are readable for everybody, have at least one write bit set but are not executable for anybody
Make directory "dirname" with permissions set to 777
Execute "wget -qO-  http://fake.link/file.txt" every 5 seconds
Rename file with inode number 31467125 to new_name.html
Find all files named 'foo' under current directory tree without descending into directories named 'foo'
List all zero-length files
Print the $N'th line from file by replacing commas (',') with newlines
search for files which are writable by both their owner and their group
display all normal/regular files or directories in the folder "$ORIG_DIR"
Print the contents of "xx.sh"
display all the ".c" files in the folder "/home/david" which have been accessed in the last 48 hours
Find all files/directories named file1 under current directory
create a link to all the html or htm files in the current folder which have been changed in the last 30*24 hours
Find all SGID set files under current directory and show a few lines of output from the beginning
Find files in the current directory tree whose content was changed within the last 60 minutes
Print file information of command "studio"
list all the files in the current directory which are of size 0 bytes.
display all files in current folder which have been modified in the last 60 minutes
search for regular/normal file with the name "myfile" in the entire file system
Find all regular files in the current directory tree and count them
Find all 777 permission files and use chmod command to set permissions to 644
Recursively finds all files not like *.itp, *ane.gro, *.top in a current folder and removes them.
Find all *.c files under /home
Recursively removes all files like '*.pyc' in a current folder, printing info message about each action.
Print summary of new/missing files, and which files differ between dir1 and dir2.
Write the lines appended to "xxxx" as it appears to the console and append to "yyyy" in the background
change the permission of all the normal/regular files from 777 to 755 in the folder "/home/user/demo"
Find all directories under ~/code and replace all newlines with : in the output then remove the last :
Find all files on the system whose names are 'drush'
Read two bytes from "/dev/urandom" and print them as an unsigned integer
Find all *.cpp files in the current directory tree that contain "sub" in their names
Remove files from the file system that are owned by nobody, asking the user before each removal
Locate and rename unprintable directories using inode numbers
Exclude directory from find . command
Search for the system host name in "/etc/hosts" and print the IP address in the first awk field
searches through the root filesystem ("/") for the file named Chapter1.
Print input "your, text, here" formatted to fit 70 characters per line breaking at spaces
Remove all regular files under '/var/log/remote' directory tree that have not been modified in the last 14 days where day count starts from today
Find all directories under current directory excluding those which match the regex /\. in their names
replace a word in all the regular/normal files in the current folder(doesn't actually modify the original file just displays the replaced text)
Get a detailed list of all files on the system larger than 10MB
Find all files/directories that start with 'onlyme' in their names under maximum 2 levels down the current directory
Make directories to "/my/other/path/here" as needed
search for all the regular files in the current folder and display the contents
Prints a process tree for each process of user 'username'.
Move all files and directories in the current directory to "somewhere/"
display all the php files in the entire file system
Give a long listing of all the  *.pl files (Perl files) beneath the current directory.
Send two ping requests to "www.google.com"
Find all files under /home/username/public_html/themes and set their permission to 640
split result of the command "tar [your params]" into pieces per 500 mb named as "output_prefixNNN"
Find and uncompress all files in the current directory tree ending in ".csv.gz"
Find regular files named "regex" under and below /dir/to/search/
display a long listing of all the regular/normal files in the file system which have set uid bit or set gid bit enabled.
find all the files ending with ".coffee" in the current folder and search for the first occurence of the word "re" in each line
Find all directories under current directory
find all the configuration or text files in current directory
SSH into "$NAME" as user "${USERNAME}" using key file "${KEYDIR}/${KEY}.pem", automatically add the host to list of known hosts and execute "${COMMANDS}"
find all the files in the current directory ending with ".i"
Grab the output of "basename" (the last slash-separated section of variable "filename") and echo it to stdout, which basename would do by default anyway.
Prints calendar for a current month without first day of a week.
Sort file "foo.txt" by line to standard output
Search the /home/user1 directory tree for files whose names end in ".bin"
Find all files whose names begin with 'Makefile' in the /usr/ports directory tree and count how many of them contain 'QMAKESPEC'
create an archive using pbzip2 as a compress program
Find all *.csv files under /foot/bar/ and move them to some_dir
Gets IP address of 'eth0' network interface.
Mount remote "cifs" filesystem "//server/source/" on "/mnt/source-tmp" with username "Username" and password "password"
Find all files under and below the current working directory with the word California in the file
Replace all occurrences of edx (case insensitive) with gurukul in all *.css (case insensitive) files under ./cms/djangoapps/contentstore/management/commands/tests directory
Find all files under the current directory and copy their permissions to the same file in "../version1"
Find the largest original ".gz" file in the current directory tree
find all the files in the current directory and display them
Find recursively all files whose names ends with "foo"
Find files under /etc/apache-perl that are modified more recently than /etc/apache-perl/httpd.conf
find all text files in current folder and delete them
Print the calendar for February 1956
Remove all empty regular files under the current directory and below
display all the files in current folder which have been changed in the last 24 hours
Prefix all files and folders in the current directory with "PRE_"
Move all *.emlx files/directories under /path/to/folders/ to ./Messages/ directory
Remove the last file extension from "filename.gz"
Interpret in the current shell all lines in config.sh which contain the word "marker"
Find all files/directories under current directory tree
find all the files in the current folder that have been modified in the last 7 days
Find all empty files in /tmp
Print "/tmp/myfile" starting at line 11
Find all build* directories under current directory and reverse sort them
Print lines in the sorted contents of "second.txt" that are not in the sorted contents of "first.txt"
Search the current working directory tree for files whose names start with "fileA_" or "fileB_"
search for all Scala files under the current directory that contain the string null
List all files with their paths that have identical content.
Modify and rewrite 'file' replacing the first instance of "foo" on each line with "bar"
Create symlinks to all  /home/folder1/*.txt files and 'folder2_' directory with the same name in a target directory named '+'
Prints week day of a 31 day in a current month.
Delete all files in the current directory tree whose names end with ~
List all files in the "test" directory tree except those with '/invalid_dir/' in the pathnames
Print yesterday's date as yyy:mm:dd
find the top 25 files in the current directory and its subdirectories
Compress all files under current directory tree with gzip
Find all catalina* files/directories under /path/to/search/in
Print calendar for February, March and April of year 2009 side-by-side
create a gzip of all the files in the current folder excluding the already gzipped files.
Find all .php files in all directory trees matching pattern `/srv/www/*/htdocs/system/application/' and search those files for string "debug ("
Print the day 1 day ago
Find all the files on the system that have been modified within the last hour
Delete every second line from output of "seq 10"
Set variable "MAVEN_DEBUG_OPTS" to "-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000" on Windows machines
Delete in the background all files in /var/tmp/stuff1 and below that have not been modified in over 90 days
Duplicate directory tree under /mnt/usr/lib to /usr but creating symlinks to files instead of copying them.
search for the file "name_to_find" in the home folder
Copy '/path/to/source' from remote "username@computer" to local "/path/to/dest"
Search the current directory recursively for text files containing at least one character
find all files in current folder and display the total lines in them
Search the current directory tree for files whose names begin with "my" and end with "p" followed by any character, ignoring path names containing "test"
Run an awk program on every TXT file found in the current directory tree
Find all directories with 755 permission and change the permission to 700
Return 0 if file system is mounted on '/full/path'
Print source of the file system containing current working directory.
Find files in the /travelphotos that are greater than 200k in size but do not have "2015" anywhere in the file name
Print either "one" or "two" randomly three times
Find all files excluding files ending with 'gz', 'tmp' and 'xftp' in their names in the current directory tree and compress them with gzip not preserving timestamp and original name
list regular file which file name end with '*.c' or '*.sh' in current directory
display all normal/regular files in current folder
Add '.avi' extension to all files/directories with '.mkv' extension under '/volume1/uploads' directory tree
Write '"myname="Test"' to the console and append to "$CONFIG" as root
Search the current directory tree for regular files whose names match regular expression ".+-[0-9]+x[0-9]+\.jpg"
Find files that end in ".gz" and execute "awk -F, '$1 ~ /F$/'" on their unzipped contents
Find all fglrx-libglx* files under and below debian/fglrx/
List environment variables whose name contains "X"
Find all regular files starting from the current directory
display all the directories in the current folder excluding those that are present in the folder secret
forcibly and verbosely create a symbolic link named "target" to file "source"
Find all regular files under ${path} without following symlinks
Create a local SSH tunnel from "localhost" port 16379 to "localhost" port 6379 using key "keyfile.rsa" and disables the interactive shell
Find in the current direcoty whose suffix is .tmp , find will not serach recursively limit of find is 2 subdirectory .
Find *.java files in the current directory and replace foo with bar in those files
force remove all the c files in the current folder, print0 is used to handle all files with new lines in their names or files with only spaces in their name
find all the config(.conf files) files in the folder /home/pat
Find all regular files starting from level 3 of directory tree ~/container and move them to the current directory's parent
search for all the jpg files in the folder "/mnt/hda1/zdjecia/test1/" and copy these files to the folder  /mnt/hda1/test/<same name as the found file>
Search the .py files residing in the current directory tree for "something"
Set variable 'file' to the base name of first argument to script or function, that is the part following the last slash.
find directory which case-insensitive name is foo in current directory.
Print the first 10 files or directories found in the current directory tree by `find'
Recursively copy "dir_a" to "dir_b" and delete any new files in "dir_b"
Print the unique lines from standard input preserving the order they appear
Count the number of all directories under current directory non-recursively
Search for first match of the regex 're' in all *.coffee files under current directory
Remove trailing whitespaces in .txt files from the current directory tree
Make directory "/path/to/destination"
find all the pdf files in the current directory and display only the directory name in which the pdf file is present
Find suspicious PHP files
Display kernel name, release, and version.
Report file systems inode usage.
Find all file1 and file9 files/directories under current directory
find all the normal files in the home directory which have been accesed in the last 30 days with the size greater than or equal to 100k.
Find all files/directories in entire file system that have  "write" bit set for either the owner, the group, or others
find all files in the folder "myfiles" which are exactly 5 bytes
search for all the files in the current directory which have the group staff and have write permission enabled to the user and display them.
Print sorted list of unique users logged in followed by a total count
Prints full path to files with dot in name in a current folder.
Collapse double slashes in variable "dir" into a single one.
Print each character of "abcdefg" on a line
find Texinfo source files in /usr/local/doc
Find all files/directories named 'vimrc' in the entire filesystem
Creae a tarball 'files.tar.gz' containing all regular files under current directory tree that are newer than 2013-12-04 and older than 2013-12-05
List files in the current directory
Search for files containing string "PENDWIDTH" and view the result using the more command
Go to directory pointed by last element of array "dirs" in bash version 4.2
List environment variables and their values, escaping all semicolons with a backslash.
find files in the current directory with pattern` '*.[ch]' which are contain ‘thing’ string and print file names which can contain spaces
display all the hidden files in the folder /home
Display differences between directories repos1 and repos2, ignoring changes due to tab expansion, white spaces and treating absent files as empty.
find all the html files which are modified in the last 7 days
Find all hidden regular files under /tmp and below
search for the file test2 in the current folder
Create a new RSA key for ssh with no passphrase, store it in ~/.ssh/id_rsa without prompting to overwrite if this file exists, and minimize output from ssh-keygen.
Find all the *.c files at any level of directory Programming under any 'src' directory
display all the text files in current folder
Send reverse requests to get domain name for each address in 'my_ips' list
Find all files under /mountpoint and below which have hard links
Find all .js files in the $d directory tree whose pathnames do not contain whitespaces
create symbolic links in current directory to all files located in directory "/original" and have filename extension ".processname"
Print a 2 byte hexadecimal value, printable character, and octal value of "$1"
Find all 777 permission directories under current directory and  set permissions to 755
Find all files under /path/to/base/dir and change their permission to 644
display all normal / regular files in current folder in reverse order
Find all files in the current directory tree with extension .html and replace all occurences of "php" with "html" inside them
Gets MAC addresses of all IP4 network interfaces.
Go to last directory with name starting with a number, useful for timestamped directory names.
Find all files in the current directory tree and replace string $1 with string $2 in them
Disables shell option 'nocasematch'.
List all *.jar files/directories under /usr, /home and /tmp directory
display all the log files in the folder /var/log, print0 is used to handle files with only spaces in their names or which have newlines in their names
Execute "ls" every second
Recursively set all permissions under "/whatever/your/directory/is" to 755
Count all the lines of all php files in current directory recursively
Find files/directories that are newer than 'foo.txt' under current directory tree
find all the files  in the folder /opt which have been changed in the last 120 minutes
Search directory foo for files containing "/tmp/foo/bar" in their full names
Find all files named 'foo' under your home directory and list them with confirmation prompt
Replace all spaces with underscores in directory names under current directory.
List all regular file owned by root with permissions 4000
find all the files in the folder "/usr/app/etl/01/OTH/log/tra" which have been modified  in the last 240 hours  excluding hidden files and those with the name "/usr/app/etl/01/CLE/par/files_to_skip.par"
List all .jpg files in the home directory tree
See what files are executable by the file's owner and group
Replace all URLs in "MyHTMLFile.html" with "$pub_url" and create a backup with suffix ".bak"
Request that the master ssh connection "otherHosttunnel" exits
Print a list of all files and directories in the /var/log directory tree
List all paths to files or directories under "/data/" that start with "command-" and end with "-setup", sort the result by the version number specified between "command-" and "-setup" (least to greatest)
Find all files named "something" in the current folder and below and run them through the ls -l command, one by one.
Remove all regular files from the current directory tree whose names do not end with "txt"
Take first text field from file 'file.txt' as a domain name and get short A record for this one.
Search for files/directories with the case insensitive pattern anaconda.* in var/log directory
Find all files matching shell pattern "foo/bar" in the foo directory tree
Print the user name of the current user
Search for files/directories named 'fileName.txt' under '/path/to/folder' directory tree without traversing into directories that contain the string 'ignored_directory' in their paths
Find all the .c files in the current directory tree that contain the string ‘stdlib.h’
find files in home directory that accessed more than 100 days ago
Copies all files under the current directory but ones with '*/not-from-here/*' in path to the '/dest/' directory.
search for the file centos in /usr folder ( case insenstive search )
find the file "httpd.log" in the folder /home/web-server/ ( case insensitive search )
Numerically sort each line in file "bb" and output the result to console from greatest value to least value
Write "Some console and log file message" to standard output and "/dev/fd/3"
find all the files ending with ".coffee" in the current folder and search for the words "re" in each line
Find all files/directories with inode number 16187430 and move them to 'new-test-file-name'
Search /tmp/ for files smaller than 100 bytes
Gets IP address of 'eth0' network interface.
Make directories "foo/bar/baz" as needed and do not cause an error if it exists
Creates temporary directory in '/tmp/' folder and saves path to it in 'my_tmp_dir' variable.
Remove all files and directories in the /home directory tree whose names are "Trash"
Replace the leading spaces in the output of "history" with periods
Delete all regular files named 'IMAGE1806.jpg' under current directory tree
Find all directories under /path/to/dir and change their permission to 755
Display "/tmp/file" as a table of width 30 with columns filled before rows
Print appended data in "file" that match "my_pattern"
Finds all folders that contain 'ssh' file and have 'bin' in path.
extract 'archive.tar.gz' to /destination
Find all regular files under current directory tree whose names end with 'cache' or 'xml' or 'html'
Search for files/directories named 'fileName.txt' under current directory tree without traversing into './ignored_directory'
find all class files or sh script files  in the current folder
Print joined strings from 'file', using space symbol as separator.
Search the current directory tree for files containing "sh" in their names
Find all *.css files under $DIR and print the lines matching the regex '\.ExampleClass.{/,/}' from those files
Greps domain $domain IP name from long dig listing.
search for the file foo.txt in the current folder and open it in vi editor
Find all .txt files in the current directory tree and edit them with `vim'
find all the files that were modified two days ago
Force delete all jpg files in current directory which are less than 50KB and do not search in the sub directories
List all empty files in the current directory tree
Find all directories whose name is Tecmint in / directory
Print which files differ in "/tmp/dir1" and "/tmp/dir2" recursively
display all directories which have not been accessed in the last 24*3 hours
Replace "  " with " $UID " in the output of "history"
Archive "/path/to/copy" on host "remote.host" as user "user" to "/path/to/local/storage" updating files with different checksums, showing human readable progress and statistics, and compressing data during transmission
Enables 'globstar' (recursive globbing) shell option.
Find all readme.txt files/directories under your home directory
Search for 'string' case insensitively in all files under current directory tree and show the matched lines with their filenames
search for the files in the current folder which begin with the word "kt" followed by a digit
Exclude directory from find . command
find all the normal/regular files in the current directory
Print count of unique lines in all files like 'list_part*'
add read permission to others for the files in the current folder having the name "rc.conf" in their name.
find all the regular/normal files in the folder /travelphotos which are bigger than 200KB and which do not have the word "2015" in their name
Make directory "dir1"
Reread user's .profile configuration file.
Find any hidden regular files in the current directory and its sub-directories that were modified after .cshrc was last modified.
Print line, word and byte count for each file recursively and also show the total counts
Pipe output of "yes" to "more" and append the first 3 lines to "file"
display all the c files and the header files in the path /some/dir and do not search in sub directories
Print the contents of "my_script.py"
Calculate the md5 sum of "logdir" and print only the hash
Search for the case insensitive regex expanded by $2 in all files named $1 (to be expanded) under current directory
Find all files/directories with user id 120 under current directory tree
search the pattern ^PyErr in all the ".c" files in the folder Lib/
Search the .java files from the /Applications/ directory tree for TODO lines
find directories under the $LOGDIR directory where there have been no modifications for 5 days and deletes them.
Display the content of file "f" in home directory if it exists and is executable
Find all files/directories in 1 level down the current directory
Print unique lines of sorted file "b" compared with sorted file "a"
find all the files in the home folder which have been modified in the last 7 days
List all *.txt files/directories under /etc
Print each character in "Hello" as a hexadecimal value
Recursively finds all 'STATUS.txt' files containing text 'OPEN' and prints containing folder of them.
file1.txt and file2.txt both contain a name and a number on each line. For each name whose corresponding number does not match in both files, display the "Age of ... is different" message.
Removes all top-level *.pdf files in a current folder.
Find all files under the current directory that are not the same file as "/home/nez/file.txt"
display all the files having spaces in the current folder
Gets the groups these users belong to.
Search for 'pattern_to_search' in all regular files with '.txt' extension under '/directory/containing/files' and show the matched lines along with filenames
Append the last modification time of file $arg as the seconds since epoch with a preceding space to the variable 'KEY'
display the html, javascript and text files in the current folder (print0 is used to preserve the filenames of all the files which have newlines in their names)
Compress files excluding *.Z files
find all the files in the file system which have been modified in the last 30*24 hours
Print epoch seconds for given time string "Oct 21 1973"
Find broken symlinks in current directory
find all the files in the file system which hae set uid enabled and save them to /root/suid.txt and those which have size greater than 100MB save them to /root/big.txt
Find all empty directories under a certain path
Output "file.txt", omitting all containing directories "some/unknown/amoutn/of/sub/folder/"
display a long listing of all the xls or csv files in the entire file system
find all the directories in the current folder which have been modified in 24 hours and move them to the folder  /path/to/target-dir
Find all files named "file.ext" within the current folder and print the path where each one is located
recursively change owner and group of the directory and all files into it to user root and group root
find all *.java files/directories under current directory
Find all .rpm files and change their permissions to 755
Find all files under current directory that were modified in the last 24 hours and also include the files that were modified in less than 1 day ago
Copy all files with '.png' (case insensitive) extension under '/home/mine' directory tree to '/home/mine/pngcoppies/copy.' directory
Archive "/path/to/files" to "user@targethost:/path"
Remove all files under /myfiles that were accessed more than 30 days ago
search for all files ending with ".mkv" in current folder
Display a count of regular files in each directory at the current level.
Overwrites file 'filename' with random content 35 times, finally writes it with zeros, truncates and deletes.
Search directory /tmp/foo for files containing "/tmp/foo/bar" in their full names
Search the current user's home directory and its sub-directories for any file that was modified less than 2 days ago or was modified after filename was last modified.
Find all directories containing 'linux' in their names under '/root' directory tree
find file named foo.txt under root / directory.
Print the pathnames of all files from the /tmp/dir1 directory tree
Find file `foo.bar' and delete it
List all IP addresses assigned to current hostname, pausing for user interaction after each page.
Prints process tree of the current process with parent processes.
change the ownership of all regular/normal files in the current directory(print0 is used to handle all the files which have spaces or new lines in their names)
Count total number of lines in all files below current directory.
Read a line from standard input into variable "message" with prompt "Please Enter a Message: " followed by a newline
Compress all ".txt" files in all sub directories with gzip
search for all regular/normal files in the current folder and display the number of lines in the file
Find all .rb and .yml files in the /some/path directory tree and replace "some_phrase" with "replacement_phrase" in them
Find all files with space in their names under current directory
Change permissions to 644 for *.html files under /usr/local
Counts lines of all *.txt files in a current folder.
Finds files in 'directory' folder with the same name and location but different content than files in 'directory.original' folder and saves location of such files to 'directories' variable.
Search the current directory recursively for regular files last accessed more than 2 minutes ago
Find all files that were modified later than ordinary_file in the current directory and its sub-directories.
Print a sorted list of the extensions of the regular files from the current directory tree
Remove all *.mp3 files in tmp directory but not in it's subdirectories
Change permissions of all files ending ".php" under the current directory to 755 and print a count of modified files
Find all directories under /home/username/public_html/modules  and set their permission to 750
Extracts a bz2 file.
Start program 'scriptname' with an empty environment.
display all the regular files in the current folder that are less than 10KB
Recursively copy everything in /source/path whose name doesn't begin with a period, to /destination/path, without overwriting existing files, and outputting a line for each file copied or skipped.
delete all the files ending with "~" in current folder
Finds name of a current month and saves it in a 'month' variable.
Change directory to the user's home directory
Copy all ".xml" files in the current directory tree to "/new/parent/dir" preserving the directory hierarchy
Search the entire file system for any file that is writable by other.
remove all the DS_Store files in the current directory
Print the full path of command "rails"
List the unique tab delimited field number "$FIELD" in all files, prefix with the number of occurrences, sort from most frequent to least frequent
Print the first line and lines with "f" as the third "," separated field in "input" and format the result as a "," delimited table
Look for *.jpg files on the system
Sort "file1.txt" and output the result to "file1.txt"
Get the total size of all files under dir1 directory
Find "*prefs copy" files in the /mnt/zip directory tree and remove them
Find all *.php files under current directory and change their permission to 640
Set variable 'path' to name of current directory (without the containing directories) converted to lowercase.
search in the current folder for the file with the name "test"
Compress "archive.tar"
display all files in the folder bar only in the path /foo/bar/myfile (no output is generated)
Find all the files in entire file system which are greater than 50MB and less than 100MB.
search for all regular/normal files in current folder and display all the files which contain 16 lines
find all the files in the /usr folder which have modification date less than or equal to the file "/FirstFile"
Run a shell with all environment variables specified in the file 'cronenv' in the user's home directory.
Find and list all files on your current directory and show a few lines of output from the beginning
Cut all remote paths from HTTP URLs received from standard input (one per line) keeping only the protocol identifier, host name, and trailing slash, of the form http://example.com/
Find all regular files in the current directory tree and print a command to move them to the current directory
find files in $HOME ending in "txt" or "html" and case insensitive search for the word "vpn"
Print the first 5 characters followed by the next 5 characters on a new line for each line in "input_file" and split the result into files of at most 2000000 lines each with a filename prefix "out-prefix-"
Show the explanation of find's debugging options
Search the current directory for files whose names start with "messages." ignoring SVN, GIT, and .anythingElseIwannaIgnore files
Read a line from standard input into variable "response" ignoring backslash escapes and using the prompt "Are you sure? [y/N] "
Search the .java files from the /Applications/ directory tree for TODO lines
Find all files under /somefolder matching the extended regex '\./(.*\.error.*|second.*log|.*FFPC\.log)$' in their paths
Find all the regular files under $DIR directory tree which have been modified before the file $a excluding the file $a and delete them
List all empty files under the current directory
Extract the second-to-last slash-separated path component, ie. "90_2a5" in this case.
Show the date in default format for tomorrow + 2 days + 10 minutes
Extract 8 bytes as an unsigned integer that is "$o" offset into "$pkg"
Go into the first directory whose name contains 1670
change the extension of all the ".lst" files in the current folder to "a.lst"
Archive any files changed in the last day from "remote_host" to "local_dir"
find all the directories with the name "DIRNAME" in the current folder and force delete them
Set the executable bit for all users on all regular files from directories arch/x86/usr/sbin, arch/x86/usr/X11R6/bin, usr/sbin/
ssh into "hostname" as user "buck"
Delete all __temp__* files/directories under current directory tree
List all regular files in the current directory tree
search for files named "WSFY321.c" in a case-insensitive manner
find all the empty in the current folder do not search in sub directories
find all hidden files in the current folder which have been modified after profile file
Copy the standard output of a "bash" session to "/var/log/bash.out.log"
Search for "whatever" in all files under /dir directory ensuring white space safety in filenames
Prepend the reverse history number as negative values to the output of the history command with arguments "$@"
Search the current directory tree for .aux files
Find all files/directories under /home/feeds/data directory
Find all files/directories named 'document' in the entire filesystem
Replace ",," with ", ," twice in "data.csv" and display the "," delimited result as a table
Search /var for files matching regular expression '.*/tmp/.*[0-9]*.file'
List all files and directories (including hidden) in the current working directory in a long list format sorted by the oldest modification time
display all the text files in the home folder ( case insensitive search )
Make "file.sh" executable
Delete all files in the $DIR directory that have not been accessed in 5 or more days.
Find all directories under current directory and set read-write-execute permission for owner, read-execute permission for group and other for those directories
Print a colon-separated list of all directories from the ~/code directory tree, except hidden ones and those below them
find all the text files present in the current directory excluding the search in certain paths.
Read a single character from standard input and do not allow backslash to escape characters
Find all executable files
List all the .c files under the current directory and below in a 3 column format
Print common files of directory "1" and "2"
Find regular files in the current directory tree that are called FindCommandExamples.txt and remove them
remove all the "core" files in the current folder which have not been changed in the last 4 days.
Find all files/directories named $something under current directory
Compare the contents of gzip-ompressed files "file1" and "file2"
Search the /myfiles directory tree for files that are 5 512 byte blocks in size
Force create a symbolic link named "mylink" with target "/apps/myapps/new/link/target"
Find all syslog directories under /var/log directory
Search the current directory tree for regular files owned by user "www"
Move "phantomjs-1.8.1-linux-x86_64.tar.bz2" to "/usr/local/share/" directory
Find all files/directories under current directory that were modified later than /reference/file
simulate a full login of user builder
search for the directory "mysql" in the entire file system
Find all the regular files under $DIR directory tree which have been modified before the file $a excluding the file $a and delete them
search for word linux in all the regular/normal files in the folder mail.
Go to directory /some/where/long
Report file system containing path to the current working directory inodes usage.
Find all ES* and FS_* files under current directory
Find all files/directories in level 1 down the $queue directory with all positional parameters appended with the find command
Read a line of standard input with prompt "Enter the path to the file: " and suggestion "/usr/local/etc/" and save the response to variable "FILEPATH"
Find files and directories that are at least seven levels of nesting in the directory /usr/src excluding CVS directory
Merge each non-blank line of standard input into a single comma separated line
Will run checksums recursively from the current directory, and give back grouped filenames of all identical checksum results.
find all the regular/normal files in the current folder
Move all *.php~ (case insensitive) files under current directory to /mydir
Show filename and filetype description of all PHP files in current directory whose name or filetype description includes "UTF"
List each unique character in "file" prefixed by number of occurrences
Prints dates of $m month in $y year, preceded by month number and slash like ' 10/1'.
show all directories in the current folder excluding those that are present in the sub directories of media, images and backups
Move all files from the `sourceDir' directory tree to the `destDir' directory
Lookup information for user "vivek"
Show the list of user wnj's files that are newer than file `ttt'
Search /usr/src for filenames not ending in "*,v"
find all files in current folder having the name pattern "some_pattern" and move them to folder target_location (GNU VERSION)
Move all directories in the current directory tree that have been modified in the last day to "/path/to/target-dir"
Find all files which  begin with 'a' or 'b' from current directory downwards and print them.
find all the normal/regular files in the current folder which have been modified two days ago and display a long listing of them
Find files that are 100k
kill all jobs
This command find displays the files which are modified in the last 15 minutes. And it lists only the unhidden files. i.e hidden files that starts with a . (period) are not displayed in the find output.
Print the files to which symbolic links in the current directory point
Prints line count of each file within current directory.
List all hidden regular files from the current directory separating them with zeroes
Archive "/local/path/some_file" to "/some/path" on host "server.com" authenticating as user "usr", compress data during transmission, show progress details.
Find all the files which were modified more than 50 days but less than 100 days ago
Search for files in your home directory which have been modified in the last twenty-four hours.
List all files matching regular expression '*foo*' in a human-readable form
Search the regular files of the current directory tree for string "stuff"
Find all file.ext files/directories under present working directory and print . for each of them
Find all executables under /path directory
Find all directories under current directory and change their permission to 700
Find all files under current directory with their size and paths, reverse sort them numerically, then print first 4 entries
Find the files in the current directory that match pattern '*.ISOLATE.quantifier.txt' and move them to folder ISOLATE/
Find and remove all .txt regular files under the current directory and below
Print IP addresses of the host name
Print the names and sizes of regular files residing in the "tmp" directory tree
Search "file1" for lines matching regex patterns listed in "file2" and list the unique results (sorted alphabetically)
Strips two last sections from the path $pathname, and prints basename of the rest part.
Print the top 10 commands with their use count
create the compressed tar archive images.tar.gz containing all jpg files found under /
Send SIGKILL signal to process ID 16085, killing it instantly.
Find all dir* files/directories under parent
Calculate the md5 sum of hex byte 61
Search for files/directories with the case insensitive pattern anaconda.* in /var/log
Split "system.log" into files of at most 10 MiB in size with a numeric suffix and prefix "system_split.log"
Save the user name in all capitals of the current user to variable "v"
Find files/directories greater than 10MB in your home directory
Change directory to the directory containing the "oracle" executable
Prepend the reverse history number to the output of the history command with arguments "$@"
Find all directories in /var/www/html/zip/data/*/*/*/*/* that are older than 90 days and print only unique paths
Print number of bytes in $file.
Find all files under current directory that were modified more than 7 days ago and delete them
Find all xml files under current directory
Get domain name with 'google' from address $1
List all files/directories under current directory
Print 'file' file, splitting lines into pieces with no more that 3 words in each one.
display long listing of all the files that have been changed in the last 4 days, daystart is used to compare from the starting of day i.e, at 00:00
Lists file descriptors of a current process.
Set variable PING to 1 if it's possible to ping host ADDRESS, to 0 otherwise.
Remove regular files whose names match Perl regular expression '\w+-\d+x\d+\.\w+$' from the current directory tree
Search the current directory tree for symbolic links to files matching pattern '*/test*'
List all regular files matching the name pattern "$1*" (where $1 is a positional parameter) under '/usr', '/bin', '/sbin' and '/opt' directory tree
find all the findme.txt files in the file system
Remove all .sh files in the current directory tree whose names begin with "t"
Find files modified within the past 24 hours
Calculate the md5 sum of the sorted list of md5 sums of all ".py" files under "/path/to/dir/"
Archive preserving permissions and ownership files in "/var/www/" on host "user@10.1.1.2" to local "/var/www/"
Find all files under current directory tree named 'filename_regex' excluding '.svn' and '.pdv' directories and files then search for the case insensitive pattern 'your search string' in those files
Display a long listing of all files/directories that are bigger than 10MB under '/var/' directory tree
Search the current directory tree for files whose names contain "TextForRename"
Find files in the current directory tree whose names are of the form "cxx_data.txt" where xx is a number from 30 to 70
Force delete all jpg files in current directory which are less than 50KB and do not search in the sub directories
search for a word in all the php files in the current folder and display the matching lines
Gunzip all files matching "file*.gz" and answer "n" to any prompts
Search the ./bin directory recursively for files called "cp"
Recursively removes all files and folders like 'FILE-TO-FIND' from current folder.
Search the current directory tree for regular files changed less than 1 day ago
Find all regular *.css files
Recursively unzip files to stdout in "/some/dir/here" and search for "blah"
Save count of lines from file $file matching with pattern $filter and not matching with pattern $nfilter in variable 'totalLineCnt'
Run "./configure" with a new environment variable CC set to the full path of the command 'gcc'
Find all regular files under current directory tree without descending into './dir1' (except './dir1/subdir1*' pattern) and './dir2' directories
Delete all filename* files under /dir directory
Find all TXT files in the current directory and copy them to directory "$HOME/newdir"
Delete all files/directories in minimum 2 levels down the root directory
Find all *.txt file (case insensitive) in the entire system and copy them to /tmp/txt
Counts total number of only lines with alphanumeric symbols in all *.php files in a current folder and subfolders.
Print content of all files found regarding seach options '[whatever]'
Remove all *.sql files in the $backup_path directory tree that were last modified more than 30 days ago
Find files with group write permission and remove the permission
Compress all files under /source directory tree using gzip with best compression method
Source "lib/B" relative to the directory of the executing shell script, will fail if currently running script is not in PATH.
verbosely create intermediate directoriy tmp as required and directory boostinst
Delete all files named 'Waldo' under ~/Books directory tree where '~' expands to user's home directory
Recursively copy all files and folders in the current directory excluding "exclude_pattern" to "/to/where/"
Split "date.csv" into files with at most 100 lines each
display all the files in the current folder excluding those that are present in the folder "secret"
Display an infinite number of lines consisting of "y", until the user presses the Q key.
change the ownership of all regular/normal files in the current directory
List all entry names contained directly by directory in_save in the current directory, pausing for user input at each page.
display a long listing of all the files in the current directory
Gets list of IP addresses of all network interfaces.
Report total file systems disk usage.
Locate all passwd files on the system
display all files in current folder which are bigger than 1 MB
find file named foo.txt under current directory.
Find all files/directories under .. directory and copy them to ~/foo/bar
Replace all spaces with underscores in file paths under current directory.
Rename "blah1" to "blah1-new"
Print the file paths and their sizes for all files under full_path_to_your_directory
Make directorie(s) 'es/LC_MESSAGES' as needed in the current directory
Recursively lists all files in a current folder in long format, sorting by modification time.
change owner and group of the file "file" to user "user" and group "group"
Replace spaces in file names with underscores for all files in the current directory tree
Find all *.ini files
find all files in the current folder which have been modified in the last 24 hours and whose file name is of length 1
Find all files under current directory that were modified in the last 24 hours
Find all Read Only files in entire file system and show a few lines of output from the beginning
Compress regular files in the current directory tree that were last modified more than 7 days ago
change the owner of the files which belong to the group 1000 to username and modify only the symbolic link not the originally pointed file
Display "infile" as printable characters or backslash escapes
Find all files under $musicdir directory
Display inputfile all on one line (replace newlines by spaces)
Search for "ifconfig" in the output of "history" and print 5 lines that precede and follow
ERROR - need to add -a or -r for recursive copy
Find all *.html files under current directory and for each file replace the first occurrence of STRING and previous lines with the content of common_header file
display all the files in the current folder in a single line separated by null command
Delete all hidden files under $some_directory
Merge lines whose first comma-separated field in file 'in1' also appears as a first comma-separated in file 'in2' - both files must be sorted, and the output format of each line will be: first field of in1, second field of in2, and third field of in2.
find the count of all the regular files in a directory
Save the day of the year from the time string "20131220" to variable 'DATECOMING'
delete all instances of the file "bad" if its size is 0 bytes
Find all regular files in /usr/bin modified less than within the last 10 days
Log into "ubuntu@ec2-XX-XXX-XXX-XXX.us-west-2.compute.amazonaws.com" using identity file "~/path/mykeypair.pem"
display all the files in the file system which belong to the user with the id 1005
Find links to any file that happens to be named `foo.txt'
Remove all vmware-*.log files under current directory
create a list of all files in all subdirectories
Find all OGG files in the home directory larger than 20 megabytes
Find all files/directories named 'photo?.jpg' under current directory tree
Remove files whose names match regular expression '^.*/[A-Za-z]+-[0-9]+x[0-9]+\.[A-Za-z]+$' from the current directory tree
Recursively change owner to "amzadm" and group to "root" of all files in "/usr/lib/python2.6/site-packages/"
Sort file1 and file2 then display differences between them.
Change to folder where the oracle binary is.
search for the regular/normal file "foo.bar" and force delete it
Find symbolic links under /etc/
Search "inputfile" for lines starting with "t:" and group the results in files with at most 200 lines each
Search the current directory tree for files whose names start with "f"
Find and print the names of all files found in the current directory and all of its sub-directories.
Print the IP addresses for the current host name
Find file size in bytes
Find all files/directories under current directory that were accessed less than 1 day ago
Find all files that belongs to user root under / directory and show a few lines of output from the beginning
Print $d if $d is an empty directory
Find all files whose names end with "~" in the /home/peter directory tree, following symlinks, and delete them
search for all xml files in current folder and display them
Find all files/directories named orm.properties under current directory
Fix files to default permissions 755
extract 'archive.tar.gz' to /destination
List all environment variables (name and value) whose name either equals HOME or PATH, or starts with GO
list all .c or .sh regular files.
Output the string 'yes' continously until killed
Find all directories recursively starting from / and skipping the contents of /proc/, and count them
Find every directory under "0001" and make new directories replacing "0001" with "0002" at the beginning of their names.
find all the files in the current folder which are bigger than 9MB
Search the current directory tree for files and directories whose names do not end in ".exe" and ".dll"
Find all files/directories under /home/bozo/projects directory that were modified 1 day ago
Display all variables with names starting with "derby" in a Window's command line
Remove all files except the ones listed in "MANIFEST"
Recursively remove all "*.txt" files and answer "y" to any prompt
Create ssh tunnel through "genja.org" connecting localhost port 4444 to "raptor.lan" port 22
Copies ""$project_dir"/iTunesArtwork", to the 'Payload/iTunesArtwork', rewriting files if necessary.
Find files and directories whose owner is daniel
find all text files which have extra extensions in the current folder
search for all "tif" images in current folder
Find all files that belongs to group 'root' under / directory and show a few lines of output from the beginning
change the permission of all the files in the current directory to 664 and change the permission of all the directories  in the current folder to 775.
Save absolute path of "$path" that may not exist to variable "abspath"
find all ".flac" files in current folder starting with "cmn-"
Set up local port forwards in the background with no terminal or command execution from port 4431 to host "www1" port 443 and port 4432 to host "www2" port 443 via the host "colocatedserver"
Delete files with inode number 782263 under current directory
find all files in the file system which have not been accessed in the last 2 days
Pushes directory path that saved in $line variable to the dirs stack, expanding symbol '~', if present, as home folder path.
Find all 400 permission files under /data directory, print 'Modifying ' appended with file path for each of them and change their permission to 755
Pushes to the dirs stack directory path of the current script, or current directory path if executed from bash shell.
Search for files/directories with the case insensitive pattern anaconda.* in var/log directory and create an archive (somefile.tar) of all the files found ensuring white space safety
Remove all but 5 last comma-separated fields from each line in 'data.csv'
Print the current directory tree with file permissions
Find all 777 permission regular files and use chmod command to set permissions to 644
Change permissions to 644 for all regular files under the /path/to/dir/ tree unless these permissions are already set
List all non-empty files under under current directory
split processed content of the file temp into pieces per 1 line named "tempNNN" with numeric suffix
Find recursively all Python files in the current directory tree and count the number of lines in them
Copy all files matching "*failed.ipynb" in the current directory tree to "./fails" preserving the directory hierarchy
Prints what year it was 222 days ago
Merge already sorted files "file*.txt" and split the result into files of at most 100000 lines each with a prefix "sorted_file"
Delete all empty files in the current directory tree
Find regular files in the current directory tree that have executable bits set for the user and group but not for the other
Print the first 2 lines of tree's help message by redirecting it from standard error to standard output
Remove files under /mnt/zip matching "*prets copy" with confirmation
Print lines 10000 to 10010 from input "seq 1 100000"
Make directory and parents as needed to "~/temp/bluecove/target/"
Select everything selected by * without descending into any directories
display all the files in the current folder
list names of bind functions containing "/"
Count the number of "x" characters in "filename"
Compare each file in "repos1/" and "repos2/", treat absent files as empty, ignore differences in whitespace and tab expansions, and print 3 lines of unified context
Print full path of command "programname"
Creates temporary folder within TMPDIR, with name like current shell name and 10-letter suffix.
Delete all regular files that have not been modified in the last 60 weeks under $DIR directory tree
create directory subdirectory
Create a report of the contents of a USB drive mounted at find /path/to/drive
Find all files under ${searchpath} that match the regex ${string1}.*${string2}.*${string3}  in their contents where ${string1} etc.. will be expanded
find all files in the current folder which are of size 0 bytes.
find all executable files
change the group of all directories in the current folder
Find all files/directories named 'text' under current directory
Compare "file1" and "file2" line by line with 3 lines of unified context
Copy all files (not directories) in "/path/to/local/storage" to "/path/to/copy" on host "remote.host" authenticating as user "user"
Make directories "a/b/c" as needed without causing an error if it exists
Remount "/" with read and write permission
Find all directories in maximum 1 level down the current directory that were modified less than 1 day ago
Print a colon-separated list of all directories from the ~/code directory tree, except hidden ones
Force create a symbolic link in "/usr/bin/" for each file matching "$javaUsrLib/jdk1*/bin/*"
Find all regular files that reside in the current directory tree and were last modified 1 day ago
find all files in the file system which are modified after the file /tmp/checkpoint
List all files in entire file system that are newer than the file $newerthan and older than the file $olderthan and sort them according to file modification time
display the count of regular/normal files in the current folder do not search in sub directories
Find every JavaScript file in the wordpress directory
find all .pm, .pl files in /users/tom and search for multiple pattern in same files and display the matched file names
Print line number "${linenum}" in file "$filename"
Print the IP addresses for the current host name
Set the group to "username" for all files with GID=1000 in the current directory tree
Find all *.csv files under /foo/bar and move them to some_dir
find all the files in the current directory which have the inode number 31246 and remove them.
Find all files you have modified in the last two days
List any line in "f1" or "f2" which does not appear in the other and delete all tab characters in the output
Find empty files/directories under test directory
Remove file with inode number 31246
Set up a local SSH tunnel from port 80 to port 3000
Search all files in the current directory tree whose names end in "1" for string "1"
Get files that last had their meta information changed more than 3 days ago
Find all * * regular files under current directory
SSH into server "server.com" as user "remote_user"
show all the ".flac" files in the current folder and do not search in the sub directories
Search for the string 'git' in all the files under current directory tree excluding paths and names that contain the string 'git'
Print received input to the terminal
Locate symlinks in directory trees lpi104-6 and research/lpi104-6
Give rwx permissions to the user and group of the directory named "files" leaving others without any privileges
Gets string with IP4 address of en0 network interface.
Create a symbolic link named "/lib/libc.so.0" to "/lib/libc.so.6"
Find all files under current directory whose file type description contains "image", display only path to each file.
For each line in 'file', print "result = " followed by the line backwards.
delete all text files from current folder
Search /var/log for logs larger than 10 megabytes
Find files owned by no user
find all the files in the entire file system that have been accessed in the last 60 days ago
Process each file beginning with "file" in the current directory as an argument to "bash script.sh"
Remove the "^M" characters from all *.ext files under /home directory
Find all directories under /path whose names are 33 characters long
Enables 'nullglob' shell option.
Split a file "file.tar.gz" into pieces named as "file.tar.gz.part-NNN" with size 1024 MB where NNN is a numeric suffix
Search for files/directories which are writable by both their owner and their group
Compress all directories found in $LOGDIR wherein a file's data has been modified within the last 24 hours
List files in directory "one" that exist in directory "two"
Removes all files but 5 newest ones from current folder.
remove top-level domain (.com, .org) from URL's in urllist.txt
Find all *.gz files/directories under asia and emea directory
Find all files under $dir
display all the regular/normal files in a folder
Recursively removes all files named '.svn' in a current folder, and prints messages on each action.
Finds all files in a '/path' folder and prints long listing for them.
Remove all files with names like "vmware-*.log" from the current directory tree
Counts lines of /dir/file.txt file.
Serach for all the files containing grep in man pages
Search for lines that have zero or more whitespace characters before "http://" and number the uniquely sorted output
Find all files in the current directory and its sub-directories that have not been assessed in more than 30 days.
Insert the current host name on line 15 of "test.html"
Find all files/directories under current directory and sort them
Sources script incl.sh in the folder where current running script is located
Archive "/path/to/sfolder" to "name@remote.server:/path/to/remote/dfolder" preserving hard links and compressing the data during transmission
display all regular files in current folder excluding search in the directories that are ending with "git,svn"
Delete files in $DIR_TO_CLEAN older than $DAYS_TO_SAVE days
Find all files under ${searchpath} that match the regex '"${string1}".*"${string2}".*"${string3}"' (${string1} ... won't be expanded) in their contents
search a url in all regular/normal files in a folder.
Prints top-ten of most used utilities from history.
change the permissions of al the directories in the current folder
Print all lines of "seq 10" except the last 3
Create archive "backup1.tar" of all subdirectories of the current directory
display all directories in a folder
Show all previously typed shell commands, waiting for user interaction after each page of output.
Compresses all files in the directory 'PATH_TO_FOLDER' without recursion and keeps uncompressed files from deletion.
Find all *.log files under path/
Find regular files in the current directory that are writable by at least somebody
Unzip "bigfile.txt.gz" to standard output, search for patterns in "patterns.txt", and list the unique matches
Changes group ownership of /sys/class/gpio/export and /sys/class/gpio/unexport to 'gpio'.
Find the file in the current directory tree with inode number $inum and delete it
Find "*201512*" regular files in /home/myhome/data/ARCHIVE/ and move them to /home/myhome/ARCHIVE/TempFolder/
Find *.conf files/directories only upto 2 levels down under /etc directory and show a few lines of output from the end
search for the file in the entire file system which has the words "filename" in its name
Find command will display top 5 small files from curent directory . most probably you will get ZERO  bytes files .
search for all the text files and display the long listing of these files from that directory
Search everywhere for directories named `root'
find all normal/regular files in current folder and display the total lines in them
For each line which has a common first field in file1.csv and file2.txt, output the first 4 fields of file1.csv - both files must be sorted first.
find the file "MyCProgram.c" in the current folder
remove all the permissions for others to all the files in the current folder which have  read,write,execute access to users,group and others.
Find all directories under /home/me
Find all *.txt and *.json files
Write the current date and time followed by " 1" to the console and append to "log.csv"
find directories  that have been modified in the last seven days
Search for files specifying the minimum depth of the search
Find all files named 'text.txt' under current directory tree and display their contents
Ping hostname, grep for 192.168.11 and print the IP from the output
remove all subdirectories named "CVS" under current dir
Print a count of each unique line in "ip_addresses"
list all *.txt files in the user's home directory.
Gets IP addresses of all active network interfaces and saves to 'ip' variable.
Finds out what groups a current user has.
Compress every file in the current directory tree that matches "*cache.html" and keep the original file
find the type of all the regular/normal files in the current folder
Prints information about user $euids currently on machine and its processes, without printing header.
Find all files/directories under current directory tree whose names start with '(test)' followed by two digits and end with '.txt' extension
Disable wildcard expansion and name globbing
Delete all files under root whose status were changed more than 30 minutes ago
Create an empty file with a carriage return character in its name.
Find all files in the current directory tree whose names begin with '-'
Format the time string @133986838 according to the default time format and save it to variable 'VARIABLENAME'
Create the directory '.npm-global' in the user's home directory(~).
Print the paths of the directories from the paths expanded by the glob pattern /path/to/directory/*
Copy directory hierarchy from "$sourceDir" to "$targetDir"
Print file system disk space usage in human readable format of the root filesystem
Print the current working directory without a trailing newline
find all the files that have the word "fstab" in their name in a folder
Search the files from the current directory tree for "foo"
Sort file pointed by variable $filename, removing duplicate entries but ignoring the last N characters of each line.
search for the directory "mysql" in the /etc folder
Delete files under $LOCATION that match $REQUIRED_FILES in their names and were modified more than 360 minutes ago
Copy the owner and group of "oldfile" to "newfile"
Search for files in the current user's home directory and below for files that have not been accessed for more than 100 days and ask the user for permission to delete each file, one by one.
Print the ping time number only of a single request to "8.8.8.8"
Join data in file1 containing one number per line with data in file2 containing a number and other information per line, keeping the same order as it is found in file1.
Print and recursively remove the alphabetically last directory in the current directory
Recursively removes all files like '*.r*' in current folder and removes folders with such files if they become empty.
search for the folder .dummy and remove it from the folder "Test folder"
Print every three lines of "file" as a comma separated line
Recursively change ownership of "/usr/local/lib" to the current user
Search the current directory up to depth level 2 for files and directories
Find the largest files in a particular location
Calculate md5 checksum of $line and save to variable 'md5'
Count the number of unique file extensions in the current directory tree
Find all *.txt files that reside under and below /home/wsuNID/
Search the home directory tree for all .txt files
Find regular files named core under /tmp and delete them
Prints total number of lines of all *.c files in a current folder and subfolders.
Change permissions to 755 recursively only for directories
Archive all ".txt" files in the current directory to "/path/to/dest" keeping partially transferred files
Execute `echo' for each file found
Find all 400 permission files under /data directory
Receive input and print it to terminal
Print pathnames of all files in the current directory and below skipping directories named SCCS and files in them
Print current UTC date in ISO format with precision to seconds
search the word "MySearchStr" in all the regular/normal files in the current folder and display the line number and the file name
force remove all the directories with the name logs in the folder /var/www
Prints string "0 1 * * * /root/test.sh" to the terminal, and append it to file '/var/spool/cron/root'
list all CSS files (and directories ending with “.css”) under the current directory
Use ANSI escape codes to make "World" bold from input "Hello World!"
Find all files/directories named 'FindCommandExamples.txt' that belong to the user 'root' in the entire filesystem
Find all symbolic links containing 'javaplugin' in their names under '/usr' directory tree
display all the files in the entire file system
Go to previous working directory.
Creates temporary file and saves path to it in 'content_dir2' variable.
Display only mimetype of myfile.txt, without the filename.
Copy a whole directory tree skipping files residing on other files systems to destination_dir
Remove junk files modified more than 31 days ago recursively
display the three smallest files by size in a folder.
Print the last 1000 lines of all files matching "/var/spool/cron/*"
Create a symbolic link named "/usr/bin/my-editor" to "/usr/share/my-editor/my-editor-executable" and attemp to hard link directories
Create hard links of all files and directories matching "test/icecream/cupcake/*" or "test/mtndew/livewire/*" in "test-keep" preserving directory hierarchy
Execute the 'echo' command on each file from the current directory tree individually
Send a single ping request with a TTL of 1 to "192.168.1.1"
Display the entire file system in a tree-like format
Find directories and regular files containing `blah' in their names modified less than 2 days ago, case insensitive
Search the current directory recursively for the largest files
Recursively search for all regular files below directory "dir1" in currentd directory, and output the name of each, without any containing directories.
Find all php files in a directory
Removes resursively all files and folders named "Thumbs.db", ignoring case distincts.
Copy "fileName.txt" to all directories listed in "allFolders.txt" - names may not contain spaces.
display all the files in the current folder along with the change time and display file names of the last 10 changed files
Follows symbolic link $BASH_SOURCE, and prints path to its target.
Find all empty files under /tmp
forcibly and verbosely create symbolic links in directory "~/Library/LaunchAgents" to all files located in /usr/local/opt/mongodb/ and that have filename extension ".plist"
Get a list of directories owned by group ID 100
Search the current directory recursively for regular files last modified more than 2 days ago
Make directory "TestProject"
change user and group of the file bin to user and group root:wheel
Create a symbolic link in target directory "~/newlinks" to "$source"
Find all *bar files/directories under current directory
Creates temporary file in a TMPDIR folder with name like tmp.XXXXXXXXXX.
Count the number of unique duplicate lines in "file1" and "file2" combined
Split "abc.txt" into files with at most 1500000000 bytes each and use prefix "abc"
Find all 2*.data files/directories under jcho directory
Find all files that are set user ID to root
File 'mydatafile' has a number on each line, display the sum of these numbers rounded to lowest integer.
Search for 'example' in all regular files under current directory tree and also print the filenames
Delete all files/directories named 'file' under current directory tree
Search the current directory recursively for regular files last accessed less than 2 minutes ago
Delete all __temp__* directories under maximum 1 level down the current directory tree
Change the ownership to eva for all files/directories that belong to the user 'george' in the entire file system without traversing to other devices/partitions
Find all directories named "0" in the current directory tree and create a single tar archive of their RS* subdirectories
Save all directories under the current directory as a comma separated list in variable "FOLDERS"
Change permissions of "/usr/bin/wget" to 777
Add newline before all 2nd and consequent occurrences of '3d3d' in file 'temp' and write each line from the output to files with prefix 'temp' and numeric suffixes
Append ".txt" to all filenames in the current directory tree
Find files with 002 permission in entire file system with the null character as the delimiter
Find all files/directories that start with 'screen' (case insensitive) in their names under user's home directory tree and show them by paging through one screenful at a time
Recursively finds strings with"text string to search” in files under 'directory-path', regarding provided options '[option]'.
display a long listing of all the files in the current folder that have been accessed in today from the start of the day
Finds if environment variable like 'DUALCASE' exists in environment.
Find all regular files in the current directory tree that match pattern 'btree*.c'
Change permissions to 644 of multiple regular files with permissions 755
Search for "Stock" in all *.java files from the current directory tree
search for the file job.hostory in the folder "/data/Spoolln"
Grab a gzipped text file from the web and display its decompressed content, interactively paging through the output.
download contents of a website "http://example.com/"
remove all the core files in the temp file after user confirmation
Search the /mnt/raid/upload directory tree for files that have been modified within the last 7 days
display all the configuration files in the current folder which are in the current tree structure
Recursively change the owner and group of "subdir1" to "user1"
Prints number of files with extension "${EXTENSION}" in the "${SEARCHPATH}" directory.
display all the header files  and cpp files in the current folder
Find all executable files under current directory and reverse sort them
Prints long listing of directories "./my dir" and "./anotherdir" sorted from oldest to newest, with appended indicators.
Search /usr/local for subdirectories whose names end with a number 0-9
Move all files and directories in the current directory to "/foo"
renames all ".htm" files to ".html" files
Find all files/directories under '/usr/share/doc' directory tree that contain 'readme' (case insensitive) at the beginning of their names
Removes resursively all files and folders named ".DS_Store".
Delete all .svn files/directories under current directory
find all the png files in the current folder which are present in the pattern list search .txt
Find directories in the current directory tree that were modified within the last 24 hours and move them to /path/to/target-dir
List all files/directories under /data1/Marcel with their file information which are greater than 524288 bytes and were modified or accessed more than 1 year ago
Creates temporary file and saves path to it in 'content_dir1' variable.
display long listing of all the symbolic links in the current folder
Find all thumb.png files in the temps/ directory tree
list regular file which file name end with 'cache' 'xml' or 'html' in current directory
Search for all files with either "sitesearch" or "demo" in their path names
Find all files residing in /home/dm/Video or below that were last changed at least 10 days ago
Locate all files "needle.txt"
Add prefix like number and "^M${LOGFILE}> " to every non-blank line received on standard input
Find files in the current directory recursively that are not readable by all
Find files modified between 6 and 9 minutes ago
find all the directories in the current folder excluding search in the sub directories and create these directories in another path
List all files/directories under current directory with 'FooBar' in their names ensuring white space safety
Find all .* files excluding list_files (case insensitive) under current directory
Write "127.0.0.1 ad.doubleclick.net" to the console and append to "/etc/hosts" as root
Fetch a script from the web and interpert (run) it in the current shell, without writing the script to disk.
find the file with inode $inum under the current directory and delete it
Find files in entire file system that are writable by group or other
find the count of text files that are present in the current working directory.
Find all *.java files under current directory containing the string 'String'
Copy "/Users/username/path/on/machine/" to "username@server.ip.address.here:/home/username/path/on/server/" and convert encoding from UTF-8-MAC to UTF-8
Find all files/directories named 'foo.rb' under current directory tree
Find all files/directories under current directory tree that contain 'pattern' in their names
Allow anyone to run command "Xvfb" as the owner of "Xvfb"
Find files and directories modified within the last 7 days
Move "file1", "file2", "..." to "target" directory
Print a list of unique users who are logged in
Display the sizes and filepaths of all files/directories with '.undo' extension under current directory tree
Find mysong.ogg anywhere under the home directory
Move all files and directories in the current directory to "$TARGET" excluding files matching "$EXCLUDE"
Display a list of files with sizes in decreasing order of size of all the regular files under '/your/dir' directory tree that are bigger than 5 MB in size
Search the current directory tree for files and directories whose names do not end in ".exe" and ".dll"
Print the sorted unique column of usernames of users who are currently logged in without the header
Create a compressed archive from "www" and split the contents into files of at most 1073741824 bytes and use prefix "www-backup.tar."
Find all regular files under current directory tree and replace all '1.2.3.4' with '5.6.7.8' in these files modiying the files in-place
display all the files in the current folder
Search the *.txt files from the current directory tree for "string"
Delete all .svn files/directories under current directory
Find all files under ${searchpath} that match the regex ${string1}.*${string2}.*${string3}  in their contents where ${string1} etc.. will be expanded
Find all directories name nasa in the current directory and below.
Print the list of files modified within a fortnight ago removing the leading ./ from the file names
Set 644 permission to all regular files under current directory
Make a copy of the entire contents of SRCFOLDER called "DESTFOLDER", if DESTFOLDER exists, the copy will be placed within it.
Delete all .svn files/directories under current directory
Setup a local SSH tunnel from port 1234 to "remote2" port 22 via connection to "remote1" as "user1" on port 45678
Search the current directory tree for regular files whose names match pattern $x
Find all files on your system that are world writable
Save first one of space separated parts of each line in $LOCKFILE file to the 'CURRENT_PID_FROM_LOCKFILE' variable
Locate OGG files under the home directory smaller than 100 megabytes
force delete all the regular/normal files in the current folder
concatenates file1.txt, file2.txt, and file3.txt with the filenames printed at the beginning of file contents
Find all directories under maximum 1 level down the current directory and set their permission to 700 recursively
Find files and directories with group id 1003
Search for filenames matching "android" in the current directory and number the output
Search files "file-containing-can't" in the current directory tree for the string "can't"
Print a sorted list of directories from the ~/Music tree containing files whose names begin with "cover."
Print yesterday's date as yyy:mm:dd
Search everywhere for a file called `httpd.conf' that is newer than /etc/apache-perl/httpd.conf
Search for .bam files anywhere in the current directory recursively
Find string "STRING" in files residing in the current directory tree, case insensitive
display all files in the current folder which end with extension "myfile" followed by two digits
display long listing of all the text files in the current folder (plus at the end executes quickly by sending bulk data as input to the command in exec)
display all text files in a folder
Move all regular files under current directory to ./newdir
Change directory to "/path/to/pdf"
Unset the executable bit of all regular files from directory trees arch, etc, lib, module, usr, xpic
List directories under current directory
Find recursively all regular files in the current directory tree not ending in .dll or .exe
find all files in the current folder that are modified exactly 2 minutes ago
prints the last occurrence of text between two tags
Find all files with '.conf' extension under '/etc' directory going into at most 2 level deep and show the last 10 of them
Mount the "vboxsf" filesystem "myFileName" on "~/destination"
Search all files in the current directory tree whose names end in "1" for string "1"
search for all the regular/normal files  in the /etc folder which have been modified in the last 24 hours
Removes first and last parts of path 'test/90_2a5/Windows' and prints the result.
create directory new_dir
Report root file system disk usage human-readable.
Find all PHP files under current directory
Count the number of lines in "/dir/file.txt"
display all the files in the current folder which have are bigger than 1KB
Make directories "$@" verbosely and replace "mkdir: created directory " with "jar-jar: yea, weesa gotta " in the output
Find all read only files in  /home directory
test if the 2nd column in file A is in the reverse order of the second column of file B
List unique series of 3 characters in file "$1" prefixed by the number of occurrences and sorted from most frequent to least frequent
find all the files in the home folder which have not been modified in the last 1 year.
Find all files on smbfs mounts and print its information and file type
Find all directories named "D" in the current directory tree
Recursively copies '../include/gtest' directory to '~/usr/gtest/include/'.
Search the current directory tree for files whose names begin with 'my'
display all files in the current folder which do not belong to the user john
Create a table containing all information from S43.txt and S44.txt, merging lines where the first field of both files matches, and keeping the line that starts with "Gene" at the start of the file.
Set permissions of all directories under "/opt/lampp/htdocs" to 711
List the z* links in the /usr/bin directory with inode information and the file to which it points to
display the number of lines in all the header files in the current folder
find the type & description of all the regular/normal files in the home folder
Print a frequency count of column two for every file in the current directory
Opens gawk info manual and goes to command-line options node.
Create a symbolic lnk named "$1/link" to "$dir"
Count the number of regular files in directory tree ${DIRECTORY} that contain a vowel in their names
display a long listing of all the files in the current folder in sorted order, which are bigger than 10KB
Prints the absolute directory path of the current script preceded by the string "dirname/readlink: "
display all the files in the current folder which have not been modified in the last 7 days and which are not in the list "file.lst"
Read a single character from standard input with delimeter '' and no echo
Get the disk space used by all *.txt (case insensitive) files under /home/d directory
ask user confirmation and delete all the files in the directory /mydir which have not been accessed in the last 100*24 hours
Print true directory name of the current directory
Search the current directory tree for an html file having the text 'Web sites' in it
Find regular files in the current directory that are writable by their owner
Print common characters in variable "$a" and "$b"
Execute 'echo -e "\033[31mHello World\033[0m"' every without color support 2 seconds
Format tab delimited file "list-of-entries.txt" as a table
Remove all files in and below the current directory whose names begin with "not"
Show the current UTC date in '%Y-%m-%dT%k:%M:%S%z' format
Find command will display top 10 Big files from current directory .
long list al the files in the current directory which have only read permission to the group
Recursively removes 'classes' folder, prompting user on each deletion.
Grab "variable = value" pairs from a windows style .ini file into the current shell.
Find all regular files undee '/usr/bin' directoryt tree that are less than 50 bytes in size
Verbosely compresses all files on seventh and eighth depth level keeping original files in place.
Save the full path of command "~/f" to variable "foo"
display all the files in the current folder excluding the files with the name mmm
Gets IP address of 'eth0' network interface.
Find directories named `doc' in /usr and below
Display the host's ECDSA fingerprint using the md5 hasing algorithm.
Print a space separated list of numbers from 1 to 10
Find files that are orphaned
find all the html files in the current folder and rename them to .var files
Remove all tmp/*.mp3 files
search for all the files in the current directory which have size greater than 10KB (approx) and less than 32KB(approx).
Print the size for every *.ogg file found under the home directory
Prints file descriptor of executed built-in 'true'.
create directories bravo_dir and alpha_dir
Create a symbolic link named "$tmpdir/bam" to the full path of command "bam2" found in "$PATH"
recursively change owner of the directory ~/.npm to the current user
display the commands to force delete all jpg files in current directory which are less than 50KB and do not search in the sub directories
Show current date in "%Y-%m-%d" format
display all the regular/normal files in the entire file system
Convert "abc" to a string of hexadecimal bytes
Search the `images' directory tree for regular files
find all the empty directories in the current folder and all its sub directories too
Exit the shell immediately if an error is encountered
Print the files in the current directory as a list of comma separated values
List all regular files from the current directory tree that were modified less than 60 minutes ago
change user of the direct public_html to user owner and group nobody
Set permissions to 600 for regular files under var/
Split "${fspec}" into 6 files with about equal number of lines each and use prefix "xyzzy."
Counts lines in each of *.php files in a current folder and subfolders ignoring 'tests' folder and prints total count as well.
Search for 'string-to-find' in all files under current directory tree matching the regex 'filename-regex.\*\.html' in their paths and show the matched lines along with the filenames
Display all symlinks and their targets in the current directory
find all the normal/regular files in the current folder which have been modified in the last day and display a long listing of them
remove all the pdf files in the current folder and do not delete those in the sub folders
change owner of the file /home/bob to user root
Read standard input and replace any repeated characters except spaces with a single instance
run ls command on files found
Generates a randomly sorted list of numbers from 1 to 10.
Split "$FILENAME" into files with at most 20 lines each with a prefix "xyz"
Gets IP addresses of all network interfaces.
recursively change owner of the directory testproject and all files into it to user ftpuser
Join comma-separated information in 4 files - files must be sorted.
Save the logical current working directory to variable "basedir"
FInd files in current directory and grep text and html files - but not index.html and report things that contain the word 'elevator' in four or more lines
Find all files under /path and below executable by `group' or `other'
Find any files in the current directory and its sub-directories that were last accessed more than 7 days and are larger than 20480 blocks in size.
Count the number of unique lines in sorted file "a.txt" compared to sorted file "b.txt"
Display a character dump of "oldfile"
Move all files in "/path/subfolder" to "/path" without clobbering any destination files
display all directories in current folder excluding those that are present in .git folder
Print a sorted list of unique directory paths in entire file system that match the pattern '<name_pattern>' in their names
List all *.txt files/directories under /etc
Create an empty file "foo" in each directory under the current directory containing a file named "bar".
replaces the last occurrence of 'a' with 'c'
Find all directories that have been modified in the last seven days.
Calculate the md5 sum of all files in the current directory with the filename printed first
Find all files under ./lib/app and sort them
Search the directory tree given as variable $dir for regular files
find all files ending with "js.compiled" in current folder
List the files from the current directory tree that contain lines matching regular expression  '^Subject:.*unique subject'
Print all string from file 'file2.txt' matching pattern in file 'file1.txt'
Remount "/path/to/chroot/jail/usr/bin" as read only
display all text files in the folder /user/directory which have been modified in today
Delete all in the current directory tree
Find files/directories in entire file system with at least 644 permission
Move all files/directories under current directory to ~/play
display all the files in the home folder except text files
Create links for all files in the current directory tree that are more than 1000 days old in "/home/user/archives"
Print the last line of "$file1" to the console and append to "$file2"
search for a word in all the files in the current directory
Remove the line matching "pattern to match" in "./infile" and print to standard output
Find all files/directories named file in minimum 4 levels down the current directory
Finds all files in $LOCATION, prints file names, overwrite files with random content $TIMES times, and finally remove them.
search for a function in all python files in the current folder
search for the file "file1" in the entire file system
Gets domain name from dig reverse lookup.
search for the file "file" in current folder and save the output to the same file
Print a listing of the `other' directory
Find all sample* files/directories under current directory and print 'program {}-out {}' where {} will expand to file paths
Delete all the files found in the current directory tree whose names begin with "heapdump"
Search the system for files named "findcommandexamples.txt", ignoring the case
copy all the files with the extension ".type" from one folder to a target directory
Recursively change ownership of "/usr/lib/node_modules/" to the current user
Print unique lines in sorted file "A" when compared to sorted files "B", "C", and "D"
Force create a symbolc link named "softlink_name" to "source_file_or_directory_name" without dereferencing "softlink_name"
search for files having python in filename
Remove all *.txt files under the given directory modified more than 5 minutes ago
Find all filenames ending with .c in the current directory tree
display the name of all directories in the current folder and do not search in sub directories
find all the files in the current folder which have been modified in the last 60 minutes, which are atleast 1 level deep and display a long listing of these files
find in the entire file system for the file mysql
Just find directories and skip file names
Find all CSS files
Gets IP address of 'eth0' network interface.
display all the regular/normal files in the folder "/home/user/demo" which have the permission 777.
Search for "CONFIG_64BIT" in gzip compressed file "/proc/config.gz"
Create empty files (or update timestamps if they exist) with names matching each word in variable "correctFilePathAndName"
list files found under the current directory ending in "txt" or ending in "html"
display all the text and pdf files in the current folder
Find all .js files in the current directory tree that do not contain a whitespace
Output a CSV file as a formatted table
display all regular/normal files in temp folder and display the filename along with file size
display all the files in the folder "$ORIG_DIR"
Recursively set all permissions under "../tools" to 777
Display the 5 smallest files in the current directory and its sub-directories.
Search for regular files of the grooup 'users' in the file system
Delete all the files found in the current directory tree whose names begin with "heapdump"
Prints top-ten list of most used utilities from history.
Find all directories under minimum 1 level down the current directory and set their permission to 755
Read a line from standard input into variable "foobar" and suppress showing user input
Request DNS record for  domain 'dragon-architect.com' with tracing and additional section, and extract third block of text, separated between two new lines.
Evaluate the output of recursively changing the owner and group of "/data/*" to "mongodb"
find all the files in the current folder which have been modified in the last one day
Change the permission to 0644 for all files under current directory
Recursively removes all files like '*.pyc' in a current folder.
Shows status of a shell option 'dotglob'.
find all the files in the file system which have read permission to the user and display the ten files
Search the files residing in the current directory tree whose names contain "bills" for "put"
Set variable "fname" to the basename of path specified in variable "f", that is remove everything up to the last slash if present.
List all files named "filename" from the current directory tree, ignoring directory "FOLDER1"
Convert all characters in "$a" to upper case and save to variable "b"
Split "/tmp/files" into files of at most 1000 lines each
delete recursively, without prompting, any files or directories under the current directory that case insensitively match the filename ".svn"
Prints number of days in a current month.
Display differences between a and b side-by-side
find all the regular/normal files in the /path folder and delete them
List the largest file in long list format of all the files under the current directory
Search in the current directory and all sub-directories except ./D and any further sub-directories also named D for the file named hi.dat
Change the owner to "user" and group to "group" of files "file ..."
search for directories in the folder "test" which end with 5 digits using regular expressions
Find all regular files in current directory and /home/www directory
Recursively find files in the current directory with a modification time more than 7 days ago, save the filenames to "compressedP.list", and compress no more than 10 at a time
Find recursively all regular .txt files in the current directory tree except README.txt
Recursively finds all '*.pdf' files in a current folder and removes them without prompting.
find all the files that have been modified exactly 1 day ago
display all files in current folder using regular expression
Recursively change the owner and group of "~/.ssh/" to "dev_user"
Remove all *.mp3 files in tmp directory but not in it's subdirectories
create a backup of all the files in the current folder to the floppy and save the file list in the file /tmp/BACKUP.LOG
Search for '“foobar”' in all files starting with '‘' and ending with '’' and contain '.' in their names in the entire filesystem and display only the matched files
Convert *.au files to *.wav files using `sox'
Print the contents of "foo.txt" starting with line 2
Search for the case insensitive regex expanded by $2 in all files named $1 (to be expanded) under current directory
Enables shell options 'extglob' and 'progcomp'
Find all files named "test2" in the current directory tree
Gets all IP addresses from host network configuration and prints first one.
Find all hidden (regular) files under /tmp
Reverse the space separated words in "35 53 102 342"
search for the regular/normal file 'myfile' in the folder /root excluding those that are present in the "work" directory
Count the number of lines in "myfile.txt"
Find all the files whose name is FindCommandExamples.txt and contains both capital and small letters in / directory
Find all files that are exactly 50 bytes
Find files and directories owned by xuser1 and change their ownership to user2
display all the files in the home folder that have been modified in the last 7*24 hours
Recursively finds all '*.pdf' files in a current folder and removes them.
Search for all files with either "sitesearch" or "demo" in their path names
Search for all files in the current directory recursively whose names contain "linkin", ignoring the case
Find all files under current directory and search for 'something' in those files
Counts number of processors and saves in variable NUMCPU.
Find all files in the current directory tree containing "foo" in their names
Prints week day of a 31 day in a current month.
Print full path of command "c++"
Recursively changes group ownership of everything in a '/home/user1/project/dev' folder to 'project_dev'.
Search the current directory tree for all files matching either pattern "*.rb" or pattern "*.py"
Gets MAC address of 'eth0' network interface.
search for the directory starting with "ora10" in the entire file system
find case-insentive example.com file, and whole dose not contain beta
search for the word "mysql" in all the files in the current containing the word "notes" in their name. print0 is used to handle files  with newlines in their names or those which have only spaces in their names
Find all empty files under a certain path
Find all symbolic links containing 'vim' in their names uder '/usr/bin' directory tree
Remove all directories called "test" from the current directory tree
Print a colon-separated list of all directories from the ~/code directory tree, except hidden ones and those below them
Print the list of 1st level subdirectories in /fss/fin
List all regular files in and below the home directory that have been modified in the last 90 minutes
List all files and directories in the /home directory tree whose names are "Trash"
List all empty files in the current directory tree
List all files without descending into subdirectories
Find all files under current directory matching the posix-egrep type regex '^.*/[a-z][^/]*$'  in their names
Locate world-writable files and directories on the system
Split "bigfile" into files of at most 1000 lines each with prefix "/lots/of/little/files/here"
Find all files/directories starting with 'app-' and ending with '.log' in their names and have been modified in the last 5 minutes
search for a word in all the .C files in the current directory
sleep for 500 seconds
display all the files in the folders mydir1, mydir2 which are bigger than 2KB and have not been accessed in the last 30*24 hours
Remove all regular files in the current directory
find all files beneath the current directory that begin with the letters 'Foo' and delete them.
find files in the current directory and sub-directories, that changed within last hour
Print every file's type, name, and inode
Find all l files in the 'foo' folder but ones with name like '*Music*' to the 'bar' folder.
Change permissions of all regular files in the ~/dir_data directory tree in accordance with mode `a-x,u+w'
Find all regular files under current directory
Replace "foo" with "bar" in all files in the current directory tree
Pipe the output of ls into "read var" in its separate process
search for all the files in current folder which start with "file2015-0" and move them to another folder
Print file type of the command "c++"
Finds all strings with parent folder of path '$path' in 'file', and saves result in 'x' variable.
Delete all files/directories named test under maximum 2 level down the current directory
Calculate md5 sums for each files matching 'main.cpp*'
display ten files in the current directory
Find all files/directories named 'Desktop' under current directory
Find all files/directories named 'articles.jpg' under 'images' directory tree
Print the last 10 commands in history
display all the files in the entire file system which are bigger than 10MB
find all the perl files in the current folder, print0 is used to handle files with new lines in their names or only spaces
search for a word in all the php files in the current folder and display the count of all matching lines.
find all files & dircetiry in current directory which  have .tmp extension and delete them .
Save the absolute path of "$path" to variable "fullpath"
find all files in current folder which are bigger than 1 MB and move them to another folder
Shows status of a shell option 'nullglob'.
find the oldest normal file in the current directory and display its contents
Find all directories in maximum 1 level down the current directory and remove the . entry from the output
Print a hex dump byte to byte of the output of "echo Aa"
Print all files and directories in the `.' directory tree skipping SCCS directories
Sort all directory names matching folder_* and go to the last one.
Sort and print each unique line in "myfile.txt"
Delete recursively empty files named 'bad'
Find recursively all regular files changed within the last 5 minutes starting from directory b
Show what content owned by root has been modified within the last day
Find all files/directories with '.mp4' extension and all regular files with '.flv' extension, sort them according to their names and display the first 500 of them
Add group write permission to all files matching "*" or "...*"
Create a ssh key and store it in the file ~/.ssh/apache-rsync
Find a single file called FindCommandExamples.txt under current directory and remove it
Make DNS lookup requests for domain list in file '/path/to/host-list.txt'
Make directory "aaa/bbb"
Archive "src-dir" to "dest-dir" on "remote-user@remote-host" and delete any files in "dest-dir" not found in "src-dir"
Set variable 'file' to the base name of first argument to script or function, that is the part following the last slash.
Search for files greater than 20MB in the entire file system and display the path and file size
Search the /path/to/directory tree for regular files modified 61 days ago and then remove them
Read the history file $HISTFILE and append the contents to the history list
Find "file.xml" under the current directory and change directory to its parent
Split "file" into 10 files of about equal size without splitting lines
Find regular files in the current directory tree that have any executable bits set
change the permission of all the rpm files in the entire file system to 755
Find all files/directories with '.log' extension whose names start with 'app-', have been modified in the last 5 minutes and show the first one found
display all files in a folder
Find all directories and for each of them, print an mv command to move it to /new/location
Remove with prompting all files that have not been accessed in over 100 days
Merge the first "$lc" lines of "current.txt" and the last "$lc" lines of "current.txt" and display the result as a comma separated table
Execute "date" every second
Delete all files under $INTRANETDESTINATION/weekly directory tree that were modified more than 32 days ago
display all directories in current folder
display all files in the current directory excluding those that are present in the directories whose name starts with "efence" and do not search in the sub directories
find all text files in the current folder excluding those that are presenti n the folder "/svn" and search for a pattern.
Find out all hard links in the /home directory to file1
Find all files/directores under '/usr/local' directory tree that contain the word 'blast' in their names
Print all matching commands in $PATH for command "python"
display all regular/normal files in the folder Symfony
find all the normal/regular files in the folder "pathfolder" excluding all hidden files and display the count
Find all files/directories named 'articles.jpg' under current directory tree
Find all *.txt files/directories under current directory discarding 'Permission denied' errors
Print $d if $d is empty
Print a count of case insensitive duplicate filenames in the current directory
Print common lines in "file1" and "file2"
Copy all *.mp3 files under the current directory to /tmp/MusicFiles/
Replace all '置換前' with '置換後' in all regular files under current directory tree and modify them in-place
Extract any line in "file1.txt" which does not appear as the first ";" delimited entry in "file2.txt"
Print all '-' separated digits in file 'infile' as dot ('.') separated digits
Count non-blank lines in a file 'foo.c'
display a long listing of all images with the name "articles" in the current folder
move all the files in the current folder  to temp folder and search atleast in one subfolder
Display what flags mount points are mounted with
Find regular files larger than 500MB in the current directory tree
Find all xx* files/directories excluding 'xxx' files/directories under your home directory
find all the regular files in the current folder which start with a "some text"
Print A record for domain 'domain.' from 'some.other.ip.address' nameserver
Find all directories under current directory and set read-write-execute permission for owner, read-execute permission for group and no permission for other for those directories
Recursively copy "dir_b" to "dir_a" and delete any new files in "dir_a"
Read hexadecimal bytes from device "/dev/midi1"
Count the number of areas that differ in "file1" and "file2" with 0 lines of unified context
Display a long listing of all 0777 permission directories under current directory tree
display all normal/regular files in a folder
Format output of "mount" as a table
List all files from the current directory tree that were modified less than 60 minutes ago, omitting "."
Search the /usr/local/doc directory tree for .texi files
Creates temporary folder and saves path to it in a 'tempd' variable.
find all the files in the filesystem which do not belong to any group
Find all files owned by user `comp'
Print the average time of 4 ping requests to "www.stackoverflow.com"
Recursively change the owner to "${JBOSS_USER}" of "$JBOSS_LOG_DIR"
Find all files/directories under current directory with 'FooBar' in their paths and copy them to ~/foo/bar
Find all *.p[lm] files/directories under current directory
recursively change user of the direct /home/test/ and all files into it to user test
Finds recursively all files having extension .c, .h in '/path/' that contain 'pattern', and prints matched strings with string number and file name.
Find all *.rb (regular) files under current directory
list regular files under the current directory
Remove files under current directory that contains white space in their name
Find files in and below the current directory whose names begin with "not" and remove one of them
display all file in the home folder except ".c" files
Find all files in ~/clang+llvm-3.3/bin/ and print 'basename /file/path' for each file
modify the permissions of all the folders in a directory
Delete all regular files named 'IMAG1806.jpg' under current directory tree
display long listing of all regular/normal files whose size is less than 50 bytes.
search for the file test.txt in the folders /home and /opt
Returns exit code 1 and terminates shell if 'set -e' was applied.
Sets shell options 'extglob' and 'nullglob'.
Find all the files/directories in '/path/to/files' directory tree which have not been modified in the last 2 hours
Overwirte file '/path/to/your/file' with random content, then overwrite with zeroes, and remove, showing progress while execution.
Find all files that belongs to group Developer under /home directory
Find recursively the latest modified file in the current directory
Find all *.c files located under /home and below
Search /usr/bin for regular files that have been modified within the last 10 days
View history using "less"
Save in QUEUE_PIDS variable only pid numbers that stored in $NEW_PIDS variable
Remove trailing white spaces from all *.py files under dir directory (ignoring .git path) and keep backups of the originals
Print first field from semicolon-seprated line $string.
Remove all *bak files under current directory with confirmation prompt
Search the current directory tree for files whose name is ".note", case insensitive
Find the top 5 biggest files
Find all *.tex regular files under current directory
Moves the file that named like file $1 from '/tmp' folder to the folder where $2 file is located.
From the list of words (one per line) in list1.txt, display the number of occurrences of this word in list2.txt and sort the results from highest to lowest count.
Save the absolute path of the current script to variable "SELF"
Find all files/directories with '.txt' extension under '/home' directory tree that are exactly 100KB in size
Instantly kill all processes whose command is 'myprocess'.
display all the files in the user folder which have been modified after the files /tmp/stamp$$
Find blabla* files under current directory
split content all files file1..40000 into pieces per 1445 lines named as outputprefixNNN as digital prefix
Find all fonts (in '/usr/local/fonts') that belong to the user 'warwick'
Search for 'mystring' in all *.txt files under current directory
Dry run making directories in "/TARGET_FOLDER_ROOT/" for each ".mov" file in the current directory tree
Search for all files that end in ".conf"
List all *.gif files found in the current directory tree
display all non empty directories in current folder
Find files which were changed in the past 1 hour
find all sqlite files in the current directory.
Remove trailing whitespaces in TXT files from the current directory tree
Search the current directory for files whose names start with my
List environment variables whose name contains "X"
List each unique case insensitive character in "file" prefixed by number of occurrences
Shows only process trees rooted at processes of this user.
display all the files in the file system which belong to the user "user1"
display all the normal/regular files in the current folder which are empty
Display the contents of "sample_0001.gz" with "lk=1&" removed
change user and group of the file "/var/run/docker.sock" to user root and group dockerroot
Search the current directory tree for regular files whose names end in ".shtml" or ".css"
create a backup of all the files which have been modified in the last 48 hours
Identify CMS version/releases accross all your Drupal websites
search all the files in the current folder excluding those that are present in the folder test and using regex
Represent the UTC date given in time string "1970.01.01-$string1" as number of seconds since the epoch and save it in 't1' variable
Print first column of every line in every *.txt separated by a space
Pops the top directory of dirs stack and changes to it.
Search the current directory recursively for files last modified within the past 24 hours ignoring .swp files and "en" and "es" directories
Copy a file xyz.c to all the directories below the current one whose names begin with "temp"
search for the word echo all the bash files(files ending with .bash) in the current folder
Read a single character from standard input with prompt "Is this a good question (y/n)? " and timeout of 3 seconds and save the response to variable "answer"
View gzip's help documentation
Change permissions of ".git/hooks/prepare-commit-msg" to 777
find all the files that have not been modified in the last 2 days
split the result of command "ping -c 25 google.com | tee " into pieces per 100000 bytes named as "/home/user/myLogFile.logNNN"
Filters only directories including hidden ones from long file listing of a current directory, and prints their names.
Change all file permissions to 664 and all directory permissions to 775 in directory tree "htdocs"
Counts total lines in PHP and JS files.
List the files from the current directory tree that contain lines matching regular expression  '^Subject:.*unique subject'
Change the user and group of all files and directories under /var/www to www-data:www-data
Force create a symbolic link named "$lines" to "$c" without dereferencing "$lines"
Calculate the total disk usage for each ".jpg" file on the system and prepend the system host name to the output
Search the .java files from the current directory tree for TODO lines
Print the ping statistics of 4 requests to "www.google.com"
Remove all *.swp files under current directory ensuring white space safety
Move all files from the `sourceDir' directory to the `destDir' directory
find the most recently changed files under current directory
Wrap standard input to fit in 10 characters per line
Find all *.c files under and below the current directory that contain "hogehoge"
Find all the Sticky Bit files whose permission are 551
Show filename and filetype description of all PHP files in all directories contained in current directory whose name or filetype description includes "UTF"
display all shell scripts in current folder
display the count of total number of non empty files in the current folder
search for the regulars file starting with HSTD which have been modified yesterday from day start and copy them to /path/tonew/dir
Remove all files with the .c extension in the current directory tree
Search the current directory tree for all .java files newer than the file build.xml
Find all files/directories under current directory and print them twice in each line
Delete all files named '-F' under current directory tree
Remove all directories called "test" from the current directory tree
find all the files in the entire file system that have been modified exactly 7 days before which end with "conf"
update the permission of all the php files in current directory and save the output to a file
file all the Sticky Bit set files whose permission are 551
Print only digits in variable "$name"
Execute "du -s path" every 300 seconds
Find all directories named '.texturedata' under '/path/to/look/in/' directory tree
find all normal/regular files in current folder and display them in sorted order
Find all files starting from the current directory that match regular expression '.*Message.*\.java'
Recursively copy "emptydir" to "destination/newdir"
find all the files in the file system that start with "win" and searched only in the mounted file systems
Create an empty file in each directory named "mydir" under current directory.
Move "file.txt" to docker container "$COUNTAINER_ID" in path "/var/lib/docker/aufs/mnt/$CONTAINER_ID/rootfs/root/file.txt"
Delete all regular files with '.cache' extension that were accessed more than 30 days ago under $HOME/Library/Safari/Icons directory tree
Print a welcome message with the current user's user name
Save the directory name of the canonical path to the current script in variable "MY_DIR"
Copy all .png files from the home directory tree to imagesdir/
Calculates process depth of process with id $processid, and stores it in a 'depth' variable.
Display the contents of "text"
find all the hidden files in the temp folder
Change permissions to 755 for all directories in the /path/to/dir directory tree
Run checksums recursively from the current directory, and give back the filenames of all identical checksum results
search for the files which contain the word start in their name excluding search in ./proc, ./sys, ./run folders
Creates temporary folder in TMPDIR (if defined) or in '/tmp/', and stores path to created folder in 'dir' variable.
Search the /Path directory tree for files whose pathnames match pattern "/Path/bar*" and whose names match pattern "file_name*"
Calculate the md5 checksum of the current directory structure and save it in variable SUM
Print lines 10000 to 10010 from input "seq 1 100000"
Copy all files below the current directory whose names contain "FooBar" to directory foo/bar/ in user's home directory.
Print amount of space available on the file system containing path to the current working directory in megabytes.
Delete all files/directories with inode number 117672808 under current directory tree
Find all TXT files that belong to user root
Subtract each column in File2 from matching column in File1, output the result in a similarly formatted table
Change permissions of all files ending in ".php" under the current directory to 755 and print a count of modified files
Find all regular files in the current directory tree last modified between 1 and 3 days ago and list them using format '%TY %p\n'
Print a sorted list of the subdirectories of ~/Music
Find all *.$input_file_type files/directories under $source_dir with the null character as the delimiter
Copy all directories recursively from "source/" to "destination/" excluding all files
Unzip and expand tar archive "compressFileName"
Print summary of new/missing files, and which files differ between folder1 and folder2, excluding those matching pattern "node_modules".
Print the list of all files in the current directory except for SVN, CVS, GIT, and binary files
List all directories of the $topdir directory tree that contain a Makefile and at least one .py file
Exit the shell immediately if an error is encountered, treat references to unset variables as errors, disable overwriting existing files, and use the first non-zero exit code of a set of piped commands as the exit code of the full set of commands
search for the directory "config" in the current folder and change directory to it
Print reverse lookup for adress 127.0.0.1
Make 3 directories named "~/Labs/lab4a/folder" followed by the number 1, 2, or 3
find all configuration files in a folder
find all the normal/regular files in the current folder which have been modified in the last 24 hours and display a long listing of them
Create directorie(s) 'some/path' as required in the current directory
List all files in /var/www and below that have changed in the last 10 minutes
display all the text files in the home folder
Write the common third space separated fields in "file1.sorted" and "file2.sorted" to "common_values.field"
Replace spaces with underscores in the names of all files and directories in the "/tmp" directory tree
find all raw images in the current folder and pass them one at a time to the xargs command and enable parallel processing of the files
Search the current directory and all of its sub-directories for the file 'file1'.
Print "huge-file.log" starting at line 1000001
find all files in the current folder that have a single letter in their name and have not been modified today
Remove files in the current directory tree whose names match pattern "file?"
Numerically sort file "table" by the fourth character of the second field, ignoring leading spaces
display all the files in the current folder which have been modified between two dates
start 2 sleep processes in the background
Print unique lines of sorted file "f1" compared to sorted file "f2"
Keep the last 3 components (directories) of $path
List .c files in the current directory
Print characters in variable "$a" that exist in variable "$b"
Print all filenames in /usr/src except for those that are of the form '*,v' or '.*,v'
Find all files whose names contain the string 'xpilot' which exist within '/usr/local/games'
Print mount point of the file system containing $path.
count the lines of java code for all the java files in the current directory
Delete all *.zip files under current directory that are older than 2 days
Executes tmux commands that are stored in the '$tmux_command' variable, and then attaches to the tmux session.
find all the files in the current directory and search for the word "pw0" in them.
find all the files in the folder /work which belong to the user "olivier"
Calculate the md5 sum of all files in "/your/dir" including content and filenames
find all the php files in current folder and search for multiple patterns in these files and display the file names
prints absolute file paths for files in current directory
Find all *.txt files/directories under current directory
Find all files with '.db' extension (case insensitive) that belong to user 'exampleuser' and were modified exactly 7 days ago under '/home' directory tree
Make directory "/etc/cron.15sec"
display a list of all the files  in the home folder which have been modified today
find all the files that are modified in the last 1 day
Recursively removes all files and folders named '.svn' in a current folder.
Update the archived copy of the home directory, "alldata.tar"
Search for files which have read and write permission for their owner and group, and which other users can read, without regard to the presence of any extra permission bits
Print every 20 bytes of standard input as tab separated groups of bytes 1-3, 4-10, and 11-20
Remove any file containing string "GUI"
find all regular/normal files in the folder "myfiles" which have read and write permission to the other users
change the permissions of all the files ending with "fits" in the folder "/store/01" and save the output file names to a log file
Merge lines from files "file1", "file2", "file3", "file4", "file5", replace "\t" with " \t", and format the "\t" delimited result as a table
Recursively change the owner and group of all files in the current directory to "apache"
get all the files that have been modified within the last 30 days
Search the current directory tree for files whose name is ".note", case insensitive
find all the file that have been modified exactly 3 days ago ( considers day starting not 24 hours )
Disables overwriting existing files
display the contents of all the text files in the current directory
Sets shell options 'globstar', 'dotglob' and 'nullglob'.
Print onlt last slash-separated field from $PATH value
Print history with the first field removed
Removes all files but $1 newest ones from current folder.
find files in current directory that names are game
Locate all "copyright" files under and below /usr/share/doc
List each unique character in "file" prefixed by number of occurrences and sorted from most frequent to least frequent
find all the files in the current folder that have been modified in the last 24*3 hours
Archive all filepattern-*2009* files/directories under data/ into 2009.tar
Find all files that have wrong permission
display the list of all the files in the current directory which have been accssed in the last 500 days exluding hidden files
display all the files in the current folder which do not belong to any group
Update timestamps of all files (not directories) under current directory.
check readline bindings for "\x61"
Search for '/usr/bin/perl' in all regular files under current dirctory tree and also show a long listing of them
Sort ":" delimited lines in "test.txt" by the first and third field preserving only unique lines
Replace the spaces after line number in the output of history with ".."
Find all files/directories under current directory tree that have modified in the last 2 days and contain 'blah' (case insensitive) in their names
Find all files/directories under current directory excluding the paths that match the POSIX extended regex ".*def/incoming.*|.*456/incoming.*"
find all text files in current folder and delete all the files that have the word foo in their name
Find files/directories that belong to user 'ian' under '/tmp' directory tree
Find all 777 permission files/directories under current directory tree
Find files bigger than 20 megabytes in the home directory tree
Find all regular .mp3 files larger than 10M and delete them
Prints current directory name
Print the list of files in directory /tmp/a1 recursively
display all the files in the home folder excluding directories which have been modified in the last 24 hours
Find regular files modified within the last 7 days
Print a count of each unique line in "ip_addresses.txt" sorted numerically
Print the full real path of "/dev/disk/by-uuid/$1" followed by "is not mounted"
Print the first two bytes of "my_driver" in octal
Search the current directory recursively for files containing "needle text"
Find all *.sql file that are not newer than  $oldest_to_keep excluding the  $oldest_to_keep file
display all the files  in the current folder excluding the current folder and do not search in the sub directories
Create a symbolic link named "${DESTINATION}${file}" to "${TARGET}${file}"
Overwirte file '/path/to/your/file' with random content, showing progress while execution.
Create intermediate directories "x" and "p" as required and create "q"
Delete all files in the current directory.
Make directory "testExpress"
Find all empty files under /tmp and below
Print second section of space-separated data from text file "a".
find all files that names are dir-name-here
Find all files in the current directory tree that are newer than some_file
Find recursively the files named "file" in the current directory ignoring the .git subdirectory
find all foo.bar files in the entire file system
Delete empty files and print their names
Output all lines from file1 except those present in file2, assuming both files are sorted.
Delete files in the DIR directory tree whose names begin with "2015" and contain "album" or "picture"
Print the absolute path of third-level files under the current directory tree and number the output
find all files that have been used more than two days since their status was last changed
Finds strings with text "text" in all files named "string to be searched" recursively in a current folder.
Removes all empty folders within $DELETEDIR folder.
Search for 'Attached: Yes' in all regular files under '/proc/scsi' directory tree matching the path '/proc/scsi/usb-storage' and show only the matched filenames
Print 3 newline separated "y"s
Delete all files in the TBD directory that were modified more than 1 day ago
Concatenate all files under the current directory and below that contain "test" in their names
Find find symlinks pointing to /mnt/oldname* in the entire file system
Locate all *.csv files under the current directory tree
change owner and group of the current directory and all files into it to user and group andrew
Print "Total generated: " followed by the number of unique lines in "$generated_ports"
list jobs including its PIDs
Set trace prompt to print seconds.nanoseconds
delete all the trace files (".trc") from the folder $DBA/$ORACLE_SID/bdump/ which have not been accessed in the last 7*24 hours
Print numbered list of all third-level files under the current directory
Search for " 000" in the hex dump of "file-with-nulls"
Print all files with a '-' after their name if they are regular files, and a '+' otherwise
Output line number and lines 200000000 through 200000005 from the infinite input of "y"
Find all files owned by the user daniel in the current directory and below.
Make directories "mnt" and "point"
Create master SSH control socket "my-ctrl-socket" in the background with no terminal or command execution with connection forwarding from localhost port 50000 to localhost port 3306 via "jm@sampledomani.com"
Print only the line "foo///" given two empty directories foo and bar
make directory "/etc/cron.15sec"
Find all files and directories starting from the current directory
Verbosely compresses all files on third and fourth depth level keeping original files in place.
Delete all files in the /myDir directory tree that were last modfied more than 7 days ago
Remove all *.sql files in the $backup_path directory that were last modified more than 5 days ago
Find all files under current directory with their size and paths, reverse sort them numerically, then print the 2nd field (with space as the delimiter) of the first 4 entries
find all the files which have not been modified in the last 1 year and display the total disk usage of them  in GB
Extract and print hostname and protocol part from URL like "http://www.suepearson.co.uk/product/174/71/3816/".
Find all files under maximum 1 level down the ./subfolder and ./subfolder/*/  paths
Replace all occurrence of "subdomainA.example.com" with "subdomainB.example.com" in all files under /home/www and below
search for all the regular/normal mp3 files in the file system and move them to the folder /mnt/mp3
Count all the mp3 files in the music user's home and subdirs.
Join strings from 'file1' and 'file2', discarding excessive strings from largest file, and printing first, second and third space-separated field from first file, and third and fourth field from second file as a join result
find all the files which end with ".deb" and display their base name (strip the extension)
List environment variable values whose name matches '^\w*X\w*'
Force create a symbolic link without dereferencing named "mylink" to "dir2"
search for all the non-hidden files in the current directory and do not search in the subfolders and dispaly their name and size.
Decompress "file2.txt" and "file1.txt" and print lines in "file1.txt" that match the 5th tab separated field in "file2.txt"
Brings down network interface eth0.
find all the files which are of size 0 bytes.
Print lines in file 'filename' that do not match the regex 'pattern'
Print a list of regular files from directory tree sort_test/ sorted with LC_COLLATE=en_US.UTF-8
Create an empty file with a carriage return character in its name.
Read a line from standard input into variable "YESNO" ignoring backslash escapes and using the prompt "$(echo $@) ? [y/N] "
Find all files/directories with space in their names under $1 directory
Remove all .mpg files in the /home/luser directory tree
find all the files in the home folder which have been modified in 1 year or more ( which are not modified in the last 1 year ).
Find all empty folders in the current directory and below
ssh into localhost on port 10022
Remove all *.bak and *.backup files that were accessed last time more than 30 days ago
find for a filename with multiple patterns in the current folder
Print your/dir if it's empty
Execute "ls -l" every 0.5 seconds
Search the current directory tree for file `teste.tex'
Find all *.ps files under $STARTDIR
search for version in system.info files.
Removes 55, adds a 10-digit line number, and rearranges the date for each line in "input"
Find files that have a modification time of a day ago
Find all files/directories not with the name 'query_to_avoid' under current directory
Display standard input as a table with "${tab}" separators
Prints Kb size of all top-level files and folders in a current folder in descending order.
Find all files/directories named 'query' (case insensitive) under current directory
Make a list of regular files from the current directory tree that have more than 1 link and view it with the "less" pager
Find all filename.* files/directories under /root/directory/to/search
Recursively search current directory for all files with name ending with ".t1", change this to .t2
Recursively copy all files with names ending with .txt from dir_1 to the same location within copy_of_dir_1
Copy all files that match 'FooBar' in their paths under current directory tree to the '~/foo/bar' directory
Ungzip and untar all files matching "www-backup.tar.*"
change group of the file myfile to group friends
List all *.txt files/directories under current directory
Count number of users logged in
Changes to the directory where 'ssh' executable is located.
Finds string beginning with 'IFS' in a 'set' output.
Get the sizes (and total size) of all files under dir2 directory
Find grub.conf files in entire file system
Save the first 3 lines output by 'yes' to 'file', and log the rest through 'more' which simply waits for user interaction at each page.
Find files with 002 permission in entire file system and print them with the string 'has world write permissions' appended after every path
Remove adjascent duplicate lines from file 'input' comparing all but last space-separated fields
Copy all files ending in ".a" in directory trees matching "folder*" to "/path/to/dest" preserving directory hierarchy
Sort the contents of file "ips.txt", eliminate duplicate entries, and prefix each entry with number of occurrences.
Print base name of the file name without all extensions.
find all files in the current directory which are bigger than 4MB
find all the regular files in the current directory which do not have a read permission
Archive "/home/abc/*" to "/mnt/windowsabc" with human readable output
Recursively add read and execute permissions to all files and folders in "directory"
Removes empty folder, and hides error message if one is not empty.
Lists all top-level files in a '/home/dreftymac/' folder.
Removes any empty folder that matches pattern ed*.
Find all regular .html files in the /var/www directory tree
Remove all files in the ~/backups/mydatabasename directory recursively that were last modified more than 30 days ago
Find all *.rb (regular) files under current directory ensuring white space safety and print at most two file names/paths per line
find all the html files that are acces in the last 24 hours in the current folder
Prints groups list that current user belongs to.
change the permission of all the directories to 755 in the current folder
Lists all subdirectories in a current folder, removing trailing slash.
Prints long listing of directory $var sorted from oldest to newest, with appended indicators.
Find files with 002 permission under /tmp and print them with the string 'Found world write permissions:' printed as the first line of output or print 'No world writable found' if no such files were found
Find all directories named 'local' in entire file system
display all files in the current folder expect text files
List all variables (names and values) whose name or value contains X.
find all the directories in the entire file system whose size is greater than 50KB
List all leaf directories (directories which don't contain any sub-directory) under current directory
Create a tar archive with all *.java files under the current directory
find all files in home folder which have been modified exactly 1 day before
Print percents of the space used on the file system containing path to the current working directory.
Remove all files in the current directory tree that have the name "abc.xxx"
display all text files in the folder /home/you which have been modified in the last 60*24 hours(case insensitive search)
find all files having certain word in its name in the current folder
Synchronize "/path/to/dir_b" with files in "/path/to/dir_a/" if the files are newer
Make directory "foo"
Change to directory 'xyz' and resolve any symlinks in the resulting path, making the physical path the current one.
Print the date formatted with "%a %x %X" followed by the host name
Search for the regex ^catalina in the first line of each file under current directory
Find all files under and below the current working directory with the word California in the file, and count the number of lines in the output
Prints process tree of a process having id $mypid, with command options and process id number.
Find every file/directory under /var/spool that was modified more than 60 days ago.
Show manual for the find command
Find recursively the latest modified file in the current directory
Find files/directories named 'sar' under directory trees whose path starts with '/u' or '/b' or '/s' or '/o'
display long list of all the perl files in the current folder
Search for 'birthday' (case insensitive) in all regular files under ~/Documents directory tree and show only the filenames
Recursively removes all files like '*.pyc' in a current folder.
List all files/directories in entire file system
Append "foo" and "bar" column in file "file" with values dependent on the current table contents
Create symbolic links in current directory for all files located in "dir" directory and have filename extension "jpg"
Print lines of 'file' reverted order, and reverted characterwise
find files which full path name is /tmp/foo/bar under /tmp/foo directory and print
Find recursively regular files in the directory given as the script's command line argument #1, skipping hidden files and directories
Append "<br/>" to the end of each line in "1\n2\n3"
Update the archive '2009.tar' with the files from the data/ directory tree that match pattern 'filepattern-*2009*'
Create a copy of index.html in all directories in current directory whose name contains Va, pausing for confirmation before overwriting any existing files - names may not contain spaces.
Print 'bla.txt' if at least one file with such name is present below the current directory.
Find all files larger than 20000k and print their names and sizes
Print the IP addresses for the current host name
Find all .mp3 files with more than 10MB and delete them
Copy all *.data files under /source_path to /target_path
Find all the files that were modified exactly one day ago
Find *2011* files and grep for the string 'From: Ralph' in those files
Change permissions to 644 for all files in the current directory tree
find all the text files in the folder /home/calvin and do not search beyond 2 levels
Replace all instances of "string" with "longer_string" in file "input.txt" and re-align
Find x* files/directories under /tmp directory whose status was changed less than 1 day ago
returns the first 100 bytes in the file
display all the files in the file system which belong to the user "wnj" and which are modified after the file "ttt"
Count the number of files in the current directory and below
find all teh script files in a directory
Delete all directories found in $LOGDIR that are more than a work-week old
Move files from $sourcePath to $destPath that have not been modified in the last 10 days
start from current directory, skip the directory src/emacs and print it then skip all files and directories under it, and print the names of the other files found
Mount "/dev/shm" using /etc/fstab entry
remote copy all text files from one location to another
Make directory "foo" and do not cause an error if it exists
Print numbers from 1 to 30 with equalized 0 padding
Finds all the log* files recursively in /myDir that are more than 7 days older and compresses them.
Find files with extension .conf in the /etc directory tree
find for the word "dba_2pc_pending" in all the files of current fodler having the word "sql" in their name
Find all files/directories named 'apt' in the entrie filesystem
recursively change owner and group of the directory  /vol/html and all files into it to user ec2-user and group apache
find file which case-insensitive name is foo in current directory.
create a zip of all the files in the current folder which are bigger than 100Kb and do not go more than 2 levels during search
Clears terminal screen.
Finds shell options with 'login' in name.
Find all files/directories under current directory and print their paths
Split "$1" into files of at most "$2" or default 10000 using a numeric suffix of length 6
Find all files/directories under current directory that are greater than 10MB in size
Search for 'pattern' in all files with '.cc' extension under current directory tree and show the matched lines with line numbers and filenames
display list of all the regular/normal files in the current folder which start with "my"
Find *.c and *.h files under the current directory tree skipping hidden directories and files
display all the files in the current folder
Archive "/var/www/test/" to "/var/www/test" on host "231.210.24.48" as user "ubuntu" via ssh using identity file "/home/test/pkey_new.pem"
Saves index number of file 'script.sh' in the 'inode' variable.
Find all files under current directory excluding hidden files
find all files that are readable and writable by their owner
Print the second space separated fields from standard input
ERROR - will overwrite the executable if it's not a symlink.
Fiind and remove multiple files such as *.mp3 or *.txt
Save the FQDN host name of the system in variable "hnd"
Show the list of files that are not owned by user wnj or are not newer than file `ttt'
Search the current directory recursively for files containing "needle text"
display the filename and size of all the files in the file system which are bigger than 20MB
Look for any instance of "HIGHMEM" in the current kernel's compile-time config file.
Show process tree with command-line arguments of a process that has id 20238.
SSH into host "$1" using key file "/path/to/ssh/secret/key" and execute command "$2"
display list of all the regular/normal files in the home folder which are bigger than 512 kb
Display differences between list of files in /bin and /usr/bin.
Print number of lines that equal in files '/home/xyz/a.csv1' and '/home/abc/tempfile'
List all file paths under the current directory with case insensitive name ".note" in reverse alphabetic order
display the long listing of all files in /var/log which were modified 60 days or more ago.
Delete all lines matching "pattern" in "filename"
Remove all regular files found in and below /path
find the oldest normal file in the current directory
Find all directories under minimum 1 level down the  $GIVEN_DIR directory
Delete files "*doc copoy" in directory tree /mnt/zip
Find all hard links to file1 under /home directory
Find all SGID files in entire file system
display all the files in the current folder that have been modified in the last 24 hours
Find all empty files in the current directory and delete them
Write every two lines in "infile" on a single line separated by a space
display all the files in the current folder which have the permissions 777 and which have been modified in the last 24 hours.
list all the ".ksh" files in the current directory
Find all directories named 'mydir' under 'local' and '/tmp' directory tree
Delete all regular files that start with 'sess_' in their names, are at least 1 level deep and were modified more than $gc_maxlifetime minutes ago under $save_path directory tree
find all the text files in the current folder
List the unique parent directories of all .class files found in the entire filesystem
Find files smaller than 40 blocks skipping directories on other file systems
Find directories that are directly under $workspace_ts directory (no-subdirectories) and were modified more than 30 days ago
Display differences between /tmp/test1 and /tmp/test2 side-by-side.
List all files in the /myfiles directory tree
Delete interactively all the files/directories with inode number 782263 under current directory tree
Remove all directories called "test" from the /path/to/dir directory tree
Find all files/directories under /var/log directory
Find files in the current directory tree which are larger than 5 MB in size
Move "$PHANTOM_JS" to "/usr/local/share" directory
Print a welcome message with the current user's user name
Combine every two lines of standard input
Find files/directories named 'TEST_3' under current directory tree
Find all *.py files under current directory and search for regular expressions taken from the search_terms.txt file
Search the .sh files in the current directory tree for string "ksh"
Archive directory specified by variable "i" to "/iscsi" preserving relative paths.
Finds all files having text "texthere" recursively in a current folder, and precedes found string with string number in file and file name.
Find the first file/directory under current directory and quit
List all *.bak files in the current directory tree
find all file name in curent directory ,  -exec will file all file output  awk used here for print only file name .
List all files under current directory with white space safety in their paths
Find all files under /path/to/dir and change their permission to 644
find a 'fool.scala' named regular file under /opt /usr /var those directories.
Reverse the order of lines in "myfile.txt" using BSD "tail" command
List all files in maximum 2 levels down the current directory
Find a directory named 'project.images' case insensitively in the entire filesystem and show it in long listing format
List all files in the /hometest directory tree whose names are "Trash", and their sizes
Find *.txt files in the current directory tree, ignoring paths ./Movies/*, ./Downloads/*, and ./Music/*
Copies file '/boot/config-`uname -r`' to the  '.config', printing info message and prompting before owerwriting files.
Find all files under current directory
Find all Read Only files in the file system
Execute "ls -l" every 2 seconds
List *.txt files under current directory that have 'mystring' in their name
Split "file.txt" excluding the first line into files of at most 4 lines each and with a prefix "split_"
Find all files/directories with '.tar.gz' extension under $DIR/tmp/daily/ directory tree, sort them numerically and show the last 3 of them
Change permissions to 644 of multiple files with permissions 755
Create a compressed archive named 'my_directory.tar.gz' with files inside directory 'my_directory' without including the directory entry 'my_directory' itself
Find files/directories under current directory that matches './projects/insanewebproject' in their paths
Compress all files in the "$FILE" directory tree that were last modified 30 days ago and have not already been compressed with gzip
Find all *.txt files/directories under current directory
Move each of the 'm?' directories in current directory to another directory whose name is constituted by appending .mbox to each directory name and create a directory named Messages in this directory then move all *.emlx files into this directory
Remove all "core" regular files in the /tmp/ directory tree
Find files in the current directory tree whose names begin with "file" and whose size is 0, and remove them
Find *.c files under $HOME and search for the string 'sprintf' in those files
Sets shell option 'extglob'.
Send one ping request to host whose name or IP address is specified by variable "ip", using network interface eth9.
Recursively change the owner to "$USER" and group to "$GROUP" of "/var/log/cassandra"
Create a symbolic link named "~/bin/subl" to "/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl"
find files in current folder using name patterns and sort the display the file names in the sorted order
Find all files/directories with '.in' extension in the directory $directory and its subdirectories
List the last entry of the numerically sorted list of all files and folders under "/foldername"
Recursively removes all files like '._*' from current folder.
Copy "some_file_name" to "destination_directory" and change ownership to "someuser:somegroup"
Reports count of processors in system.
Set variable "b" to the first word of "a" converted to uppercase.
Counts non-blank lines (lines with spaces are considered blank) in all *.py files in a current folder.
find all data files in current folder which have not been changed in the last 60 minutes and display their name without extension
Remove the last 2 tab-separated fields of each line in file pointed to by filename
Find all files with the SUID bit set beginning with the root directory
List all files in the current directory tree except for those in the ./src/emacs directory
Ping all hosts in file "ips" twice
Search all files in the current directory tree, except GIT files, for "string-to-search"
Replace all non-punctuation characters with newlines from standard input
Display the content of YourFile.txt, waiting for user input at each page.
Find all regular files in minimum 1 level down the $dir directory
Find all files in the home directory tree that are owned by another user
Starts new tmux session, assuming the terminal supports 256 colours.
Find all hidden directories starting from the current directory
display all files in current folder which are bigger than 100KB but are less than 500KB
Creates temporary directory with name formatted like .daemonXXXXXXX in /tmp/ folder, and saves path to it in 'TMPDIR' variable.
SSH into host "server" as user "user"
download contents of a website "https://get.scoop.sh"
Replace all colons (':') with newlines in $list and search for the first match to the regex "^$removepat\$" where $removepat is a variable and save the result to variable 'removestr'
Counts all business days in a current month.
display all the files in the current folder
Replace all occurrences of "foo_fn" with "bar_fn" in the files named "foo_fn" from the current directory tree
search for all the files in current folder which start with "file2015-0" and move them to frst 400 fiiles  to another folder
Find all image.pdf files/directories under ./polkadots
Search the ~ and `Music' directory trees for .mp3 files
Count the number of open files for PID "$PYTHONPID" every 2 seconds
Find all regular files in the current directory tree last modified between 1 and 3 days ago and list them using find's -ls option
Decompress "/file/address/file.tar.gz" to standard output
Identify CMS version/releases accross all your PHPBB installations
Save directory "../../lib" relative to the executable "gcc" to variable "libdir"
Finds file 'Subscription.java' and changes to containing folder.
List the current directory recursively ignoring the "dir1" subdirectory's content
Remove all directories called "test" from the current directory tree
Find and show all files in the current directory tree that are exactly 2000 kB
Store N symbols of input into variable 'buffer'
display all the directories in the current folder and create a skeleton of make directory commands with all these folders
Add executable permission to "java_ee_sdk-6u2-jdk-linux-x64.sh"
Make a list of all files in the current directory tree, except *.png and *.class, and view it in the vim editor
Save full path of command "tr" to variable "TR"
Search all .py files in the current directory tree for "some_function"
long list al the files in the current directory which have read permission to the group
Execute "ls -l" every 2 seconds
Search for file names with "bad" characters in the current directory and delete the files.
find all CSS files under currenty directory and use sed to edit them
Search the current directory tree for *cache, *xml, and *html files
Create an archive named newArch from the contents of ./test directory
Print unique lines of sorted file "a" compared with sorted file "b"
Find files modified more recently than file poop
Print list of file systems currently mounted.
Set the shell option 'errexit'  causing bash to exit immediately if one of the commands in a multi-command statement fails.
Find all *conf* files recursively under current directory
Saves byte size of all content of $1 folder in 'uiTotalSize' variable.
display all the regular files in the current folder and do not search in sub folders
Delete files in /var/tmp/stuff and below that have not been modified in over 90 days
Find all files and directories under current directory
Gets IP address of 'en1' network interface.
display a long listing of all the normal/regular files in the current folder (print0 is used to handle files which have newlines in their names or files with the name only as spaces )
Remove all *.mp3 files in tmp directory but not in it's subdirectories
Copy loadable kernel module "mymodule.ko" to the drivers in modules directory matchig current kernel.
Measure the disk space taken up by all TXT files in the current directory tree
remove all the core files from /usr folder which have not been accessed in the last 7*24 hours
display all the files in the home folder which have read permission to the user
Delete all non digits from index "$i" in bash array "depsAlastmodified" and print the hex dump as characters
Find all files under and below /dir that were changed or created less than 60 minutes ago
Counts lines in each *.php file sorted by file path.
Print the help message of command "split"
Invoke a trusted X11 forwarding SSH connection with the server $ssh_server as user $ssh_user
ERROR - this is for DOS
Find all broken symlinks under current directory
remove all "Foo*" files under current dir
Search for files/directories which have read and write permission for their owner, and group and only read permission for others
Remove leading and trailing spaces or tabs from "   wordA wordB wordC   "
Find all directories in maximum 2 levels down the /tmp directory
Find all empty regular files in the current directory and below
Search for first match of the regex 're' in all *.coffee files under current directory and print the file names
Find the directories whose names contain "New Parts" at level 3 of the current directory tree and create symlinks to them in /cygdrive/c/Views
Recursively change the ownership of all files in "/Users/xxx/Library/Developer/Xcode/Templates" to "xxx"
Shows state of 'extglob' shell option.
Remove all files in the /myfiles directory tree that were accessed at least 30 days ago
Clear the in-memory history
Find empty regular files in /dir and its subdirectories
find all files with the first letter “e” or “f” and last one x in /usr/bin directory:
Kill all processes matching the string "myProcessName"
Remove all 'a.out', '*.o', and 'core' files in the current directory tree
List all *.png files/directories under /home/kibab directory
Find all the regular files with '.tgz' and '.gz' extensions and delete the oldest file under '/home/backups' directory tree
create a tar of all png & jpg images in the current folder
find all the ogg files in the current directory which have the word "monfichier" in their name
List each file or directory in the current directory prefixed by its filesize in bytes and sorted from smallest to largest
Search the home directory tree for files modified less than a day ago
find all the directories in the current folder
set MyVariable to the value of VARIABLE_NAME
Count the number of differing lines in "file1" and "file2" with 0 lines of unified context
Print IP addresses of the current host
create directory saxon_docs
find all the text files that have modified in the last 2 days and not modified today
Start 'top' to monitor all processes with the default settings.
List all files/directories under current directory matching the posix-egrep type regex ".+\.(c|cpp|h)$" in their names excluding the paths */generated/* and */deploy/*
Search the file system for regular files whose names are shorter than 25 characters
Search for 'Processed Files' in all $srch* (case insensitive) files under current directory
find all the text files in the current folder and display the results pagewise
find all the php files in current folder using regular expressions
Print the filenames taken by the glob pattern * with null character as the delimiter
Display bash function definition of "foobar"
Use multiple -exec command in find . Find all .txt files & grep banna in .txt files .
Lists all files in a current folder, separating names with comma.
Remove trailing white spaces and replace CRLF with LF in all files under current directory ignoring .git and .svn directories
Find all the files on the system that have been changed within the last hour
Recursively prints paths to all text file in folder (ignores binary files).
Prints first found folder that contains 'ssh' file and has 'bin' in path.
Removes only lowest level subfolders from current directory tree (folders without files and another folders within).
Extract 8 bytes as an unsigned integer that is "$o" offset into "$rpm"
Search the /home/bozo/projects directory tree for files modified within the last 24 hours
display all file in the home folder except ".c" files
Search for environmental variables with "HIST" in their name or contents
Print nothing because 'MYVAR' string doesn`t match with '/[^/]+:' pattern
Display the number of lines in all regular files under current directory tree and also show the total count
Search the home directory tree for video files
find all the files ending with "clj" in the current folder and search for a pattern
Continuously send "y" as input to "cat" which outputs to "more"
display all instances  of the file tkConfig.sh in the folder /usr
Find all files/directories case insensitively containing 'xt' in their names under '/etc' directory tree
Remove all files with the .c extension in the current directory tree
Finds strings with dot-separated sequence of numbers, and prints part of that sequence before the first dot.
Make directory "/cpuset"
find all jpg files in the current folder
Print appended data in "/var/log/syslog" as the file grows
Delete all empty directories under test directory
Recursively compresses all files within $2 folder.
display a long listing of all files in the entire file system which are bigger than 1MB
List all files/directories with spaces in their names under ~/Library directory
finds all files modified within a certain time frame recursively
Print numbers from 1 to the number in variable "$1"
Creates full path with parents, that matches to folder path extracted from $f variable.
Find all directories named build under the current directory
Recursively copies all files in the current directory but ones with 'c' in name to the home directory.
Delete all lines matching "some string here" in "yourfile"
Find all files/directories in directories/files taken from the glob pattern '/tmp/test/*' that were modified within the last day (day counted from today)
Find all files named 'new' under current directory tree and display their contents
add read,write permissions to all the files in the current folder which have the permission 600
Rename all *.txt regular files in the current directory tree to *.abc
Find the total size of *.jpg files within the current directory tree
split all files in directory "posns " into pieces per 10000 lines
display all file names in current folder
Find all *.ogg (case insensitive) files/directories in entire file system
Print the full path directory name of each "file.ext" found under the current directory
Save 'echo whatever you "want your" command to be' in history
Shows state of 'globstar' shell option.
create directory dir1
Perform a case insensitive search for *.jpg files which are greater than 500KB in size under /ftp/dir/ directory
Remove all files and directories called "test" from the current directory tree
Compare files "A1" and "A2" with 3 lines of unified context and print lines beginning with "+"
Print the names of all files in /some/directory and its subdirectories recursively whose MIME type is video
force delete all the files which have not been accessed in the last 240 hours in the temp folder
search for a word in all files in a directory
remove all the core files in the home folder
Search for files that were accessed less than 5 days ago.
display all the files in the folder "/home/mywebsite" which have been changed in the last 7*24 horus
List all regular files residing in the current directory tree and containing string "/bin/ksh"
Locate all files in the current directory and below that have "testfile" in their names
Get second line from text contained in variable $data.
Print a space separated list of numbers from 1 to 10 with no trailing new line
Prints information about active network interfaces in system.
Create a new directory "existing-dir/new-dir/" on host "node"
Find a single file called tecmint.txt and remove it
Find all index.* files/directories under current directory
Remount "/mnt/mountpoint" with read and write permission
Find all level 1 subdirectories of the current directory
Search the specified group for the given "filename
Search for the Perl regex "[\x80-\xFF]" in *.xml files under current directory tree
Set variable BZIP2_CMD to the full path of command "bzip2"
display all the files in the current folder except those whose name is "PERSONAL"
Save the current date to 'DATE' variable
Count total number of lines in all *.txt file in cuuent directory .
Search the system for files and directories owned by user `admin'
find all the files in the current folder with the name "test-a" and move them to the folder test-10
Find all the files which are accessed in last 1 hour
Find files by type
Print the names of the directories from the paths expanded by the glob pattern /path/to/directory/*
find all the regular/normal files in the current direcoty which have not been accessed in the last 30 days.
display all the directories in the folder master-
Show a long listing of the latest file or directory under current directory
Prints current directory name
Find all files in the `work' directory tree, pass them to grep and search for "profit"
Find all your jsp's, map them to your localhost webserver, and invoke a wget (fetch) on them
Find all directories under /directory-path and change their permission to 2755
Search the current directory tree for directories
Delete the files under the current working directory with inode numbers specified on standard input
Split "file.txt" into files of at most 20 lines each with a prefix "new"
Find all directories under $d directory and set read-write-execute permission for owner and group and no permission for other for those directories
Force create a symbolic link without dereferencing named "$SYMLINK_PATH" to "$lastModified"
Search the .css files in the /starting/directory tree for ".ExampleClass"
Search the current directory tree for files whose names end in "rb" or "js"
find the md5 sum of all the regular files in multiple folders and display them in sorted order
List all files in current directory whose name or file type description contains the word "ASCII".
Find all the files whose name is tecmint.txt in the current directory
Number each line in "/etc/passwd" as right-justified zero padded to a width of 9
Find all *.mov (case insensitive) files under current directory and list their paths with their names
Find all files under current directory that are larger than 10KB in size
Allow all users to execute "myscript.sh"
Variable PID contains a process ID, check if this process exists - resulting exit status from this command will be zero if it does and current user has permission to send it signals.
Sets shell option 'globstar'.
Find all files that belong to group root
find all the files in the current folder which have been modified in the last 60 minutes
Save "$N" number of '.' characters in variable "myvar"
search for regular files in the current folder which path is not  "./.*" and not "./*/.*"
SSH into "hostname" on port 22 as user "myName"
Make directory "subdirectory"
display all the normal/regular files in a directory
Print position number of day '9' in fourth line of calendar output for September, 2009.
Decompress and extract 'libxml2-sources-2.7.7.tar.gz'
List all files/directories under current directory matching the posix-egrep type regex ".+\.(c|cpp|h)$" in their names excluding the files that contain 'generated' or 'deploy' in their paths
Delete all files in the /myDir directory tree that were last modfied 7 days ago
Remove files erroneously named `-F'
Find files that are 0 bytes in size in the current directory tree and remove them
Set the shell prompt to "host:pwd>"
display all the files in current folder which have been accessed in the last 15 days
List all files in /home/bozo/projects directory tree that were modified within the last day.
beginning at the end of the file, prints lines matching /2012/ and exits after first non-matching line
display all the files in the entire file system
Change the owner of all files in the directory tree "dir_to_start" excluding file "file_to_exclude" to "owner"
display the count of all the normal/ regular files in the current directory
Find all files/directories under $1 which have at least read permission for their owner and set read permission for group for these files/directories
Display the first 10 lines of the byte hex dump with no file offset data for "/bin/ls"
Find files/directories named 'foo.bar' under './dir1' and './dir2' directory tree
Change permissions to 0755 for all directories in the /path directory tree
search for the word "search-pattern" in all the regular/normal files in the current folder and display the matched file name
List *.txt files residing in the current directory tree
Find all files on the system that are larger than 600 MB
find all the ".jpg" files in current folder and display their count
Close the master SSH control socket "my-ctrl-socket" to "jm@sampledomain.com"
execute a command in 10 seconds
Find files in the current directory whose names begin with "file" and remove them
Make all directories in the current directory tree accessible to anybody
Create a copy of the current working directory structure in the usr/project directory,
Find all files modified less than 5 minutes ago, and page interactively through the output.
login as user postgres
Find all pdf files excluding *_signed.pdf files under /some/dir with null character as the delimiter
Read a line from standard input with prompt "Continue (y/n)?" and save response in variable "CONT"
Print info about all mounted file systems
Find all files with the SUID bit set, starting from /
search for files in current folder using name patterns
Rename "file0001.txt" to "1.txt"
find all symbolic links in the current folder
Find all files/directories under current directory and print them
Find all files ignoring hidden files under current directory and replace every occurrences of 'subdomainA.example.com' with 'subdomainB.example.com' in those files
Search the /Path/bar* directories recursively for files matching pattern "file_name*"
download file  "https://raw.githubusercontent.com/creationix/nvm/v0.31.0/install.sh" and execute it
search for the file "process.txt" in the current folder (case insensitive search)
Print the list of directories that are present in the /mnt/raid directory tree
Counts number of *.php files in a current folder and subfolders.
Remove all regular files from the current directory tree whose names do not end with "ignore1" or "ignore2"
List the directory paths of all file.ext files under present working directory
Repeat "image.png" 10 times on a single line
Find all files/directories with 'my key phrase' in their names under current directory
Uncompress and unarchive "data.tar.gz"
Print the last 10 lines of '/var/log/syslog', printing out any additional data appended to the file
Deletes empty folder 'nonsense_dir'.
Copy all files unconditionally and directories in directory tree "myfiles" to "target-dir" preserving directory hierarchy and modification time
List the 10 largest files or directories and their sizes under (and including) "/var"
search for the word "redeem reward" in all the regular/normal files in the current folder
find regular files in the current directory, without descending into sub-directories and display as a null separated list.
Find files ending in "f"
Rename absolute path of symbolic link "dirln" to "dir2"
Find all files under current directory without descending into .snapshot directory that were modified in last 24 hours with null character as the delimiter
Save the directory of the full path to the current script in variable "dir"
Write the shell's input to standard error as it is read
List files in "dir1" that are not in "dir2"
list all javascipts file which whole name does not contain "directory"
Find all files under /myfiles with read-write access for others
Split "domains.xml" into files of at most 50000 lines each with a numeric suffix of length 4 and prefix of "domains_"
Find smallest file in the current directory with find commad
Exclude directory from find . command
Prints calendar of $month, $year, and redirects all output to the awk script 'cal.awk', with predefined variable 'day=$day'.
List all .jpg files in the home directory tree
Create a symbolic link named "$1/link" to the current working directory
Print local SRV record of domain '_etcd-client._tcp.'
Calculate the md5 sum of all *.py files in the current directory
Display top 500 mp4 and flv files under current directory along with their timestamps in the sorted order of time
Find all directories under htdocs directory and set their permission to 775
show all the mp3 files in the folder /home
Make DNS lookup for hostname stackoverflow.com
find all files in the current folder whose size is less than 50KB
Find the first file/directory under $DIR which matches the $TMP_DIR in its path
find all the files in the home folder that have not been modified in the last one year
List all files in /home/bozo/projects directory tree that were modified within the last day
Split "input.txt" into files of at most 10 bytes each with prefix "xxx/split-file"
find all the directories in the folder /raid with the extension local_sd_customize.
Make directories "tmp/real_dir1" and "tmp/real_dir2" as needed
Compute the mean average of the word count of *.txt files in the home directory
Remove "\r" at the end of each line in "infile" and display the result as printable characters or backslash escapes
search in the current directory for any file named Chapter1.txt
Rename "new" to "old" and backup to "old.old" if "old" exists
Find all files named "filename" in the current directory tree, not descending into "FOLDER1" directories
display the sum of disk used by all the access.log files in /var/www folder
Print out the contents of all *.txt files in the home directory
find all the files in the folder /path/to/dir which have been modified after a specific date (Feb 07)
Get the disk space used by all *.txt (case insensitive) files/directories under current directory
Save the number of matching executables for "$cmd" in $PATH to variable "candidates"
find the type of all the regular/normal files in the current folder (plus takes bulk of files as input to the file command)
create directory foo
Expands `whoami` as current user name, and adds resulted path to the directory stack.
Immediately terminate all processes whose command or arguments match "myProcessName"
Save the percentage of packets lost of the 5 packets sent to "$host" in variable "packet_loss"
Find all files under $dir
Move all files matching case insensitive ".cpp" in the current directory tree to "./test/"
display all symbolic links in current folder
Find recursively all empty directories in the current directory
Print lines in file 'file' that do not match any word specified in file 'blacklist' (one word per line)
count lines of C or C++ or Obj-C code under the current directory
Print 'file' content, formatting output as 29-symbol wide column
Creates temporary file and saves path to it in a 'tmpfile' variable.
Make directory "/tmp/new"
Set the setgid bit on all directories in the repository "/git/our_repos"
Recursively removes all files like '.DS_Store' from current folder.
find non-hidden files (ones that do not start with the period "." chartacter) that were are modified in the last 15 minutes.
Look in /home/dm and below for files with 'uniform' in their names
search for the word text in all the python files in the current folder
Search for the wp-config.php file in /var/www and one level below
Print the file 'text1;text2;text3' replacing each space(" ") with a newline
display all the directories in the current folder excluding those that have the name "node_modules"
Print "file1.txt" "file2.txt" and "file3.txt" with filename headers
find the file "foo.txt" in the current folder and assign the output to a variable
Find all 777 permission directories and use chmod command to set permissions to 755
Print the number of lines in file.txt.
Find files in the current directory and below that are less than 500 kB in size
Remove all Thumbs.db files from the current directory tree
Print local files without descending non-local directories
copy the entire contents of the current directory to another directory, while preserving the permissions, times, and ownership of every file and sub-directory
Copies all files like "*FooBar*" under the current directory to the '~/foo/bar' directory.
Format time string @1267619929 according to default time format
Echo each command before running
Print lines 2960 to 2966 from the output of "history"
find a difference between website content of "http://tldp.org/LDP/abs/html/" and "http://www.redhat.com/mirrors/LDP/LDP/abs/html/"
Reads content of bzip2 compressed files and processes it with awk utility.
Count the number of regular files in the current directory that contain a vowel in their names
Find files in the current directory tree which have permissions rwx for user and rw for group and others
Change the group to `temp' for all files in the current directory tree that belong to group `root'
Find all *.java files under current directory and replace every occurrences of 'subdomainA.example.com' with 'subdomainB.example.com' in those files
print all readline bindings
Search for files only that end with .php and look for the string $test inside those files
Print file type of the executable file of command "file"
Recursively copy all ".txt" files to "user@remote.machine:/tmp/newdir/"
Prints total count of lines of all files in a current folder and subfolders.
Find all regular files named postgis-2.0.0 under current directory
Find recursively the latest modified file in the current directory
Find all files/directories under current directory bypassing file hierarchies in lexicographical order
Read a line from standard input with a timeout of 10 seconds
Find regular files under / that contain "stringtofind"
display all the files in the folders /etc /srv excluding the paths /etc/mtab and  /srv/tftp/pxelinux.cfg
display all the files ending with .c in the current folder
Create intermediate directories as required directory{1..3} and subdirectory{1..3} and directories subsubdirectory1 and subsubdirectory2
Display who is logged on and what they are doing
Change to folder where the oracle binary is.
Find all files/directories under current directory tree that contain '1' or 'k' in their names
Print unique lines of sorted file "a" and "b" and remove leading tabs
Print line, word and byte counts for each .php files in current directory tree and also show the total counts
Copy "source" recursively to "destination" excluding "path1/to/exclude" and "path2/to/exclude"
Find all files/directories with execute permission by group or others
Set the setup connection timeout to 3 seconds for connecting to "user@ip" via ssh
Search the /myfiles directory tree for files whose names contain "blue"
Sets shell option 'nounset'.
Lists content of all subfolder (without recursion) in a current folder.
show all the files in the current folder which has the word "ITM"
Find files named tecmint.txt  of owner root in the entire file system
Finds strings matching pattern '^fields=\\\|^var=' in a 'set' output.
Create symbolic links in the current directory for all files located in directory "/path/with/files" with a name containing "txt"
Archive "/home/user1" to "wobgalaxy02:/home/user1" excluding hidden files
find the file "dateiname" in the entire file system ( case insensitive search)
Copies all files under the current folder like "file.ext" with "FooBar" in the path to the root of the current folder, preserving mode, ownership and timestamp attributes.
Print the user name of the user running sudo
Search the /path directory tree for files missing g+w or o+w bits
Print variable "$module" in formatted columns with at most 80 characters per line
Find and copy all log files in the current directory tree to /tmp/log-files
Find all the files under /etc directory which are larger than 100k
Search for files only that end with .php and look for the string $test inside those files
Remove files matching pattern '*-*x*.*' from the current directory tree
List all regular files in the current directory tree
Recursively copies 'SRCFOLDER' to the 'DESTFOLDER/'
Find and compress all .pl files in the current directory tree
Find all *fstab* files under and below /etc
Display the count of regular files for which the owner has read and execute permission under 'home/magie/d2' directory tree
Set the host name to the contents of "/etc/hostname"
Finds all files like "mylog*.log" newer than $2 and archives them with bzip2.
Find files not matching the patterns 'Image*-70x70*' and 'Image*-100x100*' in their names under Folder1 and copy them to Folder2
Remove `core' files whose status was changed more than 4 days ago
SSH into user@server and run command ${SSH_COMMAND}
Print process tree, adjusting output width with a screen size.
Find all files under $1 directory excluding hidden files and append a null character at the end of each of their paths
Find all files that were not accessed in the past 100 days
Find all regular files that reside in the current directory tree and were last modified more than 3 days ago
create a tar file of all the songs on my system that have been modified in the last 180 days (which is essentially six months)
Finds recursively all folders in current folder which path not contains "NameToExclude" string and removes only ones without files and another folders within.
Search the .log files in the current directory tree for string "The SAS System"
search in the current folder for all the directories with the name "test"
Copy all files in the current directory tree matching "textToSearch" to "$destination_path"
Find all *.foo files under current directory and search for 'bar' in those files
Print the output of history without line numbers
Find broken symlinks in current directory
Find all hidden files
Recursively change the owner and group of "/home/el/svnworkspace" and "775" to "your_user_name"
Find files/directories named 'foo' under current directory tree without descending into directories named 'foo'
Find & calculate total number of worlds in all .txt file from current directory
find all the files ending with "rb" and display the first 10000 lines from these files.
display all files  expect directories in the current folder
Search for all .mp3 files in the /mnt/usb directory tree
Mount "/tmp/loop.img" on "/mnt/image" as a loop back device
Replace "-" with "0" in columns 4 and 5 of file "test.in" and format as a table
Convert Unix `cal` output to latex table code.
Print the IP address of your SSH session
Remove all files that end with 'prefs copy' in their names under '/mnt/zip' directory tree
Look for file `Chapter1' under /usr and /home
Print "new.txt" with line numbers prepended
Request authority info with comments for 'djzah.com' from name server 'ns1.hosangit.com', and pass it to 'script.awk' awk script.
change owner and group of the all files with group owner vboxusers into home directory to user and group kent
find all files in current folder which are more than 300MB
find all the files in the file system that belong to the user www
Find all files/directories named 'filename' that belong to user 'username' and group 'groupname' in the entire filesystem
create directory aaa/bbb
List all regular files in the current directory tree modified within the last 24 hours
Print the input "hello world" to the console followed by a swap of the first two awk fields
Find all regular files under current directory tree that contain 'some text' in their names excluding paths that contain dot files/directories
Find files in the current directory tree whose permissions are 775
display all files in current folder ending with "~" or "#" using regular expression
Find all directories in the current directory tree that do not have `execute' permissions for anyone
List .conf files residing in the /etc/nginx/ directory tree
Open all .java files in the current directory tree in the vim editor
search for the word "foo" in all the regular/normal files in the directory "/path/to/dir"
find all readme files in a folder
Find all empty files in home directory
find all the normal/regular files in the folder main-directory
Finds strings with text "searched-string" recursively in all files of current folder and prints names of files with matched strings.
Print the second line of output of "ls -l"
Delete all files (files, directories, links, pipes...) named 'core' under current directory
Print the list of files and directories of the current directory including "."
Search the current directory tree for regular .mkv files
search for a word in all the regular/normal files in the current folder and display the filename along with the matched text
Print a listing of the `other' directory
search for the ip "192.168.1.5" in all the files in /etc folder
Remove all .txt files in and below the current directory
Search the file system for regular files whose pathnames are shorter than 25 characters
Search for files/directories with a case insensitive .txt extension in entire file system
find all the files ending with "clj" in the current folder and search for a pattern
display a list of all java or jsp files in the current folders
Search the /home/www directory tree for regular files
Search the /path directory tree for files lacking the group writable bit
Pass a wildcard to scp by escaping it: copy all files with names starting with "files" in directory "/location" on host "server" to current directory on local machine, displaying debug info and preserving timestamps and permissions on copied files.
Prints process tree for the current process with ASCII line drawing characters.
search for the regular/normal file "Dateiname" in the entire file system
Print all lines from file 'report.txt' containing any-cased 'error' pattern
Read a line from standard input into variable "dir"
Recursively copy all files and directories matching "*ela*L1*TE*" in localhost's directory /tdggendska10/vig-preview-dmz-prod/docs/sbo/pdf/ to /var/www/html/sbo/2010/teacher/ela/level1 on localhost connecting as ssh user "dalvarado", in batch mode (no prompt for passwords) preserving file permissions and timestamps, and without displaying progress information.
Search the home directory for filenames starting with "xx" except for "xxx" files
Gets MAC address of 'eth0' network interface.
display all the files in the file system which belong to no group
display all the files in the file system which have been modified in the last 10 minutes
Find all files/directories named orm.properties under  /eserver6 directory
display the names without extensions of all the data files in current folder and do not search in sub folders and which have not been changed in the last 60 mins
find all the directories in current folder and do not search in sub directories
Print the files under current directory twice per line
Saves hostname that matches ${ip_address} in 'host' variable, without trailing dot.
Remove all "CVS" directories from the current directory tree, ignoring the case
Sort the lines of the file 'temp.txt' and change it in-place
Search all directories starting from the root directory for "filename"
Find all files/directories under '/usr/local/games' directory tree that contain the string 'xpilot' in their names
Find and remove multiple *.mp3 files
List all regular files from the current directory tree that were modified less than 60 minutes ago
Forward all connections to client localhost 3307 via the SSH tunnel to gateway and then connect to host 1.2.3.4 to port 3306
Check if the file "somelink" links to exists
Pair side-by-side content of the 'file' and its side-mirrored content
display all directories in vim folder do not search in sub directories
Change permissions to 644 for all subdirectories
Recursively changes group ownership on every file in the ${WP_ROOT}/wp-content directory to ${WS_GROUP} group.
search for all the regular files in the folder /home which have the permission 077
change owner of all files into current directory except  files named as  './var/foo*' to user www-data
Search the *.c files residing in the current directory tree for string "blash"
display all normal/regular files in current folder which have readable permission
Find all files under $x directory and set read-write permission for owner and group and no permission for other for those files
Descend into every directory under /etc and print the file/directory names with relative paths
Find all files newer than httpd.conf under and below the current directory
Search PATH for utilities called "rename", display the type of file (script, executable, ...) for each match found.
Search the *.code files from the current directory tree for string 'pattern'
find all the files in the entire file system which belong to the group "staff"
Print content of 'file' file reverted characterwise
Prints what day it was 222 days ago
Find recursively all files matching pattern 'file??' in the xargstest/ directory and print a sorted list of them
Print only first line of 'file' content, formatted as 29-symbol wide column, regarding space symbol as a word separator
find all jpg files in current folder
print the names of all of the unstripped binaries in the /usr/local directory tree. Builtin tests avoid running file on files that are not regular files or are not executable
find all the mp3 files in the entire file system whose size is bigger than 10MB
Find files under current directory that are not newer than $date_time in regards of modification time
search for all the rpm files in the file system which reside in the same partition as that of the root
Format file "list-of-entries.txt" as new-line separated columns
Write standard input to standard output and file "/tmp/arjhaiX4"
find all the cpp files in current folder
Create an empty file 'last.check' in directory pointed by variable "log_dir", with specified timestamp.
Find files in $DIR_TO_CLEAN that are older than $DAYS_TO_SAVE days and print them with null character appended to their paths
Save the absolute path of the current script to variable "SELF"
Find all files/directories with permission $permissions under $directory directory tree
Check that the master ssh connection "officefirewall" is running
delete all the log files in the current folder
Look for "testfile.txt" in the "/" directory and 1 level below
search for all the ".c" files in the folder "/home/david" which have been modified in the last 10 minutes
Synchronize "/path/to/dir_a" with files in "/path/to/dir_b/" if the files are newer
Search the current directory tree for PHP files changed less than 14 days ago
Remove files from the file system that are owned by nobody
Make directories to "/tmp/boostinst" as needed and print a message for each created directory
List all files in the current directory tree that were last modified between "mar 03, 2010 09:00" and "mar 11, 2010"
display all the files in the current directory and do not search in sub directories
Find all 755 permission regular files under current directory tree
Recursively copies everything under the 'current' folder to the '.hiddendir' folder.
Find all files/directories with 777 permission under current directory tree
Set the environment variable "DISPLAY" to the system host name followed by ":0 skype"
Sort lines in "FILE" to standard output preserving only unique lines
Find regular files under and below /path that match pattern "???-???_[a-zA-Z]*_[0-9]*_*.???"
Save Java home in variable "JAVA_HOME"
Recursively removes all files like any-cased '*.pyc' in a current folder.
search for text files in the current folder which do not have write access to others
Display a long listing of all regular files with 0777 permission under current directory tree
Find disk used space of only the target directory
Print the lines in "table.txt" grouped by the first field
Print second section of space-separated data coming from stdin.
find all files in the home folder which have been modified between 72 and 96 hours before
Search the .java files from the /Applications/ directory tree for TODO lines
List all environment variables (name and value) whose name starts with GOROOT
find all the files in the current directory with the name "wagoneer" which are in the current device.
Copy directory structure from directory 'olddir' to 'newdir'
Print the empty directories and files under current directory
Search the system for directories named "needle"
Print out the names and types of all files in the current directory tree
Remove empty directories from directory tree /srv/abc
find all the files in the home folder which are less than 300Bytes
Enables shell option 'failglob'.
Prints long listing of top ten most memory using processes in a system.
Prints line count of each file within current directory.
find  files which full path name is foo/bar under foo directory and print
Print each line in parallel in files "tmp/sample-XXX.tim" and "tmp/sample-XXX.log"
display all the files in the current folder which have been modified in the last 24 hours excluding all directories
List all files in the current directory tree that were modified 60 minutes ago
Scan every file in /etc for IPV4 addresses.
Opens menu item 'Basic Shell Features' -> 'Shell Expansions' -> 'Filename Expansion' -> 'Pattern Matching' in the 'bash' manual.
Find all files/directories under current directory with null character as the delimiter
Mark variables and function which are modified or created for export to the environment of subsequent commands
Force create a symbolc link named "new_dir" to "/other/dir" without dereferencing "new_dir"
Find all symlinks under current directory
Gets IP addresses of all active network interfaces.
find all the regular/normal files in the current directory and print them skip searching all the directories in the current folders.
Delete all files in the current user's home directory and its sub-directories that have not been accessed for more than 100 days.
List all files from the current directory tree that were modified less than 60 minutes ago
search all the files in the current folder using regex excluding those that are present in the folder test
Find files/directories that does not have write permssion for group or others
Print summary of new/missing files, and which files differ between dir1 and dir2.
Creates random file name formatted like expression in variable ${str// /X} and saves it in 'rand_str' variable.
Find all files in $dir directory without going into sub-directories
Remove all directories called "test" from the current directory tree
Read a line from standard input into the variable "yn" using the first argument as the prompt ("$1 ")
Gets domain name from dig reverse lookup.
Change the owner of "$JBOSS_CONSOLE_LOG" to "$JBOSS_USER"
Set permissions for files in `foldername' and its subdirectories to 644
Search the *.cc files in the current directory tree for string "xxx"
Find .jpg files owned by user daniel in the current directory and its sub-directories but ignore any file beginning with "autumn".
Print the contents of "Little_Commas.TXT"
Delete all .svn files/directories under current directory
find all js files under the build direcotry except build/external and build/log directory.
Search the current directory tree for regular files whose names end in ".shtml" or ".css"
Display an amount of processes running with a certain name
Search the current directory recursively for regular files last accessed 2 minutes ago
Find all files under current directory that were modified more than 1 day ago
Change every file under "/var/www/html/" to have permissions 664
display all the files in current directory with each file name displayed twice in the same row
Find all .php files starting from the root directory /
display all files in the entire file system excluding the directories /proc,/sys,/dev and those files which are writable and which are not symbolic links and which are not sockets and which do not have the sticky bit set
Numberically sort content of file 'files', using for sorting part of second one of dash separated fields beginning from second letter.
Edit the cron job list for user 'wwwrun' using default editor specified by the EDITOR environment variable, or /usr/bin/editor if no default editor is specified.
Count lines that are neither blanks nor comments in a file 'foo.pl'
Move all files from the `sourceDir' directory to the `destDir' directory
Fetch a script from the web, and interpret it in the current shell.
Read a single character from standard input with prompt "Are you sure? (y/n) "
replaces the second to last line of file
Search for all files owned by user www-data that are not larger than 100kb
display all text files in the folder /tmp/1
Sort "file" using a buffer with a size 50% of main memory
find all text files in the current folder
Find and remove zero bytes files from user's directories .
find all files that were modified between 90 to 100 days ago in home directory and delete then .
display all the text files in the temp folder
Remove trailing white spaces from all *.rb files under current directory
For each line which has a common first field in test.1 and test.2, output the first 2 fields of test.2 and the field 2 and 3 of test.1
Join data in "file1" sorted by the second word of each line with data in "file2" sorted by the first word of each line, keeping the same order as it is found in "file1"
Print the current shell
display all files in the current folder which start with met
Prints current month calendar, without highlighting of a current date.
find all files in the current folder which are bigger than 10MB and less than 50 MB
Find all SGID set files in the file system
Search the current directory tree for regular files whose names end in ".shtml" or ".css"
Find all regular files that reside in the current directory tree and were last modified more than 2 days ago
Decompress and sort "$part0" and "$part1" of files in different processes
Remove everything in a current folder without prompting.
Search the current directory tree for files named "accepted_hits.bam"
List all mounted filesystems
Display a named character dump of "test.sh"
Find a more recent version of httpd.conf file than /etc/apache-perl/httpd.conf in entire file system
Find SGID files
find all files in the file system whose size is bigger than 3GB
Find all hidden files starting from the directory given as variable $FOLDER
copy the file header.shtml to those dirs
Find disk usage of all files inside the directory
Interactively create a symbolic link in the current directory for "$SCRIPT_DIR/$FILE"
Look for *log files in directories at least three levels down the directory tree
Find all files named 'Makefile' in the /usr/ports directory tree and count the number of lines in them matching regular expression '^MASTER_SITE.*CPAN'
Find files under /tmp that are larger than 10KB and smaller than 20KB
find all the png files in current folder which are present in the pattern list file "search.txt"
display all the files in the file system which are present in nfs system
Change permissions of ".git/hooks/pre-commit" to 777
Display a long listing of all directories under '/nas' directory tree
Read a line from standard input with prompt "Enter your choice: " and save response to variable "choice"
Add cron lists from "file1" and "file2" to list of cron jobs, giving errors for any lines that cannot be parsed by crontab.
Wrap each line in "yourfile" to fit in 79 characters and right pad any lines shorter with spaces
Find all regular files newer than '/tmp/$$' (where $$ expands to current process id) under '/tmefndr/oravl01' directory tree
force delete all the files in the current folder expect xml files
Make a copy of the entire contents of dir1 in the Pictures directory located in the user's home directory.
Search the current directory recursively for files last modified within the past 24 hours ignoring .swp files and paths ./es* and ./en*
Change owner to "root" and group to "dockerroot" of "/var/run/docker.sock"
Split the output of "ls" into files of at most 500 lines each with prefix "outputXYZ."
find all the files in the current folder which do not have the read permission
Find directory "your/dir" if it is empty
Find all files in the /var/tmp directory tree with uid=1000
Unpack all *.gz archives in the current directory tree
Count and show the number of lines for each PHP files in the current directory tree
display ten files in the tmp directory
Saves file sctipt.sh size in 'size' variable.
Read standard input until a null character is found and save the result in variable "line"
Subtract all columns in "File2" from "File1" except the first
Search the /home/test directory tree for directories and files called '.ssh'
Prefix all files and directories in the current directory with "unix_"
Save the first "." separated field of the system host name to variable "HOSTZ"
Search for 'Text To Find' in all regular files under current directory tree and show the matched files
Recursively list all files on smbfs mounts
Replace spaces with underscores in the names of all files and directories in the "/tmp" directory tree
Find all files/directories named 'query' under current directory
Infinitely print "1" then "0"
Print only unique lines of 'file_name' file
Find all regular files under $d directory tree and change their permissions to 777
find  files which full path name is /tmpfoo/bar under /tmp/foo directory and print
Recursively removes all empty folders under current path, printing info message on each operation, and suppressing error messages if folder is not empty.
Prints only first ten characters of each string of file $file.
delete all the files in the file system which belong to the user edwarda after user confirmation
Execute "cat /tmp/iostat.running" every 10 seconds
Move all files in the current directory tree that match "some_pattern" to "target_location"
Counts lines in each *.php file.
Find files/directories with exactly read,write and execute permission for all (owner, group and others) under /path
search all the files in the current folder using regex
Counts lines in file 'filename' ignoring empty lines and lines with spaces only.
Find all the SUID files in the current directory tree
Show the value of variable "list", discarding consecutive duplicates and adding number of occurrences at the beginning of each line.
Adjust the timestamp of file $filename by subtracting 2 hours from it
Find all regular files with 755 permission under current directory tree and change their permission to 644
Counts non-empty lines in file fileName.
Print the names of all regular files in the current directory tree
Change the owner and group of "testfile.txt" to "root"
Numerically sort each line in file "out" and print the result to console
Search for the files/directories that were modified more than an hour ago
Find regular files matching pattern "*oraenv*" and excecute the "file" utility for each of them
Find all *.p[lm] files under /users/tom directory that matches the regex '->get(\|#hyphenate' in their contents
Recursively change the user and group of all files in "/var/lib/jenkins" to "root"
search for the folder .dummy and remove it from the folder "Test folder"
Print a line of 10 '#' characters
Print the line number of each matching "<phrase>" in "<filename>"
Finds recursively and following symlinks from root folder all files that contain "text-to-find-here" and prints files names.
Change the file extension from '.txt' to '.bak' for all files/directories under current directory tree
find all regular/normal files which have execute permission in current folder and copy them to another folder
Decompress and extract '/usr/src/redhat/SOURCES/source-one.tar.gz'
Pipe content of 'somedata.txt' file to the input of command "$outfile"
Find all files in the directory $directory or below with the permissions specificed by $permissions.
Find all files/directories under _CACHE_* directories
Read a line from an interactive shell's standard input into variable "message" without backslash escapes and prompt $'Please Enter a Message:\n'
Get the current shell's executable name from the output of 'ps'.
Extract any line in "set1" which does not appear in "set2"
Search the /path directory tree for files lacking the group writable bit
Find all files whose names end with "~" in the /home/peter directory tree, following symlinks, and delete them
Send one ping request to host with local address in the 10.0.0.x range, with last number specified by variable "i", waiting 1 second for a reply, and output only lines containing "from" to standard output.
Moves file '$2' to the folder where '$1' file is located.
Send Output From Find The Find Command To A File
Change directory to the download directory specified in the current user's user-dirs.dirs file
Prints long listing of the current directory and top-level directories within, sorted from oldest to newest, with appended indicators.
Make a directory in the current working directory with a random 32 alphanumeric character name
Print a list of all duplicate filenames in the current directory tree if there is no white space in filenames
display long listing of all files in the current directory whose size is 24 or 25 bytes (doesnt display inode information) .
Find all *foo files/directories under current directory
Find files/directories under current directory and print them as null terminated strings.
Find all *.cgi files/directories under current directory and change their permission to 775
find all the normal/regular files in the current directory which have been modified in the last 24 hours
Find files/directories under current directory and print them
Print file type of the executable file of command "file"
Creates temporary file name and saves path to it in 'TMP_FILE' variable.
Find all files/directories named 'file1' under current directory tree
Reports count of characters in the value of ${FOO_NO_TRAIL_SPACE} variable as follows: "length(FOO_NO_TRAIL_SPACE)==<counted number of characters>"
find all files in the file system which have been accessed in the last 24 hours
find all files in the current directory that are less than 1 byte size
Remove all files with names like "vmware-*.log" from the current directory tree
Find CSS files omitting results containing "CVS"
Display the named characters in "Test\rTesting\r\nTester\rTested"
Change permissions to 0755 for all directories in the /path directory tree
search for all the files in the current directory which belong to the user "xuser1" and change the owner ship of them to "user2"
Remove all *.mp3 files in tmp directory but not in it's subdirectories
Find the total size of *.jpg files within the directory tree ./photos/john_doe
sort and display the unique lines display the contents of all the files that have been modified in the last 91 days and not in the last 2 days
Find all *.jpg files under current directory and print only unique names
Print a colon-separated list of all directories from the $root directory tree
Find all regular files under '/usr/bin' directory tree that are less than 50 bytes in size
Find all files whose names end with "~" in the /home/peter directory tree, following symlinks, and delete them
display all the regular files in the current folder that are exactly 10KB
Search the current directory tree for regular files omitting directory `omit-directory'
Look for files with wide open permissions
Finds strings with 'TEXT' from *.log files and prints all but first field from any space-delimited string.
display all normal/regular files in current folder
Search the current directory tree for all .java files that were last modified at least 7 days ago
Find all files under /mnt/naspath directory without descending into .snapshot directory that were modified in last 24 hours with null character as the delimiter
Merge already sorted files in the current directory ending in ".$suffix"
Find all files starting from the current directory that contain '.java' in their pathnames
find al the tmp directories in the current directory and create a dump of it
Set permissions to 700 for every subdirectory of the current directory
Show file type information for all regular files under '/home' directory tree
change the permissions of all the directories in the current folder
Delete all files/directories under current directory
Output the specified path removing all containing directories and the .txt suffix, in this case "filename".
display all the ".c" files which have been modified in the last 10 minutes
display a long listing of all the java files in the current folder in sorted order
Print a line of 100 random characters either "." or " "
delete all the text files in the current folder.
This find command ignore the case when searching for file name , to ignore the case  in this example all .py & .PY file will search
Finds the folder where temporary files would be written to, and save path to it in a 'TMPDIR' variable.
Search all of /usr for any directory named 'My Files', for each directory found, copy it to /iscsi preserving full paths and attributes.
Merge lines from "file_1" and "file_2" and format the output as a table with tab separators
Recursively lists all files in a current folder in long format.
Remount "yaffs2" filesystem "/dev/block/mtdblk4" to "/system" as read only
Move all files and directories matching "*.boo" in the current directory to "subdir"
Find all files/directories under minimum 1 level down the $FOLDER directory and sort them
Find all files which belong to user lal and change their ownership to ravi
Prints process tree of a process having id $ID with parent processes.
split file "${fspec} into pieces named as "xyzzyNNN" with numeric prefix from 1 to 6
Find all Makefile's in the current directory tree and look for line 235 in each of them
Find all directories under mydir
display list of all the hidden files in the home folder
Exclude directory from find . command
Search the directory tree /tmp for regular files using zero delimiter for output
Display all files in the current directory tree that match "*foo"
Display a long listing of all regular files that are less than 50 bytes in size under '/usr/bin' directory tree
Displays process tree of a process with id 'PID', showing parent process and processes id.
display all text, mpg, jpg files  in the folder /Users/david/Desktop
Find all files whose owner is `user1'
create a symbolic link named "/usr/lib/jvm/default-java" to file "/usr/lib/jvm/java-7-oracle"
create directory /etc/cron.15sec
Find all files/directories with '.bar' extension in maximum 2 levels down the current directory
Find ".c" and ".h" files in the current directory tree and print line numbers and lines containing "#include"
Find all httpd.conf files in entire file system
Find regular files named 'findme.txt' under '/usr' and '/home' directory tree
Calculate the md5sum of all the files with name "MyCProgram.c", ignoring case
Archive current directory to "/some/path" on localhost, using ssh to authentify as user "me", only update files that are newer in the source directory.
Find files with 002 permission under /tmp and print them with the string 'Found world write permissions:' printed as the first line of output
Find all files/directories under '/home/user/' directory tree whose status was changed exactly 10 minitues ago
Save the system host name in variable "HOSTNAME"
Show the subdirectories of the current directory
Search directories /opt, /usr, /var for regular file foo
Search the current directory recursively for regular files last changed 2 days ago
display files ending with ".ext" in current folder excluding those that are present in the list list.txt
Move all *.data files/directories in $S directory to $S/data/ directory
Make directory "backup"
Find x* files/directories under /tmp directory whose status was changed less than 1 day ago and move them to ~/play
Find empty files in the test directory
Remove all files with names like "vmware-*.log" from the current directory tree
find all the text files in the current folder
Locate files that reside in the /u/bill directory tree and were last accessed between 2 and 6 minutes ago
find all the cpp(C++ source files), java, header files in the current directory
Find all .txt files under the current directory and below
Make directories to "directory{1..3}/subdirectory{1..3}/subsubdirectory{1..2}" as needed
List all directories in maximum 1 level down the current directory
Search the current directory tree for files whose names do not end in "1" and "2"
Rename file extension '.andnav' (case insensitive) to '.tile' for all files/directories under current directory tree
Find all files/directories in the paths expanded by the glob pattern '.*'
Rename "fghfilea" to "jklfilea"
Print the IP addresses of the host name
Find files that are empty
Create a gzip archive file ($tarFile) of all *.log files under $sourcePath
Search the current directory tree for regular files last changed more than 14 days ago
Remove all directories called "test" from the current directory tree
Find all *.rb files/directories under current directory
find files in the /usr/src directory with pattern` *.c  that larger than 100 Kilobytes
find foo, Foo, FOo, FOO, etc.
explicitly list all files in the current directory
Create symbolic links in the current directory for all files under "bar1" that are not directories and do not end in ".cc"
Delete all *txt files under current directory
remove all text files from the current folder. Print0 is used to handle files whose names have only spaces or those files which have newlines in their names
Find all *.java files in the current directory tree
Find all .gz archives in the current directory tree
create a symbolic link with absolute path "/cygdrive/c/Users/Mic/mypics" to file "/cygdrive/c/Users/Mic/Desktop/PENDING - Pics/"
Save the list of all .py files under and below the current directory that contain "something" in their pathnames to output.txt
Find regular non-hidden files containing 'some text' in their names
Turns on network interface eth0.
Find files created in the last minute; works on Mac OS X
Search the current directory tree for regular files that were accessed $FTIME days ago
Display a dump of "file" as floating point values of double size
find all html or cgi files in current folder
Print the grand total disk usage of all files listed in "files.txt"
Find recursively all regular files in the current directory skipping hidden files and directories matching pattern '.?*'
find all the files in the home folder which have been modified in the last 24 hours
Find files in the current directory and below that are 2000 kB in size
Find files recursively with extension "ext"
Find all *blue* files/directories under /myfiles
Find files associated with an inode
Find all .java files starting from the current folder
Remove all files that were older than 3 days
find all files in the home folder that are modified in the last 7 days
Represent time string $MOD_DATE as seconds since epoch and save to variable 'MOD_DATE1'
Recursively removes all files like '*.pyc' in a current folder.
Replace the occurrences of "HOGE" with "MOGA" once per each line of the .yaml files from the current directory tree
Delete characters in columns 36 through 40 from the output of "finger"
find & Substitute Only When the Line Matches with the Pattern Using sed
Find all files in maximum 1 level down the current directory that were modified less than 1 day ago
Find all the files without permission 777 under current directory and show a few lines of output from the beginning
search for a word in all the files in the current directory
Takes folder name of file $0, changes backslashes to forward ones and saves result in $basedir variable.
Find all files/directories with '.c' or '.h' extension under current directory tree and search for the regex expanded by the variable $i and show the output by paging through one screenful at a time
Send one ping request to host whose name or IP address is specified by variable "remote_machine".
Recursively copy all directories in "/path/to/source" to "/path/to/dest/" preserving directory hierarchy
search for all the files in the folder /home/user1 which end with ".bin"
Print canonical filename of "/path/there/../../" even if it does not exist
find all files in the current folder that are not modified in the last 240 hours
Decompress 'file.gz'
Split "file.txt" excluding the first line into files with at most 20 lines each and a prefix "split_"
Count the number of regular files with 755 permission under current directory tree
Find recursively all empty directories in the current directory
List all files under current directory matching the regex '.*(c|h|cpp)$'
Search the current directory and all subdirectories for files that have 777 permissions and the permissions to 755
Print the MD5 message digest of "/path/to/destination/file"
Search directory tree `foo' for files named `Headers'
Search for "pattern" in all the .c files in the current directory tree
Replace the "openssl" command executable with a symbolic link to "/usr/local/ssl/bin/openssl"
Display all lines contained in 'dax-weekly.csv' in reverse order.
Counts lines in each of *.php files in a current folder and subfolders and prints total count as well.
Numerically sort standard input by the second word of each line
Prints only unique strings of those stored in variables $COMMANDS and $ALIASES.
Print name of the file system containing $path.
Measure the disk space taken up by all *.txt files in the current directory tree
Find all your text files
Saves location of file $1 in 'dir_context' variable.
Save the absolute path of the current script to variable "SELF"
Change the group of all directories (except those with a '.') under current directory tree to a group with the same name as the directory name
Search the current directory tree recursively for the regular file named "myfile" ignoring "work" and "home" directories
Find SQL files with text `expression'
split file /usr/bin/gcc into pieces per 100000 lines
get a PID of a process with name 'test.sh &'
display all the files in the file system which are smaller than 20 bytes
Search the regular files of the current directory tree for string "texthere"
To match only hidden dot directories
Report file system mounted at $path_in_question disk usage if canonical path $path_in_question is a mount point.
search for a cpp directory in current folder and display all its files
find all the html files in the current folder and replace the end of each line with a pattern
find all c, cpp files in current folder
find and delete all the empty directories in the current folder and all its sub directories too
Read a single character from standard input into variable "REPLY" ignoring backslash escapes and using the prompt "${1:-Continue?} [y/n]: "
Find all files/directories under current directory
Removes all files like 'A*.pdf' from current folder without prompting.
display all the files in the current folder which have been accessed in the last 60 minutes
Store info about all mounted file systems, printing all sizes in powers of 1000
Print the file system "file/goes/here" is on
find the oldest normal file in the current directory
Creates temporary file with name formatted like '.script.XXXXXX' in '/tmp/' folder and saves path to it in 'script1' variable.
Recursively changes group ownership of everything within '/git/our_repos' to 'shared_group'.
Sort lines in "set1" and "set2" to standard output preserving only unique lines
Find only files under /etc with the size of 100k-150k
Delete all but the most recent 5 files
Reports count of characters in the value of ${FOO_NO_WHITESPACE} variable as follows: "length(FOO_NO_WHITESPACE)==<counted number of characters>"
Save a list of all 755 permission files/directories under $dir directory tree to the variable 'files'
Search for 'example' in all regular files under current directory tree
Recursively finds and compresses all files in the directory '/path/to/dir'
download content from "http://example.com/textfile.txt" and output to "textfile.txt"
show the disk use of all the regular/normal files in the file system which are bigger than 100MB
Print file size with the file name
Find files on the system accessed during the last 24 hours but not within the last hour
Find all files in the current directory tree whose names are ".DS_STORE"
Find all the files in entire file system  which are modified 50 days back.
Print the list of all regular files on the system using "echo"
Shows state of shell option 'extglob'.
Print content of all files found regarding seach options '[whatever]'
move all files in the current folder another folder and do not move the files in the sub folder
Find all files that belongs to user Tecmint under /home directory
Find all regular files that reside in the current directory tree and were last modified more than 1 day ago
find all the files in the current folder that end with the word bar
Set permissions for files in `foldername' to 777
Print all directories under $root appending a : (colon) at the end of each path without descending into directories matching the pattern .[a-z]*
Search for the regex ... in the manual of the find command
create directory /tmp/foo
Unzip all files matching "/homes/ndeklein/mzml/*.gz"
Delete all files that have not been accessed in the last 30 days
Search for the regex '[0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*' in all files under /etc
display all the regular/normal files ending with ".mod" in a folder
Find all .sh files in or below the current directory and move them to folder ~/back.scripts
Send SIGTERM signal to first process sent to background by the current shell.
change the extension of all the ".abc" files in the folder "/the/path" to ".edefg" and do not change in the sub directories
View line 500 to line 500 + 501 in gzipped file "bigfile.z"
find all files not ending in ".html"
Split "file.tar.gz" into files of size 1024 MB
Read a line from standard input into variable "date" with prompt "BGC enter something", and storing typed backslash as backslash symbol
search for all the file sin the current folder which are bigger than 10KB and display them smallest file
Remove all .mpg files in the /home/luser directory tree
Join lines of 'file': fields 1 and 2 of lines discarding adjascent lines ignoring first 3 fields, with fields 3 to end of line discarding adjascent lines ignoring 3 last fields.
Join lines in file "aa" with lines in file "bb" if the lines share a common first word and sort the result numerically
Print the list of the current directory's subdirectories
Find all .c and .C files in the current directory tree that contain "main(" and copy them to directory test1/
display the list of all the normal files excluding hidden files which have been accessed in the last 500 days
display the count of total number of text files in the folder /home/you which have been modified in the last 60*24 hours
List files and directories recursively
display all the configuration files in the etc folder
find all the regular/normal files in the current folder which belong to the users with the user id's between 500 and 1000
Get the disk space used by all *.txt (case insensitive) files/directories under current directory
Search the system for *.rpm files ignoring removable media
Print space separated numbers from 1 to 10
find all js files which path neither ./dir1 nor ./dir2
Find all *fink* files/directories under current directory
find all files in the current folder that are modified exactly 1 minute ago
Calculate a list of duplicate md5 sum hashes for all the ".java" files in the current directory
Recursively copies '$1' directory to '$2' directory.
Find all files in /var/www/html/zip/data/*/*/*/*/* that are older than 90 days and print their parent directory paths
Find all files/directories under current directory that match the case insensitive regex ./\(RT\|ED\).* and show several lines of output from the beginning
Find all files more than 700 megabytes
Create 6-letter named temporary file in a folder path that is provided as the first positional parameter, and save the path to it in a variable 'tmpfile'
display all the files in the home folder which are smaller than 500 bytes
Find files owned by the "shadow" group
find all the files in the entire file system that start with the word top and have 3 letters next to it.
Find all files/directories following symbolic links under current directory tree that are owned by 'root' user
Remount root filesystem "/"
Search directory trees foo and bar for .java files
Delete all regular files that have not been modified in the last 31 days under '/path/to/junk/files' directory tree
Make directories "es/LC_MESSAGES" as needed and do not error if it exists
Remove all files under /home/user/Maildir/.SPAM/cur
Find all files/directories under current directory with 'foobar' (case insensitive) in their names and copy them to ~/foo/bar
Change owner to "root" and group to "www-data" of "/foobar/test_file"
display all the directories in the folder /usr/share
Search for 'organic' in all files with '.html' extension under ~/html directory
find all the files that were modified yesterday in the current directory.
search for all the files in the folder /data/images which are modified after /tmp/foo
List all processes with detailed information
Copy the entire "/lib" and "/usr" directory including symlinks from "pi@192.168.1.PI" to "$HOME/raspberrypi/rootfs" and delete files after the transfer
Find all *.cgi (case insensitive) files/directories under current directory and change their permission to 755
Find symbolic links in /usr/sbin and /usr/bin to files whose pathnames end in "*/systemctl"
Unzip "file.gz" and print each line with the 5th " or | separated field greater than 5
Find all directories under /fss/fin
Find all regular files matching the name pattern '*.?htm*' under '/srv/www' and '/var/html' directory tree
Find files/directories writable by group and others under the /path directory
Executes 'echo "$ret"' in a subshell that is opened by command 'true'.
Recursively change the owner to "user" and group to "www-data" of "yourprojectfoldername"
Search /public/html/cosi for files whose name is "wiki.phtml"
Print content of 'filename' file, showing all non-printing characters and displaying $ at the end of each line.
Find all files/directories under current directory and print their paths
Find broken links
Send 4 ping packets of size 2 to "www.google.com" on a Solaris machine
Find all files in the current directory recursively that were last modified more than 5 days ago
Perform a white space safe search for all files/directories under current directory
display all the files in the current folder excluding those which are in the path of ".git"
change the permission of all the php files in the folder /var/www/ to 700
Find *.java files under current directory and compress them to myfile.tar
split the file data.csv into pieces per 100 mb named as data.tsv.NNN with digital prefixes
Print three lines of "some line " followed by a random number
List all files and folders in the current working directory
Search for all files in the current directory recursively whose names end with "Linkin Park"
Checks compressed file integrity.
split the file hugefile.txt into pieces per 100000 lines named as partNNN with digital prefixes
Continuously answer "y" to any prompt from "mv ..."
Move all files that contain "Subject: \[SPAM\]" to "DIR"
Archive "/path/to/files" on host "remotemachine" authentifying as user "user" and compressing data during transmission, copy symlinks as symlinks.
find all the files which have been accessed after modifying the file /etc/hosts
Execute "ls" every 2 seconds
get the count of all the files that have been accessed in the last 30 days
Append the parent directory name with a space in all 'text.txt' files in all sub directories of current directory
Find all directories under /var/www/some/subset and set their SGID bit
display all the text files from the current folder and skip searching in skipdir1 and skipdir2 folders
Find all regular files under /home/www and replace every occurrences of 'subdomainA.example.com' with 'subdomainB.example.com' in those files invoking sed as few times as possible
Find all directories under current directory with 755 permission and change their permission to 644
searches through the /usr/local directory for files that end with the extension .html
Find files/directories that is under group 'root' or have no group and set their group to 'apache'
List all files under the current working directory with name ".htaccess"
Find all files under current directory excluding hidden directories
List the unique parent directories of all .class files found under "/root_path"
Find the files in the current directory that match pattern '*.ISOLATE.*.txt' and move them to folder ./ISOLATE
Print the list of .txt files under and below the current directory
Find all files in $dir directory (non-recursive) and count them
Save the directory name of the current bash script to variable "path" if it is found in one of the directories specified by PATH.
search for dbmsspool.sql file in the current folder
find all the directories with the name "some-dir" in the current folder and move them to another folder and do not search in subfolders
Remove the last two components (directories) of $path
display all php,xml and phtml files in current folder
Write "[some repository]" to standard output and append to "/etc/apt/sources.list" as root
display a long listing of all the directories in current directory
Cut off three last symbols from string '1234567890  *'
Find all .sh files in the current directory tree and remove them
find all files in the current folder which have not been modified today and whose file name is of length 1
Print the lines of file "strings" specified in file "index"
find all the files ending with .mp3 or .jpg
Removes all top-level empty folders within the current folder.
Prints yesterday's date information
Replace all newlines with spaces in standard input
List all variables (names only) with names containing X.
Search the src/ directory recursively for .c and .h files
Print the first line of every file matching pattern 'file?B' in the xargstest/ directory tree
Locate logo.gif in the /var/www directory tree
Print sorted list of strings from 'ip_addresses' file, with number of occurrences of each string.
Copy all ".php" files in "projects/" directory tree to "copy/" preserving directory hierarchy
Search the current directory recursively for regular files with the extension given as variable $extension
Find files/directories named 'document' in 'ext2' partitions in entire filesystem
List all files/directories under $dir_name with size $sizeFile and print them according to the format string  '%M %n %u %g %s %Tb %Td %Tk:%TM %p\n'
Print numbers from 1 to 10 with padded leading zeros
find files in /tmp directory that named are core and deletes them
Mount the directory "/etc" on "/tmp/sarnold/mount_point/"
Print "$1" or default 10 random lines from standard input
Find all files in current directory excluding hidden files, archive them and put the output into variable  full_backup_dir
Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.
Print a list of all duplicate case insensitive filenames in the current directory tree
find all the directories in the file system which have read, write and execute to all the users
List all *.txt files under current directory that match 'foo=' in their file information
find all the links in the current folder which are broken
Search the current directory recursively for MOV files
List all files/directories under /myfiles directory
Compare *.csv files in the current directory tree with their analogs stored in /some/other/path/
kill all active jobs
Count the number of lines in all ".php" files in the current directory tree
Find all *.rb files/directories under current directory
Find all files under current directory matching either of the patterns 'error.[0-9]*', 'access.[0-9]*', 'error_log.[0-9]*', 'access_log.[0-9]*', 'mod_jk.log.[0-9]*' in their names
Search the current directory tree for regular files whose names end in ".shtml" or ".css"
Open a session-less connection to 'host' as user 'user' in master mode with a socket "/tmp/%r@%h:%p" to enable connection sharing
Set the environment variable "DISPLAY" to the system host name followed by ":0 skype"
Search the current directory tree for files matching regular expression '.*myfile[0-9][0-9]?'
List the names of all files under current directory
Find all broken symlinks under current directory
Find all symbolic links starting from the current directory and list them
Search regular files under ~/mail for string "Linux"
find files in the current directory with pattern` '*.[ch]' which are contain ‘thing’ string and print file names
Find regular files in the current directory tree that have all executable bits set
Search the /root directory recursively for the regular file named "myfile" ignoring /root/work/
Find all *.mov files under current directory
Calculate md5 checksum of theDirname
Read a line from standard input into variable "ans" without backslash escapes
find all files under "/usr"
Convert all characters in "$a" to lower case and save to variable "b"
Search for "pattern" in "file" and separate each line with '" "'
create directory tata
display all the files in the current directory and do not search in the sub directories
List all *.txt files/directories under current directory
change the permission of all directories in current folder to 755.
Rename '.mkv' extension to '.avi' for all files/directories under '/volume1/uploads' directory tree
Recursively finds all '*.pdf' files and folders in a current folder and removes them without prompting.
Print file information of command "passwd"
Find files/directories that does not have write permssion for group and others
Compress $file file using gzip
Save the short DNS lookup output of $WORKSTATION to 'WORKSTATION_IP' variable
Find all regular files in the current directory tree and search them for "example"
Split the first 100 lines of "datafile" into files with at most 1700 bytes each preserving lines
Print the line with most consecutive repeats prefixed with its count from standard input
Find all files under current directory
Find 10 most recently changed files in the current directory tree
find all the fles that have .ssh in the end and redirect the output to ssh-stuff
Find all regular files in the "$dir" directory
Filters unique lines by matching against the first column of a .csv file
Set the exit code($?) to '0'.
Find `string' in all *.java files ignoring the case of that string
Find all *.texi files in /usr/local/doc
Find files and directories modified in last 7 days
Find all configration files in Home directory & Subtitute permanently in files
display the base name(name without extension) of all the ".flac" files in the current folder
Save the current user name in variable "myvariable"
Removes 55, adds a 10-digit line number, and rearranges the date for each line in "input" on OSX
Kill the processes of user `myuser' that have been working more than 7 days
Print the type of the current shell
Print the base name of the current working directory
Search *.x files from the current directory tree for string "fred"
Find all files in the `sourceDir' directory tree
Find all files/directories under current directory tree whose paths match the pattern '*ACK*1'  (case insensitive)
Replace all occurrences of 'previousword' with 'newword' in all regular files with '.cpp' extension under '/myprojects' directory tree and modify them in-place
Remove all files whose names start with spam-
Count all files under "/DIR"
Print permissions of every directory in the current directory tree
list complete path name to process associated with pid "$1"
Search the current directory tree for all files matching regular expression ".*\.rb$"
search for files having python in filename
Find files and directories that are at least seven levels of nesting in the directory /usr/src
Split "file.tar.gz" into files of size 1024 MB with a prefix of "file.tar.gz.part-"
Save the absolute path of "$path" to variable "full_path"
Generates temporary file name with full path by template 'fifo.XXXXXX' and saves it to variable 'fifo_name'
Find all *FooBar* files/directories under current directory and copy them to ~/foo/bar
Find all the files/directories under user's home directory that do not belong to the user $USER
Find all *.cgi files/directories under current directory and change their permission to 755
Modify and rewrite 'file' replacing all instances of "foo" with "bar"
Displays calendar for a previous, current and next month.
Delete all files/directories under current directory tree excluding '.gitignore' files/directories and files/directories matching the patterns '.git' or '.git/*' in their paths
Unsets shell option 'extglob'.
Search for aaa in all files under current directory and count the number of matches
Save absolute path of "$path" that must exist along with all parents to variable "abspath"
Remove all files containing 'sample' (case insensitive) in their names under '/home/user/Series' directory tree
Views text content of compressed FileB file in TarFile archive.
Back up all *.txt files/directories in new files/directories with a .bak extension in their names under /etc directory
Display the sizes and filepaths of all files/directories sorted in ascending order of size
list regular files ending in .mbox
Show the list of files modified less than a minute ago
find all the video files in the home folder
Convert relative path "/x/y/../../a/b/z/../c/d" into absolute path with resolved symbolic links
search for a file "file" in current folder and if the file is found quit !
Find all *.html files under current directory
Make a POST request to "http://dweet.io/dweet/for/cycy42" with data "PiIP" set to the IP address of the system
find all the files that have been modified exactly yesterday (from 00:00 to 23:59 yesterday)
Recursively change the group of all files in "/tmp/php_session" to "daemon"
Print a welcome message with the current user's user name
Find files with size more than 200557600B and which are more than 2 days old under  ${userdir}/${i}/incoming directory
Split "data.tsv" into files of at most 100 MiB preserving lines and use a prefix of "data.tsv." and numeric suffixes
Make directories to "/my/other/path/here/" as needed
Count the number of lines in all files in the xargstest/ directory tree that match pattern 'file??'
list all javascipts file which whole name does not contain excludeddir or excludedir2  or excludedir3
Find files/directories under current directory that are modified exactly one hour ago
Find and remove all .core files
Find all the SGID bit files under current directory whose permissions set to 644 and show a few lines of output from the beginning
Print  "Cannot acquire lock - already locked by " followed by content of $lockfile file
delete all the files in the file system which belong to the user edwarda
create symbolic links in directory "/usr/local/symlinks " to all files located in directiry "incoming" and that have been modified earlier then 5 days and owned by user "nr"
Display a long list of all the files/directories named ".todo" under $STORAGEFOLDER directory tree
Replace "string1" with "string2" in all regular files in the current directory tree
find all the files in current directory of size exactly 6MB.
display the count of all the directories in the current folder
Save the user name in upper case of the current user in variable "v"
Find files named "blabla" in the current directory tree and print the number of lines in each of them
Remount "extX" filesystem "/dev/hdaX" on "/" without writing in "/etc/mtab"
Print the list of the subdirectories of /path/to/dir
Search for files only that end with .php and look for the string $test inside those files
Print the list of the subdirectories of the current directory
Append all *.mp3 files modified within the last 180 days to tar archive `music.tar'
Find files named 'core' in or below the directory /tmp and delete them
find all normal/regular files in current folder and display the total lines in them
Print continuous lines of 100 random characters either "." or " "
split processed content of the file inout_file into pieces per 2000000 named as "out-prefix-NNN"
Find all files/directories under current directory
find regular files under the current directory and execute an md5sum command on each one
Print the IP addresses for the current host name
Find all empty directories recursively starting from the current one and delete them
Silently read exactly 1 character ignoring any delimiters  into variable "SELECT"
Display the last dot-separated field, in this case "com".
display all the files in the current folder and traverse from the sub directories
Find executable files
Search the current directory recursively for files writable for `others'
Recursively find the latest modified file in the current directory
Delete all empty directories under current directory
Save number of lines in 'file.txt' file in 'nbLines' variable
Print "$PATH" variable as input to awk script "rem_dup.awk" and concatenate the result with ":"
Rename all .txt files to .bak in the current directory tree
Print chmod commands that can change permissions of regular files residing in the current directory tree to u=rw,g=r,o=
Show file type information for files in /usr/bin
search for all regular/normal files in the current folder and display the number of lines in the file
Save the absolute path of the current script to variable "SELF"
List all crons in the environment
Change the permissions of every directory in the current directory and all files and directories within them to 700
Prints path to folder that contains file "/path/to/vm.vmwarevm/vm.vmx".
remove all the regular/normal files in the temp folder and do not delete in the sub folders
Format file "list-of-entries.txt" with no column delimiter
display all the regular files in the current folder excluding those that are present in the path "git"
Search the current directory recursively for files last modified within the past 24 hours
Search for files specifying the maximum depth of the search
ssh into "ssh.myhost.net" as user "myusername" and run command "mkdir -p $2"
Recursively removes all files and folders that match pattern '/usr/local/{lib/node{,/.npm,_modules},bin,share/man}/npm*'
display the number of lines in all the ".c" files in the current folder
List all files that are between 10000 and 32000 bytes in size
Search /path/to/your/directory for *.avi and *.flv files
Print which files differ in "dir1" and "dir2" recursively
display all the files in the home folder which belong to the suer "bruno" and end with ".sxw" and have been accessed in the last 3*24 hours
Display the contents of file 'filename' excluding lines starting with # or empty/space-only lines, waiting for user interaction after each page.
Gets IP addresses of all active network interfaces on host.
Creates alias for network interface 'eth0' with IP address '192.0.2.55' and network mask '255.255.255.255'.
Find the largest 10 files (regular files) under current directory
Overwrites file $FILE with random content, then truncates and deletes it.
Change permissions to 755 for all subdirectories of the current directory
find all the files in the folder /home which are bigger than 10MB and smaller than 50 MB
find all text files in current folder and display all files that have the alphabet a in their name
find all the files in the folder ~/Music which begin with "Automatically Add"
display all the files in current folder
Delete all hidden files under $some_directory
Find all directories named "D" in the current directory tree
Find all files/directories under /myfiles that were accessed more than 30 days ago
display all the regular/normal files in current folder which have been modified exactly 60 minutes before
Print a random number from 2000 to 65000
Find the total size of *.jpg files within the current directory tree
List all files in the current directory tree that were last modified yesterday or later
Search the /home/sdt5z/tmp directory tree for files named "accepted_hits.bam"
Search for all zero-byte files and move them to the /tmp/zerobyte folder
Remove from the current directory tree all the regular files which have a dot in their names and contain string "<img-name>-<width:integer>x<height:integer>.<file-ext> syntax"
Find all regular files named 'Waldo' under ~/Books directory tree
Search directory /Users/david/Desktop/ recursively for regular files
Move all *.mp4 files from directory /foo/bar and its subdirectories to /some/path
Find the directories whose pathnames contain "New Parts" at level 3 of the current directory tree and create symlinks to them in /cygdrive/c/Views
Set permissions to ug=rwx,o= for directories inside the ./default/files tree
Print the list of all files except files named BBB
Print space separated list of numbers from "$start" to "$end"
Check if a drive is mounted to nfs
display all the text files and pdf files in the current folder
Remount "/system" as read only
display all the files in the current folder
Find files matching pattern $2 in the $1 directory recursively and search them for text $3, where $1, $2, $3 are the command line arguments to the Bash script
List all the .c files under the current directory and below in a 3 column format
Print the host name
Display the files/directories under current directory tree matching the regex '/$prefix$ypatt' where $prefix and $ypatt expands in the current shell
Print the drive and mount point of the last mounted drive
search for files which are writable by either their owner or their group
Gets MAC address of eth0 network interface.
Find "file.xml" under the current directory and change directory to its parent
Enables shell option 'promptvars'.
Find all Subscription.java files/directories under current directory and enter into the parent directory of the first one found
display all the files in current folder which are bigger than 10KB
run ls command on *.pl files
Search for all the files in man pages and return the manual page for grep
Add read and execute permission to every directory under the current directory
Find all files under and below /dir that were accessed less than 60 minutes ago
Find all *.* files under current directory
Set the variable "me" to the name of the running script.
Look in the current directory and below for all files whose names begin with either "my" or "qu"
Prints calendar of April of 2012, and redirects output to 't' file and 'more' pager tool.
Print the full path of a file under the current working directory with inode number specified on standard input
display the files along with the size of all the files in the current which are bigger than 100MB
display all the soft links in a  folder which are not broken
Split "data.tsv" into files of at most 5000000 lines each with prefix "_tmp"
Remove all *.tmp files from the /tmp directory tree
Find all regular files under /home/www and replace every occurrences of 'subdomainA' with 'subdomainB' in those files (may produce 'agument too long' error)
Find all regular files under ./Desktop directory
Find all *.tar.gz files/directories under /directory/whatever which were modified more than $DAYS ago
find all the files in the folder "/mp3-collection" which are bigger than 10MB excluding those that start with the word Metallica
Search the directories that match pattern '/path/to/directory/folder{?,[1-4]?,50}' for .txt files
find all the normal/regular files in the folder "pathfolder" which are 2 levels deep, excluding all hidden files and display the count
Prints list of folders containing '.git', searching recursively from a current folder.
Append all PNG and JPG files to tar archive 'images.tar'
Find all files in current directory that were modified less than 1 day ago excluding hidden files and put the output to full_backup_dir variable
List all aliencoders.[0-9]+ files/directories under /home/jassi/ directory
compress all the non-compressed  files in the current directory.
Decompress "path/to/test/file.gz" to standard output and save all lines matching "my regex" to files with a 1000000 line limit
Find all files/directories under $1 which have at least execute permission for their owner and set execute permission for group for these files/directories
List all files in the current directory tree that were last modified on the 3rd of March, 2010 or later
search for the word "nameserver" in all the configuration files of the /etc folder
Print first field from semicolon-seprated line <line>.
Recursively finds string with text "foo" in all files of a current folder.
Search the regular files of the current directory tree for string "stringYouWannaFind", ignoring the case
Print the characters in $b that match with any character in $a without printing any newline
Count all the lines of all files with names ending with 'php' in current directory recursively
Print sed commands that would replace all occurrences of 'previousword' with 'newword' in all regular files with '.cpp' extension under '/myprojects' directory tree
Search for 'example' in all regular files from the current directory
Change permissions to u=rwx,g=rx,o= for all directories in the current directory tree
list all javascipts file which whole name does not contain excludeddir
Test if a file named 'file' in the current directory is more than 1 hour old
Find all directories under /path/to/Dir and set their permission to 755
Find files matching regular expression regexp
Show the list of files that are owned by user wnj or are newer than file `ttt'
display all the files in current folder which have not been modified in the last 7 days
find all the directories in the $LOGDIR folder which have been modified in the last 24 hours and compress them
Recursively counts non-blank lines in all files in a current folder, that match regex '\.php|\.as|\.sql|\.css|\.js', but skip folders './pma', './blog', './punbb', './js/3rdparty' and files like '*.svn'.
Save the system host name in variable "HOSTNAME"
create directory /path/to/destination
Create a symbolic link to "$file" named "/tmp/allfiles"
Find all the SGID bit files whose permissions set to 644
Calculate the md5 sum of all the file metadata in the current directory tree excluding ".svn"
Find all files/directories owned by user 'joebob' under '/some/directory' directory tree
display a long list of the files in the current folder which have the word fuddel in all the files in the current folder and then search for the word fiddel in the previously matched files
Remove the "^M" characters from all *.ext files under /home directory
Compare text "hello" and "goodbye" line by line
Find the file whose inode number is 1316256
Find all *.jpg files in */201111 paths
Find *.java files under current directory and compress them to myfile.tar  (unsafe)
Remove all .txt files with spaces in names in and below the current directory
Print "test=hello world"
find all files in current folder using name patterns
display a long list of all the directories which have files ending with ".todo"
display a long listing of all the regular/normal files in the current folder
Run 'join' with the number-sorted output of file1 and file2, without modifying file1 or file2: for each line with a common first field in file1 and file2, output the common field followed by the extra fields in both files.
Find all *.jpg files in */201111/* paths and numerically sort them according to the second field in the file name with a delimiter '_'
find all the ".wma" files in the folder "$current_directory"
List and remove all regular files named "core" under /prog that are larger than 500k
Find all directories under and below /root that match pattern "*linux*", case insensitive
Find all directories starting from / that have permissions 777
Add line numbers to each non-blank line in "file" starting with number 1000001
find all the file that have been modified in the last 3 days ( considers day starting not 24 hours )
Find all regular files named 'whatever' under current directory tree excluding all paths that contain any hidden directory
Find the "erl" executable in $PATH and read the "RELEASES" file to extract the erlang release number
List all cron jobs which contain "word".
find suffix tcl files under all directories started with 'n'
find all the normal/regular files in current folder and search for a pattern
Find all *.c files under and below the current directory that contain "wait_event_interruptible"
find files in /dir/path/look/up directory that names are dir-name-here
Remove files cart4, cart5, cart6 in directory ~/junk
Compute the mean average of the word count of *.txt files smaller than 2000 words in the home directory
list all zero-length files under the current directory
Find directories that are directly under /home/user/workspace directory (no-subdirectories) and were modified more than 30 days ago and print a message saying that the directory wasn't modified during last 30 days
change the permissions of all regular/normal files in the current directory
Show files in /home owned by group `test'
Search for "#define" in all files in the current directory, excluding backup files *~, *.orig, *.bak
Look for any instance of "ds1337" in the modules.alias file matching current kernel release
display a long listing of all the directories in the current folder
Find regular files named "expression -and expression" under and below /dir/to/search/
Change the permission to 755 for all directories under current directory
Prints a random number between 1 and 10
find all the files that have been modified today
Remove all .txt files from the /full/path/dir directory tree
Find all .gz archives in the current directory tree and check if they are valid
Find all *.jpg files/directories under current directory
Represent current date in RFC 3339 format with precision to seconds and save it to 'timestamp' variable
Find all SUID set files under current directory and show a few lines of output from the beginning
display all regular/normal files in the current folder which are accessed in the last 7*24 hours
Find all test2.h files under current directory
Recursively finds all files and prints all strings with 'text-to-find-here' from that files.
Move all hidden files in "/path/subfolder/" to "/path/"
find all java files in the current folder and search for the pattern REGEX
Find all files/directories under current directory appending a null character at the end of each file name/path
Find all files/directories under current directory tree with inode number 211028 and move them to 'newname.dir'
Dump "file" as ASCII characters
download contents from "https://raw.github.com/creationix/nvm/master/install.sh" and execute
Search the current directory recursively for text files containing at least one character
find all the patch files in current folder and copy them to separate folder patches
Find all directories under current directory excluding  directories (along with their contents) that start with a . (dot) in their names
Unzip and merge all "small-*.gz" files into files of 2000000 lines
Format the contents of "[file]" in a neat table
Search /var/tmp for files larger than 30 MB modified 31 days ago
Count the number of all directories under directory '/mount/point' non-recursively
Find all README's in /usr/share
Exclude directory from find . command
find regular file named foo.txt under root / directory.
Find all regular files with 400 permission under '/data' directory tree
display all the directories in the current folder excluding those that are present in the aa directory tree
Create directory dir2
Determine the user associated with stdin
find all js files under the build direcotry except build/external directory.
Copy all directories recursively from "source/" to "destination/" excluding all files
Find all foo.mp4 files in the current directory tree and print the pathnames of their parent directories
Display the 5 smallest files in the current directory and its sub-directories ignoring any empty files.
Find the password file between sub-directory level 2 and 4.
Remove files that are greater than 1MB in size under current directory
display the help of find command
Find all the *.pl files (Perl files) beneath the current directory.
Numerically sort file "files" by the second "-" separated value of each line ordered from least value to highest value
Print unique lines of sorted "File 1" compared with sorted "File 2"
Find all *.data files under jcho directory
Prints year-month-date format for given time
Print full date of yesterday
Find all directories under current directory and change their permission to 755
Find every file under the directory /home owned by the user joe.
Find all *.mp4 files under /working
Finds IP addresses of all network interfaces.
all the files that end with .mp3 and end with .jpg
Output all lines in 'file' comparing the first 12 characters and discarding any adjascent lines where these characters are duplicates.
Print content of all files ending with '*.foo' in current directory recursively
find not case sensitive all directories that names are 'apt' and display details
display all the files in the current folder which are in the path "./sr*sc"
Read a line of standard input into variable "input_cmd" with prompt "command : "
Counts all non-blank lines in the $i file.
Find all *.php (case insensitive) files and *.js files/directories (case insensitive) under /home/jul/here excluding $EXCLUDE/* paths
Find all 50MB files in file system
Find and delete all files with a used disk size of 0
Run 'top' in batch mode (don't accept user input) with delay of 1 second between updates, and duplicate the standard output to file 'output.log' in current directory.
Recursively search for all files not ending in ".xml" under the current directory, append ".xml" to the end of each file name
find all the directories in the different folders excluding search in the sub directories and create these folders in the current directory
Search the current directory tree for files larger than 10MB but smaller than 50MB
display all normal/regular files in a folder
grep for the last occurrence of text between two tags
Recursively finds string 'class foo' in all *.c files from current folder.
find for lighttpd in /var
display all the empty files in the current folder( files of size 0 bytes)
Remove the passphrase from user's ssh key without prompting.
search for all the regular files that have been changed in the last 48 hours and sync these to another folder
Print the names and sizes of regular files residing in the "tmp" directory tree
Print the contents of "~/.ssh/config"
find all the files in the current folder and display adding quotations to each file
find md5sum of 401
Find all files/directories with space in their names under current directory
Find all 'test' directories in the current directory tree and remove them
Calculate the md5 sum of "yourstring"
Count all directories under current directory
display the change owner command for all the regular files in the current folder.
copy all the log files in the current folder which have not been accessed in the last 30*24 hours to the folder old
display all the normal/regular files in the directory FOLDER1
Split a file ADDRESSS_FILE into pieces per 20 lines named with prefix "temp_file_ and numeric suffixes
Replace "_" with newlines in "Testing\r_Tested" and display the named characters
Find all directories under current directory and set their permission to 775
Find all files/directories named 'date' under /usr
List all .svn files/directories under current directory
Display the number of regular files under current directory tree
Find all files/directories named orm.properties under  /eserver6/share/system/config/cluster directory
Append the contents of "file.txt" to the current in-memory history list
display all the text files in current folder
Find all regular files under current directory tree, prepend '#' at the beginning of the lines that contain 'abc' in those files and modify them in-place
Search the 'tmp' directory for .mp3 files
Overwrite a file 'my-existing-file' with random data to hide its content
Change onwer of "file" to "user_name"
search  in root  ( / ) directory downwards all files which have less than 2 links.
display all the jpg images in current folder
Retrieve column number from column name "Target" in file "table"
Find all empty files in the current directory and delete them
Assign permissions 644 to files in the current directory tree
Find all files with name "file.ext" under the current working directory tree and print each full path directory name
Search directory $CURR_DIR for regular files that were changed, accessed, or modified $FTIME days ago
Make directories to "$2" as needed
Replace "foo" with "bar" in all files in the current directory tree except hidden ones
Extract protocol and host name from URL.
Print the 10 most used commands
Recursively search for "string here" and write the output to the console followed by the number of matched lines
Find all *.py files/directories under current directory
Test if a file named 'file' in the current directory is more than 1 hour old
Print numbers from 1 to 30 with 0 padding to a width of 2
Forcibly removes files  '/tmp/stored_exception', '/tmp/stored_exception_line', '/tmp/stored_exception_source'
Archive showing progress "sourcefolder" to "/destinationfolder" excluding "thefoldertoexclude"
List all regular files from the current directory tree that were modified less than 60 minutes ago
Find files/directories in entire file system that were accessed in less than a day ago
find all the files in the entire file system that have been accessed exactly  50 days ago
Check if "$file" contains DOS line endings
search for all the files in the folder /usr/bin which have not been accessed in the last 100*24 hours
Creates 5-letter random file name and saves it in 'rand_str' variable.
Delete all filename* files under /dir directory
Print full path of command "gradle"
Download "Louis Theroux's LA Stories" using rsync over ssh
Extract any line in "file1" or "file2" which does not appear in the other
Find all files under $d directory (no sub-directories) that are executable by owner and print only their names
Change permissions for all PHP files under the current directory tree to 755 and print the number of files changed
Print file type of the executable file of command "python"
Show manual of the find command
Copies 'libgtest_main.so' and 'libgtest.so' to '/usr/lib/', preserving all attributes, and copying symlinks as symlinks, without following in source files.
Display hardware platform, ie. x86_64 even if current kernel uses 32-bit addressing.
Search the current directory tree for the files with extension "trc" and list them if they are more than three days old
Expand bash array "myargs" as arguments to "mv"
Recursively counts non-blank, non-comment lines in all *.c files in a current folder.
Find all directories under present working directory
force delete all the temp files which are of size 0 bytes and which have not been accessed in the last 10 days
display all the directories in the current folder which start with processor followed by digit and ends with .1 or .2
Print content of '1' file
find all files in the current folder which end with macs
Find files/directories writable by group or others under the /path directory
Find files belonging to the given owner
create a symbolic link named "test" to file ".bashrc"
find all files in the current directory do not display the files which do not have read permission to all users
find files in the home folder which have been modified in the last day. ( -daystart measures times from the beginning of today rather than from 24 hours ago.)
Delete file with inode number 314167125
Display the last colon-separated field of variable 'var'
display long list of all the files in the folder /home/peter which belong to no user and change the owner,group of all these files (after user confirmation) to "peter","peter"
Find all the files without permission 777
Find all *.ogg files under the home directory ignoring the case
Do not mark variables and function which are modified or created for export to the environment of subsequent commands
find all the files in the file system which belong to the user "pat" and with the name "dateiname"
Find all .zip files starting from the current directory which are owned by user tommye
Print a minimal set of differences between files in directories "a" and "b", ignore differences in whitespace, and print 0 lines of unified context
Find all files beneath the current directory that end with the extension .java and contain the characters String ignoring case.  Print the name of the file where a match is found.
change owner of the files into directory dir_to_start except directory dir_to_exclude to user owner
List all files from the current directory tree that were modified less than 60 minutes ago
Find all regular files in the current director and set their permissions to '644'.
Find file `hosts'
Print each line in "file1" and file2" separated by a space
Create directories "/tmp/x/y/z/" on remote host before copying "$source" to "user@remote:/tmp/x/y/z/"
Print the IP addresses for the current host name
Find all regular files under current directory tree excluding files from './dir1' (except './dir1/subdir1/) and './dir2' directories
Display a sorted count of all the characters in "filename"
Find all directories named postgis-2.0.0 under / directory
Print "huzzah" if directory "/some/dir" is empty
Save all directories under the current directory as a comma separated list in variable "FOLDERS"
Find all files/directories named 'com.apple.syncedpreferences.plist' (case insensitive) under ~/Library directory tree
Move "tobecopied/tobeexcluded" to the current directory
Find all 15MB files
Prints all child processes of a process with id 20238, separated with comma.
Set the 'xtrace' shell option
display all files which have been modified between two dates in current folder
Recursively set all permissions under "/opt/lampp/htdocs" to 755
Count the number of files/directories with '.php' extension under current directory tree and change the permissions to 755
Print every 3 characters of standard input as a line
Print file system disk space usage and grand total for the root file system with sizes in powers of 1000
sort based on size and display top ten largest normal/regular files in the current folder
display all the files in the current folder.
display all the text files in a folder
List the names of the directories in current directory without going into sub-directories
Find any files in the current directory and its sub-directories that were last accessed more than 7 days or are larger than 20480 blocks in size.
Find file names *blast* in specfied directory, case insensitive
Find all directories under /home/me/"$d"
Set variable 'vara' to 3
find files changed in the last 1 day
find all the files in the current folder (handles files which contain newlines or only spaces in their names)
Rename all files matching "access.log.<number>.gz" incrementing <number>.
Save the system host name into variable "HOST"
Print the directory name of the real full path of "relative/path/to/file" where each symbolic link component must exist
Search the current directory tree for files and directories whose names begin with "pro"
Find all files/directories in current directory and execute the script itself with minimal invocation for those files/directories
Print the names of all the files from directory tree ~/some/directory whose names end in "rb"
display all the files in the current folder which have been modified in the last 14*24 hours
Display the last space-separated field of each line in file.txt
Find directories that have "755" permissions and modify them to have "700" permissions
Find all directories under /path/to/base/dir and change their permission to 755
Remove spaces from output of "echo aa | wc -l"
Find all files named 'new' under current directory tree and display their contents
For each line of colon-separated information in files 'empsal' and 'empname' whose first field matches in both files, output: first field of empname, second field of empname, fourth field of empname, and third field of empsal.
Find all regular files with permissions 777 under and below /home/user/demo/
Creates temporary file and saves path to it in 'fif2' variable.
Count the number of lines in every regular .rb file in the current directory tree
Display inputfile all on one line (replace newlines by spaces)
Use the octal form to find and print detailed information about all regular files in your home directory and below that have only the group permission set.
Change the owner of "process" to "root"
find all jpg files in the folder which are in the path "/201111/" and sort them based on name
Gets IP addresses of all active network interfaces.
Find all directories under /var/www directory and set their permission to 755
Copy /my/configfile to all empty directories of the $somedir directory tree
Find all files/directories under '/directory_path' directory tree that have been modified within the last day
Find all directories under maximum 1 level down the /parent  directory and set their permission to 700 recursively
Removes all files but 5 newest ones from current folder.
display the list of all the text files present in the current directory excluding the search in certain paths.
find all the log files in the file system
Search level 3 of the current directory tree for the directories whose pathnames contain "New Parts"
Find all files under current directory with 755 permission and change their permission to 644
Print DISPLAY of "orschiro" user
Strips last section from the path $pathname, and prints basename of the rest part.
Find all files/drectories under '/u/bill' directory tree that have been accessed in the last 2 to 6 minutes
Get a list of files and directories in the current directory tree
Find all *.php (case insensitive) files and *.js files/directories (case insensitive) under /home/jul/here excluding *.js files/directories under /home/jul/here/exclude/* paths
Print "new.txt" with line numbers prepended and lines 3 and 4 deleted
Enables shell option 'compat31'.
Report file system containing path to /dir/inner_dir/ disk usage in kilobytes.
Copy all .txt files from the dir/ directory tree along with their parent directories hierarchy
Print '-exec is an action so an implicit -print is not applied' for every file/directory found by the name 'file' under current directory tree
Prints $m latest modified files within the $d folder, using $f format for printing timestamp.
Copy file or directory 'gtest' from directory 'include' in current directory to /usr/include, preserving ownerships and permissions.
Add read and execute permission to command "node"
display all the doc files in the current folder ( files ending with ".doc" )
List all environment variables containing 'USER' in their name or value that would result in running a command with 'sudo env'.
find all files in and under the current directory that have read, write and execute permissions set for all users.
Find all files in the current directory tree whose size is greater than 1MB, and move them to the "files" folder
Find all files/directories that have read, write, execution permission for user and belong to the user 'my_user' under current directory tree
Find all files under current directory and print only the filenames (not paths)
Find all Subscription.java files/directories under current directory and enter into the parent directory of the first one found
Resolve symbolic link of path of "python2.7"
find all the directories in current folder which start with test
search for al cpp files in current folder and display distinct parent directory of these files in sorted order
Print a NULL-separated list of all directories of the current directory tree
Print last 10 commands in history with the first 7 characters removed
Remove files in the current directory tree modified more than 31 days ago recursively
Mount "/path/to/device" on "/path/to/mount/location" as a vfat filesystem and a loop back device
Search the current directory tree for regular files changed on the 10th of September
display all symbolic links in the folder "myfiles" and follow them
Find all regular files under $SOURCE directory tree that were modified more than $KEEP days ago and show only the names without the paths
Rename "file001abc.txt" to "abc1.txt"
For each line in list.txt, output the line adding "FAIL" if the same line appears in fail.txt, and "PASS" otherwise - lines in fail.txt must be in the same order as they appear in list.txt.
Find all image.pdf files under ./polkadots
Remove all directories found in directory tree $LOGDIR that were modified more than 5 days ago
Find files in the /home/user directory tree changed exactly 10 minutes ago
Find all files that contain the case insensitive regex 'stringtofind' in maximum 1 level down the / directory without descending into other partitions
Show version information of the find utility
Archive files (not directories) in "sorce_dir" to "target_dir"
recursively delete, without prompting, directories under /data/bin/test, that are older than 10 days and where the name starts with a number
Create a symbolic link relative to link location named "$dest_dir/$orig_name" to "$orig_dest"
Print a list of symbolic links reachable from the current directory that do not resolve to accessible files
Find all files owned by group `group2'
search for a word in all the files in the entire filesystem and display the matched fline along with the file name
Find SGID files
create directory /etc/cron.5minute
Find all $2 files in $1 path and search for the regex expanded by $3 in those files excluding the files with /proc in their paths
Print the most repeated line in "list2.txt" that exists in "list1.txt" prefixed by the number of occurrences
Remove recursively Emacs backup files in the current directory
Search for 'mystring' in all *.txt (case insensitive) files under current directory
Prints long recursive listing of all content of a root folder, saving output to 'output.file'.
Find all SGID files in entire file system
Save the short system host name to variable "hostname"
Print source directory of bash script
Archive directory specified by variable "myFolder" to current directory.
display a long listing of all the log files in the current folder which are bigger than 1MB
find the file "myfile.txt" in the folder /home/user/myusername/
Find recursively all files whose names begin with "foo"
Make directories and parent directories as needed of "$1" with "\r" removed
Find all files/directories with '.js' extension under current directory tree without descending into './directory'
Print each line in "file", "file2", and "file3" and replace any tabs with spaces
search for all the files in the current folder which start with "my"
Find .jpg files owned by user daniel in the current directory and its sub-directories.
Filters out strings, using the extended regexp pattern '^#|^$|no crontab for|cannot use this program' from "$USERTAB"
Find all files under /var/www directory and set their permission to 644
Find all *.c files on the system and feed the output to wc
Greps DNS zone transfer info on domain localdomain.com from NS @dc1.localdomain.com, finds strings with any-cased word 'Lawler' and strips last letter from each string.
find all files in the current folder which have not been changed in the last 48 hours
Add group write permission to all files in the current directory
Send one ping request to local machine.
Remove ESC key bind
Locates 'gcc' executable file, strips last two parts of the full path, adds '/lib' to the end and saves result in 'libdir' variable.
Search the current directory tree for TXT files skipping hidden ones
Find all *.php (case insensitive) and *.js files (case insensitive) under /home/jul/here excluding  /home/jul/here/exclude/* paths
Counts lines in each of *.php files in a current folder and subfolders ignoring 'tests*' folders and prints total count as well.
Report file systems disk usage, elide all entries insignificant to available space, and produce a grand total.
Decompress "path/to/test/file.gz" to standard output and save all lines matching "my regex" to files with a 1000000 line limit
List level 2 subdirectories of the current directory
Return 0 if at least one "abc" file in the current directory tree contains text "xyz"
Count all the lines of code in all php files in current directory recursively
Find all files in the current directory tree that are not newer than some_file
Copy *.txt files from the dir/ directory tree along with their parent directories
Execute the first instance of "parallel" found in the PATH, passing it all parameters received by the script/function
Find all files/directories under '/home/exampleuser/' directory tree whose names end with 'conf' and were modified exactly 3 days ago
Display unique names of logged in users
Find all files/directories under current directory tree whose paths start with './sr' and end with 'sc'
list all files under the current directory called cookies.txt
Gets a job with defined number back to the foreground.
change the owner and group of all the directories in the current folder and /home/admin/data/ to admin & admin
List all regular files residing in the current directory tree and containing string "/bin/ksh"
Remove directories in /media/1Tb/videos modified more than 7 days ago
search for all the files with the name "dummy" in the current folder
Prints long recursive listing of all content of a current folder, saving output to 'output.file'.
forcibly create a symbolic link named "linkname" to file "new_destination"
Find files with the extension .conf in the /etc directory
display all the files in the current folder excluding those that are present in the sub directory aa and display those files that start with the word "file"
Display the biggest file sizes only
Print a randomly sorted list of numbers from 1 to 10 to file "/tmp/lst" and outputs "-------" followed by the reverse list to the screen
Find files in the current directory tree that are named "some_pattern" and move them to directory "target_location"
Find all hidden files under /tmp
find all the mp3 files in the home folder which have been modified today
display the names without extensions of all the data files in current folder which have not been changed in the last 60 mins
Print which files differ between dir1 and dir2, treating absent files as empty
Find all .c, .h files in the current directory tree and search them for string "expr"
display all the regular files in the current folder which have the permission 777
Find all directories under current directory and make them read, write, and executable for owner & group and remove read-write-execute permission for other
Generate a random 32 ASCII character password from /dev/urandom and save it to variable 'pass'
Recursively removes all files like '_*' and '.DS_Store' from /var/www/html/ folder.
Find files containing string "#!/bin/ksh" and append their names and matching strings to /tmp/allfiles
find all c, cpp files in current folder
List all regular files in the current directory tree
Print file information of command "bash"
Run the file command on every regular file under current directory
Unzip and untar "file.tar.gz"
Read a line from standard input into variable "text" with the prompt " Enter Here: "
find all files in current folder which are exactly 300MB
Remove all files named `junk' and `dummy'
Search for "1234567890" in every gzip file modified between 8:00 and 9:00 on 2014-04-30
Copies all files like '*.txt' under the current directory to the './tmp/' directory.
List all php files below current directory whose full pathname name does not include "libs", "tmp", "tests", or "vendor", sorted by number of lines, letting the user page interactively through the output.
replaces the last occurrence of 'a' with 'c' in file
Display the number of sub-directories for all directories under current directory tree, sort them according to the decreasing order of the number and show only the first 10 of them
Search for files/directories which are writable by either their owner or their group
Search the /etc/apache-perl directory tree for files newer than /etc/apache-perl/httpd.conf
Find all files under directory tree /path/to/dir whose permissions are not 644
Move all directories in the current directory that match "some-dir" to "x/"
Convert all characters in standard input to lower case
Copy all files below the current directory whose names contain "FooBar" to directory foo/bar/ in user's home directory.
display long listing of all the files in the folder "/myfiles"
Display differences between directories dir1 and dir2.
Run script $2 on remote host $1 using interpreter $INTERPRETER with pseudo-terminal allocation
Write "hello world" to the console and print number of bytes, symbols and strings in provided input.
Archive "directory" preserving hard links from host "remote" to the current local directory and keep partial files, handle sparse files efficiently, and itemize changes made
Display a detailed listing of the current directory, pausing for user input after each page.
find all the files in the current folder which are exactly 1234 bytes
Deletes folder like /tmp/*/* or deeper, older than +7 days if they don`t contain files or other folders.
Find file names *blast* in specfied directory
Find all files under /home/mywebsite/public_html/sites/all/modules and set their permission to 640
Save long listing of all running processes in the 'log' file, and save number of process strings that contain 'cntps' in the 'cnt' variable.
find all the files starting with "config" in the folder Symfony
Find all files and directories under current directory without crossing over to other partitions
Answer "n" to any prompts in the interactive recursive removal of "dir1", "dir2", and "dir3"
Find all files under /path and calculate their md5sum
List all regular files in entire file system
Delete all empty directories in minimum 1 level down the directory 'directory'
Change the owner of "destination_dir" to "user"
Find all files owned by group `root' in the current directory tree and change their user to `temp'
Read a line from standard input into variable "message" with the prompt "Please Enter a Message: $cr"
Join columns in "file1" and "file2" if their first field matches and format the output as a table
Display file.txt with lines numbered, and page interactively through the result.
Find and remove all .core files
Find files in the current directory tree that match pattern "*sub*"
Create an empty index.html in each directory under the current one, updating timestamps of already existing index.html files.
Print a list of all duplicate case insensitive file paths in the current directory tree
Counts lines of /etc/fstab file.
Change directory to the parent of the real path of the current script
Save the current working directory to variable "CURRENT"
Find *.html files in the current directory tree that were modified 7 days ago
Save absolute path of "/home/nohsib/dvc/../bop" in variable "absolute_path"
List all files in the /var directory tree whose size is greater than 10 megabytes
Recursively change owner and group to "$JBOSS_AS_USER" of "$JBOSS_AS_DIR/"
Copy the directory hierarchy from "original" to "new"
find all files in the a direcotry which have been modified in exactly 1 day back
Prints groups list that user 'el' belongs to.
Searches the manual page names and descriptions
Removes all empty folders under current folder.
Create intermediate directories "b and "c" as required and directory "c"
Find files/directories under '/dir' directory tree that are newer than 'yesterday.ref' file and older than 'today.ref' file by modification time
find all files in the file system which have no user and no group
Run "./configure" with a new environment variable CC set to the full path of the command 'cc'
find all directories named build under the current directory
search for the word error in all the xml files in the current folder
Remove all files under /home/user/Maildir/.SPAM/cur
Find all socket files in the current directory and its sub-directories.
Find directory "/some/dir" if it is empty
find all the files in the current folder and display adding quotations to each file and replace spaces with new line
Find all .sh files in the current directory tree and remove them
Prints long listing of content in a root folder, including hidden files, with human-readable sizes, and stores output to '/root/test.out' file.
Find all .txt files except README.txt
Delete all files under '/home/backups' directory tree with '.tgz' or '.gz' extension (case insensitive) that were modified more thant 60 days ago
Add executable permission to "rr.sh"
Overwirte file '/path/to/your/file' with zeroes and remove, showing progress while execution.
Find files with 002 permission in entire file system
create directory ".hiddendir"
search for a word in all the regular files in the current folder without traversing the sub directories .
remove all the files in the current folder which have not been changed in the last 30*24 hours
Print the compressed size, uncompressed size, compression ratio, and uncompressed filename of "file.zip"
Find the file with inode number 211028 in the current dirrectory tree and move it to newname.dir
find all the php/javascript files in current folder using regular expressions
Saves listing of a current folder in 'OUTPUT' variable.
Remove all regular non-hidden files modified more than 7 days ago and residing in the /tmp directory tree
Compress in parallel regular files in the current directory tree that were last modified more than 7 days ago
Find all files/directories in all paths expanded by the glob pattern *
delete all the regular files in the temp folder which have not been modified in the last 24 hours + at the end gives bulk input to the rm command
display all the regular/normal files in the /root folder which are bigger than 500MB
Find all *.py (case insensitive) files/directories under dir directory ignoring .git path
Make directory "alpha_real"
Search the current directory recursively for files with the exact permissions u=rwx,g=rx,o=rx
Compress every file in the current directory tree with gzip and keep file extensions the same
Raise an error if there is a reference to a non-existent environment variable and exit the shell immediately if there is any error
prune all the files in the current directory, only current directory (.) is the output
Print a top 20 histogram of characters used from standard input showing backslash escapes for non-displayables
Find all *.rb and *.py files/directories under current directory
Find files/directories named 'filename' in the entire filesystem
display all the .sh scripts in the folder /usr
Find all directories under current directory and set their permission to 755
Split "foo.txt" into files with 1 line each and use a suffix length of 5
Check if "/path/to/dir" is a nfs mount point
Report file system inodes usage in human readable format
Decompresses file.
Rename all files in current directory to lowerase, overwriting any existing files.
display all the files in the folder /home which do not belong to the group test
find files in the current directory and sub-directories, that were accessed within last hour
Replace all occurrence of "log_errors = Off" with "log_errors = On" in all 'php.ini' files in the current directory tree
search for the file, filename.txt in the folder /home
Search all .c files from the current directory tree for "keyword", ignoring the case
Find files and directories newer than CompareFile under current directory
Delete all files/directories with node number $inum under current directory tree
find all the files (under root file system /) that were updated in the last 24 hours
Find all directories under /path/to/base/dir and change their permission to 755
Print content of 'whatever' file
Find all files/directories named 'document' in the root filesystem partition
Find files owned by nonexistent groups
Add a number prefix followed by ')' to each line in "$string"
Search for the string 'git' in all the files under current directory tree without traversing into '.git' folder and excluding files that have 'git' in their names
Find regular files under '/somefolder' directory tree satisfying the options/conditions/operations provided in ${ARGS[@]} array with find command
Write "2-1.1.1" to standard output and to file "/sys/bus/usb/drivers/usb/unbind"
Find all the files in file system which are changed in last 1 hour
Find all *.txt files under current directory and copy them to ./tmp
Sort tab separated file "file" using a version sort for field 6 and a numeric sort for field 7
find all the files that are not modified in the last 7 days
dsisplay all files inthe current folder
Find *.conf files/directories only upto 1 level down under /etc directory and show a few lines of output from the end
Find all aliencoders.[0-9]+ files/directories under /home/jassi/ directory
Case-insensitive search all existing environment variables and their values for "shell".
show all the files in the current folder excluding those from the directories whose name starts with "git"
Continuously send "y" to all prompts of command "rm"
Archive "src" to "dst" updating files existing in "dst"
Split "$ORIGINAL_FILE" into files of at most "$MAX_LINES_PER_CHUNK" lines each with a prefix "$CHUNK_FILE_PREFIX"
find all the links in the current folder and following it to the pointed path
Recursively removes all files and folders named '.svn' in a current folder.
find files in /usr directory which are modified after February 1 of the current year
Creates file by template 'aws-sync-XXXXX' in a current folder and stores file name in a 'dir' variable.
Archive "/path/to/application.ini" on host "source_host" to current directory.
Search the current directory tree for files whose names are not "a.txt"
Split "/path/to/large/file" into files with at most 50000 lines and use prefix "/path/to/output/file/prefix"
Find all directories under /home/username/public_html/sites/default/files and set their permission to 770
Add group write permission to all files and directories in the current directory including hidden files and excluding ".."
Print mount point of the file system containing $filename.
Remove all regular files from the current directory tree that were modified a day ago
display all directories in the entire file system
search for the file "foobar.txt" in the folder "/home/mywebsite"
Fix permissions for a group of files with given extension
Compare sorted files 'f1.txt' and 'f2.txt' and print in three columns strings unique for first file, second file, and common ones
Report file systems disk space usage pretty formatted.
Find the 5 largest regular files in the Downloads folder of tecmint's home directory.
Append *.java files from the current directory tree to tar archive `myfile.tar'
SSH using parameters in $@ in master mode in the background without executing any commands and set the ControlPath to "$MASTERSOCK"
List all *.txt files/directories under current directory
display long listing of first 10 directories in the current folder
Set the permissions of all directories inside the current directory tree to ug=rwx,o=
Find '*prefs copy' files under /mnt/zip and delete them with confirmation prompt ensuring white space safety
find all the files that have been modified today(from the strart of the day)
Create an empty index.html, or update its timestamp if it already exists.
Find all first occurrences of directories named '.texturedata' under '/path/to/look/in' directory tree
Find all regular files with the group read permission set in your home directory and below and output detailed information about each file.
Remove the "123_" prefix from all filenames of .txt files in current directory.
Search for symlinks pointing to anywhere within /mnt/oldname/
Search the files of the current directory tree for string "searched-string"
search for a word in all the fies in the current folder
find all the files in the entire file system whose size is between 50Mb to 100MB
remove all the files with the name "Trash" in the folder /home
Search the current directory tree for .rb files ignoring .vendor directories
Request that the master ssh connection "officefirewall" exits
Search the current directory and its sub-directories for any file that has "bsd" somewhere in its name.
Print the contents of "filename"
Create a symbolic link named "foo" to "/var/cache/apt/archives/bash_4.3-14ubuntu1_amd64.deb"
Convert "1199092913" to dotted decimal IPv4 address
Find all files/directories under $TARGET_DIR directory tree matching the posix extended regular expression \".*/$now.*\" (where $now is a variable) and save the output in file $FILE_LIST
Print the list of files and directories of the /etc directory
Recursively find all files in the directory "posns" and split each one into files of at most 10000 lines each
Change directory to the directory containing the "oracle" executable
Print the list of all regular files residing in the current directory and below
Print 1 to 10 by separating them with colon (':')
Find all files/directories under whatever and ... directory and copy them to /var/tmp
Compress from standard input with gzip
Print '111 22 3\n4 555 66\n' by replacing the spaces with tabs and '\n' with newlines
Force delete all the regular/normal files in the current folder and do not search in the sub folders   (print0 is used to handle files which have newlines in their names or files with the name only as spaces )
Find all files/directories with '.txt' extension under '/home' directory tree that are greater than 100KB in size
Report available space on the file system containing /tmp in kilobytes.
Ping the broadcast address "10.10.0.255"
display all the java script files in the current folder
List all environment variables whose name or value contains current user's login name.
Save the short host name appended with ".mysqldb" in variable "DBPREFIX"
Print content of /etc/passwd and /etc/group files
search for a shell script in the current folder and display the current folder path but search from the sub directories
Print content of all files found regarding seach options '[whatever]'
Find all regular files in the current directory and search them for "example"
Display all files in a folder
Calculate the md5 sum of the output of "du -csxb /path" and compare it against the md5 sum saved in "file"
Recursively finds all files and prints all strings with 'text-to-find-here' from that files, preceding matched string with filename.
Calculate the md5sum of each ".py" file under "/path/to/dir/", sort the output, and calculate the md5sum of that
Create 6-letter named temporary directory in a folder path that is provided as the first positional parameter, and save the path to it in a variable 'tmp'
Find all aliencoders.[0-9]+ files under /home/jassi/ directory
Delete all regular files with inode number 314167125 under current directory tree
Archive "source" to "destination" via ssh on port "PORT_NUMBER"
Find all files/directories in entire file system with 644 permission
delete all text files in the entire file system
Find all $1 files/directories under current directory and enter into the parent directory of the first one found
Count the number of total files and folders under current directory tree
display a long listing of all regular files  in current folder which have been modified in the last 60 minutes
Set permissions to 660 for all regular files in the current directory tree
Save the full path of command "f" to variable "full_f"
Find all files accessed on the 29th of September, 2008, starting from the current directory
Display name and value of 'variable' if it exists.
Send ping requests to "yourhostname.local"
Compress all files in the "$FILE" directory tree that were last modified 30 days ago
Display standard input as octal bytes
Changes group ownership of 'myprog' to 'groupb'.
Print full path of command "python2.7"
Find all Subscription.java files/directories under current directory and enter into the parent directory of the first one found
Find all directories under /myfiles directory
Find the passwd file under root and two levels down
find all files with pattern` '*song*abc2009*.jpg' and replace "abc2009" with "def2010"
Check if current shell is running within a 'screen' process.
display a list of all the files in the file system which do not belong to any group and search only in jfs and jfs2 file systems
Find all *.sh files owned by user vivek
Sort all directories under current directory placing the file with least modification time at first
List all .jpg files in the home directory tree in a fast way
Print file type of the executable file of command "foo"
search for a word in all the php files in the current folder and display the matching lines.
Create intermediate directories as required and directory project/{lib/ext,bin,src,doc/{html,info,pdf},demo/stat/a}
Add a line number to every line in "long-file"
Print second field from semicolon-seprated line <line>.
Find directory "your/dir" if it is empty
Gets IP addresses of all active network interfaces on host.
create a zip of log files in the current directory which have not been accessed in the last 3 days (-p is for parallel processing for a 4 cpu machine, -n is for maximum work units)
Remove leading and trailing spaces or tabs from "$string"
Recursively changes group ownership of everything within a current directory to 'repogroup'.
Print right aligned numbers from 11 to 24
Change the owner to "owner" and group to "nobody" of "public_html"
Calculate and show md5 sums for every files under current directory tree
display all the ip addresses in all the files that are present in /etc folder
search for the file "filename" in the entire file system
Read a line from standard input into variable "REPLY" with prompt "> $line (Press Enter to continue)"
Print the path names of all regular .rb files prefixing them with string "Hello, "
Find all directories under current directory excluding  directories (along with their contents) that start with a . (dot) in their names
Remove empty directories from the current directory tree
Write output of "ls -a" to standard output and to "output.file"
find all the files in the current folder which belong to the user root.
Takes path list from '.exportfiles.text' file, cuts off first two path segments and last one.
find regular files under the current directory, whose name ends in .mbox and using awk run multiple system commands to rename each matched file, to the same name without .mbox at the end
Print "new.txt" with line numbers prepended and line 2 or any line containing "2" deleted
Save the current time formatted according to the format string "%Y-%m-%d %H:%M:%S" to the variable 'CDATE'
find all the files in the current directory and change the permissions to 775.
Print the empty files/directories among empty1, empty2 and not_empty
List all files in a current folder, separating names with semicolon
Print whether the sorted contents of "set1" and "set2" differ
Find all regular files whose names contain a case insensitive pattern composed of space separated positional arguments and display a long listing of them
display all files in current folder excluding text files
Sets 'globstar' shell option.
Remove lines matching "kpt#" from "data.txt" and add left-justified line numbers
Discard the first letter from every line in $line and calculate the md5 sum of the remaining
Print lines that only unique ones in 'set1' and 'set2' files
Search for 'string_to_find' in all files under current directory
search for files starting with memo and which belong to the user ann in the folder /work
Print out ln commands for each file in /home/folder1/*.txt that can be run to create symlinks appending '_CUSTOM_TEXT.txt' in their names
Find all files with the name "MyProgram.c" in the current directory and its sub-directories while ignoring the case of the file name.
List subdirectories in the current directory
List all files in the current directory tree that were modified less than 60 minutes ago
find all the files that have been modified in the last 2 days
Create new crontab set including $job and only jobs from current crontab that don`t contain $command
Prints calendar of February, 1900.
Set the 'xtrace' shell option
delete all empty files in the current directory ( empty file = size 0 bytes )
Changes group ownership of '/var/run/fcgiwrap.socket' to 'forge'.
Lists all files in a current folder, separating names with comma.
Set permission of "file" to read only for the owner
List all files in the current directory tree larger than 1000 kb
search for all the files in the current folder which are bigger than 10KB and display them biggest file
Compare files in "/tmp/dir1" and "/tmp/dir2", treat absent files as empty and all files as text, and print 3 lines of unified context
display the count of all normal/regular files in current directory
search for the pattern in all the regular/normal files in the entire file system
Get the path of running Apache
find all the links in somedirectory and print them in a single line (to avoid the problem of files having newline in their names)
Find all files in and below the home directory that have been modified in the last 90 minutes
Save a space separated list of process ids of currently running jobs to variable 'bgxjobs'
Recursively find the latest modified file in the current directory and print the modification time and filename
Remove all vmware-*.log files under current directory
List all .svn files/directories under current directory
Find all the files whose permissions are 777 under current directory
Search the .cs files of the current directory tree for string "content pattern"
Print position number of day '9' in fourth line of calendar output for September, 2009.
find all the files in current directory of size smaller than 10KB.
display all the files in the current folder which have the permissions 777 and which have been modified in the last 24 hours.
Find all files/directories named 'top' in the entire filesystem
Removes all empty folders that ends with any-cased '*.bak' under '/Users/' path.
Find all files matching pattern '.#*' in the current directory tree
search for the files with the name "temp" and which have not been accessed in the last 7*24 hours in the /usr folder
Finds shell options like 'checkjobs' with their state.
check find version
Finds pattern text ignoring letter case in all .js files, prints matched strings and name of file with that strings.
Find all empty directories under current directory
Print the names of all hidden regular files from the current directory
Count the number of regular files in the current directory tree
Md5sum the last 5 files in /directory1/directory2/
Find all files changed on the 29th of September, 2008, starting from the current directory
find all text files in the current directory
Set the read bit for "other" on all *rc.conf files in the current directory tree
Find files which are more than 2 days old under  ${userdir}/${i}/incoming directory
Print the full path of a 'file.txt' file in the current folder.
Find all regular files under $DIR/tmp/daily/, sort them in reverse numerical order and copy the first two files to $DIR/tmp/weekly/
Search the current directory tree for files whose names begin with "my" and end with "p" followed by any character
Replace spaces in directory names with underscores for all directories in the current directory tree
Recursively change the owner and group of "/opt/antoniod/" to "antoniod"
Sort and display the file name and creation month of top 11 files in the entire file system (Sort in the order of month )
Recursively change the ownership of all directories in the current directory excluding "foo" to "Camsoft"
Finds the folder where temporary files would be written to.
Tmux configuration to enable mouse support within tmux
Find all files/directories with 755 permission under current directory tree
Recursively finds all '*.png' files older than 50 days in a current folder and removes them.
Search the current directory tree for regular files modified within the past 24 hours whose names do not end with ".DS_Store"
Find all directories in the current directory tree with "music_files" in their names
Print the commands that would execute "myfile" on all .ogv files from the current directory tree
Set variable "finalName" to the second-to-last slash-separated path component of variable "path"
Find empty files and directories
Format output of 'file' content to columns with wide not less than 80 pixels
get md5sum of an iso file without displaying the filename, save value to 'md5' variable
Save the FQDN host name of the system in variable "fhost"
Prints long listing of file 'file.ext'.
find all the text files in the current directory which have been modified in the last 4 days and not today and copy them to another folder
display all files in the directory "dir" which have been changed in the last 60 minutes
Count the number of .java files in all folders rooted in the current folder
Find all *~ files/directories under dir and  print an rm command for each of them for deletion
list all the drectories present in the current directory and do not search in the sub directories.
Delete all hidden files under $some_directory
search for the word "nutshell" or "Nutshell" in all the files in the folder book
search for *.log files starting from /
search for the file "abc" in the current folder or display all the directories
Find all the regular files under current directory tree that have not been modified in the last 31 days and delete them
Make directories a, b, c, ..., z under path2 as needed.
Find all files/directories under current directory tree excluding hidden files/directories
Search the current directory tree for executable files and searchable directories
Prints path location of $BASH_SOURCE file.
List path/filename of all PHP files under current directory whose file type description or path/name contains "CRLF"
Create intermediate directoriy path2 as required and directories a..z
Save $line line in history
Delete all files not owned by valid users
Copy directory hierarchy from the current working directory to "/path/to/backup/"
Replace the occurrences of "HOGE" with "MOGA" once per each line of the files from the current directory tree
Search the home directory tree for .tar.gz files newer than file "filename"
Show long listing of current directory by deleting all digits from the output
Finds $a pattern in a $b string, and returns exit code 0 if found, suppressing any visible output.
Remount "/dev/sda7" partition as executable
Exclude directory from find . command
Find all mysong.ogg files/directories under your home directory
remove all the core files in the current directory
Set permissions to ug=rw,o= for files under the $d directory tree
Find all files/directories that are owned by user 'dave' under current user's home directory tree
Create an empty file (or update timestamp of file) specified by variable "correctFilePathAndName"
find all files in the current folder which have not been accessed in the last 7 days or which are bigger than 20KB
Find all python files (.py files) in $topdir directory tree and search for 'Makefile' in all these folders and display all distinct folders having 'Makefile'
Remount "/dev/shm" with a maximum size of "40G"
List all regular files under the current directory and below it
Find all files named 'Makefile' in the /usr/ports directory tree and count the number of lines in them matching regular expression '^MASTER_SITE_SUBDIR.*\.\./.*authors'
Mount the "vboxsf" filesystem "D:\share_folder_vm" on "\share_folder"
Search for 'text' in all regular files under current directory tree
Find StringBuffer in all *.java files
find all the files in the entire file system which belong to the user "roger"
Search the current directory recursively for *.txt files with lines that match regular expression "^string"
List all files/directories under current directory using comma (,) as the delimiter for different fields in the output
Find all files under directory tree /path/to/dir whose permissions are not 644
Print current shell using process ID
Find all regular files under current directory tree that were accessed $FTIME days ago
Find all files/directories under /path/to/dir/* paths and print the timestamp in YmdHMS format along with their paths and object of symlinks
Places current job to background.
Find files in the current directory tree whose names are of the form "cxx_data.txt" where xx is a number from 40 to 70
Get the base filename from variable 'path', similar to using the basename command.
Change permissions of all directories in the ~/dir_data directory tree in accordance with mode `a+xr,u+w'
Finds strings like "texthere" recursively in all files of a current folder regarding all symlinks.
Find all regular files whose names contain "@" in directory tree ~/$folder
Find all *.p[lm] files under /users/tom directory that matches both the regex '->get(' and '#hyphenate' in their contents
find all the files in the entire file system whose size is exactly 15MB
Search the ~/Books directory recursively for files named "Waldo"
display list of all the files in the current directory (print0 handles file names with newlines or spaces)
Print comma separated gaps in file "file" that contains new line separated ordered numbers
Find all files/directories excluding paths that match '.git' or '.gitignore'
Split "infile" into 2 files of about equal size
display all regular files in the folder image-folder
Print files created/modified in the last day
Take a file path from standard input and remove it.
find all the files in current folder which end with a speicifc regular expression and display their count
find all the files in the current folder which have been accessed in the last 24 hours
find files which full path name like '*f' at current directory and print
Find all files called "INPUT.txt" in the current directory tree and remove lines starting with # in them, saving backup copies as INPUT.txt.bak
Replace "," with "\r\n" in "a,b"
Find all files named "filename"
Counts number of occurences of all ip addresses in 'ip_addresses' file, and prints all addresses with number of occurences in a descending order.
sort and display top 11 files along with the last access date for all the files in the file system ( sort based on the timestamp )
display a long listing of all the files in the current folder which have been modified in the last 24 hours
Lists all subdirectories in the current directory with the trailing slash removed
Print the names and sizes of regular files residing in the "dir" directory tree
Print the given file name's extensions.
Create intermediate directories "full", "path" as required and directory "to"
Returns 0 if user $1 belongs to group $2.
Find all directories with space in their names under current directory and rename them by replacing all spaces with _
Delete all ".DS_Store" files/directories under test directory
Returns exit code 1.
Truncate all non-empty regular files under the current directory
Find all files in /dir1 and print only the filenames (not paths)
find all the files in the current folder that have not been modified in the last 24*3 hours
Find all files and directories that do not match the pattern given as the $controlchars variable
Recursively removes all files like '4' under folder './a' and removes folders with such files if they become empty.
Find files on the system created during the last 50 days
find all the files which start with the name "Metallica" in the folder "/mp3-collection" and which are bigger than 10MB
List all environment variables whose name contains 'ipo', showing only the names of the variables and not their values.
Save number of processors in system to 'NP' variable
change the permissions of all regular/normal files in the file system
Numerically sort file "file.dat" by the second word of each line and output from greatest value to least value
Read a line from standard input in an interactive shell with prompt in variable "myprompt" interpreted as PS1 is interpreted
Create a hard link named "my-hard-link" to "myfile.txt"
Print the sorted uniqe list of folders in compressed archive nginx-1.0.0.tar.gz
Find all files in the current directory recursively with "linkin park" in their names and copy them to /Users/tommye/Desktop/LP, preserving path hierarchy
Find all PHP files under current directory that contain only one non-blank line
display all the files in the current folder excluding those that are present in the path "./etc"
Find all files with the extension jpg regardless of case
Fetch 'stackoverflow.com' domain IP addresses from dig DNS lookup
find all the file which name end with c or h and content contain 'thing'
Print the first word followed by the rest of the line formatted to fit in 100 characters for every line in "input"
display all the tex files in the current folder
Use "$BYTES" amount of RAM with no output
find all the file which name (name can contains space) end with c or h and content contain 'thing'
Search /usr/bin for regular files that were last accessed more than 100 days ago
Remove all regular files under $DIR directory tree that were accessed more than 5 days ago
List all files except for those in directory SCCS
Find all file which have more the 2 hard link
Count files in the current path by modification month
list all active jobs and its IDs
Find all files/directories that contain 'target' (case insensitive) in their names under current directory no-recursively
Delete all __temp__* files/directories under current directory tree
Find all regular files that reside in the current directory tree and were last modified more than 4 days ago
Find all files in the current directory tree whose pathnames match pattern '*/1/lang/en.css'
Find and delete all hard links in the /home directory to file1
Find all *.pdf.marker files under ${INPUT_LOCATION} and move them to ${OUTPUT_LOCATION} also move any *.pdf files with the same name under current directory to ${OUTPUT_LOCATION}
Find all files and directories in the current directory recursively that contain spaces in their names
list the regular files in your home directory that were modified yesterday
change the ownership of all the files in the file system from edwarda to earnestc
Find all files under current directory whose status was changed less than 3 days ago, sort them and show last 5 lines of output with only their paths
Count the number of files named 'job.history' under '/data/SpoolIn' directory tree that match 'FAIL' in their contents
create a symbolic link named "$ORACLE_HOME/include" to file "/usr/include/oracle/11.2/client"
Find all executable symlinks or upvoter-* files under maximum 1 level down the {} directory
Search current directory for any directory named "config" and go to first match found.
search for the regular/normal file "myfile" in the current folder excluding search in the paths of "work" and "home" sub directories
show all regular/normal the files in the current folder whose size is bigger than 0 bytes excluding everything
Find all directories under /path/to/base/cache, /path/to/base/tmp, /path/to/base/logs  and change their permission to 755
Print equal lines in compressed files "number.txt" and "xxx.txt"
Set the modification timestamp of file 'filename' to specified date/time.
Find all *.m4a files/directories under /home/family/Music directory
Print standard input to standard output line by line, discarding any adjascent duplicate lines.
Suffix all files and folders in the current directory with "_SUF"
search for all empty directories in the folder /home
Find all directories under $root and replace all newlines with : (colon) in the output
Move all regular files under current directory to ./newdir
Finds all php processes running in system.
Count the number of files/directories named file1 under current directory
Print a summary of the command-line usage of find
Recursively copy /path/foo on host "prod" to local directory "/home/user/Desktop", connecting as ssh username corresponding to local username.
Search for the string 'magic' in all regular files under current directory tree and display long listing of them
Find all files under /path/to/input/ that match the case insensitive string literal 'spammer@spammy.com' in their contents
Find all files on the system that are world writable
find all regular files exclude .o and exclude *.swp and output line number of soc_attach if it has
Create a symbolic link named "wh" to "$wh"
Recursively find strings in all files under current directory, that matching with comma-separated patterns list in file 'searches-txt'
Find all .gif and .jpg files in the /var/www directory tree
Display all symlinks and their targets in the current directory tree
Run 'join' on file1 and file2, using a literal tab character as field separator.
Remove all files with '.js' extension from the 'js' directory tree
Search for the regex '->get(\|#hyphenate' in all files with '.pl' or '.pm' extension under '/users/tom' directory tree and only show the filenames
Delete all files in the "${S}/bundled-libs" folder except "libbass.so"
find all the files older than 30 days
display all the configuration files in "/etc" folder along with their last access and modified timestamps
Find all files in the current directory tree whose size is greater than 1MB, and move them to the "files" folder with confirmation
Copies file 'test' to each of directories like './fs*/*'.
Find all files in the home directory tree that are owned by another user and change their ownership to the current user
Delete all .svn subdirectories under current directory
find all files that do not have read permission to all
Find all files under /somefolder matching the extended case insensitive regex '\./(.*\.error.*|second.*log|.*FFPC\.log)$' in their paths
Reversibly sorts content of the '${TMP}/${SCRIPT_NAME}.name' file
Find all executable upvoter-* files/symlinks under maximum 1 level down the {} directory
display list of all the files in the /tmp folder
Remove all *.doc files from the current directory tree
Creates temporary folder and saves path to it in 'td' variable.
create directory /etc/cron.minute
Find and delete the file with inode number 1316256
Read a single character from standard input into variable "ans"
Enables shell option 'direxpand'.
Set permissions for directories in `foldername' and its subdirectories to 755
Display hostname.
display all the tex files in the current folder
Force decompress all files into '/etc'
Print content of 'domains.txt' with removed first one of dot-delimited fields
Open "charm" executable file in vim
Find all regular non-hidden files in the current directory and its subdirectories
Search for 'specific string' in all files matching the name pattern '“*.[txt|TXT]”' under current directory tree
List files ending in .html and residing in the current directory tree
split a file "list.txt" into pieces per 600 lines
Change the owner of all files in "/empty_dir/" to "root" using at most 10 files at a time
Search the /path tree for all executables
Find the "param1" string in regular files under and below /var
Output success.txt omitting lines whose first field appears in fail.txt - lines in fail.txt must appear in the same order as they do in success.txt.
search for all the regular/normal mp3 files in the file system and move them to the folder /mnt/mp3
Recursively change the user and group of all files in "/var/cache/jenkins" to "root"
Compare each .xml file under the current directory with a file of the same name in "/destination/dir/2"
Pushes current folder to the directory stack.
Search the current directory and directories below for .sql files
find the oldest normal file in the current directory and display with its timestamp
find all the text files in the file system and search only in the disk partition of the root.
Move all directories in the current directory tree that have been modified in the last day to "/path/to/target-dir"
find all the files from root folder which have nogroup or noname and dispaly their details.
recursively change owner of the directory /tmp to the current user
Format the date represented by time string @1267619929 according to default format and print it
Search the current directory tree for files whose names do not end in ".exe" and ".dll"
Find symbolic links in directory /etc and below
display all files in current folder
Remove the regular files from the current directory tree that were last modified on November, 21
Get the actual find exectuable path
Locate all files in the current directory and below that do not have "testfileasdf" in their names
Make directory "/etc/cron.minute"
Print every two lines in "file" on a single line separated by a space
Find the empty directories and files under current directory
display all the .sh scripts and perl files in the current folder
show all files in the current directory and all subdirectories
Calculate the md5sum of the executable file of command 'c++'
Find files newer than `tmpfile' starting from the current directory
Change directory to the basename of "$1" with ".tar.gz" removed
Prints the length and contents of the longest line in filename
Search all *.c files from the current directory tree for "hogehoge"
Find the passwd file under root and one level down.
Remove trailing white spaces from all files under dir directory
Print output of script 'trap.sh'
Create a symbolic link named "$HOME/bin/" to "$HOME/downloads/fnord"
Copy file in current directory of local host to host "remote", connecting as ssh user matching current local username, and copying the file in home directory on remote host - enable compression during transfer.
Find all 1.txt, 2.txt and 3.txt files under current directory and change the permission to 444
Compare sorted files 'f1.txt' and 'f2.txt' and print in three columns strings unique for first file, second file, and common ones
Find all *.txt and *.json files in current directory
Find recursively all files in /path that end in "txt" and copy them to /tmp/
find the path of a specfic video file in the current directory
Search the current directory recursively for regular files last modified less than 2 days ago
Print short DNS lookup for each domain name in a file 'list'
search files  in the file system excluding those in the paths "10_Recommended" and "/export/repo"
Print the largest 20 files under current directory
Search "input.txt" for regex patterns only matching those listed in "ignore.txt", list the unique lines and prefix with the number of occurrences
find all the files in the /usr folder that have been modified after the file /usr/FirstFile.
Run an awk program on every TXT file found in the current directory tree
Find all files starting from the current directory which are owned by the user tommye
display all the regular/normal files in the current directory
Split "your_file" into files with at most 9 lines each
Display standard input as printable characters or backslash escapes with no addressing radix
display the version of find command
Find all files/directories containing 'blah' (case insensitive) in their names that were modified in less than 2 days ago uder current directory tree
Report file system containing /example disk usage in kilobytes.
Print a unique list of characters from standard input showing backslash escapes for non-displayables
Find the passwd file in the current directory and one level down
Find a directory named 'project.images' in the entire filesystem and show it in long listing format
Search the current directory tree for regular files that contain "string"
display a long listing of all the files in the current folder which are bigger than 10KB
Find all *.tex regular files in maximum 2 levels down the current directory
Replace 'company' with 'newcompany' in all files under current directory
prints last part of a logfile since timestamp 423
Change directory to "$dir1" and resolve any symlinks in the resulting path
search for "specified string" in all the php files in the current folder
Delete all directories under '.cache/chromium/Default/Cache/' directory tree that are bigger than 100MB and are at least 1 level deep
Find all regular files under ${S} directory
Print a single line of numbers from "001" to "100"
List environment variables whose name matches '^\w*X\w*'
Search for all directories named foo, FOO, or any other combination of uppercase and lowercase characters beneath the current directory.
Find all the files which are modified in last 1 hour in entire file system
Run "command" on server "host" as user "user"
Print lines in "foo.txt" that are found only once
Lists all files in a current folder, separating names with comma.
Disables shell option 'dotglob'.
Print the current directory
Find all regular files starting from / that have permissions 777
Find all files under current directory with their size and paths, reverse sort them numerically, then print the first 4 entries by removing all matches to the regex [0-9]+\s from each line of the output
find the depth of all the files in current folder and display the depth and file name
display all the ".mov" files in the current folder
display the three largest files by size in current folder
Find all directories under 'A' directory tree excluding paths containing the directory 'a'
Set the permissions of all directories inside the current directory tree to u=rwx,g=rx,o=x
Find files/directories under /users/tom that matches both the pattern "*.pl" and  "*.pm"
Removes all files from current folder but 5 newest ones.
Count the number of lines in every regular .rb file in the current directory tree
display list of all the hidden files in the directory "/dir/to/search/"
display the count of total number of empty files in the current folder
Create a symbolic link named the basename of "$file" to "$file"
Remove all the files and directories that are in /dir1 but not in /dir2.
Replace "foo" with "bar" in all PHP files in the current directory tree
Print all directories under $root appending a : (colon) at the end of each path
Search the ~/Books directory recursively for regular files named "Waldo"
find md5sum of 'string to be hashed'
display in a list of all the files that are bigger than 10KB in current folder
Find all files/directories named 'document' in maximum 4 levels down the '/usr' directory
recursively change owner and group of the directory and group of the directory and all files into it to user and group dev_user
Compress from standard input and print the byte count preceded with 'gzip.'
Recursively changes group ownership of everything within a '/path/to/repo' to 'GROUP'.
Search the .VER files from the current directory tree for string "Test_Version='
Change directory to the alphabetically last path under the current directory
Find regular files that are bigger than 500 MB in size under current directoryt tree
Mount "ext4" filesystem "/dev/xvdf" on "/vol"
find all the regular/normal files in the current directory which do not have the extension comment and and redirect the output to /tmp/list
Find all directories under current directory and change their permission to 644
Search the file hierarchy for files larger than 100000 KB without searching any mounted removable media
list files that the user does not have permissions to read, do not try to descend into directories that cannot be read.
Force create a symbolic link to "$f" in "~/my-existing-links/" with name the basename of "$f"
Search directory tree $DIR for *.txt files
Display 798 backwards
find all the files in the home folder which have been modified after a file
Prints strings with MAC address configuration of each network interface in system.
Search the current directory tree for *bash* files
Display differences between directories dir1 and dir2.
Create an empty file in each directory named "mydir" under current directory.
find all empty files in home directory
Calculate md5 sum of file ${my_iso_file} and save it to variable 'md5'
Remove all *.txt files, except robots.txt, under the given directory modified more than 5 minutes ago
search for all the directories in the current directory and do not search in sub directories
replace the word foo to bar in the current folder in all the regular/normal files containing the word "baz" in their name (does not update the file)
Find files/directories under '/usr' directory tree that are newer than /tmp/stamp$$ by modification time
Find all regular files under $DIRECTORY_TO_PROCESS matching the case insensitive regex ".*\.$FILES_TO_PROCES" where $FILES_TO_PROCES is a variable and not matching the name pattern '$find_excludes' where $find_excludes is another variable, then print the files with null delimiter instead of newline
List files greater than 1024KB under /path/to/directory and print the time and size on stdout
Save the last modified time of file 'file_name' to variable 'STAMP'
Count files in $DIR_TO_CLEAN that are older than $DAYS_TO_SAVE days
list all files in /home/bozo/projects directory tree that were modified exactly one day ago.
Get A record for domain $domain
Prints long listing of "$dir/$file" file.
Search for files/directories with the case insensitive pattern anaconda.* in var/log directory and create an archive (file.tar) of all the files found
List all files and directories from the current directory tree
Changes group ownership of 'target_directory' to 'target_group'.
Search in the current directory and all sub-directories except ./D for the file named hi.dat
change the permissions of all regular/normal files in the current directory, print0 is used for handling files with newlines in their file name
Prints all business days in a current month.
Exclude directory from find . command
Print a sorted list of *.so files in the bla directory tree
Display the 'bash' manpage, going to the first occurence of \' sequence of characters.
Recursively change the owner and group of "/workspace" and "775" to "your_user_name"
create symbolic links in directory "/your/dest/dir/" to all files located in "/your/source/dir/" and have filename extension "txt.mrg"
Move all lines starting with "Ca" to the beginning of the file
Remove the path $1 from the PATH environment variable
Strip all '\' and newlines from $output and save the result to variable 'output'
Find all files with '.txt' (case insensitive) extension under $dir directory non-recursively and sort them numerically
Finds all the log* files in /myDir recursively that are more than 7 days older, skipping already created .bz2 archives and compresses them.
Find all files, folders, symlinks, etc in the current directory recursively
find all files with pattern` '*.mp3' and send output into nameoffiletoprintto file
Find absolute path of command with PID "$pid"
Find all *.ogg files on the system ignoring the case
Find all files and directories starting from the current directory and excluding hidden files and directories
Search the /tmp/ directory recursively for regular files
Print the list of all directories in the /myfiles directory tree
calculate the disk usage for all the files which have been modified in the last 24 hours in ~/tmp folder and display the file sizes
Read a line of standard input with prompt "Enter your choice: " in an interactive shell and save the response to variable "choice"
find all regular files in current directory and replace the word searc to replace in them.
Report file system containing /tmp disk usage in kilobytes.
Print first word of lines unique for 'file1' file
search for the file "process.txt" in the entire file system (case insensitive search)
Invoke a trusted X11 forwarding SSH connection with server "192.168.0.14" on port 222 as user "phil"
Delete and count files in $DIR_TO_CLEAN that are older than $DAYS_TO_SAVE days
Report file systems inodes usage.
Find all directories starting from the current directory
Find all files under /somefolder matching the case insensitive regex '\(.*error.*\)\|\(^second.*\log$\)\|\(.*FFPC\.log$\)' in their paths
Replace all newlines from standard input except the last with spaces
Search for all files in the current directory recursively whose names begin with "Linkin Park"
Count the number of files in the /usr/ports directory tree whose names begin with 'pkg-plist' and which contain 'dirrmtry'
Find all empty files starting from the current directory and delete them
Save list of groups which user $line belongs to and not matching pattern "_unknown|sciences|everyone|netaccounts" in 'results' variable
find all the text files in the folder /home/calvin which are atleast below 2 levels
Extract any line in "fileA" which does not appear as the first word of any line in "fileB"
replace the word apple with orange in all the files in the current folder
list the details of all the directories in the current folder
Find all *.txt files under /foo and print their total size
Sort file "a.csv" by the first comma separated value of each line and print only unique entries
Recursively change owner and group to "tomcat7" of "webapps", "temp", "logs", "work", and "conf"
Locate files that reside in the home directory and have not been accessed in the past 30 days
Find files newer than start.txt but not newer than end.txt
Unzip "path/to/test/file.gz" to standard output and save all lines matching "my regex" to files with a 1000000 limit
Print all files that exceed 1000 blocks and were modified at least a month ago
count amount of jobs running
Delete all hidden files/directories under $some_directory including $some_directory
Decompress "path/to/test/file.gz" to standard output and save all lines matching "my regex" and not matching "other regex" to files with a 1000000 line limit
Page through the contents of yourFile, adding a $ at the end of each line.
Calculate the md5 sum of the contents of "$FILES"
split the first 100 lines of the file "datafile" per lines with size 1700 bytes
Archive "_vim/" to "~/.vim" suppressing non-error messages and compressing data during transmission
display all the files ending with ".foo" including those that are in the directory ".snapshot", this is the wrong way of using prune.
display all the jpg files in the current folder and do not search in sub directories
Find all regular files under /home/www and replace every occurrences of 'subdomainA.example.com' with 'subdomainB.example.com' in those files
Set permissions of all directories under "/opt/lampp/htdocs" to 755
For each line in file2 whose first field appears as a first field in file1, print an output line constructed following the specified -o format.
Find all files/directories under current directory tree excluding files/directories with name 'query_to_avoid'
Print line number of each line in /etc/passwd file, where current user name is found
print all lines after the last match of 'string match'
Search the /path directory tree for files having permissions 777
Recursively find all files ending with '*.txt' and print they names and content
Count all the lines of all '*.c' files in current directory recursively
Read a line of standard input with prompt "My prompt: " and save it to variable "varname"
Find all directories under ~/code excluding hidden directories and their subdirectories and replace all newlines with : in the output then remove the last :
Read a single character from standard input into variable "key" without backslash escapes and using an interactive shell with the prompt $'Are you sure (Y/n) : ' and default value $'Y'
Execute `somecommand' on each file from the current directory tree with the environment variable f set to the filename
create a gzip of all the files in the current folder excluding the already gzipped files
find all the html files in the current folder and delete a line
display all files in current folder excluding those that have the word "git" in their name and display files that have git in their path names
Find all files in entire file system which are larger than 20000KB
Recursively copy "original_dir" to "copy_dir" preserving file/dir timestamps, displaying progress, and skipping files which match in size, keeps partially transferred files.
Show find's version
Search the home directory tree for files last modified more than a year ago
Find all broken symlinks under current directory
Set the 'pipefail' shell variable causing bash to return true only if all commands in a pipeline return true.
Copy recursively "tata/" to "tata2/" and remove read, write, and execute permission for other
Find recursively all regular files in the current directory tree ending in .dll or .exe
Recursively copies all files in the current directory but ones that names match pattern "dirToExclude|targetDir" to the 'targetDir' directory, printing info message on each operation.
search for text files in the current folder which have write access to others
display all scala files in the directory "src/main"
Print the text file paths that match 'needle text' in their contents under 'my_folder' recursively
create directory /var/svn as user root
split the file "/path/to/large/file" into pieces per 50000 lines named as /path/to/output/file/prefixNNN
Remove all text files in the home directory with confirmation
Rename the *.so files at level 2 of the current directory tree prepending their names with "lib"
List all existing environment variables in the current shell.
Exit the shell on the first error encountered
Removes all empty folders under current path, aged between 'first' and 'last' timestamps.
Copy "/home/username/path/on/server/" to "username@your.ip.address.here:/Users/username/path/on/machine/" and convert encoding from UTF-8 to UTF-8-MAC
Copy all files below the current directory whose names contain "foobar" (case-insensitive) to directory foo/bar/ in user's home directory.
find all txt files under the current folder except ./misc folder
Search the /var/www/ tree for files not owned by user `apache'
search  character special files called ' backup '  from  /usr directory downwards and print them .
Print every two lines in "num.txt" on a single line separated by a space
display a long listing of the files all non emoty files in current folder which have been modified 60 minutes ago
Adjust the timestamp of 'filename' by subtracting 2 hours from it.
find all text files in the folder "FFF" and find the md5sum for them
Display a long listing of all the regular files in the file system which belong to user 'root' and which have suid bit set
find all the files (under root file system /) that were changed within the last 24 hours
Change permissions of all directories residing under and below ./debian to 755
Find all files under current directory whose file type description contains "image", display the paths to files and file type descriptions.
List recursively all files and directories in /var/www
Change permissions to 644 recursively only for files
find all the files in the current directory and print them excluding those that have the name SCCS.
Search the home directory tree for video files
Find files with inode number 199053
search for the word "mysql" in all the files in the current containing the word "notes" in their name
Print the grand total file system disk space usage with block sizes in units of TiB
Show manual page of find utility
Change permissions to 700 for files and directories deeper than the current directory
Read a line from standard input into variable "REPLY" with prompt "$1 ([y]es or [N]o): "
search for the file chapter1 in the folder /work
Gets MAC addresses of all active network interfaces.
Print the directory name of the full real path to the current script
Count total number of lines in all *txt files  in current directory
Print type of the file system containing path $dir.
Recursively lists all *.py and *.html files in a current folder.
Print which files differ in "folder1" and "folder2" excluding "node_modules" recursively, output in two columns, and paginate the output
Find all the files in file system which are modified more than 50 days back and less than 100 days
display all the symbolic links in the current folder
create a symbolic link named "www" to file "www1"
Print the number of entries (files, directories, symlinks, etc.) in the subdirectories of the current directory, stopping search at any device mount points.
search for all text files in the folder /home
delete all the regular files in the temp folder which have not been modified in the last 24 hours
search for MP3 files in the current folder and subfolders exclude dir1 AND dir2
List all files/directories under current directory
Recursively finds strings like "texthere"  in all "*.txt" files of a current folder.
Create a symbolic link named ".bash_profile" to ".bashrc"
Read lookup requests from text file '1.txt' and uses them to fetch TXT records.
Run 'otherscript.sh' script with all environment variables specified in the file 'xxxx'
Execute `find -type f | egrep -i "(jpg|bmp|png|gif)$"` every 300 seconds and display without title
Find all files/directories named 'test' under current directory tree
display all text files in the folder /tmp/1 excluding those which do not have spaces in their names
Archive "src/bar" on host "foo" to local directory "/data/tmp"
Move all hidden files in "wordpress" to the current directory
Mount "/path/to/device" on "/path/to/mount/location" as a loop back device
display all the regular/normal files in the current directory which are atleast 2 levels deep
find all the files in the current directory which have been modified in the last 30 days and display the contents.
Find all *.ogg (case insensitive) files under your home directory that are less than 100MB in size
Change directory to the directory containing file path "$1"
Force delete all files in the temp folder which have not been accesses in the last 240 hours
find all the files in the file system which have been changed in the last 24 hours.
Split "/usr/bin/firefox" into 1000 files of about equal size
Unzip and untar "myarchive.tar.gz" and check for corruption
Find all files and directories that have been modified in the last seven days.
Lists all subdirectories in a current folder, removing trailing slash.
List in detail regular files from the current directory tree whose names match Perl regular expression '\w+-\d+x\d+\.\w+$'
Execute "script.awk" on "file" and format the output as a table
Change all "JPG" filename suffixes in current directory to "jpeg".
Read a line from standard input into variable "a" without backslash escapes
find the file with the name "esxcfg-firewall" in the current folder
find  files which full path name is foo/bar under foo directory and print
Search the current directory for HTML files whose names begin with "a"
Find all files named "MyCProgam.c" (ignoring the case) and calculate each file's md5sum.
Reverse the space separated words in "aaaa eeee bbbb ffff cccc"
Set permissions to 500 for directories under the current directory
Remove the first 7 characters of every line in the output of "history"
Search directory tree `MyApp.app' for directories whose name is 'Headers' and delete them in an optimized way
Delete all files under /path/to/files that are not newer than dummyfile
find all the ".c" files in the folder /home/david which have been modified in the last 48 hours
find all the regular/normal files in the current folder and do not search in the sub directories
searching for all files with the extension mp3
Print all lines from the last occurrence of the regex 'pattern' to the end of the file 'file'
Find all files/directories under '/usr' directory tree that have been modified exactly 5 minutes ago
Decompress ${set1[@]} files with gzip
Search the path given as the $absolute_dir_path variable for regular files
Finds all logged in users.
Archive "/source" and all files under "folder/" to "/dstfolder/" on host "remoteserver" as user "user" without copying files that already exist
count the total number of lines that are present in all the normal/regular files
Find all *.ogg and *.mp3 (case insensitive) files/directories under your home directory
find all files and directories under the current directory and display the inode of each one, using printf
Show all variables whose name or value contains "PATH", sorted in reverse alphabetical order.
Find files starting with the word "file" in the current directory tree
display a long listing of all the files in the home folder which are bigger than 200MB
Find all files/directories named 'fprintf.c' under '/usr/src' directory tree
Find all Executable files in the file system
Removes empty folder 'edi' and 'edw'.
Find all directories in 1 level down the current directory
Find .rmv files in the current directory recursively
Find all files/directories with '.c' or '.h' extension under current directory tree and search for the regex provided by first positional argument and show the output by paging through one screenful at a time
List all unique parent directories of .class files found under the current directory
Count the number of characters in the list of regular files from the current directory tree
Print login name and full name of all users currently logged in and delete instances of "of group.*"
Set variable "filename" to only the name of document specified by URL, in this case "pic.jpg"
Prints listing of a root folder including hidden files, and saves output to 'output.file'.
Find all Perl source code files
Delete all the .c files present in the current directory and below
Remove containing directories from variable 'path' ie. "/some/specific/directory" becomes "directory".
SSH into server "app1" as the current user
Returns the single most recent file in a directory
Remove files in current directory according to the filenames found in ~/clang+llvm-3.3/bin/
Display the number of regular files under current directory tree
find all the files in the current folder which have been modified for the ffiles that are at least one week old (7 days) but less then 30 days old
Read standard input until a null character is found and save the result in variable "f2"
Recursively prints all folders in a current folder that contain files like "*.class".
Find all files that contain the case insensitive regex 'stringtofind' in maximum 1 level down the / directory without descending into other partitions
Find image files and move them to the pictures directory
Copies all files with "FooBar" in the path under the current directory to the '~/foo/bar' directory.
Search the files under and below /directory/containing/files for "pattern_to_search"
display long listing of all the empty files in the current folder
Get a detailed listing of all symbolic links in /usr/bin starting with "z"
Print "deb-src http://ppa.launchpad.net/webupd8team/java/ubuntu precise main" and append to file "/etc/apt/sources.list"
find all the text files in the current folder expect those which are in the path "sk"
Infinitely ping every host listed in "file-of-ips" with at most 50 processes at once
search for the word LOG in all the files in the folder ~/jsmith
Search the local subdirectory tree of the current working directory and the /tmp directory tree for directories named mydir
Find all *.rb (regular) files under current directory and print them on stdout putting the file name/path in-between two string literals 'Hello,' and '!'
display all files in the current folder that have been modified in the last 24 hours whose name has only 1 letter
Print numbers from 1 to 10 with 2 values per line
Print out every command that is executed in the script
Infinitely print "no" to the screen
Print space separated list of numbers from "$start" to "$end"
Remove files that are less than 1MB in size under current directory
Find all *.java files under current directory and archive them to myfile.tar
Find all files and directories with permissions 664
Set permission of all files in "img", "js", and "html" to 644
Non-recursively finds all '*.pdf' files in a current folder and removes them.
Find all files under $root_dir
Open all files named 'filename' with 'nano' editor in the entire filesystem
Replace any blank character from standard input with a tab
Interpret backslash sequences and delete whitespace characters in variable $FOO and save the result to variable 'FOO_NO_WHITESPACE'
display all the "C" files in the current folder
Find all directories in the current directory tree that are not accessible by all
find all the ".c" files in the folder "/home/you" which have been accessed in the last 30*24 hours
Find all regular files with '.r' and '.c' in their names under current directory tree
find all the html, javascript and text files in the current folder
Display the contents of 'your_file' wrapping lines to maximum 80 characters, and waiting for user interaction after each page.
Find regular files that are larger than 2GB
Rename "new" to "old" and make a backup if "old" exists
Search the current directory tree for all files matching pattern "*.rb"
Dump "testscript.sh" as 2 byte hexadecimale, printable characters, and octal values
list all the files in the file system excluding proc folder and excluding symbolic links which have write permission for the user
Recursively changes group ownership of everything in 'files' to 'apache_user'.
find all the directories  with the name "c" in the current folder which are at least 3 levels deep and which are not present in the path "/p/".
Find files that were accessed in less than a day ago
Find how many directories are in a path (counts current directory)
Find files owned by nonexistent users
Delete all hard links to the physical file with inode number 2655341
Remove all files with a txt extension under current directory
Search the current directory tree for file "a.txt"
Recursively finds all files older than 7 minutes under the current directory, saves list of found files, and compresses them, executing at most 10 compress process at a time.
Find all files/directories named 'my.txt' in the entire filesystem
change the permission of all the regular/normal files in the current folder from 777 to 755
Merge each line of standard input into a single comma separated line
ssh into localhost on port 4444
List ".java" files that have the same filename and contents
Read a line from standard input and save each word in the bash array variable "first"
Find all directories under $1/.hg and set their SGID bit
Read a line from standard input
find all regular/normal files in the current folder whose name has the word photo or picture and which have been modified in the last 30 minutes
display all the files in the current folder which start with either "fileA_" or "fileB_"
Find & Substitute Only 2nd Occurrence of a Word Using sed s//2 in all .txt files
Prepend date to ping output to google.com
search all the files in the folder "myfiles" which have the word "blue" in their name
Get the sizes (and total size) of all files under dir1 directory
display all the regular files in the folder "$(FOLDER)" which are modified in the last $(RETENTION)*24 hours and excluding hidden files
search for a word in all the files in the current directory
split file "your_file" into pieces per 9 lines
Gets IP addresses of all active network interfaces.
Searches manual pages which descriptions contain 'postscript', and prints name and description of only ones that contain any-cased 'png' pattern.
Login in 'whatever.com' as user 'whoever' with X11 forwarding to enable GUI programs on remote to be run
Send 5 ping requests to address 12.34.56.78 and print only the last 2 lines of the summary output.
Recursively add user write permission to all files under "/path/to/git/repo/objects"
Search the /tmp directory tree for files owned by user `ian'
List the drive of each "/dev/" disk mount point
Unzip all ".gz" files in the current directory tree excluding files containing "dvportgroups", "nsanity", "vcsupport", "viclient", and "vsantraces"
Find all files/directories named 'openssl' under current directory tree without printing 'Permission denied' error messages
search for the host "slc02oxm.us.oracle.com" in all the xml files in the current folder and display the files which has the matched content
Resolve all symlinks in path to "firefox" binary if it exists in path, resulting in absolute path with no symlinks.
Prevent ssh from reading from standard input and execute "touch /home/user/file_name.txt" on "$R_HOST" as "$R_USER"
find all the files in the current folder which have a set uid set
Replace all spaces (' ') with comma (',') in ${TO_IGNORE[@]}, append with '--ignore ' and save the resultant string to variable 'ARGS'
Print yesterday's date
Display source and mount point of the file system containing /some/path.
Search all the .c and .h files in the current directory tree for "expr"
Finds recursively all folders named 'a' within current folder and removes only ones without files and another folders within.
Find files starting with the word "file" in the current directory tree, ignoring the case
File "files.txt" contains a list of files, copy all files listed to host "remote", connecting as ssh user "user", and copying the files to this user's home directory - this will not work with files/directory names containing spaces.
Print each line in "set1" and "set2" that does not exist in the other
Search the "your/dir" directory for empty subdirectories
List the current directory recursively ignoring the "dir1" subdirectory
Search everywhere for hidden file `.profile'
find all the text files in the home folder
Mount a partition in "$IMAGE" with offset "$OFFSET" to "media/$DEST" as read only using a loop device
Find recursively the latest modified file in the current directory
Find all *.* files not within .git directory and run $SED_CMD -i "s/$1/$2/g" on each of them
Print A record for domain 'domain.' from 'ns1.newnameserver' nameserver
display the directory name along with the modified time  for all the files /var
Continuously convert "20131202" into "2013 12 02" and print the result
Find all files under current directory and set read permission for group and other for these files
display all instances of "foo.cpp" file in the current folder which are not in the sub directory tree ".svn"
find all files in the file system whose size is exactly 2KB
Change the ownership to the user daisy for all directories under current directory that are owned by harry
Forward port 12345 bound on 'localhost' to port 12345 on 'otherHost' as user 'otherUser'
Print the current directory name without full path
Counts all files in a current folder and subfolders.
display the name and size of all the regular/normal files  in the current folder which are bigger than 50MB
Copy "6.3.3/6.3.3/macosx/bin/mybinary" to "~/work/binaries/macosx/6.3.3/" and create directory "~/work/binaries/macosx/6.3.3/" if "~/work/binaries/macosx/" exists
Get IP address of your SSH session
Move "tobecopied/tobeexclude" to "tobeexclude"
find directories under the $LOGDIR directory where there has been no modifications within the last 24 hours and compresses the files.
Read a line from standard input into variable "message" with escaped prompt "Please Enter a Message: \n\b"
files all files which expect directories and display count of them
Find all regular files under test directory
Get the total sizes of all files under current directory
List all files in a current folder, separating names with comma
Display all regular files under current directory tree ignoring files in './dir1' and './dir2' directories
Find all regular files in the current directory tree that have been modified within the last 10 minutes
change the group of all the files in the file system which belong to the group with the gid 999
Calculate md5 sum of file $ecriv
Save the user name of the current user to variable "me"
Print the PIDs of the current user's instances of "firefox"
Find all *fink* files/directories in entire file system
Remove all files that are not newer than Jul 01 by modification time
Print source of the file system containing $path.
List all regular files under the current directory and below it
Search for files whose size is between 100 kilobytes and 500 kilobytes
Finds all users logged in via ssh.
display list of all the files in the current directory
Find *.html files in the current directory tree that were last modified more than 7 days ago
Print file name without the last two extensions assuming the file name doesn't contain any other dots.
Find all files and directories whose names end in ".rpm", ignoring removable media, such as cdrom, floppy, etc.
Archive "./dir" to "user@host:/path" via ssh on port 2222 and display progress
Find links to file path/to/foo.txt
Print common lines of files "file1", "file2", "file3", and "file4"
Delete files with inode number specified by [inode-number] under current directory
Remove all files under /home/user/Maildir/.SPAM/cur
List environment variables and their values whose name matches '^\w*X\w*'
List all aliencoders.[0-9]+ files/directories under /home/jassi/ directory
Make a new directory "new-dir" in every directory in the current working directory non-recursively
Search for files with "sitesearch" in their names and "demo" in their path names
Find recursively all Emacs backup files in the current directory and remove them
Prints process tree of the current command process.
Remove files that are less than 1MB in size under current directory
Display machine architecture, ie. x86_64
delete all the files ending with "~" in current folder
Search the current directory tree for *.conf and *.txt files
Print all file/directory names with white space safety under the /proc directory
Split "input.txt" into files with 1 line each and use a prefix "output." and a suffix length of 5
Search for files/directories which are writable by somebody (their owner, or their group, or anybody else)
Search the current directory tree for regular files lacking read permissions for user, group, or others
find all files in the current folder which have been modified in the last 24 hours
Send SIGWINCH process to current shell, causing it to update the LINES and COLUMNS variables which describe the size of the screen/window in characters.
Set the variable "me" to the name of the running script, or shell, login shells have a hyphen appended to the beginning of the name, such as "-bash".
Print which files differ in "dir1" and "dir2" recursively
Change permission to 000 of all directories named '.texturedata' under '/path/to/look/in/' directory tree
display all the files in the entire file system which begin with "apache-tomcat"
Display differences between /destination/dir/1 and /destination/dir/2 excluding XML files.
Print only common strings in sorted content of files 'file1' and 'file2'
Merge file1 and file2 by outputting all lines where the first comma-separated field of both files matches, followed by extra fields in file1 and those in file2
Print the kernel configuration options found in "/proc/config.gz"
search all undo files(ending with .undo) in the current folder and calculate the total size of them
Print lines in the sorted contents of "file2" that are not in the sorted contents of "file1"
Find files/directories under current directory without descending into it
Find all *.foo files under current directory and print their contents
Print the input "hello world" followed by a swap of the first two awk fields
Print string "123" once with '1' replaced by 'a' and second time replaced by 'b'
Create a symbolic link in the current directory to "$file"
Prompt the user with a question "This is the question I want to ask?" and save "y" or "n" in variable "REPLY" in zsh
find all the core files in the temp folder and force delete them
Pushes current folder to the directory stack.
Find text files modified less than 5 days ago
Archive the entire file system into tarfile.tar.bz2
Print the number of regular files found in the current directory tree
Join comma-separated information in 4 files
Finds out what groups a given user has.
display all the directories in the current folder excluding those that are present in the aa directory tree
Search the /myfiles directory tree for files last accessed more than 30 days ago
Save a line of 100 random characters either "." or " " in variable "foo"
Print the current working directory with resolved symbolic links
find files in home directory that names are game
Find all PHP files under current directory that contain only one line
Find all the files whose name is tecmint.txt and contains both capital and small letters in /home directory
Split "/etc/gconf/schemas/gnome-terminal.schemas" into 1000000 files of about equal size
Execute "ps -C java -o pcpu,state,cputime,etimes" every second
change the permissions of all the directories  to 775 in the current folder
Find all files named 'file' in 1 level down the current directory whose status were changed more than 1 day ago
Removes all files from current folder but 5 newest ones.
Find all fglrx-libGL* files under and below debian/fglrx/
Search the current directory tree for regular files whose names begin with "orapw"
Find files that have been modified within the last month and copy them somewhere
Search for files/directories with the case insensitive pattern anaconda.* in /var/log directory and create an archive (file.tar) of the last file found
Prints path to folder that contains target of the symbolic link ../../../../etc/passwd.
Find *.c and *.sh files
Recursively copies everything from '/source/path/*' to the '/destination/path/', preserving from overwriting existing files, and printing info message on each operation.
Find all php files whose name is tecmint.php in the current directory
Print 2 lines of "123456789"
Find all .txt files of user Tecmint under /home directory
Gets string with MAC address of eth0 network interface.
Search core files in current direcory and delete .
find all the normal/regular files in /etc/sysconfig which have been accesses in the last 30 minutes
List regular files in current directory with read, write and execute permission for all users and also show the permissions
Find files on the system that are bigger than 20 megabytes
Print the current working directory prepended by "pwd: "
display all files in the current folder with the name test excluding those that are present in the sub folders of the test folder
Search the home directory tree for files owned by sam
Check md5sum of directory /path against the checksum saved in file 'file'
find all the javascript files in current folder using regular expressions
Gets MAC address of 'eth0' network interface.
Find all files under $source_dir that match the regex expanded by $input_file_type in their paths
Search the entire system for SUID or SGID files
Search the home directory tree for files last modified less than 2 days ago or newer than file "filename"
search for a word in all the files in the current directory and display the list of matched files.
Remount "/system" with read and write permission
Recursively removes all files and folders like 'FILE-TO-FIND' from current folder.
Find all *company* files/directories under /root/of/where/files/are directory
Find all files under var/ directory and change their permission to 600
Find all the files which are modified 50 days back
Use the output of "ping google.com" as input to awk script "packet_loss.awk"
Find all files under /path/to/base/dir and change their permission to 644
Search for 'class Pool' in all *.java (case insensitive) files under current directory
Find every JavaScript file in the wordpress directory tree
Print the first line of output after alphabetically sorting the file "set"
Search the files residing in the current directory tree whose names contain "bills" for "put"
Find all files on the system whose names are 'composer.json' and search them for "drush"
display all the ".c" files in the current folder excluding those that are present in all the sub directories
Serach  in root directory all files which  have more than 2 links.
Remove all files/directories in the current directory without '.git' and '.gitignore'
Search directory trees /usr/share/doc, /usr/doc, and /usr/locale/doc for files named 'instr.txt'
Change permissions to 644 for all regular files in and below the current directory
Find all 1US* files/directories under current directory
Archive the list of 1st level subdirectories in /fss/fin to /fss/fi/outfile.tar.gz
Return the depth of the current directory tree
find all of the files that are readable
Make a new directory "new-dir" in every directory in the current directory tree
file1 and file2 contain lines of comma-separated information, for each line whose first field matches, and where 3rd field of file1 matches 2nd field of file2, 6th field of file1 matches 3rd field of file2, and 7th field of file1 matches 4th field of file2, output: fields 1, 2, 3, 4, 6, and 7 of file1.
create directory aaa
Find all directories in the /path/to/base/dir tree
search for a word in all the php files in the current folder and display the count of all matching lines.
Find all files/directories in entire file system for which owner has read/write/execute permissions, or the group has at least execute permission, or others have at least execute permission
Gets domain name from dig reverse lookup and save in variable 'go'.
get year-month-day from date
Find files named 'fileName.txt' under '/path/to/folder' directory tree ignoring 'ignored_directory'
Find all *.jpg files and copy them to /
Search the first 300 commands in history containing "scp" and ending in "important"
Find all files/directories named 'имя_файла' in the entire filesystem
find all the files in current folder which have been updated in the last 60 minutes
Wrap each line in "file.txt" to fit in 80 characters
Replace all spaces with underscores in directory paths under current directory.
Find *.scm files recursively in the current directory
change the permissions of all the normal files in a directory
Replace all instances of "STRING_TO_REPLACE" with "STRING_TO_REPLACE_IT" in file "index.html" and make a backup with suffix ".bak"
move files accessed more than one day ago to directory TMP
Find files matching the pattern "./sr*sc" in their paths under current directory
Search the current directory tree for files whose names end in "rb" or "js" and which contain string "matchNameHere"
Search *.txt files under and below /directory/containing/files for "pattern_to_search"
Print the list of all regular files from the current directory tree that contain "confirm", case insensitive
Remove all files containing 'sample' (case insensitive) in their names under '/home/user/Series' directory tree
Assigns MAC address 00:80:48:BA:d1:30 to interface eth0.
Find files named 'core' in or below the directory /tmp and delete them
Set the executable bit for all users on all .sh scripts from directory trees lib, etc, debian
Recursively prints .txt files in current directory
Find all regular files under and below /root that match pattern "*linux*", case insensitive
Find all the files recursively in directories or files taken from the glob pattern /tmp/test/* that have been modified today
Print A record for domain 'domain.' from 'ns2.newnameserver' nameserver
Find all *.[ch] files under current directory
Creates temporary folder in TMPDIR (if defined) or in '/tmp/', and stores path to created folder in 'tmpdir' variable.
Find all files named "test2" in the current directory
Find all .txt files in current  directory and rename with  .html .
Move all files and directories in the current directory to "/tmp/blah/"
Keep the last 4 ASCII characters (bytes) of a string.
Search the *.code files from the current directory tree for string 'pattern'
Find all files/directories that are owned by user 'eric' under current directory tree
Recursively change the owner of all files in "upload_directory" to "nobody"
Search the current directory tree for files whose name is ".note", case insensitive
Print DISPLAY of "orschiro" user
Print content of all files found regarding seach options '[whatever]'
Print the full name of "$USER"
find all the files in the file system which are bigger than 3 bytes
Find all files/directories  under  /eserver6 directory and follow symlinks if needed
find all empty files
display all normal/regular files in current folder in sorted order
Count the toal number of lines in all .py files in current directory tree
read all history lines not already read from the history file
Count the number of .gz files in directory tree /home/user1/data1/2012/mainDir
display all regular/normal files in a directory
Search the /mnt/raid/upload directory tree for files that have not been modified within the last 5 days
List files with C-style escape sequences for non-alphanumeric characters
Print all the file/directory paths under current directory
Finds users with X session in system and puts the result into USERS variable
Find all PHP files under current directory that contain only one line
Make directories for each line in "folder_list.txt"
Find all .gz archives in the current directory tree and check if they are valid
Search the CSS files found in the current directory tree for string "foo"
Find all files/directories under '/usr/share/data' directory tree that match the posix extended regex ".*/20140624.*" in their paths and save the list to '/home/user/txt-files/data-as-of-20140624.txt'
File 'save_pid.txt' contains a process ID, instantly kill this process with SIGKILL signal.
Finds files in 'directory' folder with the same name and location but different content than files in 'directory.original' folder and prints location of such files.
Find files ending in "*macs"
Recursively copy directories "A" and "D" to directory "/path/to/target/directory" on host "anotherhost", connecting as ssh user matching current user on local host, via default TCP port for ssh (22).
Prints process tree of a current process with id numbers and parent processes.
Find all the files in file system which are greater than 50MB and less than 100MB
Modify interval to 0.1 seconds for the watch command
Replace all occurrences of 'previousword' with 'newword' in all regular files with '.cpp' extension under '/myprojects' directory tree and modify them in-place
Number each line in "foobar" as right-justified zero padded to a width of 9
Connect to host "${HOSTNAME}" as user "${USERNAME}" and execute "${SCRIPT}" non-interactively
search for all the text files in the folder /foo and delete them
Show the list of directories in the /mnt/raid directory tree
Read one character from standard input into variable "REPLY"
Find all directories under current directory and set read-write-execute permission for owner and group and no permission for other for those directories
Find and remove all .mp3 regular files under the current directory and below
find file end with  '.txt' in current directory.
Count the number of files in the directory trees whose pathnames match pattern '/dev/sd*[a-z]'
show all the files in the entire file system which are bigger than 1.1GB
Search all the *.pl files in the current directory and subdirectories, and print the names of any that don't have a line starting with 'use strict'
Create intermediate directories "tmp" as required and directories real_dir1 and real_dir2
Recursively finds all files in root folder and prints all strings with 'text-to-find-here' from that files, ignoring binary files.
search for the word hello in all the text files in the temp folder and delete them
Remove trailing white spaces from all files under dir directory and keep backups of the originals
find all files in current folder which are bigger than 1 MB and move them to another folder after user confirmation
Remove all files with a txt extension under current directory
Print a hex dump of "$DIREC" as characters
display all the regular files in the current folder excluding those that are present in the path "git"
display all text files in current folder
recursively change user of the direct public_html and all files into it to user owner
Find all files in current directory and search for 'searchName' in those files
Counts the number of lines in *.php and *.inc files in a current folder and subfolders.
replaces the last occurrence of 'a' with 'c' in file
List the unique second "/" delimited field of every line from standard input prefixed by the number of occurrences
List ".java" files that have the same contents
find all the xml files in the current folder except those that are present in the workspace folder and create a tarball of these files
Search the current directory recursively for files with the exact permissions u=rwx,g=rx,o=rx
Find all files named "file.ext" in the current directory tree and print the path names of the directories they are in
search for the word "slrn" in all the files in the folder $HOME/html/andrews-corner
Wrap each line in "longline" to a maximum of 30 characters breaking at spaces
Show all lines as they are executed and stop at the first command returning nonzero
List all directories in current directory, works even if they have weird names or names starting with a dash.
Change user to "amzadm" and group to "root" of "/usr/bin/aws"
Find files in the current directory tree whose status was changed within the last 60 minutes
sort based on size and display top ten small normal/regular files in the current folder
change the group to "new_group" and permissions to 770 for all the files in the current folder
delete all the empty in the current folder do not search in sub directories
Count the number of directories in the current directory and below
Sets 'extglob' shell variable.
Force create a symbolic link as a file named "/usr/lib/jvm/default-java" to "$default_java_dir" with verbose output
List only the non-hidden empty files only in the current directory.
Find all files/directories named 'java' under /usr directory
View manual page of the find command
Change directory to the current user's home directory
find the count of all the charcters of the list of regular files present in the current folder
Remove all files from the current directory tree whose names do not end with ".tex" or ".bib"
change the permissions of all the directories in the folder "/path/to/someDirectory" to 755
In the current shell, interpret 'incl.sh' which is in the directory pointed by variable DIR
Clear the in-memory history and read from the current history file
Display inputfile all on one line (replace newlines by spaces)
Find all directories under minimum 2 levels down the mydir directory
List an empty environment (prints nothing)
Find all directories under minimum 1 level down the current directory excluding  directories (along with their contents) that start with a . (dot) in their names
Recursively copy directory "/path/to/data/myappdata" to "user@host:/remote/path/to/data/myappdata"
Search the current directory for all files with no 'read' privilege for 'others'
Connect to port 1234 of specified IP address or hostname as ssh user "user", and copy all visible files in /var/www/mywebsite/dumps/ on this host to local directory /myNewPathOnCurrentLocalMachine - this directory must already exist on local host.
List and sort all leaf directories (directories which don't contain any sub-directory) under current directory
Sort strings of 'test.txt' file by second from the end field
Count the number of .gz files in the current directory tree
find the regular js files which path does not contains '*/test/*'  and name does not contains '*-min-*' or '*console*'
Remove each unique item listed on standard input and do nothing if empty
Take a file path from standard input and remove it.
Save the contents of "numbers.txt" to variable "f"
find any files or directories called ".svn" under the current directory and run a recursive delete (without prompting) command on each one.
List files named "accepted_hits.bam" in the current directory tree prefixing their names with "somecommand"
Display inputfile all on one line (replace newlines by spaces)
Gets IP address of 'en1' network interface.
Display only first and second dot-separated numbers of kernel version, ie. 4.4
Find all files in the current directory аргумент and its sub-directories with the optional constraints of опция_поиска, значение and/or значение.
Prints out all the logged-in users along with their group information.
find all posix-extended regex  "[a-f0-9\-]\{36\}\.jpg" files
Remove everything in the current directory except files matching regular expression "exclude these"
find .gif files in /var/www and below that were last changed between 90 and 180 days ago
Recursively copies "$1" to "$2".
change the ownership of all directories in the current folder
Change the owner of all files in the directory tree "dir_to_start" excluding directory "dir_to_exclude" to "owner"
Print out the contents of all *.txt files in the home directory
Delete all files/directories taken by the glob pattern * except the ones with the name 'b'
Print all user names and terminals of users who are logged in
Find files with SGID (2000) and SUID(4000) permssions set in the file system
delete all the php files in the folder /var/www
Replace "_" with newlines in "Testing\r\nTested_Hello_World" and display the named characters
Mount all filesystems in /etc/fstab
Make directories "3/foo", "3/bar", and "3/baz"
Recursively changes group ownership of everything within current folder to 'git'.
Find all hidden regular files starting from the current directory
Find '.java' files with checksum 0bee89b07a248e27c83fc3d5951213c1 in the current directory
recursively change owner of the directory and all files into it to user  nobody
Change group ownership to `foo' for files with GID=2000
display all files ending with "ini" in current folder
Save full path of command "mktemp" to variable "MKTEMP"
Search the current directory tree for files containing "album" and "vacations" in their names and not containing "2015"
Change to the directory containing the "oracle" executable
Find all files/directories that do not contain 'photo' in their names under current directory tree
Delete current cron job list, and use those in yourFile.text
Save the md5 sum hash of "${my_iso_file}" to variable "md5"
kill all background processes
Reports count of characters in the value of ${FOO_NO_EXTERNAL_SPACE} variable as follows:  "length(FOO_NO_EXTERNAL_SPACE)==<counted number of characters>"
Find all .txt files under the current directory and below
Gets IP address of 'en0' selected network interface.
Find all files under current directory whose file type description contains "image", display only path to each file.
Change the permissions of the current directory and all its subdirectories to 755.
Correct permissions for directories in the web directory
display all the files in current folder which have write permission to all the users
Find all files/directories under directory '.cache/chromium/Default/Cache/' which are bigger than 100MB and which are atleast 1 level deep and delete them
Find files patching "pattern"
find all files in the entire file system whose size is more than 100MB
Search directories called ' backup ' from /usr directory downwards and print them.
List all files from the current directory tree that were modified less than 60 minutes ago
List all nfs mounts
Find all files/directories under '/etc' directory tree that are greater than 5MB and print their sizes and names
find all the files in the current directory that have the word "lib" in them
Count number of occurences of "123" in the string "123 123 123" (ie. 3)
Find all loadable modules for current kernel, whose name includes "perf"
Gives the primary group of $USERNAME.
List first 20 files under current directory
Send one ping request to host with local address in the 192.168.1.x range, with last number specified by variable "COUNTER", and output only lines containing "ms" to standard output.
Print the current directory
Print the list of files and directories of the current directory
Print only first line of 'file' content, formatted as 29-symbol wide column
Search the current directory tree for .rb files ignoring the "./vendor" subdirectory
create an archive using 7zhelper.sh as a compress program
Find all files named 'test' in the current directory tree, not descending into "test" directories
find all the directories starting with the name "someNamePrefix" which have not been modified in the last 10 days and force delete them
split file input.txt into pieces per 1 line named output.NNNNN
Find the top 25 files according to their size in the current directory and its subdirectories
Find all files/directories with '.err' extension under '/home/username' directory tree
Print the path names of all files and directories in the current directory tree
Find all directories under ~/code excluding hidden directories and replace all newlines with : in the output then remove the last :
List all files/directories under current directory with their inode numbers, disk space, permission, number of hard links, user name, group name, size, status change time in Y-m-d format and name filed,  then write the outptut to /tmp/files.txt
change the word "GHBAG" to "stream-agg" in all the file names in current folder which have the word "-GHBAG-" in their name
Add cron lists from "filename" to list of cron jobs, giving errors for any lines that cannot be parsed by crontab.
search for all the files in the current directory which have been modified in the last 24 hours.
search for a word in all the shell scripts in the current folder and display the matched files.
Convert Unix `cal` output to latex table code.
Save the first two letters of the system host name to variable "DC"
Print numerically sorted list of unique strings from 'ip_addresses' file, with number of occurrences of each string.
Push the directory containing the first existing command found in all arguments to the directory stack.
find all the files in the folder /opt which have been modified between 20 to 50 days ago
Print '-okdir is an action so an implicit -print is not applied' for each file/directory found by the name 'file' under current directory tree
Find all regular files under current directory
display all the regular/normal files in the home folder that have been modified in the last 1 day (from the start of day ie, from 00:00 )
Recursively set all permissions under "/folder" to 755
List the last modified file under "$DIR"
Search for the regex "+\S\+" in file 'in.txt' and print the matches by replacing newlines with comma (',')
find files in home directory which are modified yesterday
Find all *foo* files/directories under current directory and copy them to /your/dest
show all files in /usr/tom and display only files ending with ".pl" or ".pm"
List all files in the current directory tree that were last modified more than 60 minutes ago
Find files that were modified more than 7 days ago but less than 14 days ago and archive them
Force create a hard link named "non_secret_file.txt" to "secret_file.txt"
only get md5sum of a file
Remove all files in and below the current directory whose names begin with "not"
Display differences between /tmp/test1 and /tmp/test2.
List all files under current directory matching the regex '.*\(c\|h\|cpp\)'
Copy an entire file structure, creating empty files in the copy instead of copying the actual files.
Convert standard input into a dump of octal bytes without the first 8 bytes of address and count the unique results
Print file information of command "studio"
display all the files only in the path "./sr*sc"
Read a line from standard input into the first argument ("$1") using an interactive shell with prompt "> "
Get domain names from file '1.txt' and request TXT DNS record for each one
