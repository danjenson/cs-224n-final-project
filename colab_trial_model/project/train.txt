<|endoftext|> english: Print last day of April, 2009
bash: cal DateTime DateTime | tr Regex Regex | grep -v Regex | tail -n Quantity <|endoftext|>
<|endoftext|> english: Print file system disk space usage
bash: df <|endoftext|>
<|endoftext|> english: change the ownership of all the files in the file system from edwarda to earnestc
bash: find Path -user Regex -print | xargs -I {} chown Regex {} <|endoftext|>
<|endoftext|> english: Search the current directory for PHP files
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: Changes group ownership of '/home/www-user/php_user.sh'  to 'www-data'.
bash: chgrp Regex File <|endoftext|>
<|endoftext|> english: Find all *.rb files/directories under current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Search the system for the file “testfile.txt” ignoring the case
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: forcible create a symbolic link named "/etc/file.conf" to file "/etc/configuration/file.conf"
bash: ln -f -s File Regex <|endoftext|>
<|endoftext|> english: Find all *.java files under current directory containing the string 'String'
bash: find Path -name Regex -exec grep Regex {} + <|endoftext|>
<|endoftext|> english: display all regular/normal files in the current folder with the name dummy
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: Copy directory hierarchy "dir" and all its .txt files to "dir_txt"
bash: find Path -name Regex | xargs -I {} cp -a --target-directory Directory --parents {} <|endoftext|>
<|endoftext|> english: Display the file type description of /bin/bash, ie. symbolic link, ELF executable, etc.
bash: file File <|endoftext|>
<|endoftext|> english: Find all files in the current directory tree except .html, ignoring .svn directories
bash: find Path \( -type d -name Regex -or -type f -name Regex \) -prune -or -print0 <|endoftext|>
<|endoftext|> english: Print symlink resolved script file name
bash: echo $( basename $( readlink -n -f File ) ) <|endoftext|>
<|endoftext|> english: Concatenate with a space every other line in "input.txt"
bash: paste -s -d Regex File <|endoftext|>
<|endoftext|> english: Stores system load average number in the 'proc_load_average' variable.
bash: w | head - Quantity | cut -d Regex -f Number | cut -d Regex -f Number | tr Regex Regex <|endoftext|>
<|endoftext|> english: List all IP addresses assigned to current hostname, pausing for user interaction after each page.
bash: more File | grep $( hostname ) | awk Program <|endoftext|>
<|endoftext|> english: Delete files in /var/tmp/stuff and below that have not been modified in over 90 days
bash: find Path -mtime +Timespan -delete <|endoftext|>
<|endoftext|> english: Find all *.php files under current directory and change their permission to 644
bash: find Path -type f -name Regex -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Move all *.mp4 files from directory /foo/bar and its subdirectories to /some/path
bash: find Path -name Regex -exec mv -t Directory {} + <|endoftext|>
<|endoftext|> english: List all files in entire file system that are newer than the file $newerthan and older than the file $olderthan in regards of modification time
bash: find Path -type f -name Regex -newermt Regex ! -newermt Regex -ls <|endoftext|>
<|endoftext|> english: Show the number of lines for each .php and .phtml file in the current directory tree
bash: find Path -type f \( -name Regex -or -name Regex \) -exec wc -l {} + <|endoftext|>
<|endoftext|> english: Connect to host "server_b" as ssh user "user" and copy local file "/my_folder/my_file.xml" to server_b's directory "/my_new_folder/".
bash: scp -v File File <|endoftext|>
<|endoftext|> english: Find all links to path/to/file
bash: find Path -L -samefile Regex <|endoftext|>
<|endoftext|> english: Count the number of lines in all ".txt" files
bash: cat File | wc -l <|endoftext|>
<|endoftext|> english: Write to standard error a trace for each command after it expands the command and before it executes it
bash: set -x <|endoftext|>
<|endoftext|> english: find all the configuration files which have been accessed in the last 30 minutes.
bash: find Path -amin -Quantity <|endoftext|>
<|endoftext|> english: Find all files on the system that have been modified in the last 10 minutes
bash: find Path -mmin -Quantity <|endoftext|>
<|endoftext|> english: Give all files in the /path/to/base/dir tree read privileges
bash: find Path -type f -print0 | xargs -0 -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: find md5sum of an empty string
bash: echo -n Regex | md5 <|endoftext|>
<|endoftext|> english: Find every vim undo file in the current directory tree
bash: find Path -type f -iname Regex <|endoftext|>
<|endoftext|> english: Find regular files readable by the world
bash: find Path -perm -Permission -type f -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: Immediately exit the shell if a command fails
bash: set -e <|endoftext|>
<|endoftext|> english: extract "backup.tar.gz" with verbose output
bash: tar -x -z -v -f File <|endoftext|>
<|endoftext|> english: Get a recursive file list of directory $dir
bash: find Path -type f <|endoftext|>
<|endoftext|> english: Find all .php files in all directory trees matching pattern `/srv/www/*/htdocs/system/application/' and search those files for string "debug ("
bash: find Path -name Regex -exec grep -H Regex {} + <|endoftext|>
<|endoftext|> english: Interpret all lines containing an equal sign in myfile (usually, grab all variables from myfile into current shell)
bash: grep Regex File | source File <|endoftext|>
<|endoftext|> english: Get from file 'File1.txt' strings starting with 'Q', extract only part of them following after '=' sign, and print which ones are not found in 'File2.txt'
bash: grep Regex File | cut -d Regex -f Number | sort | comm -2 -3 File <( sort File ) <|endoftext|>
<|endoftext|> english: Print unique lines in "set1" and "set2" when compared to each other and remove any tabs
bash: comm -3 <( sort File ) <( sort File ) | sed Program <|endoftext|>
<|endoftext|> english: Print info about all mounted file systems, and grand total statistic about available and used space
bash: df --total <|endoftext|>
<|endoftext|> english: Print the content of the file 'file' deleting the last four lines
bash: nl -b a File | sort -k Number | sed Program | sort -k Number | sed Program <|endoftext|>
<|endoftext|> english: List files in the current directory
bash: find Path \( ! -name Regex -prune \) <|endoftext|>
<|endoftext|> english: find md5sum of string 'hi'
bash: echo -n Regex | md5 <|endoftext|>
<|endoftext|> english: switch to user username
bash: su Regex <|endoftext|>
<|endoftext|> english: Search the system for the file “testfile.txt”
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Report total file systems disk usage estimated in terabytes
bash: df --total -B Size | tail -n Quantity <|endoftext|>
<|endoftext|> english: Gets IP address of 'eth0' network interface.
bash: ifconfig Regex | grep Regex | cut -d Regex -f Number | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: Removes empty folder 'symlink'.
bash: rm -d File <|endoftext|>
<|endoftext|> english: List all regular files under current directory (not white space sage)
bash: find Path -type f -print | xargs -n Quantity <|endoftext|>
<|endoftext|> english: find all  files that match "[a-f0-9\-]{36}\.jpg" of grep
bash: find Path Path | grep -P Regex <|endoftext|>
<|endoftext|> english: archive all files in a current directory modified in the last 30 days
bash: tar -c -z -v -f File $( find Path -mtime -Timespan ) <|endoftext|>
<|endoftext|> english: Set the system date to Sat May 11 06:00:00 IDT 2013
bash: date --set Regex <|endoftext|>
<|endoftext|> english: search for all "tif" images in the entire file system
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: display a long listing of all the files in the current folder which have been modified in the last 24 hours
bash: find Path -mtime -Timespan | xargs -I {} ls -l -d {} <|endoftext|>
<|endoftext|> english: Search the current directory recursively for files last modified within the past 24 hours ignoring .swp files and paths ./es* and ./en*
bash: find Path $( pwd -P ) -mtime Timespan -not \( -name Regex -or -regex Regex -or -regex Regex \) <|endoftext|>
<|endoftext|> english: delete all the directories empty directories in the current folder
bash: find Path -type d -empty -delete <|endoftext|>
<|endoftext|> english: Remount "yaffs2" filesystem "/dev/block/mtdblk4" to "/system" as read and write only
bash: mount -o rw,remount -t yaffs2 Regex Regex <|endoftext|>
<|endoftext|> english: Print the last line of the alphabetically sorted lines in file "set"
bash: tail - Quantity <( sort File ) <|endoftext|>
<|endoftext|> english: Search for 'example' in all regular files from the current directory tree
bash: find Path -type f -print0 | xargs -r -0 -I {} grep -F Regex {} <|endoftext|>
<|endoftext|> english: Find all "YourProgramName" regular files in the current directory tree and print the full paths to the directories containing them
bash: find Path -type f -name Regex -execdir pwd \; <|endoftext|>
<|endoftext|> english: List all files/directories under current directory matching the posix-egrep type regex ".+\.(c|cpp|h)$" in their names
bash: find Path -regextype posix-egrep -regex Regex -print0 | xargs -0 -n Quantity -I {} ls {} <|endoftext|>
<|endoftext|> english: Executes 'true'. then makes 'xargs' fail executing 'false' and return 123 exit code.
bash: true | xargs -I {} false {} <|endoftext|>
<|endoftext|> english: List all files in entire file system that are not newer than the ttt file and do not belong to the user wnj
bash: find Path ! \( -newer File -user Regex \) -print <|endoftext|>
<|endoftext|> english: Search the current directory tree for *.wav files that have "export" in their pathnames
bash: find Path -type f -name Regex | grep Regex <|endoftext|>
<|endoftext|> english: Print last 10 commands in history
bash: history Quantity <|endoftext|>
<|endoftext|> english: List all defined bash functions
bash: set | grep -E Regex | sed -r -e Program <|endoftext|>
<|endoftext|> english: Find all files under the current directory whose filenames are not "file.txt", ignoring the case
bash: find Path -maxdepth Quantity -not -iname Regex <|endoftext|>
<|endoftext|> english: Archive files in "/mnt/source-tmp" to "/media/destination"
bash: rsync -a File File <|endoftext|>
<|endoftext|> english: Merge colon-separated information from standard input and file1.txt where the first field of both files matches, print unpairable lines from both files, replace missing fields with "no-match", and output the second field from standard input and the second and third field from file1.txt
bash: join -t Regex -o 1.2,2.2,2.3 -a Quantity -a Quantity -e Regex File <( sort File ) <|endoftext|>
<|endoftext|> english: Search the current directory recursively for regular files last changed more than 2 days ago
bash: find Path Path -f -ctime +Timespan <|endoftext|>
<|endoftext|> english: Delete all files with 128128 inode number under current directory tree
bash: find Path -inum Quantity | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: Find all regular files named 'Waldo' under 'Books' directory tree that is located in user's home directory
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: remove all core files in the file system
bash: find Path -name Regex -print -exec rm {} \; <|endoftext|>
<|endoftext|> english: Print timestamp as HH:MM:SS
bash: date +"%T" <|endoftext|>
<|endoftext|> english: create a tar.gz compress file with all the jpg files in the entire file system
bash: find Path -name Regex -type f -print | xargs -I {} tar -c -v -z -f File {} <|endoftext|>
<|endoftext|> english: display all the files ending with ".user" in /var/adm/logs/morelogs/ and excluding all regular files
bash: find Path -type f -prune -name Regex -print <|endoftext|>
<|endoftext|> english: Print all files on the system owned by group `name_of_group'
bash: find Path -group Regex <|endoftext|>
<|endoftext|> english: find all the files in the current folder that have been modified exactly 24*3 hours ago
bash: find Path -mtime Timespan <|endoftext|>
<|endoftext|> english: Find all files/directories named 'top' (case insensitive) in the entire filesystem
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: Mount image "test" to loop device "/dev/loop0"
bash: mount -o loop Regex Regex <|endoftext|>
<|endoftext|> english: Change permissions of all files ending in ".php" under the current directory to 755 and print a '+' for each file
bash: find Path -name Regex -exec chmod Permission {} \; -exec echo + Path <|endoftext|>
<|endoftext|> english: search for "message.txt" in the folder .cache/bower and display its contents
bash: find Path -name Regex | xargs -I {} cat {} <|endoftext|>
<|endoftext|> english: find all the files that are modified in the last 1 day
bash: find Path -mtime -Timespan <|endoftext|>
<|endoftext|> english: Delete empty regular files
bash: find Path -type f -empty -delete <|endoftext|>
<|endoftext|> english: Move all files excluding hidden files in "/path/subfolder/" to "/path/"
bash: mv File File <|endoftext|>
<|endoftext|> english: Gets IP address of 'en1' network interface.
bash: ifconfig Regex | sed -n Program <|endoftext|>
<|endoftext|> english: Remove all empty directories under the current directory and below
bash: find Path -type d -size Size -print | xargs -I {} rmdir {} <|endoftext|>
<|endoftext|> english: List all non-hidden files in ~/junk
bash: find Path -name Regex -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: Find all 400 permission files under /data directory
bash: find Path -type f -perm Permission -print <|endoftext|>
<|endoftext|> english: Change permissions to 700 for directories at the current level and deeper
bash: find Path -mindepth Quantity -type d | xargs -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: Find and delete all .zip files in the current directory tree
bash: find Path -depth -name Regex -exec rm {} \; <|endoftext|>
<|endoftext|> english: Create a rsa key with comment specified by variable APP and passphrase specified y SSHKEYPASS.
bash: ssh-keygen -t rsa -C Regex -N Regex -f File <|endoftext|>
<|endoftext|> english: Run the find command with all shell positional arguments
bash: $( which Regex ) <|endoftext|>
<|endoftext|> english: Print lines 347340107 through 347340206 in "filename"
bash: tail -n +Quantity File | head -n Quantity <|endoftext|>
<|endoftext|> english: Print the contents of "order.txt"
bash: cat File <|endoftext|>
<|endoftext|> english: display all the regular/normal files in the folder /path/ which have not been modified today ( from day start ie, 00:00 )
bash: find Path -type f -daystart -mtime +Timespan <|endoftext|>
<|endoftext|> english: Print file names of all files ending with '*.csv' in  '/home/ABC/files/' directory
bash: ls File | rev | cut -d Regex -f Number | rev <|endoftext|>
<|endoftext|> english: Copy "/new/x/y/z/" over the network to "user@remote:/pre_existing/dir/" preserving the directory hierarchy
bash: rsync -a --relative File File <|endoftext|>
<|endoftext|> english: tar all the regular java files to myfile.tar
bash: find Path -type f -name Regex | xargs -I {} tar -c -v -f File {} <|endoftext|>
<|endoftext|> english: Find files in the current directory tree whose size is less than 24000 bytes
bash: find Path -size -Size <|endoftext|>
<|endoftext|> english: Removes all files like '*.bak' in a current folder, and prints messages about what is being done.
bash: rm -v File <|endoftext|>
<|endoftext|> english: find all the files in the entire file system that have been changed exactly  60 days  and display ten files
bash: find Path -cmin -Quantity | head <|endoftext|>
<|endoftext|> english: display all the .sh scripts in the folder /usr
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: File 'mydatafile' has a number on each line, display the sum of these numbers.
bash: awk Program Program <|endoftext|>
<|endoftext|> english: Find all *foo files/directories under current directory (error prone)
bash: find Path Path Path <|endoftext|>
<|endoftext|> english: Print disk of mount point "/pa/th"
bash: mount | awk Program <|endoftext|>
<|endoftext|> english: Count the *.html files residing in the /usr/src directory tree and containing string "foo"
bash: find Path -name Regex -exec grep -l Regex {} \; | wc -l <|endoftext|>
<|endoftext|> english: Change onwer to "root" and group to "wheel" of "com.xxxx.adbind.plist"
bash: chown Regex File <|endoftext|>
<|endoftext|> english: Search the files from the current directory tree for "foo"
bash: find Path -exec grep -l Regex {} \; <|endoftext|>
<|endoftext|> english: Find files under /usr that are the same age or older than file `FirstFile'
bash: find Path ! -newer File -print <|endoftext|>
<|endoftext|> english: Search file /etc/logs/Server.log for lines containing "Error"
bash: find Path -exec grep Regex {} \; -print <|endoftext|>
<|endoftext|> english: List all files under and below the directory given as variable $ARCH1
bash: find Path -ls <|endoftext|>
<|endoftext|> english: Rename "Tux.png" to ".Tux.png"
bash: mv File File <|endoftext|>
<|endoftext|> english: Find all regular files under $dir
bash: find Path -type f <|endoftext|>
<|endoftext|> english: Print absolute path of "YOUR_PATH"
bash: readlink -f File <|endoftext|>
<|endoftext|> english: find all files in the current directory which are bigger than 2MB
bash: find Path -size +Size <|endoftext|>
<|endoftext|> english: Find files/directories modified within the last day under /etc
bash: find Path -type f -ctime -Timespan <|endoftext|>
<|endoftext|> english: search for a word in all the php files in the current folder and display the count of all matching lines.
bash: find Path -name Regex -type f -print0 | xargs -0 -n Quantity -I {} grep -H -n Regex {} | wc -l <|endoftext|>
<|endoftext|> english: Search for occurrences of string "main(" in the .c files from the current directory tree
bash: find Path -type f -name Regex -print -exec grep -s Regex {} \; <|endoftext|>
<|endoftext|> english: list the files with a name ending with '.mp3' or '.jpg' and beginning with 'foo'
bash: find Path \( -name Regex -or -name Regex \) -name Regex -print <|endoftext|>
<|endoftext|> english: Make all the bugzilla subdirectories permission 775
bash: find Path -type d -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Write output of "ls -lR /" to standard output and to "output.file"
bash: ls -l -R File | tee File <|endoftext|>
<|endoftext|> english: Unzip "file.gz", list the unique first comma separated field prefixed by the number of occurrences, sort from least frequent to most frequent
bash: zcat Regex | cut -f Number -d Regex | sort | uniq -c | sort -n <|endoftext|>
<|endoftext|> english: Search directory tree `MyApp.app' for directories whose name is 'Headers' and delete them
bash: find -d Path -name Regex -type d -exec rm -r -f {} \; <|endoftext|>
<|endoftext|> english: Print the last file extension from standard input
bash: sed Program | rev | cut -d Regex -f Number | rev <|endoftext|>
<|endoftext|> english: display all the text files in the current folder which have been modified in the last half minute ( 30 seconds )
bash: find Path -mmin Quantity <|endoftext|>
<|endoftext|> english: Recursively copies 'src' to 'dest' preserving overwriting the existing files.
bash: cp -n -r File File <|endoftext|>
<|endoftext|> english: Find all or single file called tecmint.txt under the / directory of owner root
bash: find Path -user Regex -name Regex <|endoftext|>
<|endoftext|> english: view the manual page of find
bash: man Regex <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory matching the case insensitive pattern 'pattern'
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: Search the current directory recursively for directories with the execute permission set for everybody
bash: find Path -type d ! -perm -Permission <|endoftext|>
<|endoftext|> english: Merge content of decompressed files "$part0", "$part1", and so on
bash: sort File <( zcat Regex | sort ) <( zcat Regex | sort ) File <|endoftext|>
<|endoftext|> english: find all the files that have been modified since the last time we checked
bash: find Path -newer File -print <|endoftext|>
<|endoftext|> english: Delete all matches to the regex '^.*iframe bla bla bla.*$' in all the php files under current directory tree and modify the files in-place
bash: find Path -type f -name Regex -exec sed -i Program {} \; <|endoftext|>
<|endoftext|> english: Make directory "/tmp/imaginary/" on remote host before archiving "file" to "user@remote:/tmp/imaginary/"
bash: rsync -a -q --rsync-path Program File File <|endoftext|>
<|endoftext|> english: display a long listing of the files in current folder which have been modified in the last 60 minutes
bash: find Path -mmin -Quantity | xargs -I {} ls -l {} <|endoftext|>
<|endoftext|> english: List the directory paths of all file.ext files under present working directory
bash: find Path $( pwd ) -name Regex | xargs -l Quantity -I {} dirname {} <|endoftext|>
<|endoftext|> english: Output lines 16224 to 16482 of 'file', not recommended with large files that contain many lines after the ones needed.
bash: awk Program Program <|endoftext|>
<|endoftext|> english: Check if "\[$VLABEL\]" is mounted and save the result in variable "AMV"
bash: mount -l | grep Regex <|endoftext|>
<|endoftext|> english: Print numbered list of all top-level files in the current directory, with name containing 'android'
bash: ls | grep Regex | cat -n <|endoftext|>
<|endoftext|> english: Archive "_vimrc" to "~/.vimrc" suppressing non-error messages and compressing data during transmission
bash: rsync -a -q -z File File <|endoftext|>
<|endoftext|> english: Find directories that are directly under $workspace_ts directory (no-subdirectories) and were modified less than 30 days ago
bash: find Path -mindepth Quantity -maxdepth Quantity -type d -mtime -Timespan <|endoftext|>
<|endoftext|> english: Read a single character from standard input with prompt "Are you sure? "
bash: read -p Regex -n Quantity -r <|endoftext|>
<|endoftext|> english: Print common lines in sorted files "ignore.txt" and "input.txt"
bash: comm -1 -2 File File <|endoftext|>
<|endoftext|> english: display all the files having spaces in the current folder
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: display all the files in the home folder which begin with "arrow" and end with "xbm"
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all regular files with '.jpg' (case insensitive) extension, sort them by name, print the output  and also save the list to file 'file_list.txt'
bash: find Path -type f | grep -i Regex | sort | tee File <|endoftext|>
<|endoftext|> english: Unzip "file.gz", list the unique lines matching regex pattern '"searchstring":"[^"]*"' prefixed by the number of occurrences, sort from least frequent to most frequent
bash: zcat Regex | grep -o Regex | sort | uniq -c | sort -n <|endoftext|>
<|endoftext|> english: display all files in the current folder which do not match the regular expression
bash: find Path -not -regex Regex <|endoftext|>
<|endoftext|> english: Print the file system disk space usage for "/dev/disk0s2" if exists
bash: df | grep Regex <|endoftext|>
<|endoftext|> english: Gets IP address of 'eth0' network interface.
bash: ifconfig Regex | awk Program <|endoftext|>
<|endoftext|> english: Make directories "bravo_dir" and "alpha_dir"
bash: mkdir Directory Directory <|endoftext|>
<|endoftext|> english: Force delete all files in the current folder
bash: find Path | xargs -i -I {} rm -f {} {} <|endoftext|>
<|endoftext|> english: Creates temporary folder and saves path to it in 'other' variable.
bash: mktemp --directory <|endoftext|>
<|endoftext|> english: List all *fink* files/directories in entire file system
bash: find Path \( -type f -or -type d \) -name Regex -ls <|endoftext|>
<|endoftext|> english: Search the files from directory tree "dirname" for string "foo"
bash: find Path -exec grep Regex {} + <|endoftext|>
<|endoftext|> english: find all the text files in the current folder
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: Find all python files under current directory tree, save the list to 'output.txt' and search for 'something' in those files
bash: find Path -name Regex | tee File | xargs -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: Merge each line in "file" into a single comma separated line
bash: paste -d Regex -s File <|endoftext|>
<|endoftext|> english: Find all files in the current directory tree which do not belong to any user
bash: find Path -nouser <|endoftext|>
<|endoftext|> english: Delete the oldest file with '.tgz' or '.gz' extension under '/home/backups' directory tree
bash: ls -t -r $( find Path -name Regex -or -name Regex ) | head - Quantity | xargs -I {} rm -f {} <|endoftext|>
<|endoftext|> english: Print all filenames under /proc and below
bash: find Path | xargs <|endoftext|>
<|endoftext|> english: Cuts off last two parts from the path $dir, and deletes resulted folder if empty.
bash: rmdir $( dirname $( dirname Regex ) ) <|endoftext|>
<|endoftext|> english: Find all directories with permissions 777 under and below /var/www/html, and change their permissions to 755
bash: find Path -type d -perm Permission -print -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: use regex with find command
bash: find Path -regextype posix-egrep -regex Regex <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory and set their permission to 775
bash: find Path -type f -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Find all PHP files in the current directory recursively and search them for string "$test" with 8 simultaneous processes
bash: find Path -name Regex -type f -print0 | xargs -0 -n Quantity -P Quantity -I {} grep -H -n Regex {} <|endoftext|>
<|endoftext|> english: Format and print the time string @133986838 according to the default time format
bash: date --date Regex <|endoftext|>
<|endoftext|> english: Find all JPG files under the "$SOURCE" directory and below
bash: find Path -type f -iname Regex <|endoftext|>
<|endoftext|> english: Create a compressed archive of "/home" and split the contents into files with at most 4000 MiB each and use prefix "/media/DRIVENAME/BACKUPNAME.tgz"
bash: tar --one-file-system -c -z -v File | split -b Size File Regex <|endoftext|>
<|endoftext|> english: display all the text files in the current folder
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: find all regular files under the /etc/sysconfig directory that were accessed in the last 30 minutes
bash: find Path -amin -Quantity -type f <|endoftext|>
<|endoftext|> english: Lists all manual pages.
bash: apropos Regex Regex <|endoftext|>
<|endoftext|> english: Find all directories under current directory and set read & execute permission for group and other for these files
bash: find Path -type d -print0 | xargs -0 -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: Filter /path/to/logfile for any lines containing the specified date, paging interactively through the output.
bash: grep Regex File | less <|endoftext|>
<|endoftext|> english: Find all files whose names begin with 'Makefile' at the /usr/ports directory tree's level 3 and count the number of lines with NOPORTDOCS or NOPORTEXAMPLES in them.
bash: find Path -name Regex -mindepth Quantity -maxdepth Quantity -exec grep -E Regex {} + | wc -l <|endoftext|>
<|endoftext|> english: Go to directory specified by variable "somedir", but replacing leading ~ character by actual home directory.
bash: cd $( echo Regex | sed Program ) <|endoftext|>
<|endoftext|> english: change cgi files to mode 755 under htdocs or cgi-bin directories
bash: find Path Path -name Regex -type f -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Search the current directory tree for directories
bash: find Path -type d <|endoftext|>
<|endoftext|> english: Archive "path/subfolder" to "path", skipping files that are newer at the destination.
bash: rsync -v -u -a -r --delete-after File File <|endoftext|>
<|endoftext|> english: Find all files named "foo_bar" in the current directory recursively
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Read a line of standard input in an interactive shell
bash: read -e <|endoftext|>
<|endoftext|> english: Find all files under the current directory whose pathnames do not end with "Video", ignoring the case
bash: find Path -maxdepth Quantity -not -iwholename Regex <|endoftext|>
<|endoftext|> english: search for all the php files in the folder "/home/mywebsite" which have been changed in the last 30*24 hours
bash: find Path -type f -name Regex -ctime -Timespan <|endoftext|>
<|endoftext|> english: extract "filename.tar.xz" with verbose output
bash: tar -x -v -f File File <|endoftext|>
<|endoftext|> english: recursively change owner of the directory /usr/lib/node_modules/ to the current user
bash: chown -R $( whoami ) File <|endoftext|>
<|endoftext|> english: Change owner of "folder" to "user_name"
bash: chown Regex File <|endoftext|>
<|endoftext|> english: Reverse the order of lines in "dax-weekly.csv" keeping the first line the same
bash: cat File | awk Program <|endoftext|>
<|endoftext|> english: find all the files that have been modified in the last 1 day
bash: find Path -type f -daystart -mtime -Timespan <|endoftext|>
<|endoftext|> english: Find all regular files under '/home/john' directory tree that start with 'landof' in their names
bash: find Path -name Regex -type f -print <|endoftext|>
<|endoftext|> english: Search for the files that are owned by user rooter or by user www-data
bash: find Path -user Regex -or -user Regex <|endoftext|>
<|endoftext|> english: Execute all arguments to a shell script and write the output to console and "$FILE"
bash: | tee File <|endoftext|>
<|endoftext|> english: Use awk command '{ ... }' on compressed files "input1.vcf.gz" and "input2.vcf.gz"
bash: awk Program <( gzip -d -c Regex ) <( gzip -d -c Regex ) <|endoftext|>
<|endoftext|> english: Rename all .html files to .txt
bash: rename Regex Regex <|endoftext|>
<|endoftext|> english: Find all the files on the system that have been accessed within the last hour
bash: find Path -amin -Quantity <|endoftext|>
<|endoftext|> english: Find all *.txt files under the current directory whose names are not "File.txt"
bash: find Path -maxdepth Quantity -type f -name Regex -not -name Regex <|endoftext|>
<|endoftext|> english: Print the current default full path of the "java" executable
bash: echo $( readlink --canonicalize $( which Regex ) ) <|endoftext|>
<|endoftext|> english: Execute the file utility for each file found under /etc or below that contains "test" in its pathname
bash: find Path -print0 | grep -a -z -Z Regex | xargs -0 -I {} file {} <|endoftext|>
<|endoftext|> english: Search the current directory tree for regular files that were changed $FTIME days ago
bash: find Path -type f -ctime Timespan <|endoftext|>
<|endoftext|> english: find all the files in the home folder which end with ".tex"
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: Compress all ".txt" files in the current directory tree with gzip
bash: find Path -type f -name Regex -exec gzip {} \; <|endoftext|>
<|endoftext|> english: find all the text files in the temp folder and search for the word hello in all these files and display the matched files
bash: find Path -type f -name Regex | sed -e Program | xargs -n Quantity -I {} grep -l Regex {} | sed -e Program <|endoftext|>
<|endoftext|> english: Find all *.plist files/directories under current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find recursively the latest modified file in the current directory
bash: find Path -type f | xargs -I {} ls -l -t -r {} | tail -n Quantity <|endoftext|>
<|endoftext|> english: display all the directories in the current folder
bash: find Path -type d <|endoftext|>
<|endoftext|> english: display all the file in the folder /home/david/ which start with the word "index"
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: SSH with parameters specified in "$@" using key file "~/.ssh/gitkey_rsa"
bash: ssh -i File Regex <|endoftext|>
<|endoftext|> english: Counts lines of 'file' file.
bash: wc -l File <|endoftext|>
<|endoftext|> english: Print only lines from 'file1.txt' that not present in 'file2.txt' and beginning with 'Q'
bash: cat File | grep -F -v -f Regex | grep Regex <|endoftext|>
<|endoftext|> english: find all directories in the current folder
bash: find Path -type d <|endoftext|>
<|endoftext|> english: search for text files in the folder /home/you which have been modified in the last 60*24 hours(case insensitive search) and display their contents
bash: find Path -iname Regex -mtime -Timespan -exec cat {} \; <|endoftext|>
<|endoftext|> english: find the file with the name "file" in the entire file system
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all *.mp4 files under /foo/bar and move them to /some/path
bash: find Path -name Regex -print0 | xargs -I {} -0 mv -t Directory {} <|endoftext|>
<|endoftext|> english: Change to folder where the oracle binary is.
bash: cd $( dirname $( which Regex ) ) <|endoftext|>
<|endoftext|> english: Displays a tree of all process alongside their command line arguments.
bash: pstree -a <|endoftext|>
<|endoftext|> english: Save the system host name to variable "myHostName"
bash: hostname <|endoftext|>
<|endoftext|> english: Print unique lines of sorted file "file1" when compared with the list of first space separated fields of all sorted strings of file "file2"
bash: cut -d Regex -f Number File | comm -1 -3 File File <|endoftext|>
<|endoftext|> english: Execute awk script "script.awk" that exists in "$PATH" with argument "arg1"
bash: awk -f $( which Regex ) Program <|endoftext|>
<|endoftext|> english: find all symbolic links under /usr
bash: find Path -type l <|endoftext|>
<|endoftext|> english: force delete all the regular files with the name "test.txt"
bash: find Path -type f -name Regex -exec rm -f {} \; <|endoftext|>
<|endoftext|> english: List files in the current directory tree which have permissions rwx for user and rw for group and others
bash: find Path -perm Permission -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: recursively change owner of the directory /usr/local to the current user
bash: chown -R $( whoami ) File <|endoftext|>
<|endoftext|> english: find .bmp or .txt files
bash: find Path -name Regex -or -name Regex <|endoftext|>
<|endoftext|> english: Print the paths of all files in the current directory tree that contain "abc" replacing "abc" with "xyz"
bash: find Path | xargs -I {} grep Regex {} | sed Program <|endoftext|>
<|endoftext|> english: Calculate the md5 sum of the contents of the sorted list of files "$FILES"
bash: cat $( echo Regex | sort ) | md5sum <|endoftext|>
<|endoftext|> english: Remove everything in a current folder prompting user on each action.
bash: rm -r -i File <|endoftext|>
<|endoftext|> english: Change permissions to 644 for all directories under and below /path/to/someDirectory/
bash: find Path -type d -print0 | xargs -0 -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: Enables shell option 'nocaseglob'.
bash: shopt -s nocaseglob <|endoftext|>
<|endoftext|> english: Recursively search through directory "test" in home directory, displaying names of all directories without full paths, ie. only the name part following the last slash of each directory.
bash: find Path -type d -exec basename {} \; <|endoftext|>
<|endoftext|> english: Copy all .patch files from the current directory tree to patches/
bash: find Path -name Regex -print0 | xargs -0 -I {} cp {} File <|endoftext|>
<|endoftext|> english: Add "prefix_" to every non-blank line in "a.txt"
bash: nl -s Regex File | cut -c Number <|endoftext|>
<|endoftext|> english: Find directories named `build'
bash: find Path -type d -name Regex <|endoftext|>
<|endoftext|> english: Remove the files or directories 'bin/node', 'bin/node-waf', 'include/node', 'lib/node', 'lib/pkgconfig/nodejs.pc' and 'share/man/man1/node.1'
bash: rm -r File File File File File File <|endoftext|>
<|endoftext|> english: Find *.avi and *.flv files in /path/to/your/directory and below and copy them to /path/to/specific/folder
bash: find Path -regex Regex -exec cp {} File \; <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory and print them with newline as the delimiter
bash: find Path -print | xargs -d Regex <|endoftext|>
<|endoftext|> english: find all the *.conf files under / (root)
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Archive "/path/to/sfolder/" to "name@remote.server:/path/to/remote/dfolder" preserving hard links and compressing the data during transmission
bash: rsync -a -H -v -z File File <|endoftext|>
<|endoftext|> english: List all *.txt files/directories under /etc
bash: find Path -name Regex -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: Split "hugefile.txt" into files with 100000 lines each starting with "part." and using numeric suffixes
bash: split -a Quantity -d -l Quantity File Regex <|endoftext|>
<|endoftext|> english: search for the file, filename.txt in the current folder ( case insensitive search )
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: Search for files that are at least 1.1GB
bash: find Path -size +Size <|endoftext|>
<|endoftext|> english: Search all the regular files from the current directory tree for "search string"
bash: find Path -type f -print -exec grep --color auto --no-messages -n -H Regex {} \; <|endoftext|>
<|endoftext|> english: display list of all the C files ( fuiles with ".c" extension ) in current folder
bash: find Path -name Regex -ls <|endoftext|>
<|endoftext|> english: Mount "vfat" filesystem "/dev/sda7" to "/mnt/my_partition" with read and write permission, umask of files and directories set to "0000", and save in fstab and allow ordinary users to mount
bash: mount -t vfat -o rw,auto,user,fmask=0000,dmask=0000 Regex Regex <|endoftext|>
<|endoftext|> english: Make directory and parents as needed to "$FINALPATH"
bash: mkdir -p Directory <|endoftext|>
<|endoftext|> english: search for the file "myfile" in the current folder and display all errors apart from permission denied error
bash: find Path -name Regex | grep -v Regex <|endoftext|>
<|endoftext|> english: find all the normal/regular files in the current directory and search for the word mail and display the file names
bash: find Path -type f -exec grep -i -l Regex \; <|endoftext|>
<|endoftext|> english: Make 3 directories named "$HOME/Labs/lab4a/folder" followed by a 3 width zero padded number from 1 to 3
bash: mkdir $( seq -f "$HOME/Labs/lab4a/folder%03g" Number ) <|endoftext|>
<|endoftext|> english: List characters from standard input showing backslash escapes for non-displayables
bash: od -c -v -A none -w Size <|endoftext|>
<|endoftext|> english: display all regular/normal files in the current folder that were accessed exactly 7*24 hours back
bash: find Path -type f -atime Timespan <|endoftext|>
<|endoftext|> english: Copies file 'file.dat' to each top-level directory in the current directory.
bash: ls | xargs -n Quantity -I {} cp -i File {} <|endoftext|>
<|endoftext|> english: List files in the current directory and below
bash: find Path -ls <|endoftext|>
<|endoftext|> english: Change the owner of all ".txt" files in directory tree "/mydir" to "root"
bash: find Path -type f -name Regex -execdir chown Regex {} \; <|endoftext|>
<|endoftext|> english: simulate a full login of user root
bash: su Regex <|endoftext|>
<|endoftext|> english: change the group of all regular/normal files in the current directory
bash: find Path -type f -exec chgrp Regex {} \; <|endoftext|>
<|endoftext|> english: Find all files under current directory and search for 'something' in those files
bash: find Path -exec grep Regex {} + <|endoftext|>
<|endoftext|> english: Search the directory $path recursively for regular files with the given $extension
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: Find directories in the /path directory tree whose names are 33 characters in length
bash: find Path -type d -printf "%f\n" | awk Program <|endoftext|>
<|endoftext|> english: Find all files under current directory with their size and paths, reverse sort them numerically, then print the 2nd field (with space as the delimiter) of the first 4 entries
bash: find Path -type f -printf "%s %p\n" | sort -n -r | head -n Quantity | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: List the files in "archive.tar.gz"
bash: gzip -l Regex <|endoftext|>
<|endoftext|> english: find all files in home folder which have been modified after a timestamp
bash: find Path -newer File <|endoftext|>
<|endoftext|> english: List all files that have not been read in thirty days or more
bash: find Path -type f -atime +Timespan -print <|endoftext|>
<|endoftext|> english: Remove all .txt files in and below the current directory
bash: find Path -name Regex -delete <|endoftext|>
<|endoftext|> english: Copy all files in the current directory except those containing 'Music' to '/target_directory'.
bash: cp $( ls | grep -v Regex ) File <|endoftext|>
<|endoftext|> english: Search the current directory tree for files containing "needle" in their names
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: Gets MAC address of eth0 network interface.
bash: ifconfig Regex | awk Program <|endoftext|>
<|endoftext|> english: Move all files and directories in the current directory to "/foo"
bash: mv File File <|endoftext|>
<|endoftext|> english: Lists all files in a current folder, separating names with comma.
bash: ls | xargs -I {} echo Regex | xargs -I {} echo {} <|endoftext|>
<|endoftext|> english: Recursively change the owner of all files in "testproject/" to "ftpuser"
bash: chown Regex File -R <|endoftext|>
<|endoftext|> english: Move files older than 1 day to directory TMP
bash: find Path -atime +Timespan -type f -exec mv {} File \; <|endoftext|>
<|endoftext|> english: Search directory /Users/david/Desktop/ recursively for regular files with extensions .txt, .mpg, .jpg
bash: find Path -type f \( -name Regex -or -name Regex -or -name Regex \) <|endoftext|>
<|endoftext|> english: Remove all files 'a.out' and *.o in the home directory tree that were accessed more than 7 days ago
bash: find Path \( -name Regex -or -name Regex \) -atime +Timespan -exec rm {} \; <|endoftext|>
<|endoftext|> english: Find all *.txt files under /foo and delete them
bash: find Path -name Regex -delete <|endoftext|>
<|endoftext|> english: Delete characters in columns 36 through 40 from the output of "finger"
bash: finger | sed Program <|endoftext|>
<|endoftext|> english: Create a directory named 'alpha_real' in the current directory
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: Find all files/directories with spaces in their names under ~/Library directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: find all the regular/normal files in the /path folder and delete them
bash: find Path -type f -print0 | xargs -0 -I {} rm {} <|endoftext|>
<|endoftext|> english: Recursively list all the files and directories that are only in directory /dir1 with their full paths.
bash: diff -r -q File File | grep -E Regex | sed -n Program | awk Program <|endoftext|>
<|endoftext|> english: Rename file extension '.andnav' to '.tile' for all files/directories under current directory tree
bash: find Path -name Regex | rename Regex <|endoftext|>
<|endoftext|> english: display all the symbolic links in the current folder
bash: find Path -type l <|endoftext|>
<|endoftext|> english: display all regular/normal files in the folder /Users/david/Desktop/
bash: find Path Path <|endoftext|>
<|endoftext|> english: Print 10 lines of a single "x"
bash: yes Regex | head -n Quantity <|endoftext|>
<|endoftext|> english: Find all files under /somefolder matching the pattern expanded by $FILE_PATTERN in thier names
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: delete all the tmp files ( files with the extension tmp ) in the /tmp folder
bash: find Path -name Regex | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: Look for files with wide open permissions
bash: find Path -type f -perm Permission -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: Find all strings matching pattern "^${KEY}${DELIMITER}" in $FILE file and print rest of string after $DELIMITER
bash: cat File | grep Regex | cut -f Number -d Regex <|endoftext|>
<|endoftext|> english: Forcibly create symbolic links in target directory "~/staging" for all files located in directory "~/mirror"
bash: ln --force --target-directory Directory File <|endoftext|>
<|endoftext|> english: Calculate the md5 sum of all files in "/your/dir" including content and filenames and following symbolic links
bash: grep -a -R -e Regex Regex | md5sum | cut -c -Number <|endoftext|>
<|endoftext|> english: Finds recursively all files in '/path/' that contain 'pattern', and prints matched strings with string number and file name.
bash: grep -r -n -w Regex -e Regex <|endoftext|>
<|endoftext|> english: Forcefully delete all files in the current directory
bash: find Path -name Regex | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: Print the boot time in standard date format
bash: who -b | awk Program | date -f File <|endoftext|>
<|endoftext|> english: display all instances of the .profile file in the entire file system
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: Compare "fastcgi_params" and "fastcgi.conf" line by line, output 3 lines of unified context, and print the C function the change is in
bash: diff -u Quantity File File <|endoftext|>
<|endoftext|> english: Sort all files/directories under current directory according to modification time and print only the recent 7 of them
bash: find Path -mindepth Quantity -printf "%T@ %P\n" | sort -n -r | cut -d Regex -f Number | tail -n +Quantity <|endoftext|>
<|endoftext|> english: Find all the files whose name is FindCommandExamples.txt in the current working directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Remove duplicates in variable "variable" and preserve the order
bash: echo Regex | tr Regex Regex | nl | sort -u -k Number | sort -n | cut -f Number <|endoftext|>
<|endoftext|> english: Find symlinks under and below the "test" directory and replace them with the content of the linked files
bash: find Path -type l -exec cp {} File \; -exec mv File {} \; <|endoftext|>
<|endoftext|> english: Reports count of characters in the value of ${FOO} variable as follows:  "length(FOO)==<counted number of characters>"
bash: echo -e $( echo -n -e Regex | wc -m ) <|endoftext|>
<|endoftext|> english: split file /etc/gconf/schemas/gnome-terminal.schemas into pieces per 1000000 lines
bash: split -n Quantity File <|endoftext|>
<|endoftext|> english: Output the file name "file.txt' from the path "some/unknown/amount/of/sub/folder/file.txt"
bash: basename Regex <|endoftext|>
<|endoftext|> english: Find all files under minimum 1 level down the current directory
bash: find Path -mindepth Quantity -type f <|endoftext|>
<|endoftext|> english: Find all files under current directory and set their permission to 775
bash: find Path -type f | xargs -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: Reversibly sorts content of the '${TMP}/${SCRIPT_NAME}.kb' file, comparing human readable numbers in file strings.
bash: cat File | sort -r -h <|endoftext|>
<|endoftext|> english: Print a list of all *.code files from the current directory tree
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: change the extension of all the files in the current folder to html excluding those html files and those which are present in another disk partition
bash: find Path -xtype f ! -iname Regex -exec mv -i -v {} File \; <|endoftext|>
<|endoftext|> english: Recursively search for all files with names ending with "_test.rb", renaming them to end with "_spec.rb", using at most 4 concurrent processes.
bash: find Path -name Regex | xargs -P Quantity -I {} rename Regex {} <|endoftext|>
<|endoftext|> english: Prints "$NEWFILE" to the terminal and file '/etc/timezone' as a root user.
bash: echo Regex | tee File <|endoftext|>
<|endoftext|> english: Make directory "aaa"
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: Archive all directories in /path/to/directory/* (only command line arguments, no sub-directories) to files with .tar.gz extension
bash: find Path -maxdepth Quantity -type d -printf "%P\n" -exec tar -z -c -p -v -f File {} \; <|endoftext|>
<|endoftext|> english: Prints week day of a 31 day in a current month.
bash: cal | awk Program Program Program <|endoftext|>
<|endoftext|> english: find all the files in the home folder which are empty (Size 0 bytes)
bash: find Path -empty <|endoftext|>
<|endoftext|> english: display all the ".sh" files in the current folder
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: list all files
bash: find Path <|endoftext|>
<|endoftext|> english: display all the files in the current folder which have been modified in the last 24 hours
bash: find Path -mtime -Timespan -print <|endoftext|>
<|endoftext|> english: Rename all *.html files under and below the current directory to *.var
bash: find Path -name Regex -print0 | xargs -0 -I {} rename Regex {} <|endoftext|>
<|endoftext|> english: Save the user name in upper case of the current user in variable "v"
bash: whoami | tr Regex Regex <|endoftext|>
<|endoftext|> english: Find all directories under current directory whose paths are 5 characters long
bash: find Path -regextype posix-extended -type d -regex Regex <|endoftext|>
<|endoftext|> english: split the file "file" into pieces per 2 lines
bash: split -n Quantity File <|endoftext|>
<|endoftext|> english: Print every 4th line from 10 lines of "y" with line numbers
bash: yes | cat -n | head - Quantity | awk Program <|endoftext|>
<|endoftext|> english: find all files in the home folder which are modified in the last 2 days.
bash: find Path -type f -mtime -Timespan <|endoftext|>
<|endoftext|> english: Prints process tree with command line arguments of a process having id $PID.
bash: pstree -a Regex <|endoftext|>
<|endoftext|> english: Print a list of JPG files residing in the current directory tree
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Print the first 24 alphanumeric characters from "/dev/urandom", determining C locale for all categories
bash: cat File | fold -w Quantity | head -n Quantity <|endoftext|>
<|endoftext|> english: Search for all the directories in directories taken from the glob pattern '/path/to/folders/*' and add the extension ".mbox" to all and create directories named 'Messages' inside them
bash: find Path -type d -exec mv {} File \; -exec mkdir Directory \; <|endoftext|>
<|endoftext|> english: display all files in the current folder and do not search in the sub directories
bash: find Path -maxdepth Quantity <|endoftext|>
<|endoftext|> english: Display all files in the folder home which are owned by the group test.
bash: find Path -group Regex <|endoftext|>
<|endoftext|> english: Recursively search for all files with names ending with "_test.rb", renaming them to end with "_spec.rb".
bash: find Path -name Regex | xargs -I {} rename Regex {} <|endoftext|>
<|endoftext|> english: Find all regular files on the system whose size is greater than 20000k
bash: find Path -type f -size +Size <|endoftext|>
<|endoftext|> english: Answer "y" to all prompts of "rm -rf foo"
bash: yes | rm -r -i File <|endoftext|>
<|endoftext|> english: Find all the files which are accessed in last 1 hour in entire file system
bash: find Path -amin -Quantity <|endoftext|>
<|endoftext|> english: Print "I am USER and the program named ls is in LS_PATH" where "USER" is the current user's user name and "LS_PATH" is the full path of the command "ls"
bash: echo Regex Regex $( whoami ) Regex Regex Regex Regex Regex Regex Regex $( which Regex ) <|endoftext|>
<|endoftext|> english: Remove all .tmp files in and below /tmp
bash: find Path -name Regex | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: list all javascipts file expect files under proc folder
bash: find Path -type d -name Regex -prune -or -name Regex <|endoftext|>
<|endoftext|> english: create a tar ball of all the jpg and png images in the current folder
bash: find Path \( -iname Regex -or -iname Regex \) -print -exec tar -r -f File {} \; <|endoftext|>
<|endoftext|> english: delete all the files in the current folder which do not belong to any user
bash: find Path -nouser | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: Print the home directory of "$username"
bash: finger Regex | awk Program <|endoftext|>
<|endoftext|> english: Eliminates partially duplicate lines by column, keeping the last occurrence
bash: tac File | sort -k Number -r -u <|endoftext|>
<|endoftext|> english: Search all regular files in the current directory tree for "example"
bash: find Path -type f -print0 | xargs -r -0 -I {} grep -F Regex {} <|endoftext|>
<|endoftext|> english: Search the /usr/ directory tree for files newer than file /tmp/stamp
bash: find Path -newer File <|endoftext|>
<|endoftext|> english: Find all SUID set files
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: Search the system for files whose names begin with letters 'a', 'b', or 'c'
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: List non-hidden regular files in the current directory tree that were last modified more than 500 days ago
bash: find Path -type f -not -name Regex -mtime +Timespan -exec ls {} \; <|endoftext|>
<|endoftext|> english: Find files modified at least 5 days in the future
bash: find Path -newermt Regex <|endoftext|>
<|endoftext|> english: Recursively prints all files in a current folders, and searches "stringYouWannaFind" in file content ignoring case differences, and preceding found string with its number in file.
bash: find Path -type f -print -exec grep -n -i Regex {} \; <|endoftext|>
<|endoftext|> english: Find all Executable files
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: Saves calendar of $month, $year in the 'cal' variable.
bash: echo $( cal DateTime DateTime ) <|endoftext|>
<|endoftext|> english: find all the directories in the file system which begin with "man"
bash: find Path -type d -name Regex -print <|endoftext|>
<|endoftext|> english: find all the files in the entire file system whose size is greater than 20MB
bash: find Path -type f -size +Size <|endoftext|>
<|endoftext|> english: Change owner and group of "script.sh" to "root"
bash: chown Regex File <|endoftext|>
<|endoftext|> english: find regular files under the current directory, whose name ends in .mbox and rename each file, to the same name without .mbox at the end
bash: find Path -type f -wholename Regex | sed Program | sh <|endoftext|>
<|endoftext|> english: Search the current directory tree for hidden files skipping .htaccess
bash: find Path -type f \( -iname Regex ! -iname Regex \) <|endoftext|>
<|endoftext|> english: find all the files in the present directory which have the group staff and check if is a symbolic link and display it.
bash: find Path $( pwd ) -group Regex -exec find {} -type l -print \; <|endoftext|>
<|endoftext|> english: Print the sorted and unique parent directory paths appended with : of all the files that are executable by owner under ~/code directory without descending into hidden directories
bash: find Path -name Regex -prune -or -type f -and -perm Permission -printf ':%h\n' | sort | uniq | tr -d Regex <|endoftext|>
<|endoftext|> english: Get directory listing of URL $1 and save them to variable 'header' by deleting '\r' characters
bash: curl Regex Regex | tr -d Regex <|endoftext|>
<|endoftext|> english: Lists all directories in a current folder.
bash: ls -d File <|endoftext|>
<|endoftext|> english: Split "$1" into files of at most "$2" or default 10000 using a numeric suffix of length 6 and suffix "${tdir}/x"
bash: split -l Quantity -d -a Quantity File Regex <|endoftext|>
<|endoftext|> english: Resolve symbolic link of file "FILE" even if the file does not exist
bash: readlink -m File <|endoftext|>
<|endoftext|> english: Remove all broken symlinks from the /usr/ports/packages directory tree
bash: find -L Path -type l -delete <|endoftext|>
<|endoftext|> english: Prints process tree of user 'user' processes.
bash: pstree -p Regex <|endoftext|>
<|endoftext|> english: Find all .bak files starting from the current directory and delete them
bash: find Path -iname Regex -type f -print | xargs -I {} rm -f {} <|endoftext|>
<|endoftext|> english: display a long list of all the directories which have files ending with ".todo"
bash: find Path -name Regex -printf '%h\n' | uniq | xargs -I {} ls -l {} <|endoftext|>
<|endoftext|> english: Dump "filename" as 2 byte wide hexadecimal and printable characters
bash: od -x -c File <|endoftext|>
<|endoftext|> english: Search the files residing in the current directory tree whose names contain "bills" for "put"
bash: find Path -name Regex -print0 | xargs -0 -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: Print A record for domain 'domain.' from 8.8.8.8 nameserver
bash: dig Regex Regex a <|endoftext|>
<|endoftext|> english: Print all files in the current directory tree as a comma separated list
bash: find Path -type f | paste -d Regex -s <|endoftext|>
<|endoftext|> english: Variable PID contains a process ID, send SIGTERM to this process if it exists.
bash: kill Regex <|endoftext|>
<|endoftext|> english: find all the core files in the entire file system and  delete them
bash: find Path -name Regex -exec rm -f {} \; <|endoftext|>
<|endoftext|> english: Print the list of files in the current directory tree excluding those whose paths contain "exclude3" or "exclude4"
bash: find Path | grep -E -v Regex | sort <|endoftext|>
<|endoftext|> english: Find all *.jpg files under current directory and print only duplicate names
bash: find Path -name Regex -exec basename {} \; | uniq -d <|endoftext|>
<|endoftext|> english: Ping every address from 192.168.0.1 to 192.168.0.254 with a timeout of 1 second and filter out no responses
bash: echo $( seq Number ) | xargs -P Quantity -I {} -d Regex ping -W Quantity -c Quantity Regex | grep -E Regex <|endoftext|>
<|endoftext|> english: Search the current directory recursively for files last modified within the past 24 hours ignoring .swp files and paths ./es* and ./en*
bash: find Path -mtime Timespan | grep -v Regex | grep -v Regex | grep -v Regex <|endoftext|>
<|endoftext|> english: display all the .sh scripts and perl files in the current folder
bash: find Path -type f \( -iname Regex -or -iname Regex \) <|endoftext|>
<|endoftext|> english: Traverse the filesystem just once, listing setuid files and directories into /root/suid.txt and large files into /root/big.txt.
bash: find Path \( -perm -Permission -fprintf File '%#m %u %p\n' \) -and \( -size +Size -fprintf File '%-10s %p\n' \) <|endoftext|>
<|endoftext|> english: Change permissions for all PHP files under the current directory tree to 755 and print the number of files changed
bash: find Path -name Regex -exec chmod Permission {} + -printf '.' | wc -c <|endoftext|>
<|endoftext|> english: Find all directories under '.cache/chromium/Default/Cache' that are bigger than 100 MB in size excluding single letter directory names
bash: find Path -type d -print0 | du -h | grep Regex | cut -f Number | grep -v Regex <|endoftext|>
<|endoftext|> english: List files in the current directory tree using echo
bash: find Path -exec echo {} \; <|endoftext|>
<|endoftext|> english: Remove all files and directories called "test" from the current directory tree
bash: find Path -name Regex -exec rm -R {} \; <|endoftext|>
<|endoftext|> english: Recursively print all files and directories in the current directory tree including hidden files
bash: tree -a Directory <|endoftext|>
<|endoftext|> english: Find all *.plist files/directories under current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: find all the text files in current folder and force delete them
bash: find Path -name Regex | xargs -I {} rm -r -f {} <|endoftext|>
<|endoftext|> english: Print URL "http://www.blabla.bla/forum-detail/?ft=72260&fid=34&&pgr=" followed by a number ranging from 1 to 786
bash: yes Regex | nl -b a | sed Program | grep Regex | awk Program <|endoftext|>
<|endoftext|> english: Find all files/directories named 'query' (case insensitive) under current directory tree
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: Search for empty files
bash: find Path -size Size <|endoftext|>
<|endoftext|> english: Find all files/directories following symlinks under /path/to/dir/* paths and print the timestamp in YmdHMS format along with their paths
bash: find -L Path -printf "%TY%Tm%Td%TH%TM%TS|%p\n" <|endoftext|>
<|endoftext|> english: Change user ownership to `foo' for files with UID=1005
bash: find Path -user Regex -exec chown -h Regex {} \; <|endoftext|>
<|endoftext|> english: Creates temporary folder within a $mnt_dir folder and saves path to it in a 'rsync_src' variable.
bash: mktemp -d -p Directory <|endoftext|>
<|endoftext|> english: Print position number of day '9' in fourth line of calendar output for September, 2009.
bash: cal DateTime DateTime | awk Program <|endoftext|>
<|endoftext|> english: Search history for "part_of_the_command_i_still_remember_here"
bash: history | grep Regex <|endoftext|>
<|endoftext|> english: Search the entire file hierarchy for files ending in '.old' and delete them.
bash: find Path -name Regex -exec rm {} \; <|endoftext|>
<|endoftext|> english: find all directories with the name "lib64" in the usr folder and replace space with ':'
bash: find Path -name Regex -type d | paste -s -d Regex <|endoftext|>
<|endoftext|> english: Print numbers from 1 to 100
bash: seq Number Number <|endoftext|>
<|endoftext|> english: Change the ownership of all files in the current directory tree to myuser:a-common-group-name
bash: find Path -exec chown Regex {} + <|endoftext|>
<|endoftext|> english: display all the file in the folder /home/david/ which start with the word "index" ( case insensitive search)
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: Find all *.rb (regular) files under current directory and count their line numbers
bash: find Path -name Regex -type f -exec wc -l File \; <|endoftext|>
<|endoftext|> english: Find all files under current directory and change their permission to 644
bash: find Path -type f -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Print first 11 characters from $line, print a tab, print the md5 sum of the file specified by the 13th and onward characters from $line and print a null character at end without a trailing new line
bash: echo -e -n Regex Regex $( md5sum File ) Regex <|endoftext|>
<|endoftext|> english: Rename .jpg files to .jpeg in all level 2 subdirectories of the current directory
bash: find Path -maxdepth Quantity -mindepth Quantity -type f -iname Regex -exec rename -n Regex {} + <|endoftext|>
<|endoftext|> english: Move all *.php~ (case insensitive) files under current directory to /mydir
bash: find Path -iname Regex -exec mv {} File + <|endoftext|>
<|endoftext|> english: Find all *.py files/directories under current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Make hidden directory ".hiddendir"
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: Search the /home/weedly directory tree for regular files named myfile
bash: find Path -name Regex -type f -print <|endoftext|>
<|endoftext|> english: Split a file "file.tar.gz" into pieces with size 1024 MB
bash: split -b Size File <|endoftext|>
<|endoftext|> english: Finds recursively all folders named 'a' within current folder and removes only ones without files and another folders within.
bash: find Path -type d -name Regex -exec rmdir {} \; <|endoftext|>
<|endoftext|> english: Search the files in the current directory tree that are named "string to be searched" for "text"
bash: find Path -name Regex -exec grep Regex {} \; <|endoftext|>
<|endoftext|> english: Find files/directories in entire file system that had their meta information changed more than 3 days ago
bash: find Path -ctime +Timespan <|endoftext|>
<|endoftext|> english: Find all regular files in the current directory and its subdirectories.
bash: find Path -type f <|endoftext|>
<|endoftext|> english: display all the files  in the current folder excluding the perl files
bash: find Path -not -name Regex <|endoftext|>
<|endoftext|> english: List in detail all *.txt files in the current directory tree, omitting paths ./Movies/*, ./Downloads/*, and ./Music/*
bash: find Path -type f -name Regex ! -path Regex ! -path Regex ! -path Regex -ls <|endoftext|>
<|endoftext|> english: Split "file.txt" into files of at most 1 MiB in size with a numeric suffix and prefix "file"
bash: split -b Size -d File Regex <|endoftext|>
<|endoftext|> english: Connect to "$USER_AT_HOST" using connection sharing on "$SSHSOCKET" and request the master to exit
bash: ssh -S Path -O Regex Regex <|endoftext|>
<|endoftext|> english: Find all directories in the current one with "linkin park" in their names and copy them to /Users/tommye/Desktop/LP
bash: find Path -maxdepth Quantity -type d -iname Regex -exec cp -r {} File \; <|endoftext|>
<|endoftext|> english: Find files/directories named 'sar' under '/usr', '/bin', '/sbin' and '/opt' directory tree
bash: find Path Path Path Path -name Regex <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory and append a null character at the end of each path
bash: find Path -print0 <|endoftext|>
<|endoftext|> english: Find all php files in current directory and delete lines matching the regex '<\?php \/\*\*\/eval(base64_decode(.*));.*\?>' in those files
bash: find Path -name Regex -exec grep -H -n Regex {} \; -exec sed -i Program {} \; <|endoftext|>
<|endoftext|> english: Prints full path to files in a current folder.
bash: ls -1 | awk -v Program Program <|endoftext|>
<|endoftext|> english: Perform case-insensitive search for file `TeSt123.txt' on the system
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: Find all files and directories containing "disc" in their names
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Remove all .txt files in and below the current directory
bash: find Path -name Regex -print0 | xargs -0 -I {} rm {} <|endoftext|>
<|endoftext|> english: display all the java script files in a folder
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all *.txt file and replace old word to new word with sed command
bash: find Path -type f -name Regex -exec sed Program {} \; <|endoftext|>
<|endoftext|> english: Find all $2 files in $1 path excluding /proc and search for the regex expanded by $3 in those files
bash: find Path -path Regex -prune -or -name Regex -print -exec grep -H -n Regex {} \; <|endoftext|>
<|endoftext|> english: Search the current directory tree for hidden files
bash: find Path <|endoftext|>
<|endoftext|> english: Change directory to the directory containing the current script
bash: cd $( dirname $( which Regex ) ) <|endoftext|>
<|endoftext|> english: Change directory to the real path of the current working directory of process "$PID"
bash: cd $( readlink File ) <|endoftext|>
<|endoftext|> english: remove all the files in current folder which have the extension "DS_Store"
bash: find Path -name Regex -exec rm {} \; <|endoftext|>
<|endoftext|> english: find all 'js' suffix files  exclue the path *exclude/this/dir*' under current dirctory
bash: find Path -name Regex -not -path Regex <|endoftext|>
<|endoftext|> english: Replace all newlines from the contents of "file" except the last with spaces
bash: sed Program File <|endoftext|>
<|endoftext|> english: Creates temporary folder and save path to that in a TMPDIR variable.
bash: mktemp -d <|endoftext|>
<|endoftext|> english: Finds IP address of 'eth0' network interface.
bash: ifconfig Regex | grep Regex | awk Program | awk -F Regex Program <|endoftext|>
<|endoftext|> english: Read line from file descriptor 4 and store received input in 'line' variable
bash: read -u Regex Regex <|endoftext|>
<|endoftext|> english: Display the named characters in "line1\r\nline2"
bash: echo -e Regex | od -a <|endoftext|>
<|endoftext|> english: search for files in current folder using regular expressions
bash: find Path -regex Regex <|endoftext|>
<|endoftext|> english: Print working directory separated by newlines instead of forward slashes
bash: pwd | tr Regex Regex <|endoftext|>
<|endoftext|> english: Move all files/directories under current directory to ~/play
bash: find Path | xargs -I {} mv {} File <|endoftext|>
<|endoftext|> english: find all the files in the current folder which have set guid bit on and list the top 10 files.
bash: find Path -perm Permission | head <|endoftext|>
<|endoftext|> english: Archive "/usr/local/" to "/BackUp/usr/local/" on host "XXX.XXX.XXX.XXX" via ssh and show progress
bash: rsync --progress -a -v -h -e File File File <|endoftext|>
<|endoftext|> english: Find files containing `blah' in their names modified less than 2 days ago, case insensitive
bash: find Path -iname Regex -mtime -Timespan <|endoftext|>
<|endoftext|> english: display a long listing of the files in current folder which have been modified in the last 60 minutes
bash: find Path -mmin -Quantity -type f -exec ls -l {} + <|endoftext|>
<|endoftext|> english: Copies 'src' to 'dest' preserving overwriting the existing files.
bash: cp -n File File <|endoftext|>
<|endoftext|> english: Split standard input into files of at most 3400000 lines each
bash: split -l Quantity <|endoftext|>
<|endoftext|> english: Find all directories named $1 under $HOME directory tree and remove them
bash: find Path -type d -name Regex -exec echo {} \; -exec rm -r -f {} \; <|endoftext|>
<|endoftext|> english: Send SIGTERM signal to last process sent to background by the current shell.
bash: kill Regex <|endoftext|>
<|endoftext|> english: Search for the regex expanded by the variable $SEARCH in all regular files under $DIR directory tree
bash: find Path -type f -exec grep -q Regex {} + <|endoftext|>
<|endoftext|> english: Find symbolic links in lpi104-6 and research/lpi104-6 to files whose pathnames end in "file1"
bash: find Path Path -lname Regex <|endoftext|>
<|endoftext|> english: Move all *.pdf.marker files and their corresponding *.pdf files under ${INPUT} to ${OUTPUT}
bash: find Path -name Regex -exec mv {} File File \; <|endoftext|>
<|endoftext|> english: Count the total number of lines in all HTML files under /usr/src that contain string "foo"
bash: find Path -name Regex -execdir grep -H Regex {} \; | wc -l <|endoftext|>
<|endoftext|> english: Rename all "thumbs" directories to "thumb" in the current directory tree
bash: find Path -type d | awk -F Regex Program | sort -k Number -n -r | awk Program | sed Program | xargs -n Quantity -I {} mv {} <|endoftext|>
<|endoftext|> english: display list of all the files in the current folder which are empty.
bash: find Path -size Size -ls <|endoftext|>
<|endoftext|> english: Sets shell option 'dotglob'.
bash: shopt -s dotglob <|endoftext|>
<|endoftext|> english: List all files under current directory with their paths and sizes
bash: find Path -type f | xargs -I {} ls -l -S {} | head - Quantity | awk Program <|endoftext|>
<|endoftext|> english: display all directories in the current folder
bash: find Path -type d <|endoftext|>
<|endoftext|> english: Rename "www_new" to "www" even if "www" directory exists
bash: mv -T File File <|endoftext|>
<|endoftext|> english: Search for the regex $greppattern in all files with '.c' or '.h' extension under $searchpath with name pattern $filepat and show the matched line numbers, file names and matched lines
bash: find Path -name Regex -exec grep --color -aHn Regex {} \; <|endoftext|>
<|endoftext|> english: Write output of "ls -hal /root/" to standard output and to "/root/test.out"
bash: ls -h -a -l File | tee File <|endoftext|>
<|endoftext|> english: Find all files/directories that are newer than 'backup.tar.gz' by modification time
bash: find Path -newer File <|endoftext|>
<|endoftext|> english: Remove what follows the forth occurrence of the character ":" in any field which contains it
bash: sed -r Program File | column -t <|endoftext|>
<|endoftext|> english: display all the regular/ normal files in a folder
bash: find Path -type f <|endoftext|>
<|endoftext|> english: Prefix all files and directories in the current directory with "Unix_"
bash: ls | xargs -I {} mv {} File <|endoftext|>
<|endoftext|> english: find all files in the home folder that are modified in the last 24 hours
bash: find Path -mtime -Timespan <|endoftext|>
<|endoftext|> english: Count non-blank lines in a file 'foo.c'
bash: cat File | sed Program | wc -l <|endoftext|>
<|endoftext|> english: display all the home folder which end with the extension "sxw" and which have been accessed in the last 3*24 hours and which belong to the user bruno
bash: find Path -type f -name Regex -atime -Timespan -user Regex <|endoftext|>
<|endoftext|> english: start from current directory, skip the directory src/emacs and print it then skip all files and directories under it, and print the names of the other files found
bash: find Path -wholename Regex -prune -print -or -print <|endoftext|>
<|endoftext|> english: change owner and group  of all files and directory into current directory to user and group apache
bash: find Path -maxdepth Quantity -not -name Regex -print0 | xargs --null -I {} chown -R Regex {} <|endoftext|>
<|endoftext|> english: Enables shell option 'lastpipe'.
bash: shopt -s lastpipe <|endoftext|>
<|endoftext|> english: display all the files in the current folder which have been modified in one hour ago
bash: find Path -newermt Regex <|endoftext|>
<|endoftext|> english: Copy a file xyz.c to all directories or over all files matching the letter 'c' at the end of their names under current directory tree
bash: find Path -name Regex -print0 | xargs -0 -n Quantity -I {} cp File {} <|endoftext|>
<|endoftext|> english: Find all files in maximum 2 levels down the current directory
bash: find Path -maxdepth Quantity -type f <|endoftext|>
<|endoftext|> english: display all files in current folder in sorted order of depth
bash: find Path -type f -printf "%d\t%p\n" | sort -n | sed -e Program <|endoftext|>
<|endoftext|> english: search  in root ( / ) directory downwards all files which  have exactly 2 links.
bash: find Path -links Quantity -print <|endoftext|>
<|endoftext|> english: Delete all empty files/directories under test directory
bash: find Path -depth -empty -delete <|endoftext|>
<|endoftext|> english: Search for all files with either "sitesearch" or "demo" in their path names
bash: find Path | grep -i Regex | grep -i Regex <|endoftext|>
<|endoftext|> english: Search the files from directory tree "dirname" for string "foo"
bash: find Path -print0 | xargs -0 -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: Find files/directories that have not been modified in the last one day in directories or files taken from the glob pattern '/tmp/test/*'
bash: find Path -daystart -mtime +Timespan <|endoftext|>
<|endoftext|> english: Prints sizes of all top-level folders in a current folder with human-readable format and descending order.
bash: du -h --max-depth Quantity File | sort -n -r <|endoftext|>
<|endoftext|> english: search normal files called ' banckup '  from /usr directory downward and print them.
bash: find Path -type f -name Regex -print <|endoftext|>
<|endoftext|> english: Save hexadecimal byte 9 in binary file "file.moi" to variable "month"
bash: od -t x1 --skip-bytes Size --read-bytes Size File | head - Quantity | awk Program <|endoftext|>
<|endoftext|> english: Rename file "edited_blah.tmp" to "/etc/blah"
bash: mv File File <|endoftext|>
<|endoftext|> english: Show human-readable file type description of file "/mnt/c/BOOT.INI"
bash: file File <|endoftext|>
<|endoftext|> english: Calculate md5 checksum of $KEY, take the 1st to 10th character, append them with the string '/tmp/command_cache.' and save the rsultant string to variable FILE
bash: echo -n Regex | md5sum | cut -c -Number <|endoftext|>
<|endoftext|> english: force delete all the core files in the home folder
bash: find Path -name Regex -exec rm -f {} \; <|endoftext|>
<|endoftext|> english: Print "*Checking Partition Permission* Hostname=$(hostname) LastChecked=" followed by the current date
bash: echo -n Regex Regex Regex $( hostname ) $( date ) <|endoftext|>
<|endoftext|> english: Count the occurrence of 2 in the string '1 1 2 2 2 5'
bash: echo Regex | tr Regex Regex | grep -c Regex <|endoftext|>
<|endoftext|> english: create a compressed archive "compressFileName.tar.gz" with verbose output
bash: tar -z -c -v -f File File <|endoftext|>
<|endoftext|> english: Find files named "ppp.conf" in the /etc directory tree
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Compresses all files in a current folder (not recursively).
bash: bzip2 File <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory following symlinks if needed
bash: find Path -L <|endoftext|>
<|endoftext|> english: Unzip and untar "4.56_release.tar.gz" to standard output
bash: gunzip -c Regex | tar -x -v -f File <|endoftext|>
<|endoftext|> english: Silently and recursively change the ownership of all files in the current directory to "www-data"
bash: chown -R -f Regex File <|endoftext|>
<|endoftext|> english: display all scala files in the directory "src/main"
bash: find Path -type f -path Regex <|endoftext|>
<|endoftext|> english: Rename all .jpg files to .jpeg under the current directory and below
bash: find | rename Regex <|endoftext|>
<|endoftext|> english: Delete all empty directories in the "test" directory tree
bash: find Path -depth -type d -empty -delete <|endoftext|>
<|endoftext|> english: Disables shell option 'nullglob'.
bash: shopt -u nullglob <|endoftext|>
<|endoftext|> english: Find *.css files in the current directory tree, skipping all directories that match pattern '*/lang/en.css'
bash: find Path -path Regex -prune -or -name Regex -print <|endoftext|>
<|endoftext|> english: List files in the current directory and below except for GIT files
bash: find Path -not -iwholename Regex <|endoftext|>
<|endoftext|> english: Runs `file' on every file in or below the current directory.
bash: find Path -type f -exec file {} \; <|endoftext|>
<|endoftext|> english: find regular which case-insensitive name is foo in current directory
bash: find Path -iname Regex -type f <|endoftext|>
<|endoftext|> english: Silently read a line into variable "passwd" with prompt "Enter your password: "
bash: read -s -p Regex Regex <|endoftext|>
<|endoftext|> english: find all the files in the root folder which have been modified in the last 24 hours and print them
bash: find Path -mtime -Timespan -print <|endoftext|>
<|endoftext|> english: Check whether "/full/path" is a mount point with no output and using the exit code
bash: df File | grep -q Regex <|endoftext|>
<|endoftext|> english: Calculate the md5 sum of the list of files in the current directory
bash: find Path -maxdepth Quantity -type f | md5sum <|endoftext|>
<|endoftext|> english: search for all the .o files in the current directory which have permisssions 664 and print them.
bash: find Path -name Regex -perm Permission -print <|endoftext|>
<|endoftext|> english: Replace all newlines with spaces in the contents of "file"
bash: sed -e Program Program <|endoftext|>
<|endoftext|> english: Find files/directories named 'foo' in the current partition of the root filesystem
bash: find -x Path -name Regex <|endoftext|>
<|endoftext|> english: Search regular files from the /path/to/dir directory tree for lines that contain "_START" and are enclosed in lines "@GROUP" and "@END_GROUP"
bash: find Path -type f -exec sed Program {} \; | grep Regex <|endoftext|>
<|endoftext|> english: Records the number of occurences of 'needle' in the array 'haystack' into the variable 'inarray'
bash: echo Regex | grep -o Regex | wc -w <|endoftext|>
<|endoftext|> english: Prints day of first Tuesday in a month.
bash: cal | awk Program Program <|endoftext|>
<|endoftext|> english: Find all the files under /tmp directory and show a few lines of output from the beginning
bash: find Path | head <|endoftext|>
<|endoftext|> english: Find all php files whose name is tecmint.php in a current working directory
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: find all the png files in current folder which are present in the pattern list file "search.txt" and copy them to another directory
bash: find Path -name Regex | grep -f <( sed Program File ) | xargs -I {} cp {} File <|endoftext|>
<|endoftext|> english: Find the password file between sub-directory level 2 and 4
bash: find Path -mindepth Quantity -maxdepth Quantity -name Regex <|endoftext|>
<|endoftext|> english: Saves in 'result' variable list of groups which user $line belongs to, and not matching pattern "_unknown|sciences|everyone|netaccounts"
bash: groups Regex | sed Program | grep -E -v Regex <|endoftext|>
<|endoftext|> english: Print the list of non-hidden directories in the current directory
bash: find Path -type d -maxdepth Quantity ! -name Regex -printf "%f\n" <|endoftext|>
<|endoftext|> english: Find all symbolic links in the current directory tree
bash: find Path -type l <|endoftext|>
<|endoftext|> english: Abort the shell or script on the first failed command
bash: set -e <|endoftext|>
<|endoftext|> english: replaces the last occurrence of 'a' with 'c'
bash: tac | sed Program | tac <|endoftext|>
<|endoftext|> english: Show who is logged on
bash: who <|endoftext|>
<|endoftext|> english: find all the directories in the folder $LOGDIR which have been modified in the last 5 days and delete them.
bash: find Path -type d -mtime +Timespan -exec rm -f {} \; <|endoftext|>
<|endoftext|> english: Log in using key file "./device_id.pem" as user "deviceuser" on host "middle.example.org" and port 2222
bash: ssh -i File -p Regex Regex <|endoftext|>
<|endoftext|> english: find all the files in the folder .home/calvin which have been modified in th last 45 minutes
bash: find Path -mmin -Quantity <|endoftext|>
<|endoftext|> english: Find all regular files under '/directory_path' directory tree that have been modified within the last day
bash: find Path -type f -mtime -Timespan -print <|endoftext|>
<|endoftext|> english: Finds strings having text "searched-string" in all files recursively in a current folder.
bash: find Path | xargs -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: Find all files in the /home/ directory tree that were last accessed more than 7 days ago
bash: find Path -atime +Timespan <|endoftext|>
<|endoftext|> english: Find files modified in the last 5 minutes starting from the current directory
bash: find Path -mmin -Quantity <|endoftext|>
<|endoftext|> english: display all the directories in the folder /path/to/dest except tmp directory
bash: find Path -type d \( ! -name Regex \) -print <|endoftext|>
<|endoftext|> english: Mount partition with label "WHITE" on "/mnt/WHITE" with read and write permission
bash: mount Regex Regex Directory -o rw <|endoftext|>
<|endoftext|> english: List all IPV4 addresses found in all files under /etc directory
bash: find Path -type f -exec cat {} \; | tr -c Regex Regex | grep Regex <|endoftext|>
<|endoftext|> english: Send SIGTERM (signal 15) signal to all process whose username is "username" and whose command is "your_command".
bash: ps -o uid,pid,cmd | awk Program | xargs -I {} kill - Regex {} <|endoftext|>
<|endoftext|> english: Search for 'foo=' in all *.png files under current directory without descending into *.gif and *.svn directories
bash: find Path -name Regex -prune -or -name Regex -prune -or -name Regex -prune -or -print0 | xargs -0 -I {} grep -I -R Regex {} <|endoftext|>
<|endoftext|> english: Find all the files in the current directory recursively whose permissions are 777
bash: find Path -type f -perm Permission -print <|endoftext|>
<|endoftext|> english: Read the history file and append the contents to the history list
bash: history -r <|endoftext|>
<|endoftext|> english: Recursively list contents of the current directory in a tree-like format
bash: tree <|endoftext|>
<|endoftext|> english: Sort "," delimited lines in "file" by the first field preserving only unique lines
bash: sort -u -t Regex -k Number File <|endoftext|>
<|endoftext|> english: Search the files from the current directory tree for "foo"
bash: find Path -exec grep Regex {} \; <|endoftext|>
<|endoftext|> english: Read a line from standard input into variable "message" with prompt "Please Enter a Message: " followed by a newline
bash: read -p $( echo -e Regex ) Regex <|endoftext|>
<|endoftext|> english: Find all files/directories named modules under current directory and list them twice
bash: find Path -name Regex ! -exec sh -c find Path -name Regex \; <|endoftext|>
<|endoftext|> english: Recursively copy /path/to/foo on host "your.server.example.com" to local directory "/home/user/Desktop", connecting as ssh username "user".
bash: scp -r File File <|endoftext|>
<|endoftext|> english: Locating large files (> 100 MB) in /home/ for 'cleaning'
bash: find Path -type f -size +Size -delete <|endoftext|>
<|endoftext|> english: Search the /myfiles directory tree for files last modified 2 days ago
bash: find Path -mtime Timespan <|endoftext|>
<|endoftext|> english: Search the current directory tree for files whose names do not end in ".exe" and ".dll"
bash: find Path -not -name Regex -not -name Regex -not -type d <|endoftext|>
<|endoftext|> english: Remount "/home/evgeny" with the "suid" flag set
bash: mount Regex -o remount,suid Regex <|endoftext|>
<|endoftext|> english: display a long listing of all the files that begin with the name "Metallica" in the entire file system
bash: find Path -name Regex -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: search for "flac" files in current folder using regular expressions
bash: find Path -regex Regex <|endoftext|>
<|endoftext|> english: Prints a random line from $FILE
bash: sort --random-sort File | head -n Quantity <|endoftext|>
<|endoftext|> english: Find all files owned by user vivek
bash: find Path -user Regex <|endoftext|>
<|endoftext|> english: Search for first match of the regex 're' in all *.coffee files under current directory
bash: find Path -name Regex -exec awk Program {} \; <|endoftext|>
<|endoftext|> english: Find all directories under 'test' directory tree that match the regex '.*/course[0-9.]*' in their paths
bash: find Path -type d -regex Regex <|endoftext|>
<|endoftext|> english: Move "/usr/bin/openssl" to directory "/root/"
bash: mv File File <|endoftext|>
<|endoftext|> english: display the number of lines in all the ".c" files in the current folder
bash: find Path -name Regex -exec wc -l {} \; <|endoftext|>
<|endoftext|> english: Move server.log to 'logs' directory with new name as the current date formatted as "%Y%m%d%H%M" and with '.log' extension
bash: mv File $( date -d Regex +"%Y%m%d%H%M" ) <|endoftext|>
<|endoftext|> english: Find all HTML files starting with letter 'a' in the current directory and below
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Search the /etc directory tree for symbolic links
bash: find Path -type l -print <|endoftext|>
<|endoftext|> english: Output all lines that have a common first colon-separated field in files 'selection2.txt' and 'selection1.txt' by displaying the common (first) field of each line, followed by the extra fields in both lines.
bash: join -t Regex File File <|endoftext|>
<|endoftext|> english: Remove all *.txt files, except robots.txt, under the given directory modified more than 5 minutes ago
bash: find Path -maxdepth Quantity -mmin +Quantity -type f -name Regex ! -name Regex -delete <|endoftext|>
<|endoftext|> english: Request MX record of 'example.com' domain, and filter out all comment strings
bash: dig Regex Regex | grep -v Regex | grep Regex <|endoftext|>
<|endoftext|> english: Find and print detailed information about all regular files in your home directory and below that have only the group permission set
bash: find Path -perm Permission -type f -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: find all the files ending with jpg in current folder and display their count ( case insensitive )
bash: find Path -iname Regex -type f | wc -l <|endoftext|>
<|endoftext|> english: List all files in the /var directory tree whose size is greater than 10 megabytes
bash: find Path -size +Size -exec ls -l -h {} \; <|endoftext|>
<|endoftext|> english: Print the base name of the current working directory
bash: basename $( pwd ) <|endoftext|>
<|endoftext|> english: Recursively removes all files and folders named '.svn' in a current folder, handling content of removed folder before folder inself.
bash: find Path -depth -name Regex -exec rm -f -r {} \; <|endoftext|>
<|endoftext|> english: Recursively changes group ownership of the $PATH_TO_OUTPUT_FOLDER directory to $GROUP group.
bash: chgrp -R Regex File <|endoftext|>
<|endoftext|> english: Replace all occurrences of 'previousword' with 'newword' in all regular files with '.cpp' extension under '/home/www' directory tree and modify them in-place
bash: find Path -type f -name Regex -exec sed -i Program {} \; <|endoftext|>
<|endoftext|> english: Search  in current directory downwards all files which  have not been accessed since last 7 days
bash: find Path -atime +Timespan -print <|endoftext|>
<|endoftext|> english: Search for "LOG" in jsmith's home directory tree
bash: find Path -exec grep Regex {} File \; -print <|endoftext|>
<|endoftext|> english: Find all the files which are modified more than 50 days back and less than 100 days
bash: find Path -mtime +Timespan -mtime -Timespan <|endoftext|>
<|endoftext|> english: search for the directory "config" in the current folder
bash: find Path -name Regex -type d <|endoftext|>
<|endoftext|> english: Find all *.$input_file_type files/directories under $source_dir
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Verbosely compresses all files on third and fourth depth level keeping original files in place.
bash: bzip2 -k -v File <|endoftext|>
<|endoftext|> english: delete all the "wmv" "wma" files in the currnet folder,
bash: find Path \( -name Regex -or -name Regex \) -exec rm {} \; <|endoftext|>
<|endoftext|> english: find all the files in the home folder which are bigger than 2MB and zip them
bash: find Path -size +Size -regex Regex -exec gzip {} \; <|endoftext|>
<|endoftext|> english: Answer "y" to any prompts in the interactive recursive removal of "dir1", "dir2", and "dir3"
bash: yes Regex | rm -i -r File File File <|endoftext|>
<|endoftext|> english: search for all the files in the current folder which start with gen and end with bt2 and assign the output list to the variable var.
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Search every directory except the subdirectory excluded_path for a regular file 'myfile'
bash: find Path -path Regex -prune -or -type f -name Regex -print <|endoftext|>
<|endoftext|> english: Move "caniwrite" without clobbering into "/usr/local/bin"
bash: mv -n -v File File <|endoftext|>
<|endoftext|> english: Find all files under current directory and show their file information
bash: find Path -type f | xargs -I {} file {} <|endoftext|>
<|endoftext|> english: Append "\r" on each line of file "input" and display the printable characters
bash: sed Program File | od -c <|endoftext|>
<|endoftext|> english: List all files/directories under current directory with 'FooBar' in their paths ensuring white space safety
bash: find Path -print0 | grep --null Regex | xargs -0 <|endoftext|>
<|endoftext|> english: Find all symbolic links under current directory that are not hard links
bash: find Path -type f -links Quantity -print <|endoftext|>
<|endoftext|> english: Find all directories under /home/username/public_html/themes and set their permission to 750
bash: find Path -type d -exec chmod Permission {} + <|endoftext|>
<|endoftext|> english: Search in the current directory and all sub-directories except ./D for the file named hi.dat.
bash: find Path \( -name Regex -prune \) -or -name Regex <|endoftext|>
<|endoftext|> english: display all the details of empty files in current folder
bash: find Path -size Size -printf '%M %n %u %g %s %Tb\n \b%Td %Tk:%TM %p\n' <|endoftext|>
<|endoftext|> english: Read a line from standard input into the variable "yn" with the prompt "Do you wish to install this program?"
bash: read -p Regex Regex <|endoftext|>
<|endoftext|> english: find all the backup files in the current folder and delete them after user confirmation
bash: find Path -type f -name Regex -exec rm -i {} \; <|endoftext|>
<|endoftext|> english: find all the backup files in the current folder and delete them
bash: find Path -type f -name Regex -delete <|endoftext|>
<|endoftext|> english: Remove all characters except ";" and digits from standard input
bash: tr -c -d Regex <|endoftext|>
<|endoftext|> english: Compare column 3 with column 2 of the next line in "file" and format output as a table
bash: awk Program Program | column -t <|endoftext|>
<|endoftext|> english: List the commands in /usr/bin, pausing for user input after each page.
bash: ls File | more <|endoftext|>
<|endoftext|> english: Find all files in the level 6 subdirecotries of /usr/src and below, ignoring CVS files
bash: find Path -name Regex -prune -or -mindepth +Quantity -print <|endoftext|>
<|endoftext|> english: Print mount point of the file system containing $path.
bash: df -P File | tail - Quantity | awk Program <|endoftext|>
<|endoftext|> english: Find all directories under current directory and change their permission to 500
bash: find Path -type d -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Find all files/directories named 'myfile' under your home directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: find the "MyCProgram.c" file (case insensitive find) under the current directory
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: Create an empty file called "emptyfile.c"
bash: cp File File <|endoftext|>
<|endoftext|> english: removes last N lines from file.txt
bash: head --lines -Quantity File <|endoftext|>
<|endoftext|> english: search for all the files in the entire file system which have either suid or sgid bit enabled and find of diff of these files with the file "files.secure".
bash: find Path \( -perm Permission -or -perm Permission \) -print | diff File File <|endoftext|>
<|endoftext|> english: Send at most 3 ping requests to "8.8.8.8" with a timeout of 3 seconds on interface "eth9"
bash: ping Regex -I Regex -c Quantity -w Timespan <|endoftext|>
<|endoftext|> english: List all files that matches both the case insensitive patterns *$1* and *$2* under /home/musicuser/Music/ directory
bash: find Path -type f -iname Regex -iname Regex -exec echo {} \; <|endoftext|>
<|endoftext|> english: List all regular files from the current directory tree that were modified less than 60 minutes ago
bash: find Path -mmin -Quantity -type f -ls <|endoftext|>
<|endoftext|> english: Find files using file-name
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: Display the named characters in "line1\r\nline2"
bash: echo -e Regex | awk Program | od -a <|endoftext|>
<|endoftext|> english: Update timestamps of all files in entire filesystem which are not newer than /tmp/timestamp
bash: find Path ! -newer File -exec touch {} \; <|endoftext|>
<|endoftext|> english: find all the files that have not been modified in the last (24*7) hours.
bash: find Path -mtime +Timespan <|endoftext|>
<|endoftext|> english: change owner and group of the file dir1 to user root and group  specialusers
bash: chown Regex File <|endoftext|>
<|endoftext|> english: display all the files ending with ".foo" excluding those that are in the directory ".snapshot"
bash: find Path -name Regex -prune -or -name Regex -print <|endoftext|>
<|endoftext|> english: Type unique list of all directories contiaining each file named 'myfile' under the /home directory
bash: find Path -name Regex -type f | rev | cut -d Regex -f Number | rev | sort -u <|endoftext|>
<|endoftext|> english: Move each of the 'm?' directories in $path_to_folders to another directory whose name is constituted by appending .mbox to each directory name and create a directory named Messages in this directory then move all *.emlx files into this directory
bash: find Path -name Regex -type d -exec mv {} File \; -exec mkdir Directory \; -exec sh -c mv File File \; <|endoftext|>
<|endoftext|> english: Find all files larger than 100M and delete them
bash: find Path -size +Size -exec rm -r -f {} \; <|endoftext|>
<|endoftext|> english: Change directory to the directory containing the "oracle" executable
bash: cd $( dirname $( which Regex ) ) <|endoftext|>
<|endoftext|> english: Find all regular files in the current directory tree last modified between 1 and 3 days ago and list them using format '%Tm %p\n'
bash: find Path -daystart -mtime -Timespan -type f ! -mtime -Timespan -printf '%Tm %p\n' <|endoftext|>
<|endoftext|> english: reverse input with comma deliminators
bash: echo Regex | tr Regex Regex | tac -s Regex | sed Program <|endoftext|>
<|endoftext|> english: Remove a leading "machine" from the system host name and save the result to variable "machnum"
bash: hostname | sed Program <|endoftext|>
<|endoftext|> english: Output the variable "filename" without the last dot-separated section.
bash: echo Regex <|endoftext|>
<|endoftext|> english: Delete the text matched by the regex '<script>if(window.*<\/script>' in all index.html files under current directory
bash: find Path | xargs -r -t -I {} sed -i Program {} <|endoftext|>
<|endoftext|> english: Search the directory tree given as variable $root_dir for regular files
bash: find Path -type f <|endoftext|>
<|endoftext|> english: create directory backup
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: lists txt or html files older than 5 days, null separated
bash: find Path \( -name Regex -or -name Regex \) -mtime +Timespan -print0 <|endoftext|>
<|endoftext|> english: create a md5sum for all the instances of the file MyCProgram.c in current folder
bash: find Path -iname Regex -exec md5sum {} \; <|endoftext|>
<|endoftext|> english: Search the current directory tree for regular files modified within the past 24 hours whose names do not end with ".DS_Store"
bash: find Path -mtime -Timespan ! -name Regex -type f -exec basename {} \; <|endoftext|>
<|endoftext|> english: find all the symbolic links in the current folder that are broken
bash: find Path -xtype l <|endoftext|>
<|endoftext|> english: Find all directories under current directory and set their permission to 775
bash: find -type d Path Path Path {} + <|endoftext|>
<|endoftext|> english: Force create a symbolic link named "$pdir" to "$pluginpath" with verbose output
bash: ln --symbolic --verbose --force File Regex <|endoftext|>
<|endoftext|> english: change the owner of all the regular/normal files which belong to the root user to "tom" in the current folder
bash: find Path Path -user Regex -exec chown Regex {} \; <|endoftext|>
<|endoftext|> english: Reversibly sorts content of the '${TMP}/${SCRIPT_NAME}.pid' file, comparing human readable numbers in file strings.
bash: cat File | sort -r -h <|endoftext|>
<|endoftext|> english: Find all xml files under current directory and archive them to .bz2 archives
bash: find Path -name Regex -print0 | xargs -0 -n Quantity -P Quantity -I {} bzip2 {} <|endoftext|>
<|endoftext|> english: Find all files/directories in directories/files taken from the glob pattern '/folder/path/*' recursively that have not been modified in the last 2 hours and delete them
bash: find Path -mmin +Quantity -delete <|endoftext|>
<|endoftext|> english: display all scala files in the directory "src/main"
bash: find Path -path Regex -type f -iname Regex <|endoftext|>
<|endoftext|> english: display all the files in current folder which start with "file2015-0"
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Display variable 'var' without leading and trailing whitespace.
bash: echo Regex | awk Program <|endoftext|>
<|endoftext|> english: Recursively finds files like '*.js', and filters out files with 'excludeddir' in path.
bash: find Path -name Regex | grep -v Regex <|endoftext|>
<|endoftext|> english: Find all the files that were modified within the last day
bash: find Path -mtime -Timespan <|endoftext|>
<|endoftext|> english: display all the html files in the current folder that have been modified exactly 7*24 hours ago
bash: find Path -mtime Timespan -name Regex -print <|endoftext|>
<|endoftext|> english: Change permission to 755 of all files/directories under current directory tree that have 777 permission
bash: find Path -perm Permission | xargs -I {} chmod Permission File <|endoftext|>
<|endoftext|> english: Creates temporary file in default folder and saves path to it in 'source' variable.
bash: mktemp <|endoftext|>
<|endoftext|> english: Open a local SSH port on 1080 for application-level port forwarding
bash: ssh -D Regex Regex -g <|endoftext|>
<|endoftext|> english: Connect via ssh to "your.server.example.com" and recursively copy directory "/path/to/foo" on this host to direcotry "/home/user/Desktop" on local host, using "blowfish" cipher algorithm.
bash: scp -c blowfish -r File File <|endoftext|>
<|endoftext|> english: Calculate the md5 sum of every ".py" file in directory tree "/path"
bash: find Path -type f -name Regex -exec md5sum {} + <|endoftext|>
<|endoftext|> english: Output the standard input followed by the line number until line 786
bash: nl -b a | sed Program | grep Regex | awk Program <|endoftext|>
<|endoftext|> english: Recursively copies "$appname.app", preserving symlinks as symlinks to the 'Payload' directory.
bash: cp -R -p File File <|endoftext|>
<|endoftext|> english: create a compressed archive in my_dir directory matching '.[^.]* ..?*' glob pattern
bash: tar -C Directory -z -c -v -f File File File File <|endoftext|>
<|endoftext|> english: display all the regular/normal files in the current folder excluding the files with the name mmm
bash: find Path -name Regex -prune -or -type f -print <|endoftext|>
<|endoftext|> english: find the file "httpd.log" in the folder /home/web-server/
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: Look for *log files in directories at most three levels down the directory tree
bash: find Path -maxdepth Quantity -name Regex <|endoftext|>
<|endoftext|> english: find all text files in the current directory and display them page wise
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: Find all files in the /home/ directory tree that are owned by bob
bash: find Path -user Regex <|endoftext|>
<|endoftext|> english: List all cron jobs which contain "word".
bash: crontab -l | grep Regex <|endoftext|>
<|endoftext|> english: Find all files/directories named 'query' under current directory tree
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Remove everything within parentheses and substitute all non digit characters with a space from "1/2 [3] (27/03/2012 19:32:54) word word word word 4/5" and format the output as a table
bash: echo Regex | sed -e Program -e Program | column -t <|endoftext|>
<|endoftext|> english: Display permissions, user, group, and full path for each file in the current directory tree as a list
bash: tree -p -u -g -f -i <|endoftext|>
<|endoftext|> english: search for all the mp3 files in the file system and move them to the folder /mnt/mp3
bash: find Path -iname Regex -exec mv {} File \; <|endoftext|>
<|endoftext|> english: Find all directories under current directory whose names are 33 characters long
bash: find Path -type d -name Regex <|endoftext|>
<|endoftext|> english: Query about which keys invoke the named function
bash: bind -q Regex <|endoftext|>
<|endoftext|> english: Saves list of currently logged in users in 'userlist' variable.
bash: w | awk Program | sed Program <|endoftext|>
<|endoftext|> english: display table of files with their name, owner, and size in bytes.
bash: find Path -printf 'Name: %f Owner: %u %s bytes\n' <|endoftext|>
<|endoftext|> english: Move all directories from the `sourceDir' directory tree to the `destDir' directory
bash: find Path -mindepth Quantity -type d -print0 | xargs -0 -I {} mv --target-directory Directory {} <|endoftext|>
<|endoftext|> english: Create a symbolic link named "$SYMLINK" to "$ACTUAL_DIR"
bash: ln -s File Regex <|endoftext|>
<|endoftext|> english: Archive "foo/bar/baz.c" to "remote:/tmp/" preserving the relative path of "foo/bar/baz.c"
bash: rsync -a -v -R File File <|endoftext|>
<|endoftext|> english: Print 1000 astarisk ('*')
bash: head -c Quantity File | tr Regex Regex <|endoftext|>
<|endoftext|> english: Find directories under maximum 1 level down the directory $dir with 100 permission that are owned by the user $username
bash: find Path -maxdepth Quantity -type d -user Regex -perm -Permission <|endoftext|>
<|endoftext|> english: Change permissions to 600 for all regular .rb files in the current directory tree
bash: find Path -name Regex -type f -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Search the directories given as arguments to the Bash script for files whose name is not "ss"
bash: find Path -not -name Regex <|endoftext|>
<|endoftext|> english: Print all lines in file that do not match "pattern"
bash: sed -n Program File <|endoftext|>
<|endoftext|> english: Search the /myfiles directory tree for regular files with at least these permissions: 647
bash: find Path -type f -perm -Permission <|endoftext|>
<|endoftext|> english: Search the current directory recursively for regular files with the read permission set for everybody
bash: find Path -type f ! -perm -Permission <|endoftext|>
<|endoftext|> english: Count number of A records of domain '$domain' on nameserver '$server' and save value in 'result' variable
bash: dig Regex Regex "$domain" | wc -l <|endoftext|>
<|endoftext|> english: Find all files/directores under /etc filter them by searching for 'test' in their name and run the file command on each of them
bash: find Path -print0 | grep -a -z -Z Regex | xargs -0 -I {} file {} <|endoftext|>
<|endoftext|> english: search for all tar.gz compress files  in the current folder
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Go to directory /cygdrive/c/Program Files (x86) using quotes to escape special characters
bash: cd Directory <|endoftext|>
<|endoftext|> english: Search the current directory tree for files AAA and BBB
bash: find Path \( -name Regex -or -name Regex \) -print <|endoftext|>
<|endoftext|> english: find regular  file named foo.txt under root / directory.
bash: find Path -name Regex -type f <|endoftext|>
<|endoftext|> english: find all the directories  with the name "c" in the current folder which are at least 3 levels deep and which are not present in the path "/p/".
bash: find Path -mindepth Quantity -type d ! -path Regex -name Regex -print <|endoftext|>
<|endoftext|> english: Print the number of packets sent, received, and the percentage lost for each ping request to "google.com"
bash: ping Regex | awk Program <|endoftext|>
<|endoftext|> english: Read a line from standard input with prompt "Enter your age:\n"
bash: read -p Regex <|endoftext|>
<|endoftext|> english: Prints folder path where $mystring file is located.
bash: echo Regex $( dirname Regex ) <|endoftext|>
<|endoftext|> english: Sort the lines of the file 'temp.txt' and change it in-place
bash: sort File -o File <|endoftext|>
<|endoftext|> english: Search the current directory tree for symlinks pointing at other symlinks
bash: find Path -type l -xtype l <|endoftext|>
<|endoftext|> english: Delete all files with ' .o' extension in the entire filesystem
bash: find Path Path Path Path -name Regex -exec rm -f {} \; <|endoftext|>
<|endoftext|> english: Find files/directories that does not have write permssion for group
bash: find Path ! -perm Permission <|endoftext|>
<|endoftext|> english: display a long listing of all regular files  in current folder which have been modified in the last 60 minutes
bash: find Path -mmin -Quantity -type f -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: Finds IP address of system network interface, that belongs to 192.168.111 subnet.
bash: ifconfig | grep Regex | awk Program <|endoftext|>
<|endoftext|> english: Print the list of regular files from the current directory tree that were modified less than 2 days ago
bash: find Path -type f -mtime -Timespan -exec echo {} + <|endoftext|>
<|endoftext|> english: Change all files in "~" which are owned by the group "vboxusers" to be owned by the user group "kent"
bash: find Path -group Regex -exec chown Regex {} \; <|endoftext|>
<|endoftext|> english: find all  *.csv files which  modify within last 2 days in /home directory then zip ( archive )-
bash: find Path -type f -name Regex -mtime -Timespan -exec gzip -9 -f {} \; <|endoftext|>
<|endoftext|> english: Find every file under the directory /usr ending in ".stat".
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Split standard input into files with at most 75 lines each
bash: split --lines Quantity <|endoftext|>
<|endoftext|> english: Prints path to folder that contains file "/path/to/vm.vmwarevm/vm.vmx".
bash: dirname Regex <|endoftext|>
<|endoftext|> english: Mount remote "smbfs" filesystem "//username@server/share" on "/users/username/smb/share" as soft
bash: mount -t smbfs -o soft Regex Regex <|endoftext|>
<|endoftext|> english: List all directories under current directory
bash: find Path -type d -exec ls -d -l -r -t {} \; <|endoftext|>
<|endoftext|> english: Unzip every ".gz" file in the current directory tree
bash: find Path -name Regex | xargs -I {} gunzip {} <|endoftext|>
<|endoftext|> english: Print second section of space-separated data coming from stdin.
bash: cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: Recursively change the group ownership to "laravel" in "./storage"
bash: chown -R Regex File <|endoftext|>
<|endoftext|> english: Monitor 3 specific process IDs: 18884, 18892, and 18919 (GNU specific)
bash: top -p Regex -p Regex -p Regex <|endoftext|>
<|endoftext|> english: Number every line of standard input as zero padded to 6 characters followed by "-"
bash: nl -s Regex -b a -n rz <|endoftext|>
<|endoftext|> english: Search the ./in_save directory for regular files and view the result using pager `more'
bash: find Path -type f -maxdepth Quantity | more <|endoftext|>
<|endoftext|> english: Find all files under current directory and set read-write permission for owner and group and no permission for other for those directories
bash: find Path -type f -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Sorts content of the $tmp file and filters out all strings with ':0'.
bash: sort File | grep -v Regex <|endoftext|>
<|endoftext|> english: change the permissions of all the directories in the current folder
bash: find Path -type d -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Search all files in the current directory tree that are named "whatever" for "whatever"
bash: find Path -name Regex -print | xargs -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: Write current directory listing to standard output and to "files.txt"
bash: ls | tee File <|endoftext|>
<|endoftext|> english: Find all files under current directory matching the pattern '[error,access,error_log,access_log,mod_jk.log]*.[0-9]*' in their names
bash: find Path -name Regex -type f <|endoftext|>
<|endoftext|> english: Show the number of regular files in the current directory tree
bash: find Path -type f | wc -l <|endoftext|>
<|endoftext|> english: List all files/directories under current directory matching the posix-egrep type regex ".+\.(c|cpp|h)$" in their names
bash: find Path -regextype posix-egrep -regex Regex | xargs -n Quantity -I {} ls {} <|endoftext|>
<|endoftext|> english: find all the files in the current directory which have been modified after a file
bash: find Path -newer File <|endoftext|>
<|endoftext|> english: Find a directory named 'project.images' in the entire filesystem
bash: find Path -type d -name Regex <|endoftext|>
<|endoftext|> english: prints the last non-empty line of a file
bash: tac File | grep -E -m Quantity Regex <|endoftext|>
<|endoftext|> english: Print only alphanumeric values from "/dev/urandom"
bash: cat File | tr -d -c Regex <|endoftext|>
<|endoftext|> english: Find files/directories under current directory without descending into it
bash: find Path -maxdepth Quantity <|endoftext|>
<|endoftext|> english: Remove trailing white spaces from all files under current directory ignoring .git, .svn directories and binary files
bash: find Path -not \( -name Regex -prune -or -name Regex -prune \) -type f -print0 | xargs -0 -I {} file -I -n {} | grep -v Regex | cut -d Regex -f Number | xargs -0 -I {} sed -i Program File File {} <|endoftext|>
<|endoftext|> english: change the permissions of all the files ending with "fits" in the folder "/store/01"
bash: find Path -name Regex -exec chmod -Permission {} \; <|endoftext|>
<|endoftext|> english: Recursively add ".jpg" to all files without an extension in the directory tree "/path"
bash: find Path -type f -not -name Regex -exec mv {} File \; <|endoftext|>
<|endoftext|> english: display long listing of all normal/regular files in the current directory which have been modified in the last 2 days.
bash: find Path -mtime -Timespan -type f -name Regex -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: Remove all vmware-*.log files under current directory
bash: find Path -name Regex -delete <|endoftext|>
<|endoftext|> english: delete all the ".doc" files in the current folder
bash: find Path -name Regex -exec rm {} \; <|endoftext|>
<|endoftext|> english: Verbosely compresses all files on fifth and sixth depth level keeping original files in place.
bash: bzip2 -k -v File <|endoftext|>
<|endoftext|> english: Search all files called "abc" that reside in the current directory tree for string "xyz"
bash: find Path -name Regex | xargs -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: find all the files in the current folder which have been modified after the file disk.log
bash: find Path -newer File -print <|endoftext|>
<|endoftext|> english: Find the largest 10 directories under current directory
bash: find Path -type d -print0 | xargs -0 -I {} du {} | sort -n | tail - Quantity | cut -f Number | xargs -I {} du -s -h {} <|endoftext|>
<|endoftext|> english: Erase user's cron jobs and add one cron job to run "script" every minute.
bash: echo Regex | crontab File <|endoftext|>
<|endoftext|> english: Read first column of each row, find all other first columns which have a difference less than 10, and append that comma separated list to the row
bash: awk Program Program | column -t <|endoftext|>
<|endoftext|> english: Search directories /res/values-en-rUS and /res/xml for XML files
bash: find Path Path -iname Regex <|endoftext|>
<|endoftext|> english: search all the files in the current folder using name patterns
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: Replace each non-blank line in "YOURFILE" preceded with "pX=" where "X" is the line number
bash: grep -v Regex File | nl -s Regex -w Quantity | tr -s Regex Regex <|endoftext|>
<|endoftext|> english: Find all files named "filename" in the current directory tree, not descending into "FOLDER1" directories
bash: find Path -name Regex -prune -or -name Regex <|endoftext|>
<|endoftext|> english: Find all directories under current directory
bash: find Path -type d <|endoftext|>
<|endoftext|> english: Copies all files like "*FooBar*" under the current directory to the '~/foobar' directory.
bash: find Path -name Regex -exec cp -t Directory -- {} + <|endoftext|>
<|endoftext|> english: search for the file "file_name" in the folder /path
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all *.mp4 files under directory named 'working' and show the first one found
bash: find Path -type f -name Regex | head - Quantity <|endoftext|>
<|endoftext|> english: find all the configuration files in /etc folder along with the last access & modification time
bash: find Path -name Regex -printf "%f %a, %t\n" <|endoftext|>
<|endoftext|> english: Get current directory name without full path, ie. the part after the last /
bash: basename $( pwd ) <|endoftext|>
<|endoftext|> english: Delete all regular files under $DIR directory tree that have been modified before file $a
bash: find Path -type f ! -newer File -exec rm {} + <|endoftext|>
<|endoftext|> english: Remove the .jpg files from the current directory whose names match regular expression ".+-[0-9]+x[0-9]+\.jpg"
bash: find Path -type f -regex Regex | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: find all the "error_log" files in the folder "/home" which are bigger than 5MB and force delete them
bash: find Path -size +Size -name Regex -exec rm -r -f {} \; <|endoftext|>
<|endoftext|> english: Find all files in /var/www/html/zip/data/*/*/*/*/* that are older than 90 days and print only unique parent directory paths
bash: find Path -type f -mtime +Timespan -printf "%h\n" | sort | uniq <|endoftext|>
<|endoftext|> english: Print lines 15967 to 16224 in file "dump.txt"
bash: cat File | head - Quantity | tail - Quantity <|endoftext|>
<|endoftext|> english: Print common lines in files "set1" and "set2"
bash: comm -1 -2 <( sort File ) <( sort File ) <|endoftext|>
<|endoftext|> english: Remove all files from the current directory tree whose names do not match regular expression "excluded files criteria"
bash: find Path | grep -v Regex | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: search for all pdf files in the folder "/home/pdf" which have been accessed in the last 60*24 hours
bash: find Path -iname Regex -atime -Timespan -type -f <|endoftext|>
<|endoftext|> english: Print the directory name of the physical current working directory
bash: dirname $( pwd -P ) <|endoftext|>
<|endoftext|> english: Prints newline, word, and byte count for each *.py in a current folder.
bash: wc File <|endoftext|>
<|endoftext|> english: find all the files which have been modified in the last 15 minutes excluding hidden files.
bash: find Path -mmin -Quantity \( ! -regex Regex \) <|endoftext|>
<|endoftext|> english: Change ownership of "/data/db" to the current user
bash: chown $( whoami ) File <|endoftext|>
<|endoftext|> english: copy the file header.shtml to each directory under dir1, dir2, dir3, or dir4
bash: find Path Path Path Path -type d -exec cp File {} \; <|endoftext|>
<|endoftext|> english: Find all files/directories matching the regex .*sql.*
bash: find Path -regex Regex <|endoftext|>
<|endoftext|> english: Find all *shp* directories under current directory and move their contents to ../shp_all/
bash: mv $( find Path -name Regex -printf "%h\n" | uniq ) File <|endoftext|>
<|endoftext|> english: Delete all empty directories in the current directory tree
bash: find Path -type d -empty -exec rmdir -v -p --ignore-fail-on-non-empty {} + <|endoftext|>
<|endoftext|> english: find all the text files in the home directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: find all files under the current folder except dir1 dir2 dir3  folder
bash: find Path -type d \( -path Regex -or -path Regex -or -path Regex \) -prune -or -print <|endoftext|>
<|endoftext|> english: Recursively copy all (non-hidden) files and directories in current dir except "foo" to location specified by variable "other"
bash: rsync --recursive --exclude Regex File File <|endoftext|>
<|endoftext|> english: find all the files in the file system which have sticky bit enabled to the user
bash: find Path -perm -Permission <|endoftext|>
<|endoftext|> english: find all the files in the folder /usr/bin which have been modified in the last 10 days
bash: find Path -type f -mtime -Timespan <|endoftext|>
<|endoftext|> english: Forcefully remove files *~important-file
bash: rm -r -f File <|endoftext|>
<|endoftext|> english: find all the html files in the current folder which have been modified excatly 7 days before
bash: find Path -mtime Timespan -name Regex -print <|endoftext|>
<|endoftext|> english: find all the word press configuration php files in the folder /var/www and do not search beyond two levels
bash: find Path -name Regex -maxdepth Quantity <|endoftext|>
<|endoftext|> english: Change the timestamp of symbolic link "somesymlink" to current date/time
bash: touch -h File <|endoftext|>
<|endoftext|> english: Delete all lines matching "pattern to match" in "./infile" and make a backup with suffix ".bak"
bash: sed -i Regex Program File <|endoftext|>
<|endoftext|> english: Exit the shell on the first error encountered
bash: set -e <|endoftext|>
<|endoftext|> english: delete all the trace files (".trc") which have not been been accessed in the last 30*24 hours
bash: find Path \( -name Regex -and -mtime +Timespan \) -exec rm {} \; <|endoftext|>
<|endoftext|> english: display all the text files and hidden files in the home folder
bash: find Path -name Regex -print -or -name Regex -print <|endoftext|>
<|endoftext|> english: Print unique lines of sorted file "second.txt" compared to sorted file "first.txt"
bash: comm -1 -3 File File <|endoftext|>
<|endoftext|> english: Finds only parts of echoed string that match with regex 'run-parts (-{1,2}\S+ )*\S+', and saves them in $match variable, each matched part on a separate line.
bash: echo Regex | grep -E -o Regex <|endoftext|>
<|endoftext|> english: Delete all files that were modified more than 60 days ago under '/path-to-directory' tree
bash: find Path -mtime +Timespan -exec rm -f {} \; <|endoftext|>
<|endoftext|> english: search for the directory "uploads" in current folder and change the permission of the folder and all the files to 755
bash: find Path -type d -name Regex -print0 | xargs -0 -I {} chmod -R Permission {} <|endoftext|>
<|endoftext|> english: Recursively removes all files in a current folder but '*txt' files.
bash: find Path -type f -not -name Regex | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: Forcibly create symlink named as '/cygdrive/c/Users/Mic/mypics' to the directory '/cygdrive/c/Users/Mic/Desktop/PENDING - Pics/'
bash: ln -s -f File Regex <|endoftext|>
<|endoftext|> english: Search the current directory tree for *.c and *.sh files
bash: find Path -type f \( -name Regex -or -name Regex \) <|endoftext|>
<|endoftext|> english: Search all regular files in the current directory tree for "string"
bash: find Path -type f | xargs -d Regex -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: Set variable OS to the name of the operating system, ie. "Linux"
bash: uname -s <|endoftext|>
<|endoftext|> english: grep from bottom of file
bash: tac File | grep Regex <|endoftext|>
<|endoftext|> english: Join columns in "file1" and "file2" if their first field matches and format the output as a table
bash: join File File | column -t <|endoftext|>
<|endoftext|> english: Find all files under /path and below writable by `group' and `other'
bash: find Path -perm -Permission <|endoftext|>
<|endoftext|> english: Search for " 840" in history
bash: history | grep Regex <|endoftext|>
<|endoftext|> english: display all the ".c" files in the current directory
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: SSH into "myhost.com" as user "myname" with a check every 60 seconds that the server is still alive
bash: ssh -o ServerAliveInterval=60 Regex <|endoftext|>
<|endoftext|> english: Gets state of shell option 'dotglob' and saves it in 'rest_cmd' variable.
bash: shopt -p dotglob <|endoftext|>
<|endoftext|> english: List all files/directories under current directory ensuring white space safety
bash: find Path -print0 | xargs --null <|endoftext|>
<|endoftext|> english: Find all *.txt files/directories under your home directory
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: Add directory "$HOME/Pictures" to the directory stack
bash: pushd Directory <|endoftext|>
<|endoftext|> english: Unzip every ".gz" file in the current directory
bash: gunzip Regex <|endoftext|>
<|endoftext|> english: Find all file.ext files/directories under /home/kibab directory and print . for each of them
bash: find Path -name Regex -exec echo Regex \; <|endoftext|>
<|endoftext|> english: print the line containing TERMINATE and everything after in 'file'
bash: tail -n $( grep -n Regex File | head -n Quantity | cut -d Regex -f Number ) File <|endoftext|>
<|endoftext|> english: find all files in the current folder and search for a word in them.
bash: find Path -type f -exec grep Regex {} \; <|endoftext|>
<|endoftext|> english: find all the php files in the current folder
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Prints total number of lines of all *.php files in a current folder and subfolders.
bash: cat $( find Path -name Regex ) | wc -l <|endoftext|>
<|endoftext|> english: find all the files in the current folder which have been modified in the last one minute
bash: find Path -type f -mmin Quantity <|endoftext|>
<|endoftext|> english: sort each file in the bills directory, leaving the output in that file name with .sorted appended
bash: find Path -type f -execdir sort -o File {} \; <|endoftext|>
<|endoftext|> english: Find '.git' directories in directory tree /path/to/files and print the pathnames of their parents
bash: find Path -type d -name Regex -exec dirname {} + <|endoftext|>
<|endoftext|> english: Print all files/directories with their sizes under $WHATEVER directory tree
bash: find Path -printf "%s %p\n" <|endoftext|>
<|endoftext|> english: Find all files/directories starting with 'onlyme' in their names under current directory tree in minimum 1 level deep
bash: find Path -mindepth Quantity -name Regex <|endoftext|>
<|endoftext|> english: Recursively finds all 'STATUS.txt' files containing text 'OPEN' and prints containing folder of them.
bash: find Path -type f -name Regex -exec grep -q Regex {} \; -exec dirname {} \; <|endoftext|>
<|endoftext|> english: Print the mount point of the last mounted drive
bash: mount | tail - Quantity | sed -e Program <|endoftext|>
<|endoftext|> english: find all the files ending with "~" in current folder and move them to temp folder
bash: find Path -name Regex -print0 | xargs -0 -I {} mv {} File <|endoftext|>
<|endoftext|> english: Return all of the .conf files in Pat's user folder and subdirectories
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: Locate all *.csv regular files under the current directory tree
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: display all mp3 files in the file system which have not been accessed in the last 24 hours
bash: find Path -name Regex -atime +Timespan -type f <|endoftext|>
<|endoftext|> english: delete all the mp3 files in the home folder
bash: find Path -exec grep -l Regex {} \; | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: Print 'huzzah' if /some/dir/ is empty
bash: find Path -maxdepth Quantity -empty -exec echo Regex \; <|endoftext|>
<|endoftext|> english: display all the files  in the current folder excluding those which are present in "./src/emacs" folder
bash: find Path -path Regex -prune -or -print <|endoftext|>
<|endoftext|> english: Display current running kernel's compile-time config file.
bash: cat $( uname -r ) <|endoftext|>
<|endoftext|> english: search all jpg,png,jpefg  files in the current folder and calculate the total size of them
bash: find Path \( -iname Regex -or -iname Regex -or -iname Regex \) -ls | awk Program <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory tree that belong to the group 'compta'
bash: find Path -group Regex <|endoftext|>
<|endoftext|> english: List all leaf directories of the current directory tree
bash: find Path -depth -type d | sed Program <|endoftext|>
<|endoftext|> english: display only the file names of all the files which end with ".deb"
bash: find Path -name Regex -printf "%f\n" <|endoftext|>
<|endoftext|> english: Find all MP3s in the /home directory tree
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: Read a single line from standard input and save to variable "line"
bash: read Regex <|endoftext|>
<|endoftext|> english: Enables shell option 'autocd'.
bash: shopt -s autocd <|endoftext|>
<|endoftext|> english: Set permissions to 600 for regular files under media/
bash: find Path -type f -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Prints path to the target of symbolic link 'relative/path/to/file'
bash: dirname $( readlink -e File ) <|endoftext|>
<|endoftext|> english: Display differences in "/tmp/ksh-9725.log" when compared to "/tmp/ksh-9781.log"
bash: diff File | grep Regex <|endoftext|>
<|endoftext|> english: Search folder /home/ABCD/ recursively for regular files
bash: find Path -type f -print <|endoftext|>
<|endoftext|> english: Search directory trees /usr/local/man and /opt/local/man for files whose names begin with 'my'
bash: find Path Path -name Regex <|endoftext|>
<|endoftext|> english: Print environment variable "IFS" and its value
bash: set | grep Regex <|endoftext|>
<|endoftext|> english: Find all *.php (case insensitive) files and *.js files/directories (case insensitive) under /home/jul/here excluding /home/jul/here/exclude/* paths
bash: find Path -type f -iname Regex ! -path Regex -or -iname Regex ! -path Regex <|endoftext|>
<|endoftext|> english: For each line whose first field is the same in file1 and file2, output the common first field followed by all other fields in file1 and file2.
bash: join -j Regex File File <|endoftext|>
<|endoftext|> english: Delete all files/directories with '.old' extension under current directory tree
bash: find Path -name Regex -delete <|endoftext|>
<|endoftext|> english: List all .gif files in the current directory tree
bash: find Path -name Regex -exec ls {} \; <|endoftext|>
<|endoftext|> english: Print all files in the current directory as a comma separated list
bash: ls -1 | paste -s -d File File <|endoftext|>
<|endoftext|> english: display all the files in the home folder which have not been modified in the last 365*24 hours
bash: find Path -mtime +Timespan <|endoftext|>
<|endoftext|> english: Get a list of all hidden files from the current directory tree
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: find all .bak files in or below the current directory and move them to ~/.old.files directory:
bash: find Path -name Regex -print0 | xargs -0 -I {} mv {} File <|endoftext|>
<|endoftext|> english: Get domain name with 'google' from dig reverse lookup.
bash: dig -x Regex | awk Program <|endoftext|>
<|endoftext|> english: Report available space on the file system containing /tmp in kilobytes.
bash: df -k File | tail - Quantity | awk Program <|endoftext|>
<|endoftext|> english: Print a detailed list of all regular files from the current directory tree
bash: find Path -type f -ls <|endoftext|>
<|endoftext|> english: Rename "original.filename" to "new.original.filename"
bash: mv File File <|endoftext|>
<|endoftext|> english: Recursively copy "/path/to/data/myappdata/*.txt" to "user@host:/remote/path/to/data/myappdata/"
bash: rsync -r -v -v File File <|endoftext|>
<|endoftext|> english: Check if directory $some_dir is empty
bash: find Path $( echo Regex ) -maxdepth Quantity -empty <|endoftext|>
<|endoftext|> english: Rename file file.txt.123456 to file.txt
bash: mv File $( ls File | rev | cut -c Number | rev ) <|endoftext|>
<|endoftext|> english: Find all files and directories in the current directory tree with "linkin park" in their names and copy them to /Users/tommye/Desktop/LP
bash: find Path -iname Regex -exec cp -r {} File \; <|endoftext|>
<|endoftext|> english: Search  all files & directoy from root directory which  are greater then 100M and delete them .
bash: find Path -size +Size -exec rm -r -f {} \; <|endoftext|>
<|endoftext|> english: Change the ownership of "/etc/udev/rules.d/51-android.rules" to "root"
bash: chown Regex File <|endoftext|>
<|endoftext|> english: Mount the "linprocfs" filesystem on "/proc"
bash: mount -t linprocfs Regex Regex <|endoftext|>
<|endoftext|> english: Sort content of files 'file1' and 'file2' by second of dot-separated fields.
bash: cat File File | sort -t Regex -k Number <|endoftext|>
<|endoftext|> english: find for a word in all the regular files in the current directory
bash: find Path -type f -print | xargs -I {} grep -l -i Regex {} <|endoftext|>
<|endoftext|> english: Print only the number of lines in file "$f"
bash: wc -l File | tr -s Regex | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: Find all *.txt files under current directory with their timestamps and paths, sort them and print the last entry only
bash: find Path -name Regex -printf "%T+ %p\n" | sort | tail - Quantity <|endoftext|>
<|endoftext|> english: Perform a default Plesk configuration
bash: find Path -type f -iwholename Regex -exec grep -H Regex {} \; <|endoftext|>
<|endoftext|> english: Delete all files/directories under current directory tree with '.$1' extension where $1 expands as the first positional parameter
bash: find Path -name Regex -delete <|endoftext|>
<|endoftext|> english: Gets back to the foreground a job with number 2.
bash: fg Regex <|endoftext|>
<|endoftext|> english: Find files/directories with inode number '212042' under '/var' directory tree without traversing other devices/partitions
bash: find -x Path -inum Quantity <|endoftext|>
<|endoftext|> english: List files larger than 10MB under /var/log
bash: find Path -size +Size -ls <|endoftext|>
<|endoftext|> english: display all file in the folder /dir/to/search except ".c" files
bash: find Path ! -name Regex Path <|endoftext|>
<|endoftext|> english: display all the empty files in current folder
bash: find Path -empty <|endoftext|>
<|endoftext|> english: display all the C, CPP, Header files in the kat folder
bash: find Path -type f \( -name Regex -or -name Regex -or -name Regex \) <|endoftext|>
<|endoftext|> english: Pick up a list of variable:value pairs from msgs.config and add them to the current shell or script's environment.
bash: source <( sed Program File ) <|endoftext|>
<|endoftext|> english: display a long listing of all the normal/regular files in the current folder and do not search in the sub folders
bash: find Path -maxdepth Quantity -type f -exec ls -l {} \; | less <|endoftext|>
<|endoftext|> english: Count the number of files named 'job.history' under '/data/SpoolIn' directory tree that match 'FAIL' in their contents
bash: find Path -name Regex | xargs -I {} grep -l Regex {} | wc -l <|endoftext|>
<|endoftext|> english: find in the entire file system for the files which have sticky bit.
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: Sends current job to the background.
bash: bg <|endoftext|>
<|endoftext|> english: Find all files under current directory that were modified less than 1 day ago
bash: find Path -mtime -Timespan <|endoftext|>
<|endoftext|> english: Print out all files with their paths that have identical content and the same filename in different cases
bash: find Path -type f | xargs -I {} md5sum {} | sort | uniq -D w32 | awk -F Regex Program | sort -f | uniq -D i <|endoftext|>
<|endoftext|> english: Lookup information of the current user
bash: finger $( whoami ) <|endoftext|>
<|endoftext|> english: Archive "/source/backup" to "/destination" with compression during transfer
bash: rsync -r -a -v -z File File <|endoftext|>
<|endoftext|> english: Find all .py files in the current directory except "setup.py" and those beginning with "test_"
bash: find Path -maxdepth Quantity -mindepth Quantity \( -name Regex -not -name Regex -not -name Regex \) <|endoftext|>
<|endoftext|> english: Copy "./export" recursively to "/path/to/webroot" preserving permissions
bash: rsync -p -r File File <|endoftext|>
<|endoftext|> english: Search the current directory tree for regular files whose names end with "keep.${SUFFIX}", where $SUFFIX is a shell variable
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: Reports count of processors in system.
bash: grep Regex File | sort -u | wc -l <|endoftext|>
<|endoftext|> english: display all files in the current folder which are not empty
bash: find Path ! -size Size <|endoftext|>
<|endoftext|> english: Find all files under $YOUR_DIR
bash: find Path -type f <|endoftext|>
<|endoftext|> english: Find all files under /path/to/Dir and set their permission to 644
bash: find Path -type f -print0 | xargs -0 -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: list all regular files which path is not dir1 or dir2
bash: find Path -not \( -path Regex -prune \) -not \( -path Regex -prune \) -type f <|endoftext|>
<|endoftext|> english: Recursively finds all '*.pdf' files in a current folder and removes them.
bash: find Path -name Regex -exec rm {} + <|endoftext|>
<|endoftext|> english: search for swap files (.swp files) in temp folder and remove them
bash: find Path -name Regex -exec rm {} \; <|endoftext|>
<|endoftext|> english: Remove all files with names like "vmware-*.log" from the current directory tree
bash: find Path -name Regex | xargs -i -I {} rm -r -f {} {} <|endoftext|>
<|endoftext|> english: List all .c and .h files in the current directory tree that contain "thing"
bash: find Path -name Regex | xargs -I {} grep -l Regex {} <|endoftext|>
<|endoftext|> english: Search  in current directory downwards all files whose size is greater than 10 bytes .
bash: find Path -size +Size -print <|endoftext|>
<|endoftext|> english: search for all the directories ending with ".mp3" in the file system and move them to the folder /mnt/mp3
bash: find Path -iname Regex -type d -exec mv {} File \; <|endoftext|>
<|endoftext|> english: Read one character from standard input into variable 'c'
bash: read -n Quantity Regex <|endoftext|>
<|endoftext|> english: Print a sorted list of regular files from directory tree /folder/of/stuff
bash: find Path -type f | sort <|endoftext|>
<|endoftext|> english: display all normal/regular files in current directory
bash: find Path -type f -print0 <|endoftext|>
<|endoftext|> english: Find all orm* files/directories under current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: display a long list of all the files that are bigger than 10KB in current folder
bash: find Path -size +Size -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: Find all PHP files in the current directory recursively
bash: find Path -name Regex -type f <|endoftext|>
<|endoftext|> english: create directory foo
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: Recursively removes all files like '*.pyc' of '*.pyo' in a current folder without prompting.
bash: find Path -type f -name Regex -exec rm -f {} + <|endoftext|>
<|endoftext|> english: Measure the disk space taken up by all *.txt files in the current directory tree
bash: find Path -name Regex -print0 | xargs -0 -I {} du -c -h {} <|endoftext|>
<|endoftext|> english: update the permission of all the files in the folder /u/netinst to 500
bash: find Path -print | xargs -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: Print all files and directories in the `.' directory tree skipping SCCS directories but printing out the SCCS directory name
bash: find Path -print -name Regex -prune <|endoftext|>
<|endoftext|> english: Search  in current directory downwards all files whic  have permission 777 .
bash: find Path -perm Permission -print <|endoftext|>
<|endoftext|> english: create directories foo and bar
bash: mkdir Directory Directory <|endoftext|>
<|endoftext|> english: Print list of all user names who are logged in
bash: who | awk Program <|endoftext|>
<|endoftext|> english: display the long listing detials of all the files in the folder junk which is in home folder.
bash: find Path -name Regex -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: find all the files in the entire file system excluding the folder proc, which do not belong to any user or any group
bash: find Path -path Regex -prune -or -nouser -or -nogroup <|endoftext|>
<|endoftext|> english: search through only the /usr and /home directories for any file named Chapter1.txt
bash: find Path Path -name Regex -type f <|endoftext|>
<|endoftext|> english: Recursively change ownership of "/usr/local/lib/node_modules" to the current user
bash: chown -R $( whoami ) File <|endoftext|>
<|endoftext|> english: Set 644 permission to all regular files under /home/my/special/folder directory
bash: chmod Permission $( find Path -type f ) <|endoftext|>
<|endoftext|> english: Change the permission to 0644 for all files under current directory
bash: find Path -type f -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Change the owner and group of "it" to "root"
bash: chown Regex File <|endoftext|>
<|endoftext|> english: Copy all files with name pattern $j.sh (case insensitive) under '/tmp/2' directory tree to $i directory
bash: find Path -iname Regex -exec cp {} File \; <|endoftext|>
<|endoftext|> english: find all directories that names are 'apt' and display details
bash: find Path -type d -name Regex -ls <|endoftext|>
<|endoftext|> english: Find all Makefile's in the current directory tree and print the line 235 of each of them
bash: find Path -type f -name Regex -print -exec sed -n Program {} \; <|endoftext|>
<|endoftext|> english: Search file aaa from current direcoty downwards and print it .
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: force create hard link between $GIT_DIR/../apresentacao/apresentacao.pdf and $GIT_DIR/../capa/apresentacao.pdf
bash: ln -f File Regex <|endoftext|>
<|endoftext|> english: Find every file under the directory /var/spool that was modified more than 60 days ago.
bash: find Path -mtime +Timespan <|endoftext|>
<|endoftext|> english: Read a single character from standard input into variable "runCommand" with the prompt "Pick a letter to run a command [A, B, or C for more info] "
bash: read -n Quantity -p Regex Regex <|endoftext|>
<|endoftext|> english: Change the owner of "/var/www/html/mysite/images/" to "nobody"
bash: chown Regex File <|endoftext|>
<|endoftext|> english: list all regular files which path is not dir1 or dir2
bash: find Path -not \( -path Regex -or -path Regex -prune \) -type f <|endoftext|>
<|endoftext|> english: Find all the regular files in $DIR directory tree which have not been modified in the last 15 days and delete them
bash: find Path -type f -mtime +Timespan -exec rm {} \; <|endoftext|>
<|endoftext|> english: find all the files in the current directory which have the size 40 bytes in the current disk partition.
bash: find Path -size -Size -xdev -print <|endoftext|>
<|endoftext|> english: Archive directory "." to "server2::sharename/B"
bash: rsync -a -v File File <|endoftext|>
<|endoftext|> english: Print percentage of the space used on the $FILESYSTEM.
bash: df -k File | tail - Quantity | awk Program <|endoftext|>
<|endoftext|> english: Search directory tree $DIR for *.txt files
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all files under current directory and show their file information
bash: find Path -type f -print0 | xargs -0 -I {} file {} <|endoftext|>
<|endoftext|> english: Change permissions to 644 recursively for PHP files.
bash: find Path -type f -name Regex -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Search the current user's home directory and its sub-directories for any file that ends in .tar-gz and was modified after filename was last modified.
bash: find Path -name Regex -newer File <|endoftext|>
<|endoftext|> english: Print the list of files in the current directory tree skipping SVN files
bash: find Path -path Regex -prune -or -print <|endoftext|>
<|endoftext|> english: Search the /path/to/dir directory tree for .c files
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: On host "server_b", connect as ssh user "user" and copy "/my_folder/my_file.xml" to directory "/my_new_folder/".
bash: scp File File <|endoftext|>
<|endoftext|> english: Read a line from standard input with a timeout of 0.1 seconds and prompt "This will be sent to stderr"
bash: read -t Quantity -p Regex <|endoftext|>
<|endoftext|> english: search for files cart4 or cart5 or cart6 in the folder junk which is in home folder and delete it.
bash: find Path -name Regex -exec rm {} \; <|endoftext|>
<|endoftext|> english: Recursively copies /mnt/usr/lib to the '/usr/' directory, creating symbolic links on each file instead of real copying them.
bash: cp -r -s File File <|endoftext|>
<|endoftext|> english: Perform a case insensitive search for *filename* files/directories under current directory tree
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: Find all files/directories with '.xml' extension that start with 'log4j' in their names under '/cygdrive/e/MyDocs/Downloads/work/OATS Domain related/' directory tree, search for files that contain the string 'CONSOLE' in their contents, then search for the string 'ASYNC' in the matched files and display the matched lines along with their filenames
bash: find Path -iname Regex | xargs -I {} grep -i -l -r Regex File | xargs -I {} grep -H Regex {} <|endoftext|>
<|endoftext|> english: Remove the last two alphanumeric file extensions from "mpc-1.0.1.tar.gz"
bash: echo Regex | sed -r Program <|endoftext|>
<|endoftext|> english: Synchronize "/home/user1/" to "wobgalaxy02:/home/user1/" including hidden files
bash: rsync -a -v File File <|endoftext|>
<|endoftext|> english: List all *.txt files/directories under current directory
bash: find Path -name Regex -exec echo {} \; <|endoftext|>
<|endoftext|> english: find all the files ending with undo in the current folder and calculate the total size of these files
bash: find Path -name Regex -ls | awk Program <|endoftext|>
<|endoftext|> english: Find all *.mp3, *.aif*, *.m4p, *.wav, *.flac files under $musicdir directory
bash: find Path -type f -print | grep -E -i Regex <|endoftext|>
<|endoftext|> english: Print "yes" 4 times followed by 1 "no"
bash: yes Regex | sed -e Program -e Program <|endoftext|>
<|endoftext|> english: Display the entire contents of 'file', replacing only the very first instance of "old" with "new".
bash: grep -E -m Quantity -n Regex File | sed Program File | sed Program File | sed -f File Program <|endoftext|>
<|endoftext|> english: Recursively move all files in "/path/to/srcdir" to "dest/"
bash: find Path -type f -print0 | xargs -0 -I {} mv {} File <|endoftext|>
<|endoftext|> english: compare each C header file in or below the current directory with the file /tmp/master
bash: find Path -name Regex -execdir diff -u {} File \; <|endoftext|>
<|endoftext|> english: Find all 400 permission files under /data directory with null character as the delimiter
bash: find Path -type f -perm Permission -print0 <|endoftext|>
<|endoftext|> english: Put the absolute directory path to the current script to MY_DIR variable
bash: dirname $( readlink -f File ) <|endoftext|>
<|endoftext|> english: remove all the files in the present directory which have space in their name.
bash: find Path -name Regex -exec rm -f {} \; <|endoftext|>
<|endoftext|> english: Counts lines in file fileName ignoring empty lines and lines with spaces only.
bash: awk Program Program <|endoftext|>
<|endoftext|> english: Delete all files under /path/to/input/ that match the case insensitive string literal 'spammer@spammy.com' in their contents
bash: find Path -type f -exec grep -q -i -F Regex File \; -delete <|endoftext|>
<|endoftext|> english: Search /some/directory for files that are owned by the user "joebob"
bash: find Path -user Regex -print <|endoftext|>
<|endoftext|> english: search for mp3 files in the folder /mp3collection which are smaller than 5MB
bash: find Path -name Regex -size -Size <|endoftext|>
<|endoftext|> english: Change permissions to 644 for all regular files under the /path/to/dir/ tree unless these permissions are already set
bash: find Path -type f ! -perm Permission -print0 | xargs -0 -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: Print out the full path name of "mypathname" with dots resolved
bash: readlink -e -v File <|endoftext|>
<|endoftext|> english: Search for 'whatIWantToFind' in all files under current directory
bash: find Path -exec grep Regex {} \; <|endoftext|>
<|endoftext|> english: Copy all files and directories in "/home/" to "/newhome" preserving directory hierarchy and modification time
bash: find Path -maxdepth Quantity -print | cpio -p -a -m -V -d Regex <|endoftext|>
<|endoftext|> english: Back up all *.txt files/directories in new files/directories with a .bak extension in their names under /etc directory
bash: find Path -print0 -name Regex | xargs -I {} -0 mv {} File <|endoftext|>
<|endoftext|> english: Find files with group write permission and remove the permission
bash: find Path -perm -Permission -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Extract number from $filename of the form "something_12345_else" and set the variable "number" to this number.
bash: echo Regex | awk -F Regex Program <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory that match the case insensitive extended regex .*/(EA|FS)_.*
bash: find -E Path -iregex Regex <|endoftext|>
<|endoftext|> english: Search directory tree `MyApp.app' for directories whose name is 'Headers' and delete them
bash: find Path -name Regex -type d -exec rm -r -f {} \; <|endoftext|>
<|endoftext|> english: Print nothing because B.txt is compared with itself.
bash: comm -2 -3 <( sort -n File ) <( sort -n File ) <|endoftext|>
<|endoftext|> english: find and delete all the files in the entire file system whose size is greater than 100MB.
bash: find Path -size +Size -exec rm -r -f {} \; <|endoftext|>
<|endoftext|> english: Recursively changes group ownership of every folder in a current directory to the name of that folder.
bash: find Path -type d | sed -e Program | awk Program | xargs -I {} chgrp {} <|endoftext|>
<|endoftext|> english: Find all the regular files under directory 'dir1' that are at least N levels deep
bash: find Path -mindepth Quantity -type f <|endoftext|>
<|endoftext|> english: find all the backup files in the current folder and delete them
bash: find Path -type f -name Regex -exec rm -f {} \; <|endoftext|>
<|endoftext|> english: Print only common file names in sorted listings of directory 'dir1' and 'dir2'
bash: comm -1 -2 <( ls File | sort ) <( ls File | sort ) <|endoftext|>
<|endoftext|> english: Find "*.dat" files recursively in the current directory, print the lines starting on line 5 to the console and save to "concat.txt"
bash: find Path -type f -name Regex -exec tail -n +Quantity -q File {} + | tee File <|endoftext|>
<|endoftext|> english: Search for the string 'foo' in *.html files under /usr/src/linux directory
bash: grep Regex $( find Path -name Regex ) <|endoftext|>
<|endoftext|> english: Lists long format information about file '/bin/echo'.
bash: ls -l File <|endoftext|>
<|endoftext|> english: Continuously send ping requests to broadcast address "10.10.0.255" and print the IP addresses who respond
bash: ping -b Regex | grep Regex | awk Program <|endoftext|>
<|endoftext|> english: Change the ownership of all aluno1's files in the current directory and below to aluno2
bash: find Path -user Regex -exec chown Regex {} \; <|endoftext|>
<|endoftext|> english: Clears the terminal screen.
bash: clear <|endoftext|>
<|endoftext|> english: display a list of all the normal/regular files in the file system ,excluding the folder proc which have the suid or sgid bit set
bash: find Path -path Regex -prune -or -type f -perm +Permission -ls <|endoftext|>
<|endoftext|> english: Find files in the /var/log folder which were modified modified 2 weeks ago
bash: find Path -mtime +Timespan -mtime -Timespan <|endoftext|>
<|endoftext|> english: Count the number of times that a single "-----------\n" separated record contains both "A=2" and "dummy=2" in compressed file "file.gz"
bash: zcat Regex | awk -v Program Program <|endoftext|>
<|endoftext|> english: Find all regular files with permissions 777 under and below /home/user/demo/, and change their permissions to 755
bash: find Path -type f -perm Permission -print -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Prints the first N bytes of file.txt
bash: head -c Quantity File <|endoftext|>
<|endoftext|> english: Use the first non-zero exit code (if any) of a set of piped commands as the exit code of the full set of commands
bash: set -o pipefail <|endoftext|>
<|endoftext|> english: Show manual page for the find utility
bash: man Regex <|endoftext|>
<|endoftext|> english: list files in /u/bill that were last read from 2 to 6 minutes ago
bash: find Path -amin +Quantity -amin -Quantity <|endoftext|>
<|endoftext|> english: Gets list of IP addresses of all network interfaces.
bash: ifconfig | awk -F Regex Program <|endoftext|>
<|endoftext|> english: Dump "FILENAME" as 2 byte wide hexadecimal numbers
bash: od -t x2 File <|endoftext|>
<|endoftext|> english: Locate OGG files under the home directory larger than 100 megabytes
bash: find Path -iname Regex -size +Size <|endoftext|>
<|endoftext|> english: Find all *.xml.bz2 files under current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: compresses all the files in the current folder with default depth
bash: find Path -depth -print | cpio -d -u -m -p Regex <|endoftext|>
<|endoftext|> english: Print all user names and terminals of users who are logged in
bash: who | awk Program <|endoftext|>
<|endoftext|> english: remove all the ".core" files in the file system
bash: find Path -name Regex -print -exec rm {} \; <|endoftext|>
<|endoftext|> english: recursively look for files ending in either .py or .py.server
bash: find Path -type f -regex Regex <|endoftext|>
<|endoftext|> english: find all directories with the name root in the entire file system.
bash: find Path -type d -name Regex <|endoftext|>
<|endoftext|> english: Change the permissions of all regular files whose names end with .mp3 in the directory tree /var/ftp/mp3
bash: find Path -name Regex -type f -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Delete all regular files with '.txt' extension that were modified in more than 25 minutes ago in maximum 1 level down the directory '/home/u20806/public_html'
bash: find Path -daystart -maxdepth Quantity -mmin +Quantity -type f -name Regex Path Path -f {} Path <|endoftext|>
<|endoftext|> english: search for a word in all the normal/regular files in the current folder
bash: find Path -type f | xargs -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: display all the directories in the current folder which are atleast one level deep
bash: find Path -mindepth Quantity -type d -print0 <|endoftext|>
<|endoftext|> english: Searches the manual page names and descriptions by 'disk' keyword.
bash: apropos Regex <|endoftext|>
<|endoftext|> english: Change symbolic link "$f" into a file
bash: cp --remove-destination $( readlink File ) File <|endoftext|>
<|endoftext|> english: Find largest file in linux with find command
bash: find Path -type f -printf "%s\t%p\n" | sort -n | tail - Quantity <|endoftext|>
<|endoftext|> english: Find all files in the /etc folder that have been modified within the last 30 days and copy them to /a/path/.
bash: find Path -mtime -Timespan | xargs -0 -I {} cp File {} <|endoftext|>
<|endoftext|> english: Display the last slash-separated part of each filename path in file.txt
bash: rev File | cut -d Regex -f Number | rev <|endoftext|>
<|endoftext|> english: Removes all files from current folder but 5 newest ones, filtering out directories from initial search.
bash: ls -t -p | grep -v Regex | tail -n +Quantity | xargs -d Regex -I {} rm -- {} <|endoftext|>
<|endoftext|> english: Save the greater version number of "$1" and "$2" into variable "ver"
bash: echo -n -e Regex | sort -V -r | head -n Quantity <|endoftext|>
<|endoftext|> english: Print lines in the sorted contents of "a.txt" that are not in the sorted contents of "b.txt"
bash: comm -2 -3 <( sort File ) <( sort File ) <|endoftext|>
<|endoftext|> english: Find files/directories named blah under current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find and delete all core files in the user's home directory and below.
bash: find Path -name Regex -exec rm {} \; <|endoftext|>
<|endoftext|> english: print all PIDs of stopped processes
bash: jobs -s -l | awk Program <|endoftext|>
<|endoftext|> english: Search the /Applications directory tree for *.app directories
bash: find Path -type d -name Regex <|endoftext|>
<|endoftext|> english: find all the html files in the current folder which have been modified exactly 7 days ago
bash: find Path -mtime Timespan -name Regex -print <|endoftext|>
<|endoftext|> english: Print the first 32 hexadecimal characters from "/dev/urandom", determining C locale for character handling functions
bash: cat File | env Program Program Program Program | head -c Quantity <|endoftext|>
<|endoftext|> english: Find all *.err files under current directory that are larger than 5120 bytes in size
bash: find Path -type f -size +Size -name Regex <|endoftext|>
<|endoftext|> english: display all the files in the current directory excluding those that are in the 'secret' directory
bash: find Path -name Regex -prune -or -print <|endoftext|>
<|endoftext|> english: Find all directories under $FOLDER, take the first fields (dot (.) as the delimiter) from their timestamps and reverse sort them numerically
bash: find Path -type d -printf "%T@\n" | cut -f Number -d Regex | sort -n -r <|endoftext|>
<|endoftext|> english: Find all files in current directory and search for 'searchName' in those files and show errors for files that are not directly on the current directory
bash: find Path -name Regex -printf "%f\n" | xargs -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: Find user daniel's files of type jpeg
bash: find Path -user Regex -type f -name Regex <|endoftext|>
<|endoftext|> english: find all the files in the current folder which which have been modified yesterday and day before yesterday and whose name is of length 1
bash: find Path -name Regex -daystart -mtime +Timespan -mtime -Timespan <|endoftext|>
<|endoftext|> english: Calculate the md5 sum of all files in the current directory and formatting the output by removing parenthesis
bash: find Path -maxdepth Quantity -type f -exec md5sum {} \; | sed Program <|endoftext|>
<|endoftext|> english: Find all directories under current directory tree that match the case insensitive regex '^\./course\([0-9]\.\)*[0-9]$' in their paths
bash: find Path -type d -iregex Regex <|endoftext|>
<|endoftext|> english: Find all files/directories under $something directory
bash: find Path <|endoftext|>
<|endoftext|> english: find all the text files in  the current folder and do not search in somedir, bin directories
bash: find Path \( -name Regex -prune \) -and \( -name Regex -prune \) -or \( -name Regex -print \) <|endoftext|>
<|endoftext|> english: Find all *shp* files/directories under current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all the files under /home directory with name tecmint.txt
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Display a long listing of all the regular files owned by the user 'bluher' in the entire filesystem
bash: find Path -type f -user Regex -exec ls -l -s {} \; <|endoftext|>
<|endoftext|> english: Make directory named in variable "archive" with ".tar*" stripped from the end
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: Find all files under current directory and print them appending a null character at the end of each file paths
bash: find Path -type f -print0 <|endoftext|>
<|endoftext|> english: find all the text files in the current folder and display their Permissions and size along with their name
bash: find Path -name Regex -printf "%M %f \t %s bytes \t%y\n" <|endoftext|>
<|endoftext|> english: Find all files under /path and below writable by `group' and `other'
bash: find Path -perm -Permission <|endoftext|>
<|endoftext|> english: find all files in the current folder which have been accessed in the last 30 minutes
bash: find Path -amin -Quantity <|endoftext|>
<|endoftext|> english: Recursively finds files like 'example.com', ignoring case differences, and filters out files with 'beta' in path.
bash: find Path -iname Regex | grep -v Regex <|endoftext|>
<|endoftext|> english: Archive directory "tata" to directory "tata2", compressing data during copy.
bash: rsync -a -v -z File File <|endoftext|>
<|endoftext|> english: Print IP addresses of the host name
bash: hostname --ip-address <|endoftext|>
<|endoftext|> english: display all the files in current folder which have been changed in the last 2-6 days
bash: find Path -cmin +Quantity -cmin -Quantity <|endoftext|>
<|endoftext|> english: Save number of lines with any-cased 'merge' from $COMMIT_EDITMSG file in 'MERGE' variable
bash: cat File | grep -i Regex | wc -l <|endoftext|>
<|endoftext|> english: Set up SSH connection forwarding in the background with no terminal or command execution from localhost port 8888 to "proxyhost" port 8888 and a reverse connection from "officefirewall" port 22222 to "localhost" port 22
bash: ssh -f -N -T -L Regex -R Regex Regex <|endoftext|>
<|endoftext|> english: Move *wp-admin/index.php files under /var/www/  to ./index_disabled
bash: find Path -path Regex -exec mv {} $( dirname {} ) \; <|endoftext|>
<|endoftext|> english: find all files in current folder which have been accessed exactly 10 minutes ago
bash: find Path -amin Quantity <|endoftext|>
<|endoftext|> english: find all the files in the current folder and display them in the sorted order of their name
bash: find Path | sort <|endoftext|>
<|endoftext|> english: Remove the first 13 characters of each ".txt" filename in the "/tmp" directory tree and number the output
bash: find Path -type f -name Regex | cut -c Number | nl <|endoftext|>
<|endoftext|> english: Find recursively the files named "file" in the current directory ignoring all .git directories
bash: find Path -name Regex -prune -or -name Regex -print <|endoftext|>
<|endoftext|> english: Show the mv commands that would rename the *.so files in the current directory tree prepending their names with "lib"
bash: find Path -name Regex -printf "mv '%h/%f' '%h/lib%f'\n" | less -S <|endoftext|>
<|endoftext|> english: display all the files in the current folder for the files which have not been accessed in the last 24 hours
bash: find Path -type f -atime +Timespan <|endoftext|>
<|endoftext|> english: return every file that does not have bar somewhere in its full pathname
bash: find Path ! -path Regex -print <|endoftext|>
<|endoftext|> english: Run 'make -e' with an environment variable 'HOSTNAME' set to the system hostname
bash: hostname <|endoftext|>
<|endoftext|> english: unzip and search for a word in all the jar files in the current folder and display the matched file name
bash: find Path -iname Regex -printf "unzip -c %p | grep -q '<stringWithOrWithoutSpacesToFind>' && echo %p\n" | sh <|endoftext|>
<|endoftext|> english: Remove the last 3 characters from 987654321, keeping only 987654
bash: echo Regex | rev | cut -c Number | rev <|endoftext|>
<|endoftext|> english: Remove all *.log files from the current directory tree
bash: find Path -name Regex -print0 | xargs -0 -I {} rm {} <|endoftext|>
<|endoftext|> english: Search for the regex '^ERROR' in all *.log files under current directory
bash: find Path -name Regex -exec grep -E -l Regex {} \; <|endoftext|>
<|endoftext|> english: List all files in a current folder, separating names with semicolon
bash: ls -m | tr -d Regex | tr Regex Regex <|endoftext|>
<|endoftext|> english: List root's regular files with permissions 4000
bash: find Path -type f -user Regex -perm -Permission -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: get all files in a current directory modified in the last 7 days
bash: find Path -mtime -Timespan -print0 | xargs -0 -I {} tar -r -f File {} <|endoftext|>
<|endoftext|> english: Print each line in "file1" whose first word does not exist as the first word of any line in "file2"
bash: join -v Quantity <( sort File ) <( sort File ) <|endoftext|>
<|endoftext|> english: Recursively change ownership of "~/.npm" to the current user
bash: chown -R $( whoami ) File <|endoftext|>
<|endoftext|> english: Look for files with the name 'search' under current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Replace all occurrences of 'subdomainA.example.com' with 'subdomainB.example.com' in all regular files under '/home/www' directory tree
bash: find Path -type f -print0 | xargs -0 -I {} sed -i Program {} <|endoftext|>
<|endoftext|> english: Remove all non-hidden files in the current directory tree
bash: find Path -name Regex | xargs -I {} rm -f {} <|endoftext|>
<|endoftext|> english: change the group to "new_group" and permissions to 770 for all the files in the current folder
bash: find Path -name Regex \( -exec chgrp -v Regex {} \; -or -exec chmod -v Permission {} \; \) <|endoftext|>
<|endoftext|> english: Save all entries that are wrapped around with opening and closing square brackets in file 'FILENAME' to variable 'var'
bash: grep -E -o Regex File | tr -d Regex <|endoftext|>
<|endoftext|> english: Page through the contents of 'file', but excess from lines that don't fit within the screen/window width is cut.
bash: less -S File <|endoftext|>
<|endoftext|> english: Lists the pids of all processes that have process '1782' as their parent.
bash: pstree -p Regex | sed Program | sed -n -e Program <|endoftext|>
<|endoftext|> english: Removes all empty folders under current folder.
bash: find Path -type d -exec rmdir Directory \; <|endoftext|>
<|endoftext|> english: Search for 'string-to-find' in all files under current directory tree and show the matched lines with their filenames
bash: find Path -exec grep -H Regex {} \; <|endoftext|>
<|endoftext|> english: search for all the regular/normal mp3 files in the file system and move them to the folder /mnt/mp3
bash: find Path -iname Regex -type f -print0 | xargs -0 -I {} mv {} File <|endoftext|>
<|endoftext|> english: Rename the *.so files in the current directory tree prepending their names with "lib"
bash: find Path -name Regex -printf "mv '%h/%f' '%h/lib%f'\n" | bash <|endoftext|>
<|endoftext|> english: Print the files in the current directory as a list of semicolon separated values
bash: ls -m | tr -d Regex | tr Regex Regex <|endoftext|>
<|endoftext|> english: Change the permission to 644 for all files under current directory
bash: find Path -type f | xargs -I {} chmod -v Permission {} <|endoftext|>
<|endoftext|> english: Find all files and directories whose names end in ".rpm" and change their permissions to 755
bash: find Path -name Regex -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Find all files/directories that are not newer than Jul 01 by modification time
bash: find Path ! -newermt Regex <|endoftext|>
<|endoftext|> english: Print the total disk usage in bytes of all files listed in "files.txt"
bash: cat File | xargs -I {} du -c {} | tail - Quantity | awk Program <|endoftext|>
<|endoftext|> english: search for a word in all the files with the extension "ch" in the current folder
bash: find Path -name Regex | xargs -I {} grep -E Regex {} <|endoftext|>
<|endoftext|> english: Search /usr/local recursively for directories whose names end with a number 0-9
bash: find Path -type d -name Regex <|endoftext|>
<|endoftext|> english: find regular files which modification time is  7 days ago
bash: find Path -mtime -Timespan -type f <|endoftext|>
<|endoftext|> english: find all files in the folder /path/to/dir which have been modified between two dates
bash: find Path -newermt Regex ! -newermt Regex -ls <|endoftext|>
<|endoftext|> english: Find all directories in maximum 1 level down the $front_element directory, sort them according to modification time and list them excluding the $front_element path from the list
bash: find Path -maxdepth Quantity -type d -not -path Regex -printf '%T@ %p\n' | sort | awk Program <|endoftext|>
<|endoftext|> english: delete all the empty in the current folder and all its sub directories
bash: find Path -depth -type d -empty -exec rmdir {} \; <|endoftext|>
<|endoftext|> english: Find all files/directories named 'javac' under current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find .rmv files in the ./root directory recursively and copy them to directory /copy/to/here
bash: find Path -name Regex -type f -exec cp {} File \; <|endoftext|>
<|endoftext|> english: Look for *.jpg files
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: get all the files that are exactly 30 days old
bash: find Path -mtime Timespan -print <|endoftext|>
<|endoftext|> english: Find any file that has "disc" somewhere in its name in the current directory and all of its sub-directories.
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Replace all occurrences of edx (case insensitive) with gurukul in all *.css (case insensitive) files under ./cms/djangoapps/contentstore/views directory
bash: find Path -iname Regex | xargs -I {} sed -i Program {} <|endoftext|>
<|endoftext|> english: Find all $1 files/directories under current directory and enter into the parent directory of the first one found
bash: cd $( find Path -name Regex | xargs -I {} dirname {} ) <|endoftext|>
<|endoftext|> english: prints the names of all files in the directory tree rooted in /usr/src whose name ends with ‘.c’ and that are larger than 100 Kilobytes.
bash: find Path -name Regex -size +Size -print <|endoftext|>
<|endoftext|> english: Reports count of characters in the value of ${FOO_NO_LEAD_SPACE} variable as follows: "length(FOO_NO_LEAD_SPACE)==<counted number of characters>"
bash: echo -e $( echo -n -e Regex | wc -m ) <|endoftext|>
<|endoftext|> english: Print a single line of numbers from "001" to "100"
bash: yes | head -n Quantity | awk Program <|endoftext|>
<|endoftext|> english: Find the .groovy files outside the "./target" directory path
bash: find Path -name Regex -not -path Regex -print <|endoftext|>
<|endoftext|> english: Copy the entire contents of the current directory preserving ownership, permissions, and times
bash: find Path | cpio -p -d -u -m -v Regex <|endoftext|>
<|endoftext|> english: find all regular/normal files in the current folder
bash: find Path -type f <|endoftext|>
<|endoftext|> english: Find all files under /home/username/public_html/sites/all/themes and set their permission to 640
bash: find Path -type f -exec chmod Permission {} + <|endoftext|>
<|endoftext|> english: Display a long listing of all the regular files under current directory tree that are newer than ‘Apr 18 23:59:59 EDT 2013’ and older than ‘Apr 20 00:00:00 EDT 2013’ by modification time
bash: find Path -type f -newermt Regex ! -newermt Regex -exec ls -l File \; <|endoftext|>
<|endoftext|> english: Find all filenames ending with .c in the /usr directory tree
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Search for all files newer than file /tmp/t
bash: find Path -newer File <|endoftext|>
<|endoftext|> english: Find all .txt files under the current directory and below
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Save hexadecimal byte 10 in binary file "file.moi" to variable "day"
bash: od -t x1 --skip-bytes Size --read-bytes Size File | head - Quantity | awk Program <|endoftext|>
<|endoftext|> english: Treat each line of "list-of-entries.txt" as a value to be put in one cell of the table that "column" outputs
bash: column File <|endoftext|>
<|endoftext|> english: Search the regular files from directory tree 'directory_name' for "word" and print the names of the matched files
bash: find Path -type f -print0 | xargs -0 -I {} grep -l -i Regex {} <|endoftext|>
<|endoftext|> english: Counts sum of non-empty lines from all .php files in a current folder.
bash: find Path -name Regex | xargs -I {} grep -v -c Regex {} | awk Program <|endoftext|>
<|endoftext|> english: Print new line separated numbers from "001" to "100"
bash: yes | nl -b a | tr Regex Regex | sed Program | cut -b Number <|endoftext|>
<|endoftext|> english: Find all files under /home/myfolder that match the regex 'abc.*def.*ghi' in their contents
bash: find Path -type f -print0 | xargs -0 -I {} grep -l -E Regex {} <|endoftext|>
<|endoftext|> english: Set trace prompt to print seconds, nnoseconds, script name, and line number
bash: $( date "+%s:%N" ) <|endoftext|>
<|endoftext|> english: Find all PHP files under current directory that contain only one line
bash: find Path -name Regex -print | xargs -L Quantity -I {} awk Program {} <|endoftext|>
<|endoftext|> english: SSH in server 'server' as user 'user' with X11 forwarding disabled
bash: ssh -x Regex <|endoftext|>
<|endoftext|> english: Create intermediate directories as required and directory /tmp/test/blah/oops/something
bash: mkdir -p Directory <|endoftext|>
<|endoftext|> english: Rename "old" to "tmp"
bash: mv File File <|endoftext|>
<|endoftext|> english: Find all files of the user with UID=1000
bash: find Path -uid Regex <|endoftext|>
<|endoftext|> english: Find all directories in the current directory tree that were last modified more than 5 minutes ago but less than 60 minutes ago
bash: find Path -mmin -Quantity -mmin +Quantity <|endoftext|>
<|endoftext|> english: find all the files in the file system which have been modified in the last 10 minutes
bash: find Path -mmin -Quantity <|endoftext|>
<|endoftext|> english: Disables shell option 'compat31'.
bash: shopt -u compat31 <|endoftext|>
<|endoftext|> english: run ksh shell as user apache
bash: su Regex -s /bin/ksh <|endoftext|>
<|endoftext|> english: Count the number of files named `file1'
bash: find Path -name Regex | wc -l <|endoftext|>
<|endoftext|> english: Search all files in the current directory tree whose names end in "1" for string "1"
bash: find Path -name Regex -exec grep Regex {} \; <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory that match the case insensitive regex .*/\(EA\|FS\)_.*
bash: find Path -iregex Regex <|endoftext|>
<|endoftext|> english: delete all the text files from the current folder after user confirmation
bash: find Path -name Regex -ok rm {} \; <|endoftext|>
<|endoftext|> english: Find all .c and .h files in the current directory tree and search them for "expr"
bash: find Path -name Regex | xargs -I {} grep -E Regex {} <|endoftext|>
<|endoftext|> english: change the permissions of all the regular/normal files in the folder "/path/to/someDirectory" to 644
bash: find Path -type f -print0 | xargs -0 -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: search for all the regular/normal files in the current folder which start with "my"
bash: find Path -name Regex -type f <|endoftext|>
<|endoftext|> english: Recursively change owner and group to "$JBOSS_AS_USER" of "$JBOSS_AS_DIR"
bash: chown -R Regex File <|endoftext|>
<|endoftext|> english: Represent the current time as seconds since epoch and save it to variable 'TODAY'
bash: date -d $( date +%F ) +%s <|endoftext|>
<|endoftext|> english: Print login name and full name of all users currently logged in
bash: finger -l | awk Program <|endoftext|>
<|endoftext|> english: find all the files with the name september ( case insensitive )
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: find all files in the current directory and sub-directories that were modified after the /etc/passwd file was modified
bash: find Path -newer File <|endoftext|>
<|endoftext|> english: Prints list of user 'myuser' groups in a format: 'groups: [comma-separated groups list]'.
bash: echo $( groups Regex | sed -e Program -e Program ) <|endoftext|>
<|endoftext|> english: Find all *.css files under /starting/directory and print filenames and the lines matching the regex '\.ExampleClass' from those files
bash: find Path -type f -name Regex | xargs -t -i -I {} grep Regex {} {} <|endoftext|>
<|endoftext|> english: Recursively find the latest modified file in the current directory
bash: find Path -type f -print0 | xargs -0 -I {} ls -d -r -t {} | tail -n Quantity <|endoftext|>
<|endoftext|> english: Search for directory foo ignoring case
bash: find Path -iname Regex -type d <|endoftext|>
<|endoftext|> english: Find files in /var/tmp/stuff and below that have not been modified in over 90 days
bash: find Path -mtime +Timespan -print <|endoftext|>
<|endoftext|> english: Gets IP address of first listed network interface in system.
bash: ifconfig | grep -E Regex | grep -v Regex | awk Program | cut -f Number -d Regex <|endoftext|>
<|endoftext|> english: find the file arrow.jpg in the entire file system
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all the files which are changed in last 1 hour
bash: find Path -cmin -Quantity <|endoftext|>
<|endoftext|> english: Search the current directory tree for executable files
bash: find Path -type f Path -print <|endoftext|>
<|endoftext|> english: Generate the obsolete 29 character Spanish alphabet and number each character
bash: echo -e Regex | nl <|endoftext|>
<|endoftext|> english: ssh into default vagrant host without running "vagrant ssh" by passing the configuration parameters vagrant uses for ssh
bash: ssh Regex -p Regex -o Compression=yes -o DSAAuthentication=yes -o LogLevel=FATAL -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o IdentitiesOnly=yes -i File -o ForwardAgent=yes <|endoftext|>
<|endoftext|> english: Find all files/directories named 'photoA.jpg' under current directory tree
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Calculate the md5sum of the executable file of command "gcc"
bash: md5sum $( which Regex ) <|endoftext|>
<|endoftext|> english: find files which full path name is /tmp/foo/bar under foo directory and print
bash: find Path -path Regex -print <|endoftext|>
<|endoftext|> english: Delete all filename* files under /dir directory
bash: find Path -name Regex -type f -delete <|endoftext|>
<|endoftext|> english: display all normal/regular files in the folder "$ORIG_DIR"
bash: find Path -name Regex -type f <|endoftext|>
<|endoftext|> english: Compare files in "/tmp/dir1" and "/tmp/dir2", treating absent files as empty and all files as text
bash: diff -N -a -r File File <|endoftext|>
<|endoftext|> english: Removes all empty folders under '/path/to/the/folder' path.
bash: find Path -depth -type d -print0 | xargs -0 -I {} rmdir {} <|endoftext|>
<|endoftext|> english: find files ending with .jpg
bash: find Path -name Regex -print Path <|endoftext|>
<|endoftext|> english: Delete all HTML files under tree ~/mydir
bash: find Path -iname Regex -exec rm {} \; <|endoftext|>
<|endoftext|> english: Find all files with name ending with .txt and display only the filenames without full paths
bash: find Path -name Regex | rev | cut -d Regex -f Number | rev <|endoftext|>
<|endoftext|> english: Make directory "~/log"
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: Try to determine the type of contents in "myfile" located in user's home directory.
bash: file File <|endoftext|>
<|endoftext|> english: Convert the content of variable 'CLEAN' to small letters
bash: echo -n Regex | tr Regex Regex <|endoftext|>
<|endoftext|> english: List all environment variables (name and value) whose name either equals PATH or starts with GOBIN
bash: env | grep Regex <|endoftext|>
<|endoftext|> english: Find all files/directories under 'my key phrase' directory
bash: find Path <|endoftext|>
<|endoftext|> english: List all files and directories in long list format with a time style of "long-iso" and sort from oldest modifed to newest modified
bash: ls -l --time-style long-iso | sort -k Number <|endoftext|>
<|endoftext|> english: Replace "inputfile" with a sorted unique list of its contents
bash: sort File | uniq | sort -o File <|endoftext|>
<|endoftext|> english: Creates temporary file with appended suffix '.cmd' and saves path to it in 'LGT_TEMP_FILE' variable.
bash: mktemp --suffix Regex <|endoftext|>
<|endoftext|> english: find all the jpg files in the directory /ftp/dir which are bigger than 500KB
bash: find Path -size +Size -iname Regex <|endoftext|>
<|endoftext|> english: Find .rmv files in the ./root directory recursively and copy them to directory /copy/to/here
bash: find Path -name Regex -type f -exec cp --parents {} File \; <|endoftext|>
<|endoftext|> english: Print the names of all files and directories in the current directory tree
bash: find Path <|endoftext|>
<|endoftext|> english: Force create a symbolc link named "/usr/local/bin/fpdf" to "/usr/local/bin/findpdftext"
bash: ln -s -f File Regex <|endoftext|>
<|endoftext|> english: Print the largest 20 files under current directory
bash: find Path -type f -printf '%k %p\n' | sort -n | tail -n Quantity <|endoftext|>
<|endoftext|> english: Find all regular files in the current directory tree ignoring directory ./source/script
bash: find Path -path Regex -prune -or -type f -print <|endoftext|>
<|endoftext|> english: Print out the names of all directories in mydir recursively
bash: find Path -type d <|endoftext|>
<|endoftext|> english: Creates temporary file in a current folder with name formatted like 'templateXXXXXX', and saves path to it in 'tempfile' variable.
bash: mktemp $( pwd ) <|endoftext|>
<|endoftext|> english: search for all the files in current folder and display all the file names separated by space
bash: find Path | paste -s -d File <|endoftext|>
<|endoftext|> english: Find all regular files in the current directory tree that are not readable by all
bash: find Path -type f ! -perm -Permission <|endoftext|>
<|endoftext|> english: Connect as ssh user specified by variable USER to host whose IP address or host name is specified by HOST, and copy remote file specified by variable SRC to location on local host specified by variable DEST, disabling progress info but enabling debug info.
bash: scp -q -v File File <|endoftext|>
<|endoftext|> english: Enables shell option 'nullglob'.
bash: shopt -s execfail <|endoftext|>
<|endoftext|> english: Find all files/directories named file in 2 and 3 levels down the current directory
bash: find Path -mindepth Quantity -maxdepth Quantity -name Regex <|endoftext|>
<|endoftext|> english: Unzip and extract "*\(userAgent=[^=]*\) [^ =][^ =]*=.*" from "input.gz"
bash: zcat Regex | sed -n Program <|endoftext|>
<|endoftext|> english: display all executable files in the folder /home
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: Delete all regular files named 'FILE-TO-FIND' under current directory tree
bash: find Path -type f -name Regex -exec rm -f {} \; <|endoftext|>
<|endoftext|> english: find  js file which name is not  'glob-for-excluded-dir'  under current directory.
bash: find Path -name Regex ! -name Regex -prune <|endoftext|>
<|endoftext|> english: Find all CSS files that do something with HTML ID #content
bash: find Path -name Regex -exec grep -l Regex {} \; <|endoftext|>
<|endoftext|> english: find all the reglar files which ahve been changed in the last 5 minutes and do not search in the sub directories.
bash: find Path -maxdepth Quantity -cmin -Quantity -type f <|endoftext|>
<|endoftext|> english: Find recursively regular files in the current directory tree
bash: find Path -type f -print0 <|endoftext|>
<|endoftext|> english: Search for 'js' in all files under current directory that match 'some string' in their names
bash: find Path | grep Regex | grep Regex <|endoftext|>
<|endoftext|> english: Make a directory in the current working directory with a random 32 alphanumeric character name
bash: mkdir $( cat File | tr -d -c Regex | fold -w Quantity | head -n Quantity ) <|endoftext|>
<|endoftext|> english: Saves real path of the folder containing the current script
bash: dirname $( readlink -f File ) <|endoftext|>
<|endoftext|> english: find  files which full path name is /tmpfoo/bar under foo directory and print
bash: find Path -path Regex -print <|endoftext|>
<|endoftext|> english: list all samba files in /var/l* directory ( /var/lib or /var/log )
bash: find Path -path Regex <|endoftext|>
<|endoftext|> english: Write every two lines in "infile" on a single line separated by a comma
bash: cat File | paste -s -d File <|endoftext|>
<|endoftext|> english: Changes group ownership of 'public' and 'private' to 'god'.
bash: chgrp Regex File File <|endoftext|>
<|endoftext|> english: Find all C source code files from the current directory tree that contain "keyword" in their pathnames, ignoring the case
bash: find Path -type f -iname Regex | grep -i Regex <|endoftext|>
<|endoftext|> english: Recursively change the owner and group of "subdir2" to "user2"
bash: chown Regex -R File <|endoftext|>
<|endoftext|> english: Find all files with the name "MyProgram.c" in the current directory and all of it's sub-directories.
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all *.cls files/directories under current directory and print '{if(length($0) > L) { LINE=$0; L = length($0)}} END {print LINE"L"L}' for each of them where $0 is expanded to the file/directory path
bash: find Path -iname Regex -exec echo Regex {} \; <|endoftext|>
<|endoftext|> english: Find all files whose names end with "~" in the /home/peter directory tree, following symlinks, and delete them
bash: find -L Path -name Regex -print0 | xargs -0 -r -I {} rm {} <|endoftext|>
<|endoftext|> english: find all text files in the current directory and compress them to a cpio file
bash: find Path -name Regex | cpio -p -d -m Regex <|endoftext|>
<|endoftext|> english: Find all files in the current directory and below with extension .php and replace "php" with "html" in their names
bash: find Path -type f -name Regex | xargs -r -I {} rename Regex {} <|endoftext|>
<|endoftext|> english: Find all  'custlist*' files under current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Read a line from standard input with prompt "Are you sure? [Y/n]" and save response in variable "response"
bash: read -r -p Regex Regex <|endoftext|>
<|endoftext|> english: Display all files in a folder
bash: find Path -print <|endoftext|>
<|endoftext|> english: Wrap each line in "longline" to a maximum of 30 characters
bash: fold -w Quantity File <|endoftext|>
<|endoftext|> english: Recursively finds strings with the whole word 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.
bash: grep -E -w -R Regex File <|endoftext|>
<|endoftext|> english: Find all files/directories that belong to the group 'staff' under '/usr' directory tree
bash: find Path -group Regex <|endoftext|>
<|endoftext|> english: Find .java files in the current directory tree that contain 'TODO', and print their pathnames
bash: find Path -name Regex -exec grep -H -i -n Regex {} + | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: find all the perl files in the current folder and search for a pattern
bash: find Path -name Regex | xargs -I {} grep -L Regex {} <|endoftext|>
<|endoftext|> english: Copy all files matching "*.sh" in "$from/*" to "root@$host:/home/tmp/" compressing data during transmission
bash: rsync -z -v -r --include Regex --exclude Regex File File <|endoftext|>
<|endoftext|> english: find all ".flac" files starting with "cmn-" and search for files having CJK characters using unicodes
bash: find Path -name Regex -print | grep -P Regex <|endoftext|>
<|endoftext|> english: Write "fifo forever" infinitely using the named pipe "fifo" by writing its contents to standard output and to "fifo"
bash: echo Regex | cat File File | tee File <|endoftext|>
<|endoftext|> english: find files (under root file system /) that were accessed within the last 24 hours
bash: find Path -atime -Timespan <|endoftext|>
<|endoftext|> english: Create a symbolc link in the current directory to "target"
bash: ln -s File <|endoftext|>
<|endoftext|> english: Change to directory listed in file '$HOME/.lastdir'
bash: cd $( cat File ) <|endoftext|>
<|endoftext|> english: find any files in the current directory that begin with a number
bash: find Path -regex Regex -print <|endoftext|>
<|endoftext|> english: Filnd all directory in root directory with 777 permission and change permision755  with chmod commad .
bash: find Path -type d -perm Permission -print -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Search the current directory tree for files whose names match regular expression '.*packet.*', ignoring the case
bash: find Path -iregex Regex <|endoftext|>
<|endoftext|> english: Find all files in the current directory tree that match pattern 'a(b*'
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: Remove regular files whose names match Perl regular expression '\w+-\d+x\d+\.\w+$' from the current directory tree
bash: find Path -type f | grep -P Regex | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: Change permissions to u=rw,g=r,o= for all files inside the current directory tree
bash: find Path -type f -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Recursively search for all files with names ending with "_test.rb", renaming them to end with "_spec.rb", using at most 1000000 characters per command.
bash: find Path -name Regex | xargs -s Quantity -I {} rename Regex {} <|endoftext|>
<|endoftext|> english: Format the contents of "[file]" in a neat table
bash: cat File | column -t <|endoftext|>
<|endoftext|> english: List all files under the current working directory tree
bash: find Path $( pwd ) -type f <|endoftext|>
<|endoftext|> english: Find files/directories containing 'test' in their names and display the directory contents before the directories themselves
bash: find Path -name Regex -depth <|endoftext|>
<|endoftext|> english: search for all the files in the folder /data/images which have been modified after /tmp/start and before /tmp/end
bash: find Path -type f -newer File -not -newer File <|endoftext|>
<|endoftext|> english: List files/directories at least three levels down the directory tree
bash: find Path -mindepth Quantity -name Regex <|endoftext|>
<|endoftext|> english: Print 10 "#" characters in a row
bash: yes Regex | head -n Quantity | tr -d Regex <|endoftext|>
<|endoftext|> english: create a cpio archive of the entire contents the current directory while preserving the permissions, times, and ownership of every file and sub-directory
bash: find Path -depth -print | cpio -o -O Regex <|endoftext|>
<|endoftext|> english: Find and print all PDF files in the current directory and its sub-directories except for any found in the ./pdfs directory.
bash: find Path -name Regex -print | grep -v Regex <|endoftext|>
<|endoftext|> english: Change the permission to 0755 for all directories under current directory
bash: find Path -type d -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Find all .php files in the current directory tree
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: Compress "my_large_file" with gzip and split the result into files of size 1024 MiB with prefix "myfile_split.gz_"
bash: gzip -c Regex | split -b Size File Regex <|endoftext|>
<|endoftext|> english: display all the files in the current directory excluding the paths "targert", "tools", "git"
bash: find Path \( ! -path Regex -and ! -path Regex -and ! -path Regex -print \) <|endoftext|>
<|endoftext|> english: change cgi files to mode 755
bash: find Path Path -name Regex -type f -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Search for the regex "\$wp_version =" in all the regular files that end with '/wp-includes/version.php' (case insensitive) in their paths in directories/files taken from the glob pattern '/var/www/vhosts/*/httpdocs' and show the matched lines along with the file names
bash: find Path -type f -iwholename Regex -exec grep -H Regex {} \; <|endoftext|>
<|endoftext|> english: Use "/var/log/wtmp" and print IPs and search for "^msw.*127.0.0.1"
bash: who --ips File | grep Regex <|endoftext|>
<|endoftext|> english: find all files starting with capital letter in the current folder
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: Search the /etc directory tree for files accessed within the last 24 hours
bash: find Path -atime -Timespan <|endoftext|>
<|endoftext|> english: Find all files under current directory that are read less than 1 minute ago
bash: find Path -amin -Quantity <|endoftext|>
<|endoftext|> english: Display the contents of "file" formatted into a table, removing duplicate lines where the first 12 characters are duplicates, and display the number of occurrences at the beginning of each line.
bash: column -t File | uniq -w Quantity -c <|endoftext|>
<|endoftext|> english: Recursively finds all *.dbf files from the root folder and prints list of folders with such files.
bash: find Path -name Regex -print0 | xargs -0 -n Quantity -I {} dirname {} | sort | uniq <|endoftext|>
<|endoftext|> english: delete all the files in the current folder which are bigger than 1KB
bash: find Path -size +Size Path | xargs -i -I {} rm File {} <|endoftext|>
<|endoftext|> english: change group of the file /var/lib/php/session  to group lighttpd
bash: chown -R Regex File <|endoftext|>
<|endoftext|> english: Findx all files having text "texthere" recursively in a current folder, and prints only file names with matching strings.
bash: find Path -type f -exec grep -l Regex {} + <|endoftext|>
<|endoftext|> english: search for all the files in the folder /home which have sticky bit set and have the permissions 553
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: delete recursively, without prompting, any files or directories under the current directory that case insensitively match the filename ".svn"
bash: find Path -iname Regex -print | xargs -I {} rm -r -f {} <|endoftext|>
<|endoftext|> english: Set variable "extract_dir" to list of top-level directories and files contained in tar archive specified by variable FILE.
bash: tar -t -f File | cut -d Regex -f Number | uniq <|endoftext|>
<|endoftext|> english: Delete all files under user's home directory tree that were accessed more than 365 days after their status was changed
bash: find Path Path Path -ok rm {} \; <|endoftext|>
<|endoftext|> english: Prints folder where current script is located
bash: echo $( dirname Regex ) <|endoftext|>
<|endoftext|> english: Find apparent size of a target directory
bash: du -h -s File <|endoftext|>
<|endoftext|> english: Change to folder where the oracle binary is.
bash: cd $( which Regex | xargs -I {} dirname {} ) <|endoftext|>
<|endoftext|> english: Find files whose content was modified at least 1 minute ago
bash: find Path -mmin +Quantity <|endoftext|>
<|endoftext|> english: Finds strings with dot-separated sequence of numbers, and prints part of that sequence between the first and second dot.
bash: echo Regex | grep -E -o Regex | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: Search the entire file hierarchy for any file that begins with zsh and exists on the ext3 file systems.
bash: find Path -fstype ext3 -name Regex <|endoftext|>
<|endoftext|> english: find all the regular files in current folder, that have been changed in the last 3 days and display last 5 files
bash: find Path -type f -ctime -Timespan | tail -n Quantity <|endoftext|>
<|endoftext|> english: Grab the output of "basename" (in this case "stuff") and echo it to stdout, which basename would do by default anyway.
bash: echo $( basename Regex ) <|endoftext|>
<|endoftext|> english: Set permissions to 2770 for all directories in the current directory tree
bash: find Path -type d -exec chmod Permission {} + <|endoftext|>
<|endoftext|> english: Look for files whose names begin with letters a-j
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: Find all *FooBar* files/directories under current directory and copy them to ~/foo/bar
bash: find Path -name Regex -exec cp -t Directory -- {} + <|endoftext|>
<|endoftext|> english: Recursively change the owner of all files in "~/tmp" to "$USER"
bash: chown -R Regex File <|endoftext|>
<|endoftext|> english: find all the file that have not been modified in the last 3 days ( considers day starting not 24 hours )
bash: find Path -daystart -mtime +Timespan <|endoftext|>
<|endoftext|> english: Recursively search through all files in all directories for any lines containing "pattern" and whose second word is not "Binary".
bash: grep -R -i Regex File | awk Program <|endoftext|>
<|endoftext|> english: Sort "some_data" by the first and second ";" delimited entries and stabilizing the sort
bash: sort -k Number -k Number -t Regex --stable File <|endoftext|>
<|endoftext|> english: Prints process tree with command line arguments and process id numbers.
bash: pstree -a -p -l <|endoftext|>
<|endoftext|> english: find all the files in the entire file system that start with top
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Display operating system type, ie. GNU/Linux
bash: uname -o <|endoftext|>
<|endoftext|> english: Find all *.htm files under current directory and print the changed names by appending 3 levels of parent directory names at the beginning and modifying the actual name to dd-nnn format
bash: find Path -type f -name Regex | sed Program | awk -F Regex Program <|endoftext|>
<|endoftext|> english: Attempt to connect as root to localhost and copy /home/reportuser/dailyReport.doc to directory /root/dailyReports/20150105/ - this will normally fail because ssh won't accept root connections by default.
bash: scp -p File File <|endoftext|>
<|endoftext|> english: Returns exit status 0 and prints exit status of previous command.
bash: false | echo Regex <|endoftext|>
<|endoftext|> english: Prints long listing of directories '/tmp', '/tnt' themselves bordered with '<--' and '--->'.
bash: ls -l -d File File | sed Program <|endoftext|>
<|endoftext|> english: Merge 10 already sorted files and display the result, pausing at each page of output.
bash: sort File File File File File File File File File File File | more <|endoftext|>
<|endoftext|> english: find all pdf files in the current folder
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: Remove all .tmp files in and below /tmp
bash: find Path -name Regex -print0 | xargs -0 -I {} rm {} <|endoftext|>
<|endoftext|> english: Find all files under images directory
bash: find Path -type f <|endoftext|>
<|endoftext|> english: display all file in the folder /dir/to/search except ".c" files
bash: find Path -not -name Regex -print <|endoftext|>
<|endoftext|> english: Print file size and user name with color support for each file in the current directory tree
bash: tree -C -s -u <|endoftext|>
<|endoftext|> english: List all files/folders in current directory by separating them with spaces
bash: ls | tr Regex Regex <|endoftext|>
<|endoftext|> english: Saves 'tmux' version in the 'tmux_version' variable.
bash: tmux -V | cut -c Number <|endoftext|>
<|endoftext|> english: Enables shell option 'nocasematch'.
bash: shopt -s nocasematch <|endoftext|>
<|endoftext|> english: Copy the current directory tree to '/path/to/destination/dir' preserving permissions, timestamp and ownership
bash: find Path | cpio -p -d -u -m -v Regex <|endoftext|>
<|endoftext|> english: display all the files in the file system which do not belong to the user "wnj" and which are modified before the file "ttt"
bash: find Path ! \( -newer File -user Regex \) -print <|endoftext|>
<|endoftext|> english: change the permission of all php files in current folder. Plus symbol at the end is used to give multiple files as input to the chmod command
bash: find Path -name Regex -exec chmod Permission {} + <|endoftext|>
<|endoftext|> english: Split "ADDRESSS_FILE" into files containing at most 20 lines and prefix "temp_file_"
bash: split -l Quantity File Regex <|endoftext|>
<|endoftext|> english: Continuously print the seconds since Unix epoch and the ping time to "google.com"
bash: ping Regex | awk -F Regex Program <|endoftext|>
<|endoftext|> english: Find all files/directories in entire file system that are owned by "syslog" user
bash: find Path -user Regex <|endoftext|>
<|endoftext|> english: Create a symolic link in "/usr/local/bin/" to "/Applications/Sublime\ Text.app/Contents/SharedSupport/bin/subl"
bash: ln -s File Regex <|endoftext|>
<|endoftext|> english: Find all the files in file system which are accessed 50 days back
bash: find Path -atime Timespan <|endoftext|>
<|endoftext|> english: display list of all the hidden directories in the directory "/dir/to/search/"
bash: find Path -path Regex -ls <|endoftext|>
<|endoftext|> english: Find all directories under /home/username/tmp and set their permission to 770
bash: find Path -type d -exec chmod Permission {} + <|endoftext|>
<|endoftext|> english: Save actual working directory in variable "target_PWD"
bash: readlink -f File <|endoftext|>
<|endoftext|> english: Search for "ifconfig" in the output of "history" and print 5 lines that precede and follow
bash: history | grep -C Quantity Regex <|endoftext|>
<|endoftext|> english: Counts lines in each *.php file.
bash: wc -l $( find Path -name Regex ) <|endoftext|>
<|endoftext|> english: Find and remove multiple files such as *.mp3 or *.txt under current directory
bash: find Path -type f -name Regex -exec rm -f {} \; <|endoftext|>
<|endoftext|> english: Search the current directory tree for all regular non-hidden files except *.o
bash: find Path -type f -name Regex -not -name Regex <|endoftext|>
<|endoftext|> english: Print the contents of "$FILE" starting from line 2
bash: tail -n +Quantity File <|endoftext|>
<|endoftext|> english: Delete all files under current directory tree with '.$1' extension where $1 expands as the first positional parameter
bash: find Path -name Regex -exec rm {} \; <|endoftext|>
<|endoftext|> english: Replace "version.old" with "version.new" in the symbolic link target of "SomeLibrary"
bash: ln -f -s -T $( readlink File | sed Program ) Regex <|endoftext|>
<|endoftext|> english: Print the list of regular files from the current directory that were last modified on November, 22
bash: find Path -maxdepth Quantity -type f -newermt Regex ! -newermt Regex -exec echo {} + <|endoftext|>
<|endoftext|> english: Report total size of the root filesystem disk usage in powers of 1000.
bash: df -H --total File <|endoftext|>
<|endoftext|> english: Set permissions to ug=rwx,o= for directories under the $d directory tree
bash: find Path -type d -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Find all foo.mp4 files in the current directory tree and print the pathnames of their parent directories
bash: find Path -name Regex -printf "%h\n" <|endoftext|>
<|endoftext|> english: Filters only directories from long file listing of the current directory
bash: ls -l --color always File | grep --color never Regex <|endoftext|>
<|endoftext|> english: Changes group ownership of 'logdir' to 'loggroup'.
bash: chgrp Regex File <|endoftext|>
<|endoftext|> english: long list al the files in the current directory which have all the permissions
bash: find Path -perm Permission -type f -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: show all the regular files in current folder
bash: find Path -type f -print0 <|endoftext|>
<|endoftext|> english: find all the zip files in the current folder
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: Read a line from standard input and save response in variable "VARNAME"
bash: read Regex <|endoftext|>
<|endoftext|> english: Print unique lines in sorted file "a.txt" compared to sorted file "b.txt"
bash: comm -2 -3 File File <|endoftext|>
<|endoftext|> english: Find all *.mp3 (case insensitive) files/directories under /tmp and remove them
bash: find Path -iname Regex -print0 | xargs -0 -I {} rm {} <|endoftext|>
<|endoftext|> english: Sets shell options 'globstar' and 'nullglob'.
bash: shopt -s globstar nullglob <|endoftext|>
<|endoftext|> english: Send 5 pings to broadcast address "10.10.0.255" and print the unique IPs who responded
bash: ping -c Quantity -b Regex | grep Regex | awk Program | sort | uniq <|endoftext|>
<|endoftext|> english: List empty directories in the current directory tree
bash: find Path -depth -empty -type d <|endoftext|>
<|endoftext|> english: Write the output of "false" to standard output and to "/dev/null"
bash: false | tee File <|endoftext|>
<|endoftext|> english: create directory log into home directory
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: Make directories and parents as needed for each file path in "a.txt" excluding the basename for each path
bash: cat File | grep Regex | sed Program | sort -u | xargs -d Regex -I {} mkdir -p {} <|endoftext|>
<|endoftext|> english: List all directories found in the current directory and below.
bash: find Path -type d <|endoftext|>
<|endoftext|> english: Find all files in the current directory tree whose pathnames match pattern "./sr*sc"
bash: find Path -path Regex <|endoftext|>
<|endoftext|> english: Find all regular files under '/home/john/scripts' directory tree excluding files with '.ksh' extension
bash: find Path -type f -not -name Regex -print <|endoftext|>
<|endoftext|> english: display all directories in the folder Symfony
bash: find Path -type d <|endoftext|>
<|endoftext|> english: Find all sample*_1.txt files/directories under current directory and print 'program  sample*-out sample*_1.txt sample*_2.txt' for each of them
bash: find Path -name Regex | sed -n Program | xargs -L Quantity -I {} echo Regex {} <|endoftext|>
<|endoftext|> english: find all files  the current folder which have not been accessed in the last 7 days and which are bigger than 20KB
bash: find Path -atime +Timespan -size +Size -print <|endoftext|>
<|endoftext|> english: Move all files/directories under current directory to destDir
bash: find Path -print0 | xargs -0 -I {} mv -t Directory {} <|endoftext|>
<|endoftext|> english: find all empty files in /tmp directory .
bash: find Path -type f -empty <|endoftext|>
<|endoftext|> english: Show all values (without the names) of variables whose name or value contains "VARIABLE_NAME"
bash: env | grep Regex | grep -o -e Regex <|endoftext|>
<|endoftext|> english: find all files under the /etc directory and display IP address patterns in them
bash: find Path -type f -exec cat {} \; | tr -c Regex Regex Regex | grep Regex <|endoftext|>
<|endoftext|> english: Show the subdirectories of the current directory
bash: find Path -maxdepth Quantity -type d -print | xargs -I {} echo Regex {} <|endoftext|>
<|endoftext|> english: Recursively add read and directory access to all permissions of all files and directories
bash: chmod -R Permission File <|endoftext|>
<|endoftext|> english: Search for file "file" with minimum depth set to 4
bash: find Path -mindepth Quantity -name Regex <|endoftext|>
<|endoftext|> english: Opens gcc info manual and goes to a node pointed by index entry "funroll-loops".
bash: info Regex --index-search Regex <|endoftext|>
<|endoftext|> english: Find all files in your home directory and below that are exactly 100M.
bash: find Path -size Size <|endoftext|>
<|endoftext|> english: exclude vendor and app/cache dir, and search name which suffixed with php
bash: find Path -name Regex -or -path Regex -prune -or -path Regex -prune <|endoftext|>
<|endoftext|> english: Locate all OGG files that reside in the home directory and have not been accessed in the past 30 days
bash: find Path -iname Regex -atime +Timespan <|endoftext|>
<|endoftext|> english: SSH into "localhost" with forced pseudo-terminal allocation, execute "$heredoc", and save the output to variable "REL_DIR"
bash: ssh -t Regex command <|endoftext|>
<|endoftext|> english: find all the regular/normal files in the current folder and rename them to html files
bash: find Path -type f -exec mv -v {} File \; <|endoftext|>
<|endoftext|> english: Count the number of lines in all ".php" files in the current directory tree
bash: find Path -name Regex -type f | xargs -I {} cat {} | wc -l <|endoftext|>
<|endoftext|> english: Merge colon-separated information from standard input and file1.txt where the first field of both files matches, print unpairable lines from standard input, replace missing fields with "no-match", and output the second field from standard input and the second and third field from file1.txt
bash: join -t Regex -o 1.2,2.2,2.3 -a Quantity -e Regex File <( sort File ) <|endoftext|>
<|endoftext|> english: search for a word in all the php files in the current folder and display the matching lines. PLus at the end takes multilple files as input
bash: find Path -name Regex -type f -exec grep -H -n Regex {} + <|endoftext|>
<|endoftext|> english: Find all files with 644 permission and change the permission to 664
bash: find Path -type f -perm Permission -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Find files/directories under current directory that matches the regex /path/to/something[^/]*$  in their paths
bash: find Path | grep -q -i Regex <|endoftext|>
<|endoftext|> english: Archive "/path/to/files/source" to "user@remoteip:/path/to/files/destination" via ssh on port 2121
bash: rsync -a -z -P -e ssh -p Regex File File <|endoftext|>
<|endoftext|> english: Prints long listing of content in a root folder, including hidden files, with human-readable sizes, and stores output to '/root/test.out' file.
bash: ls -h -a -l File | tee File <|endoftext|>
<|endoftext|> english: display all the html files in the folder /var/www
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: Delete all regular files named 'FindCommandExamples.txt' under current directory tree
bash: find Path -type f -name Regex -exec rm -f {} \; <|endoftext|>
<|endoftext|> english: To descend at most one levels of directories below the command line arguments pass the -maxdepth 1 option. This will avoid deleting nested directories:
bash: find Path -maxdepth Quantity -type d -iname Regex -print0 | xargs -I {} -0 rm -r -v -f {} <|endoftext|>
<|endoftext|> english: Find all *.ext files/directories under current directory and print their path and parent directory path
bash: find Path -type f -name Regex -printf "%p:%h\n" <|endoftext|>
<|endoftext|> english: List the combined path of the current working directory and "file.txt"
bash: ls $( pwd ) <|endoftext|>
<|endoftext|> english: Search the directories matching pattern "/path/to/some/dir/*[0-9]" for level 1 subdirectories
bash: find Path -type d -maxdepth Quantity <|endoftext|>
<|endoftext|> english: Prints total count of lines of all *.py files in a current folder and subfolders.
bash: find Path -name Regex -exec wc -l {} \; | awk Program <|endoftext|>
<|endoftext|> english: Find all files/directories with '.what_to_find' extension under current directory tree and show the list by excluding paths that contain 'excludeddir1' and 'excludeddir2'
bash: find Path -name Regex | grep -v Regex | grep -v Regex <|endoftext|>
<|endoftext|> english: Create a symbolic link in the current directory for each hidden file or directory in "git-stuff/home/" excluding "." and ".."
bash: ln -s File Regex <|endoftext|>
<|endoftext|> english: Rename "svnlog.py" to "svnlog"
bash: mv File File <|endoftext|>
<|endoftext|> english: search in current directory downwards all files whose size is less then 10 bytes
bash: find Path -size -Size -print <|endoftext|>
<|endoftext|> english: Remove all files and directories called "test" from the current directory tree
bash: find Path -name Regex -delete <|endoftext|>
<|endoftext|> english: Return the files that are newer than file `myfile'
bash: find Path -newer File <|endoftext|>
<|endoftext|> english: Update timestamps of all regular files (ie. excluding directories, symlinks, sockets, etc.) under /your/dir
bash: find Path -type f -exec touch {} + <|endoftext|>
<|endoftext|> english: find all the files in the current folder which are readable
bash: find Path Path <|endoftext|>
<|endoftext|> english: Attempt to connect as root via ssh to host whose IP address or hostname is specified by environment variable IPADDRESS - this will normally fail because ssh servers normally don't accept root logins.
bash: scp -r -p File File <|endoftext|>
<|endoftext|> english: display all the files  in the current folder which have colon in their name
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all directories in the /data1/realtime directory tree that were last modified more than 5 minutes ago but less than 60 minutes ago
bash: find Path -mmin -Quantity -mmin +Quantity -type d <|endoftext|>
<|endoftext|> english: Find all files/directories with '.js' extension under current directory tree without descending into  and ignoring './directory' completely
bash: find Path -not \( -path Regex -prune \) -name Regex <|endoftext|>
<|endoftext|> english: Give the location of every hard link to file1 in the /home directory tree
bash: find Path -xdev -samefile Regex | xargs -I {} ls -l {} <|endoftext|>
<|endoftext|> english: Recursively change ownership of "/usr/local" to the current user
bash: chown -R $( whoami ) File <|endoftext|>
<|endoftext|> english: list all regular files which path is not dir1 or dir2
bash: find Path ! -path Regex ! -path Regex -type f <|endoftext|>
<|endoftext|> english: Print the current directory tree with the date of last modification for each file or directory
bash: tree -D <|endoftext|>
<|endoftext|> english: Create all directories in the path specified by variable $javaUsrLib as super user
bash: mkdir -p Directory <|endoftext|>
<|endoftext|> english: Print the last 10 lines of the file '/var/log/syslog'
bash: tail File <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory that were modified exactly 30 minutes ago
bash: find Path -mmin Quantity <|endoftext|>
<|endoftext|> english: Display a long listing of all the files/directories under current directory tree that are newer than the file 'Nov' by modification time
bash: find Path -newer File -ls <|endoftext|>
<|endoftext|> english: Enables shell option 'histappend'.
bash: shopt -s histappend <|endoftext|>
<|endoftext|> english: Output two lines of "-tcp"
bash: yes -- Regex | head -n Quantity <|endoftext|>
<|endoftext|> english: Check if the contents of file "subset" is a subset of file "set"
bash: comm -2 -3 <( sort File | uniq ) <( sort File | uniq ) | head - Quantity <|endoftext|>
<|endoftext|> english: Search for ERROR in all btree*.c files under current directory
bash: grep Regex $( find Path -type f -name Regex ) <|endoftext|>
<|endoftext|> english: find all the files that are modified in the last 7 days
bash: find Path -daystart -mtime -Timespan <|endoftext|>
<|endoftext|> english: List environment variables whose name matches ".*X.*"
bash: set | awk -F Regex Program | grep Regex <|endoftext|>
<|endoftext|> english: Find all Makefile's in the current directory tree
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: Force pseudo tty allocation on connection to "somehost" and execute "~/bashplay/f"
bash: ssh -t Regex command <|endoftext|>
<|endoftext|> english: Recursively finds all files with any cased text "Text" in a current folder, and precedes found string with its number in file.
bash: grep -i -n -r Regex File <|endoftext|>
<|endoftext|> english: Find regular files which have 644 permission
bash: find Path -perm Permission -type f -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: Find all files excluding *.gz files in the current directory tree and compress them with gzip
bash: find Path -type f ! -name Regex -exec gzip {} \; <|endoftext|>
<|endoftext|> english: find all '*.c' files under $HOME directory which context contains sprintf
bash: find Path -name Regex -print | xargs -I {} grep -l Regex {} <|endoftext|>
<|endoftext|> english: List the current directory recursively ignoring the "dir1" subdirectory
bash: find Path -path Regex -prune -or -print <|endoftext|>
<|endoftext|> english: find all the files in the current folder which have not been modified in the last 90 days and force delete them
bash: find Path -mtime +Timespan -type f -exec rm -f {} \; <|endoftext|>
<|endoftext|> english: create an archive excluding files matching patterns listed in /path/to/exclude.txt
bash: tar -c -z -f File -X File File <|endoftext|>
<|endoftext|> english: Find directories named 'work' under '/usr/ports/' directory tree and remove them
bash: find Path -name Regex -type d -print -exec rm -r -f {} \; <|endoftext|>
<|endoftext|> english: find files in /tmp directory that named are core and deletes them, single or double quotes, spaces or newlines are correctly handled
bash: find Path -name Regex -type f -print0 | xargs -0 -I {} rm -f {} <|endoftext|>
<|endoftext|> english: force remove all the regular/normal files which begin with sess in the temp folder
bash: find Path -type f -name Regex -exec rm -f {} \; <|endoftext|>
<|endoftext|> english: Find all files/directories under /path directory that were modified more than 30 minutes ago
bash: find Path -mtime +Timespan <|endoftext|>
<|endoftext|> english: List all files under current directory with their sizes and paths
bash: find Path -type f -printf '%s %p\n' <|endoftext|>
<|endoftext|> english: Find files whose names match the pattern given by the 2nd argument $2 of the Bash script and replace string $3 with $4 in them
bash: find Path -type f -name Regex -exec sed -i Program {} \; <|endoftext|>
<|endoftext|> english: Recursively finds all bzip2 compressed files in a current folder and decompresses them.
bash: find Path -iname Regex -exec bzip2 -d {} \; <|endoftext|>
<|endoftext|> english: Join lines in file "A" with lines in file "B" if the lines share a common first word
bash: join <( sort -n File ) <( sort -n File ) <|endoftext|>
<|endoftext|> english: Find all files under current directory whose status was changed less than 3 days ago and show last 5 lines of output
bash: find Path -type f -ctime -Timespan | tail -n Quantity <|endoftext|>
<|endoftext|> english: Interactively display all lines containing 'word' in all files whose name ends with .properties in the current directory, waiting for user input after each page.
bash: grep -R Regex File | more <|endoftext|>
<|endoftext|> english: Find all files/directories in entire file system that are exactly 50 bytes
bash: find Path -size Size <|endoftext|>
<|endoftext|> english: Prints folder where current script is located
bash: echo $( dirname Regex ) <|endoftext|>
<|endoftext|> english: Recursively copies 'include/gtest' to '/usr/include', preserving all attributes, and copying symlinks as symlinks, without following in source files.
bash: cp -a File File <|endoftext|>
<|endoftext|> english: Find the current directory and all its subdirectories.
bash: find Path -type d <|endoftext|>
<|endoftext|> english: Inserts "new line" after last occurrence of ScriptAlias in a file
bash: tac File | awk Program | tac <|endoftext|>
<|endoftext|> english: Prints long listing of ${0} file.
bash: ls -l File <|endoftext|>
<|endoftext|> english: Find all files/directories newer than ttt or owned by user 'wn' in entire file system
bash: find Path \( -newer File -or -user Regex \) -print <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory tree whose paths match the regex 'filename-regex.\*\.html'
bash: find Path -regex Regex <|endoftext|>
<|endoftext|> english: Delete all 1US* (case insensitive) files under current directory
bash: find Path -iname Regex -exec rm {} \; <|endoftext|>
<|endoftext|> english: Takes first text field from file 'file.txt' as a domain name and gets short A record for this one.
bash: awk Program Program | xargs -I {} dig Regex {} <|endoftext|>
<|endoftext|> english: Unzip and extract "userAgent=[^=]*'" from "input.gz"
bash: zcat Regex | grep -o Regex | sed Program <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory that are 10MB in size
bash: find Path -size Size <|endoftext|>
<|endoftext|> english: Archive "fileToCopy" to "/some/nonExisting/dirToCopyTO" on host "ssh.myhost.net" via ssh
bash: rsync -a -v -e File File File <|endoftext|>
<|endoftext|> english: find all the .jpg files in / and copy them to the current folder.
bash: find Path -type f -name Regex -exec cp {} File \; <|endoftext|>
<|endoftext|> english: Saves location of file $1 in 'dir' variable.
bash: dirname -- Regex <|endoftext|>
<|endoftext|> english: Show all lines in file2 that don't contain the first field of any line in file1.
bash: awk Program Program | comm -1 -3 File File | join File File <|endoftext|>
<|endoftext|> english: Find all files/directories that are bigger than 100 bytes under '/home/apache' directory tree
bash: find Path -size Size -print <|endoftext|>
<|endoftext|> english: Create symlinks to all  /home/folder1/*.txt files with the same name in current directory
bash: find Path -type f -exec ln -s {} \; <|endoftext|>
<|endoftext|> english: Enables shell option 'progcomp'.
bash: shopt -s progcomp <|endoftext|>
<|endoftext|> english: List all regular files from the current directory tree that were modified less than 60 days ago
bash: find Path -type f -mtime -Timespan <|endoftext|>
<|endoftext|> english: List all ~/bin/FilesDvorak/.* (non-recursive) and ~/.PAST_RC_files/.* (recursive) files/directories and take common entries between these two lists
bash: comm -1 -2 <( find Path -maxdepth Quantity ) <( find Path ) <|endoftext|>
<|endoftext|> english: List all environment variables
bash: set <|endoftext|>
<|endoftext|> english: Search the /dir directory tree for files whose names match regular expression '.*2015.*\(album.*\|picture.*\)'
bash: find Path -regex Regex <|endoftext|>
<|endoftext|> english: Returns exit code 1.
bash: false <|endoftext|>
<|endoftext|> english: Prints latest modified file in a directory
bash: ls -1 -t | head - Quantity <|endoftext|>
<|endoftext|> english: Find and remove the file with inode number 782263 in the current directory tree
bash: find Path -inum Quantity -exec rm -i {} \; <|endoftext|>
<|endoftext|> english: Find all files named `file1' starting from /
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: find all the regular/normal files in the current folder which belong to the user "sedlav"
bash: find Path -user Regex -type f <|endoftext|>
<|endoftext|> english: Search /root/directory/to/search recursively for the files matching pattern 'filename.*'
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all .txt files in the /home/user directory tree and copy them to /home/backup
bash: find Path -name Regex | xargs -I {} cp -a -v --target-directory Directory --parents {} <|endoftext|>
<|endoftext|> english: Saves date of the first Sunday in month $mo of year $yo in the 'do' variable.
bash: cal -m DateTime DateTime | awk Program <|endoftext|>
<|endoftext|> english: display all the files in the current folder along with the modification time and display file names of the last 10 modified files
bash: find Path -type f -printf '%T@ %p\n' | sort -n | tail - Quantity | cut -f Number -d Regex <|endoftext|>
<|endoftext|> english: Delete all hidden files in the directory tree given as variable $FOLDER
bash: find Path -name Regex -delete <|endoftext|>
<|endoftext|> english: Find all *.txt files of user Tecmint under /home directory
bash: find Path -user Regex -iname Regex <|endoftext|>
<|endoftext|> english: List all regular files modified more than 61 days
bash: find Path -type f -mtime Timespan -exec ls -l -t -r {} \; <|endoftext|>
<|endoftext|> english: change the permissions of the directories from 777 to 755 in the folder "/var/www/html"
bash: find Path -type d -perm Permission -print -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: display all the files in the folder "/Users/Me/Desktop" which belong to the user "popo" and which have the permission 777
bash: find Path -user Regex -perm Permission <|endoftext|>
<|endoftext|> english: Delete all directories under '.cache/chromium/Default/Cache' directory tree that are at least 1 level deep and are bigger than 100 MB in size
bash: find Path -mindepth Quantity -type d -size +Size -delete <|endoftext|>
<|endoftext|> english: Remove blank lines and replace " " with "/" in "struct.txt" as input to make directories with parents as needed
bash: sed Program File | xargs -I {} mkdir -p {} <|endoftext|>
<|endoftext|> english: Find all files/directories whose names start with 'readme' (case insensitive) under '/usr/share/doc' directory tree
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: delete all the files in the current folder
bash: find Path -delete <|endoftext|>
<|endoftext|> english: Enable history expansion in a script
bash: set -H <|endoftext|>
<|endoftext|> english: Search the file system for regular files whose names are shorter than 25 characters
bash: find Path -type f -regextype posix-extended -regex Regex <|endoftext|>
<|endoftext|> english: Print the column count of compressed file "$file"
bash: zcat Regex | awk Program | head <|endoftext|>
<|endoftext|> english: Create a ssh key of RSA type, and prompt for a filename to store it, presenting the default for this type of key as $HOME/.ssh/id_rsa
bash: ssh-keygen -t rsa <|endoftext|>
<|endoftext|> english: Counts lines of myfile.txt file.
bash: cat File | wc -l <|endoftext|>
<|endoftext|> english: find all the files in the home folder that have been modified between 24 to 48 hours
bash: find Path -mtime -Timespan -mtime +Timespan <|endoftext|>
<|endoftext|> english: Search for 'String' case insensitively in all files under current directory tree and show the matched lines with their filenames
bash: find Path -name Regex -print0 | xargs -0 -I {} grep -i -H Regex {} <|endoftext|>
<|endoftext|> english: Delete all files/directories named 'FILE-TO-FIND' under current directory tree
bash: find Path -name Regex -exec rm -r -f {} \; <|endoftext|>
<|endoftext|> english: Recursively copies everything from '/zzz/zzz/' to the '/xxx/xxx' overwriting the existing files and answering 'yes' on each request for overwriting.
bash: yes | cp -r -f File File <|endoftext|>
<|endoftext|> english: Make directories "foo" and "bar"
bash: mkdir Directory Directory <|endoftext|>
<|endoftext|> english: change the owner of all the files in folder /u/netinst to netinst
bash: find Path -print | xargs -I {} chown Regex {} <|endoftext|>
<|endoftext|> english: Displays calendar of a previous, current and next month for December of 2120 year.
bash: cal -3 DateTime DateTime <|endoftext|>
<|endoftext|> english: Output all lines in 'file' which contain a tab character.
bash: awk -F Regex Program Program <|endoftext|>
<|endoftext|> english: Recursively find the latest modified file in the current directory
bash: find Path -type f | xargs -I {} ls -l -t -r {} | tail -n Quantity <|endoftext|>
<|endoftext|> english: Remove empty directories from directory tree /srv/${x}
bash: find Path -type d -empty -exec rmdir {} \; <|endoftext|>
<|endoftext|> english: change the permissions of all regular/normal files in the current directory
bash: find Path -type f -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Find all files in maximum 1 level down the current directory that were modified less than 1 day ago from today
bash: find Path -maxdepth Quantity -type f -daystart -mtime -Timespan <|endoftext|>
<|endoftext|> english: Prints full path to files in a current folder.
bash: ls -d -1 File <|endoftext|>
<|endoftext|> english: Replace the occurrences of "HOGE" with "MOGA" once per each line of the files from the current directory tree, keeping a backup copy of every touched file
bash: find Path -type f -print0 | xargs -0 -I {} sed -i Regex -e Program {} <|endoftext|>
<|endoftext|> english: find all the text files in  the current folder and do not search in somedir, bin directories
bash: find Path -name Regex -prune -and -name Regex -prune -or -name Regex -print <|endoftext|>
<|endoftext|> english: Recursively changes group ownership of everything in 'files' to 'my_group'.
bash: chgrp -R Regex File <|endoftext|>
<|endoftext|> english: Print the base name via grep of the current working directory
bash: pwd | grep -o Regex <|endoftext|>
<|endoftext|> english: Find all build* directories under /var/www/html/ and print all but first 5 appending with the string 'rf '
bash: find Path -type d -name Regex | sort | tail -n +Quantity | xargs -I {} echo Regex {} <|endoftext|>
<|endoftext|> english: Look for SGID files and directories
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: search for the word "put" in all the files in the current folder which have the word "bills" in their name and display the matched line along with the filename.
bash: find Path -name Regex -exec grep -H Regex {} \; <|endoftext|>
<|endoftext|> english: Find all files/directories under /usr/tom which matches the extended regex '*.pl| *.pm'  in their names
bash: find Path | grep -E Regex <|endoftext|>
<|endoftext|> english: Create a symbolic link in "/bar/tmp/" for each file in directory "/foo" that does not start with "runscript"
bash: find Path -maxdepth Quantity -type f ! -name Regex -exec ln -s {} Regex \; <|endoftext|>
<|endoftext|> english: Print '"HTTP/1.1 200 OK', two new lines and the current date
bash: echo -e $( date ) <|endoftext|>
<|endoftext|> english: Find all *.gz files/directories under asia and emea directory
bash: find Path Path -name Regex <|endoftext|>
<|endoftext|> english: Search the current directory tree for symlinks whose contents match pattern "*sysdep.c"
bash: find Path -lname Regex <|endoftext|>
<|endoftext|> english: display all the html files in the current folder that have been modified in the last 7*24 hours
bash: find Path -mtime -Timespan -name Regex -print <|endoftext|>
<|endoftext|> english: Find UTF-8 files with BOM
bash: find Path -type f -print0 | xargs -0 -I {} awk Program {} <|endoftext|>
<|endoftext|> english: Find the "*.foo" files in the current directory tree that are not under ".snapshot" directories
bash: find Path -name Regex -prune -or -name Regex -print <|endoftext|>
<|endoftext|> english: Find all directories named CVS, and deletes them and their contents.
bash: find Path -type d -name Regex -exec rm -r {} \; <|endoftext|>
<|endoftext|> english: kill a number of background jobs
bash: jobs -p | tail -n Quantity File File | xargs -I {} kill {} <|endoftext|>
<|endoftext|> english: Print every two lines in "file" on a single line separated by a space
bash: cat File | paste -d Regex File File <|endoftext|>
<|endoftext|> english: search for a files "cart1" in the folder junk which is in home folder and move the folder to ~/junk/A.
bash: find Path -name Regex -exec mv {} File \; <|endoftext|>
<|endoftext|> english: Forward port 3307 on localhost to port 3306 on 1.2.3.4 via 'user@gateway' on port 24222
bash: ssh -f Regex -p Regex -L Regex -N <|endoftext|>
<|endoftext|> english: Find all file paths under current directory, perform a reverse sort and show first 10 file paths with their status change time
bash: find Path -type f -printf "%C@ %p\n" | sort -r | head -n Quantity <|endoftext|>
<|endoftext|> english: Print revesed second from the end dot-bounded field in $i value
bash: echo Regex | rev | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: create a compressed archive with files newer than 1st of January 2014, 18:00:00.
bash: tar File File -j -c -v -f File File <|endoftext|>
<|endoftext|> english: display long listing of all the regular hidden files in the folder Musica
bash: find Path -type f -name Regex -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: get all files in a current directory modified in the last 7 days
bash: find Path -mtime -Timespan -print0 | xargs -0 -I {} tar -c -j -f File {} <|endoftext|>
<|endoftext|> english: list all CSS files under the current directory
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: Change permissions to 644 for all regular files under and below /path/to/someDirectory/
bash: find Path -type f -print0 | xargs -0 -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: Print the minimum transmission time of 10 ping requests to "google.com" from cygwin
bash: ping Regex -n Regex | grep Regex | awk Program | sed Program <|endoftext|>
<|endoftext|> english: Print second section of line <line> where sections are separated by one or more whitespace.
bash: echo -e Regex | sed Program | cut -f Number <|endoftext|>
<|endoftext|> english: search for the pattern "tgt/etc/file1" in the files tgt/etc/file2, tgt/etc/file3
bash: find Path -type f -name Regex | grep Regex File File <|endoftext|>
<|endoftext|> english: Search for files/directories with the case insensitive pattern anaconda.* in var/log directory and create an archive (somefile.tar) of all the files found
bash: tar -c -v -f File $( find Path -iname Regex ) <|endoftext|>
<|endoftext|> english: wait 2 seconds and then print "hello"
bash: echo $( sleep Timespan ) <|endoftext|>
<|endoftext|> english: Split "list.txt" into files with at most 600 lines each
bash: split -l Quantity File <|endoftext|>
<|endoftext|> english: search for a word in all the regular/normal files in the entire filesystem. ( + is used to give more than one file as input to the grep command.
bash: find Path -type f -exec grep -i Regex {} + <|endoftext|>
<|endoftext|> english: find in the file system for the directories with the name "httpdocs"
bash: find Path -type d -name Regex <|endoftext|>
<|endoftext|> english: Find all empty directories in the current one and delete them
bash: find Path -type d -maxdepth Quantity -empty -print0 | xargs -0 -I {} rmdir {} <|endoftext|>
<|endoftext|> english: Find all files/directories named 'photo.jpg' under current directory tree
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: find all the files in the current directory which are bigger than 1000MB
bash: find Path -size +Size <|endoftext|>
<|endoftext|> english: Display all lines contiaining 'funcname' in system map file matching current kernel.
bash: cat $( uname -r ) | grep Regex <|endoftext|>
<|endoftext|> english: Saves number of lines of current directory listing in 'n_max' variable.
bash: ls File | wc -l <|endoftext|>
<|endoftext|> english: Prints full path of a 'cat.wav' file in a current folder.
bash: ls File <|endoftext|>
<|endoftext|> english: Find all directories under /home/username/public_html/sites/all/themes and set their permission to 750
bash: find Path -type d -exec chmod Permission {} + <|endoftext|>
<|endoftext|> english: Lists content of the current folder.
bash: ls <|endoftext|>
<|endoftext|> english: show the list of all the files in the current folder which have been modified within the 24 hours
bash: find Path -mtime Timespan -print <|endoftext|>
<|endoftext|> english: Find all sample*_1.txt files/directories under current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Locate all `readme.txt' files under the home directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: find Texinfo source files in /usr/local/doc
bash: find Path -path Regex -print <|endoftext|>
<|endoftext|> english: rename all the svg.png files to png files in the current fodler
bash: find Path -name Regex -print0 | sed Program | xargs -0 -I {} mv File File <|endoftext|>
<|endoftext|> english: Print the sizes and names of all TXT files from the current directory tree
bash: find Path -iname Regex -exec du -b {} + <|endoftext|>
<|endoftext|> english: Find the passwd file under the root directory and two levels down
bash: find Path -maxdepth Quantity -name Regex <|endoftext|>
<|endoftext|> english: Request IP address of 'myip.opendns.com' from name server 'resolver1.opendns.com'
bash: dig Regex Regex @resolver1.opendns.com <|endoftext|>
<|endoftext|> english: Look for SUID files and directories
bash: find Path -perm +Permission <|endoftext|>
<|endoftext|> english: Unzip "file.gz" to stdout
bash: zcat Regex <|endoftext|>
<|endoftext|> english: Recursively change the owner and group of all files in "/your/directory/to/fuel/" to "nginx"
bash: chown Regex File -R <|endoftext|>
<|endoftext|> english: remove all core files in the file system
bash: find Path -name Regex | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: Remove all .php files in the /var/www/ directory
bash: find Path -type f -exec rm {} \; <|endoftext|>
<|endoftext|> english: Save the first three octets of the host name's IP address to variable "subnet"
bash: hostname -i | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: Get a sorted list of the longest line with line number for each file under current directory
bash: find Path -iname Regex -exec awk Program {} \; | sort <|endoftext|>
<|endoftext|> english: Send SIGTERM signal to entire process tree starting from ID 24901 and below.
bash: kill $( pstree -p Regex | sed Program | grep Regex | sed Program | tr Regex Regex ) <|endoftext|>
<|endoftext|> english: Find regular files with permissions less than 111
bash: find Path -perm -Permission -type f <|endoftext|>
<|endoftext|> english: Set the host name to "myServersHostname"
bash: hostname Regex <|endoftext|>
<|endoftext|> english: Count the number of equal lines in "file1.txt" and "file2.txt"
bash: comm -1 -2 <( sort File ) <( sort File ) | wc -l <|endoftext|>
<|endoftext|> english: Replace all matches with the regex expanded by $P_FROM with the text expanded by $P_TO in all regular files under current directory not going into subdirectories and modify the files in-place
bash: find Path -type f -maxdepth Quantity -exec sed -i Program {} \; <|endoftext|>
<|endoftext|> english: Count the number of files named 'job.history' under '/data/SpoolIn' directory tree that match 'FAIL' in their contents
bash: find Path -name Regex -exec grep -l Regex {} \; | wc -l <|endoftext|>
<|endoftext|> english: Print the files in the current directory as a list of semicolon separated values
bash: ls -1 -b | tr Regex Regex <|endoftext|>
<|endoftext|> english: Remount "rfs" filesystem "/dev/stl12" on "/system" with read and write permission
bash: mount -o rw,remount -t rfs Regex Regex <|endoftext|>
<|endoftext|> english: Find & replace broken symbolic links
bash: find -L Path -type l -delete -exec ln -s File {} \; <|endoftext|>
<|endoftext|> english: Find files/directories in entire file system newer than myfile
bash: find Path -newer File <|endoftext|>
<|endoftext|> english: Find files named core in or below the directory /tmp and delete them, processing filenames in such a way that file or directory names containing single or double quotes, spaces or newlines are correctly handled.
bash: find Path -name Regex -type f -print0 | xargs -0 -I {} rm -f {} <|endoftext|>
<|endoftext|> english: find all the html files in the current folder
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: search for all regular/normal files in current folder and display all the files which contain 16 lines
bash: find Path -type f -print0 | xargs -0 -I {} grep -c -H Regex {} | grep Regex <|endoftext|>
<|endoftext|> english: Remove all files named tmp or ending in .xx that have not been accessed for seven or more 24-hour periods
bash: find Path \( -name Regex -or -name Regex \) -atime +Timespan -exec rm {} \; <|endoftext|>
<|endoftext|> english: Save a unique list of the currently logged in usernames to variable "line"
bash: who | cut -d Regex -f Number | sort -u <|endoftext|>
<|endoftext|> english: find all the files in the folder "myfiles" which have been modified exactly 48 hours back.
bash: find Path -mtime Timespan <|endoftext|>
<|endoftext|> english: display all the files in the current folder which have been modified in the last 24 hours
bash: find Path -mtime -Timespan <|endoftext|>
<|endoftext|> english: Find x* files/directories under /tmp directory whose status was changed less than 1 day ago and move them to ~/play
bash: find Path -ctime -Timespan -name Regex | xargs -I {} mv {} File <|endoftext|>
<|endoftext|> english: Find all *.m4a files under /home/family/Music directory
bash: find Path -type f -name Regex -print0 <|endoftext|>
<|endoftext|> english: Search the /path directory tree for files matching pattern '*.foo'
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Forward port 16186 on hello.com to 8888 on localhost using private key "privatekeystuffdis88s8dsf8h8hsd8fh8d" for login
bash: ssh -N -i <( echo Regex ) -R Regex Regex <|endoftext|>
<|endoftext|> english: display all files in the current folder along with their last accessed timestamps
bash: find Path -printf "%h/%f : dernier accès le %AA %Ad %AB %AY à %AH:%AM:%AS\n" <|endoftext|>
<|endoftext|> english: display all files in the entire file system excluding those that are in the transfer directory
bash: find Path -name Regex -prune -or -print <|endoftext|>
<|endoftext|> english: display a long ilsting of all the files in the file system which are bigger than 1KB and which have not been modified in the last 30*24 hours
bash: find Path -size +Size -mtime +Timespan -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: Find hard links to the same file lpi104-6/file1 in the directory tree lpi104-6
bash: find Path -samefile Regex <|endoftext|>
<|endoftext|> english: Find all files with the SUID bit set
bash: find Path -perm -Permission <|endoftext|>
<|endoftext|> english: Look for regular files in the directory trees 'deferred', 'active', 'maildrop', 'incoming' under /var/spool/postfix/
bash: find Path -type f <|endoftext|>
<|endoftext|> english: Delete all .pyc files in the current directory tree
bash: find Path -name Regex | xargs -I {} rm -r -f {} <|endoftext|>
<|endoftext|> english: Print lines containing string TEXT from all log files in the current directory.
bash: grep -e Regex Regex | cut -d Regex --complement -s -f Number <|endoftext|>
<|endoftext|> english: Update timestamps of all files and directories under current directory.
bash: find Path -print0 | xargs -0 -I {} touch {} <|endoftext|>
<|endoftext|> english: find all the "passwd" files in the entire file system
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: Find all directories under ${1:-.} directory without descending into any sub-directories
bash: find Path -mindepth Quantity -maxdepth Quantity -type d <|endoftext|>
<|endoftext|> english: delete all the tmp files ( files with the extension tmp ) in the /tmp folder. Print0 is used to display all those files which have newline in their names or files whose name is only spaces.
bash: find Path -name Regex -print0 | xargs -0 -I {} rm File File File File File {} | xargs -0 -I {} rm {} <|endoftext|>
<|endoftext|> english: Remove files modified at least five days ago in directory trees /path/to/files*
bash: find Path -mtime +Timespan -exec rm {} \; <|endoftext|>
<|endoftext|> english: kill group leader
bash: kill $( jobs -l -p ) <|endoftext|>
<|endoftext|> english: find StringBuffer in all *.java files, ignoring case
bash: find Path -type f -name Regex -exec grep -i -l Regex {} \; <|endoftext|>
<|endoftext|> english: Print a NULL-separated list of all hidden regular files from the home directory
bash: find Path -maxdepth Quantity -type f -name Regex -print0 <|endoftext|>
<|endoftext|> english: Lists all files in a current folder, separating names with comma.
bash: ls | sed Program | tr -d Regex <|endoftext|>
<|endoftext|> english: display all regular/normal files in the current folder which are not accessed in the last 7*24 hours
bash: find Path -type f -atime +Timespan <|endoftext|>
<|endoftext|> english: Add "execute" to the permissions of all directories in the home directory tree
bash: find Path -type d -exec chmod +Permission {} \; <|endoftext|>
<|endoftext|> english: Make 3 directories named "~/Labs/lab4a/folder" followed by the number 1, 2, or 3
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: Print "hello" followed by the current user name
bash: echo Regex $( whoami ) <|endoftext|>
<|endoftext|> english: Find all .jpg files in the current directory and below.
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Print the last 10 commands in history
bash: history | tail <|endoftext|>
<|endoftext|> english: Remove all *.txt files in the home directory tree with confirmation
bash: find Path -name Regex -ok rm {} \; <|endoftext|>
<|endoftext|> english: display all the files in the current folder for the files which have been accessed in the last 24 hours
bash: find Path -type f -atime -Timespan <|endoftext|>
<|endoftext|> english: Print the time to ping "8.8.8.8" followed by a time stamp if the ping is greater than 50
bash: ping Regex | awk -F Regex Program <|endoftext|>
<|endoftext|> english: Silently read standard input until the escape key is pressed ignoring backslash escapes and using the prompt $'Press escape to continue...\n'
bash: read -r -s -p Regex -d Regex <|endoftext|>
<|endoftext|> english: List each directory in the current directory prefixed with its disk usage in human readable format and sorted from smallest to largest
bash: du -s -h File | sort -n <|endoftext|>
<|endoftext|> english: searches through the root filesystem ("/") for the file named Chapter1, and prints the location
bash: find Path -name Regex -type f -print <|endoftext|>
<|endoftext|> english: Find all directories under maximum 1 level down the current directory and set their permission to 700
bash: find Path -mindepth Quantity -type d | xargs -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: List common files in directories "1" and "2"
bash: cat <( ls File | sort -u ) <( ls File | sort -u ) | uniq -d <|endoftext|>
<|endoftext|> english: Find all directories under /path/to/dir (no sub-directories) and archive them (with relative paths) into files with .tar.gz extension
bash: find Path -mindepth Quantity -maxdepth Quantity -type d -execdir tar -z -c -p -v -f File {} \; <|endoftext|>
<|endoftext|> english: find all the files in the entire file system which have been modified in the last 120 hours
bash: find Path -mtime -Timespan -print <|endoftext|>
<|endoftext|> english: display all the java, xml and action scripts (.as) files in a directory
bash: find Path -type f -and \( -name Regex -or -name Regex -or -name Regex \) <|endoftext|>
<|endoftext|> english: Compare files 'file1' and 'file2' and print in three columns strings unique for first file, second file, and common ones
bash: comm File File <|endoftext|>
<|endoftext|> english: Case-insensitive search for "error" in file report.txt, display one page at a time, waiting for user interaction between each.
bash: cat File | grep -i Regex | more <|endoftext|>
<|endoftext|> english: View history using "vim"
bash: vim <( history ) <|endoftext|>
<|endoftext|> english: change the directory to the last found folder in the directory 'a'
bash: cd $( find Path | sed Program ) <|endoftext|>
<|endoftext|> english: Print the terminal file of the users who are logged in with "admin" in their name
bash: who | grep -i Regex | cut -c Number <|endoftext|>
<|endoftext|> english: Read a line of standard input into variable "_command" with the prompt as the current working directory followed by "$"
bash: read -p $( pwd -P ) Regex <|endoftext|>
<|endoftext|> english: display the top 20 biggest files in the current folder which are present in the same partition as that of the current folder
bash: find Path -xdev -printf '%s %p\n' | sort -n -r | head - Quantity <|endoftext|>
<|endoftext|> english: change owner of the file "file" to user user_name
bash: chown Regex File <|endoftext|>
<|endoftext|> english: search for all the files which have not been modified in the last 6 months (180 days) in current folder and display the disk usage of them
bash: find Path -mtime +Timespan -exec du -s -h {} \; <|endoftext|>
<|endoftext|> english: Mount "tmpfs" filesystem to "/path/to/dir"
bash: mount Regex -t tmpfs Regex <|endoftext|>
<|endoftext|> english: Prints day of first Tuesday in a month.
bash: cal | awk Program <|endoftext|>
<|endoftext|> english: Find user daniel's files of type jpeg without `autumn' in the name
bash: find Path -user Regex -type f -name Regex ! -name Regex <|endoftext|>
<|endoftext|> english: Print a count of all unique lines in "ports.txt" sorted from most frequent to least frequent
bash: sort File | uniq -c | sort -r <|endoftext|>
<|endoftext|> english: find all files in the folder /etc which have been modified after /tmp/foo
bash: find Path -newer File <|endoftext|>
<|endoftext|> english: Find *.jpg screenshots that are bigger than 500k
bash: find Path -size +Size -iname Regex <|endoftext|>
<|endoftext|> english: Infinitely write "1" with line numbers to the console and "/tmp/to"
bash: yes Regex | nl | tee File <|endoftext|>
<|endoftext|> english: Search the regular files from directory tree 'folder_name' for "your_text"
bash: find Path -type f -exec grep Regex {} \; <|endoftext|>
<|endoftext|> english: Find all the files named 'vimrc' anywhere on the system
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all the files in entire file system  which are modified more than 50 days back and less than 100 days and show a few lines of output from the beginning
bash: find Path -mtime +Timespan -mtime -Timespan | head <|endoftext|>
<|endoftext|> english: Find all files whose name or type description includes "text", display only paths to files.
bash: find Path -exec file {} \; | grep Regex | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: Sort and remove duplicate lines in the output of "finger"
bash: finger | sort -u <|endoftext|>
<|endoftext|> english: Raise an error for using uninitialized variables
bash: set -u <|endoftext|>
<|endoftext|> english: prints first line of $bigfile
bash: head -n Quantity File <|endoftext|>
<|endoftext|> english: Make directories "project/{lib/ext,bin,src,doc/{html,info,pdf},demo/stat/a}" as needed and do not cause an error if it exists
bash: mkdir -p Directory <|endoftext|>
<|endoftext|> english: change the permission of all the regular files in the folder /home to 700
bash: find Path -type f -perm Permission -print -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Replace all negative numbers in the 3rd comma-separated column of inputfile by the number notated in parenthesis instead of with a minus sign.
bash: awk -F Regex Program Program <|endoftext|>
<|endoftext|> english: Find all files in the current directory tree whose size is greater than 1MB
bash: find Path -size +Size <|endoftext|>
<|endoftext|> english: Print whether "$file" and "${file/${dir1}/${dir2}}" differ
bash: diff -q File File <|endoftext|>
<|endoftext|> english: Print all unique file paths under "dir1" compared to "dir2"
bash: comm -2 -3 <( find Path -type f | sed Program | sort ) <( find Path -type f | sed Program | sort ) | sed Program <|endoftext|>
<|endoftext|> english: display the version of find command
bash: find Path --version <|endoftext|>
<|endoftext|> english: Save full path of command "cat" to variable "CAT"
bash: which Regex <|endoftext|>
<|endoftext|> english: Save the first word of the first difference in ".dir_list_2" compared to ".dir_list_1" into variable "extract_dir"
bash: diff File File | grep Regex | head - Quantity | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: Show the epoch in default date/time format
bash: date -u -d Regex <|endoftext|>
<|endoftext|> english: Print variable "$opt" with double quotes deleted
bash: echo Regex | tr -d Regex <|endoftext|>
<|endoftext|> english: Find all directories under 'project' directory without going into subdirectories that do not match the POSIX egrep regex $PATTERN in their paths and are not empty
bash: find Path -maxdepth Quantity -mindepth Quantity -regextype posix-egrep ! -iregex Regex ! -empty -type d <|endoftext|>
<|endoftext|> english: Create a tar file containing all the files in ~/Library folder that contain spaces in their names
bash: find Path -name Regex -print0 | xargs -0 -I {} tar -r -f File {} <|endoftext|>
<|endoftext|> english: Count files accessed more than a month ago
bash: find Path -atime +Timespan -exec ls \; | wc -l <|endoftext|>
<|endoftext|> english: list directories owned by group ID 100 in the file system
bash: find Path -type d -gid Regex <|endoftext|>
<|endoftext|> english: find all the files in the current folder which have the word cache in them and do not search in the sub directories of the folder.
bash: find Path -name Regex -depth -exec rm {} \; <|endoftext|>
<|endoftext|> english: Find all SGID files
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: search  all block spacial files called backup from /usr directory downwards and print them .
bash: find Path -type b -name Regex -print <|endoftext|>
<|endoftext|> english: Format tab separated fields in "FILE" as a table
bash: column -t -s Regex File <|endoftext|>
<|endoftext|> english: find setuid files and directories writing the details to /root/suid.txt , and find large files writing the details to /root/big.txt, traversing the filesystem just once
bash: find Path \( -perm -Permission -fprintf File '%#m %u %p\n' \) -and Path \( -size +Size -fprintf File '%-10s %p\n' \) <|endoftext|>
<|endoftext|> english: Find all files in current directory excluding hidden files and put the output into full_backup_dir variable
bash: find Path -depth -wholename Regex -prune -or -print <|endoftext|>
<|endoftext|> english: find for a word in all the regular files in the current directory
bash: find Path -type f -exec grep -l -i Regex {} \; <|endoftext|>
<|endoftext|> english: Find all files that are set group ID to staff
bash: find Path -group Regex -perm -Permission -print <|endoftext|>
<|endoftext|> english: Create a copy of index.html in all directories in current directory, pausing for confirmation before overwriting any existing files - names may not contain spaces - names may not contain spaces.
bash: find Path -mindepth Quantity -maxdepth Quantity -type d | xargs -n Quantity -I {} cp -i File {} <|endoftext|>
<|endoftext|> english: List the MD5 digest of all files under "teste1" and "teste2" sorted alphabetically
bash: find Path Path -type f -exec md5 File {} \; | sort <|endoftext|>
<|endoftext|> english: split $SOURCE_FILE" into pieces per 100 lines
bash: split -l Quantity File <|endoftext|>
<|endoftext|> english: Print a list of each file with the full path prefix in the current directory tree excluding symbolic links
bash: tree -f -i | grep -v Regex <|endoftext|>
<|endoftext|> english: Find only number of hard link & name of files from long list
bash: find Path -type f -iname Regex -exec ls -l -r -t {} \; | awk -F Regex Program <|endoftext|>
<|endoftext|> english: Finds IP addresses of all network interfaces.
bash: ifconfig | sed -n Program <|endoftext|>
<|endoftext|> english: Search for the case insensitive pattern 'search for me' in all files with '.p', '.w' and '.i' extension under current directory tree without descending into '.svn' and 'pdv' directories
bash: find Path \( \( -name Regex -or -name Regex \) -type d -prune \) -or \( -name Regex -type f -exec grep -i -l Regex {} + \) <|endoftext|>
<|endoftext|> english: Search all variables and their values for "NAME"
bash: env | grep Regex <|endoftext|>
<|endoftext|> english: Find all files named 'file' in 1 level down the current directory whose status were changed more than 1 hour ago
bash: find Path -maxdepth Quantity -cmin +Quantity -name Regex <|endoftext|>
<|endoftext|> english: Copies all files under the current directory like any-cased '*foobar*' to the '~/foo/bar' directory.
bash: find Path -iname Regex -exec cp {} File \; <|endoftext|>
<|endoftext|> english: Find all files/directories in entire file system that are owned by "shadow" group
bash: find Path -group Regex <|endoftext|>
<|endoftext|> english: Search for all .html files in directory "www" and output only the basename (without containing path) of each.
bash: find Path -name Regex -type f -exec basename {} \; <|endoftext|>
<|endoftext|> english: Print file information of the executable file of command "g++"
bash: ls $( which Regex ) -a -l <|endoftext|>
<|endoftext|> english: Delete all files named "filename" in the current directory tree, except those with paths ending in "/myfolder/filename"
bash: find Path -name Regex -and -not -path Regex -delete <|endoftext|>
<|endoftext|> english: Interpret /etc/bashrc in the current shell, ignoring lines that contain "mesg".
bash: source <( grep -v Regex File ) <|endoftext|>
<|endoftext|> english: Search the /tmp tree for files between 10kb and 20kb
bash: find Path -size +Size -size -Size <|endoftext|>
<|endoftext|> english: list PID of a group leader
bash: jobs -l -p <|endoftext|>
<|endoftext|> english: Update timestamps of all files and directories under directory /path/to/dir.
bash: find Path -print0 | xargs -0 -I {} touch {} <|endoftext|>
<|endoftext|> english: recall the second argument from a previous command by pressing alt-shift-y
bash: bind Regex <|endoftext|>
<|endoftext|> english: find all files that names are filename and open in nano text editor
bash: find Path -name Regex -exec nano {} \; <|endoftext|>
<|endoftext|> english: delete all the log files in the current folder
bash: find Path -name Regex | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: Set read, write and execute permission for all (owner, group, other) for the files/directories in foldername directory tree
bash: find Path -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: display a list of all files in the folder passed as argument to a script
bash: find Path -ls <|endoftext|>
<|endoftext|> english: find all files ending with "js.compiled" in current folder and rename them.
bash: find Path -name Regex -exec rename -v Regex {} + <|endoftext|>
<|endoftext|> english: List all aliencoders.[0-9]+ files/directories under /home/jassi/ directory
bash: find Path -name Regex -exec ls -l -r -t {} + | awk Program <|endoftext|>
<|endoftext|> english: list txt files older than 5 days or html files of any age, null separated
bash: find Path \( -name Regex -mtime +Timespan -or -name Regex \) -print0 <|endoftext|>
<|endoftext|> english: List all your files including everything in sub-directories
bash: find Path <|endoftext|>
<|endoftext|> english: find all  tools generated files  a.out , *.o and core dump files which not required to us these all junk files & delete from  current  directory .
bash: find Path \( -name Regex -or -name Regex -or -name Regex \) -exec rm {} \; <|endoftext|>
<|endoftext|> english: View lines 116 through 120 of history
bash: history | head -n Quantity | tail -n Quantity <|endoftext|>
<|endoftext|> english: list files in the directory "$directory" with permissions "$permissions"
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: Searches through the htdocs and cgi-bin directories for files that end with the extension .cgi. When these files are found, their permission is changed to mode 755 (rwxr-xr-x).
bash: find Path Path -name Regex -type f -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Find all files/directories that contain 'packet' (case insensitive) in their names excluding directories that are bigger than 1500 bytes in size
bash: find Path -iregex Regex ! -type d -size +Size <|endoftext|>
<|endoftext|> english: Search /usr, /home, /tmp for *.jar files
bash: find Path Path Path -name Regex <|endoftext|>
<|endoftext|> english: Enables shell options 'nullglob' and 'dotglob'.
bash: shopt -s nullglob dotglob <|endoftext|>
<|endoftext|> english: Print second section of data coming from stdin where sections are separated by one or more whitespace.
bash: tr -s Regex | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: search the word NEEDLE and substitute it with REPLACEMENT in all the php files of the current folder
bash: find Path -type f -exec sed -i Program File File {} \; <|endoftext|>
<|endoftext|> english: Execute "ls -l data.temp" every 2 seconds
bash: watch ls -l File <|endoftext|>
<|endoftext|> english: search for all the files in the current folder and sort them in the order of their depth and display the file names
bash: find Path -type d -printf '%d\t%P\n' | sort -r -n -k Number | cut -f Number <|endoftext|>
<|endoftext|> english: recursively change owner of the directory /Users/xxx/Library/Developer/Xcode/Templates and all files to user xxx
bash: chown -R Regex File <|endoftext|>
<|endoftext|> english: Execute all commands in "commands-to-execute-remotely.sh" on server "blah_server"
bash: cat File | ssh Regex <|endoftext|>
<|endoftext|> english: search for the word foo in all the js files in the current folder
bash: grep -i -H Regex $( find Path -name Regex ) <|endoftext|>
<|endoftext|> english: Find directories in the current directory tree whose names are 33 characters in length
bash: find Path -type d -name Regex <|endoftext|>
<|endoftext|> english: Find all files that are set user ID to root
bash: find Path -user Regex -perm -Permission -print <|endoftext|>
<|endoftext|> english: Find all directories in the /data1/realtime directory tree that were modified within the last 60 minutes
bash: find Path -mmin -Quantity -type d <|endoftext|>
<|endoftext|> english: Report file systems disk usage in 1GB blocks.
bash: df -B Size <|endoftext|>
<|endoftext|> english: find files in root directory that names are game
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: find all the files which have size 0 bytes in temp folder
bash: find Path -type f -empty <|endoftext|>
<|endoftext|> english: Print the last space separated word from "Your string here"
bash: echo Regex | tr Regex Regex | tail -n Quantity <|endoftext|>
<|endoftext|> english: display all the files in the current folder which hare in the sub directory trees of the folders which begin with the word "kt" followed by a digit
bash: find Path -path Regex <|endoftext|>
<|endoftext|> english: find all the files in the current folder which have the name net or comm in them
bash: find Path -regex Regex <|endoftext|>
<|endoftext|> english: Make directories and parents as needed to "${raw_folder}" and "${split_folder}"
bash: mkdir -p Directory Directory <|endoftext|>
<|endoftext|> english: Extract any line in "f1" or "f2" which does not appear in the other
bash: comm -3 <( sort -u -n File ) <( sort -u -n File ) <|endoftext|>
<|endoftext|> english: List the names of all file.ext files/directories under present working directory
bash: find Path $( pwd ) -name Regex -printf "%f\n" <|endoftext|>
<|endoftext|> english: Find all directories that do not contain "main.cpp"
bash: diff <( find Path -exec readlink -f {} \; | sed Program | sort | uniq ) <( find Path -name Regex -exec readlink -f {} \; | sed Program | sort | uniq ) | sed -n Program <|endoftext|>
<|endoftext|> english: Find all files under current directory and change their permission to 400
bash: find Path -type f -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Find all files/directories containing 'foo' in their names under current directory tree
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Recursively removes all files like '*.xyz' in a current folder.
bash: find Path -name Regex -exec rm {} \; <|endoftext|>
<|endoftext|> english: Find not-executable files under /home/www
bash: find Path ! Path <|endoftext|>
<|endoftext|> english: Change permissions to u=rw,g=r,o= for all files in the current directory tree
bash: find Path -type f -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Find all *fink* files/directories in entire file system
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: Search the files from the current directory tree for "chrome"
bash: find Path -exec grep Regex {} + <|endoftext|>
<|endoftext|> english: Delete all files with indoe number $inum under current directory tree
bash: find Path -inum Quantity -exec rm {} \; <|endoftext|>
<|endoftext|> english: search for all the log files in the folder /apps which have not been modified in the last 60 days and which are present in the same file system as that of /apps and delete them
bash: find Path -xdev -name Regex -type f -mtime +Timespan | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: Print the /proc directory tree, ignoring the PID-process things
bash: find Path -type d | grep -E -v Regex | less <|endoftext|>
<|endoftext|> english: Search directory tree /srv/${x} for regular files accessed at least 10080 minutes ago, and remove those files
bash: find Path -mindepth Quantity -type f -not -amin -Quantity -exec rm {} \; <|endoftext|>
<|endoftext|> english: Print yesterday's date information in "%a %d/%m/%Y" format
bash: date -d Regex +"%a %d/%m/%Y" <|endoftext|>
<|endoftext|> english: Get the grandparent directory of each found 'pattern' file in $SEARCH_PATH
bash: find Path -name Regex | rev | cut -d Regex -f Number | rev <|endoftext|>
<|endoftext|> english: Find regular files named "expression -or expression" under and below /dir/to/search/
bash: find Path -type f -name Regex -print <|endoftext|>
<|endoftext|> english: List files in the current directory and below that are exactly 1234 bytes in size
bash: find Path -size Size <|endoftext|>
<|endoftext|> english: Look for "filename" in the current directory and below
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: List all files and directories residing in the current directory and below
bash: find Path -print0 | xargs -0 -I {} ls {} <|endoftext|>
<|endoftext|> english: Search directory tree `MyApp.app' for directories whose name is 'Headers' and delete them in an optimized way
bash: find -d Path -name Regex -type d -exec rm -r -f {} + <|endoftext|>
<|endoftext|> english: Find files in the "dir" directory tree whose names are 33 characters in length
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: find all directories that names are 'project.images' and display details
bash: find Path -type d -name Regex -ls <|endoftext|>
<|endoftext|> english: Change owner to "$user" and group to "$group" of "$file"
bash: chown -- Regex File <|endoftext|>
<|endoftext|> english: Extract two semicolon-separated fields from specified strings, output them separated by a space.
bash: echo Regex | awk -F Regex Program <|endoftext|>
<|endoftext|> english: Print a line of 99 '=' characters
bash: seq -s Regex Number | tr -d Regex <|endoftext|>
<|endoftext|> english: Print a minimal set of differences between files in directories "teste1" and "teste2", treat absent files as empty, ignore differences in whitespace, treat all files as text, and print 3 lines of unified context
bash: diff -b -u Quantity File File <|endoftext|>
<|endoftext|> english: bind "\C-i" to "complete" function
bash: bind Regex <|endoftext|>
<|endoftext|> english: find files which do not have all permissions to all the users in the current directory
bash: find Path -type f ! -perm Permission | head <|endoftext|>
<|endoftext|> english: Print host name without a newline
bash: echo -n $( hostname ) <|endoftext|>
<|endoftext|> english: Print "on" to standard output and to files matching "/sys/bus/usb/devices/usb*/power/level"
bash: echo Regex | tee File <|endoftext|>
<|endoftext|> english: List *.pl directories in the current directory tree
bash: find Path -name Regex -exec ls -l -d {} \; <|endoftext|>
<|endoftext|> english: Find all empty regular files in the current directory tree
bash: find Path -size Size -type f <|endoftext|>
<|endoftext|> english: finda all the hidden files excluding those having the extension htaccess
bash: find Path -type f \( -iname Regex ! -iname Regex \) <|endoftext|>
<|endoftext|> english: Merge colon-separated information from file1 and file2 where second field of both files matches, sorting the result based on this field - for each line, output: first 3 fields of first file, followed by first 3 fields of second file.
bash: join -o 1.1,1.2,1.3,2.1,2.2,2.3 -j Regex <( sort -k Number File ) <( sort -k Number File ) <|endoftext|>
<|endoftext|> english: Archive "./htmlguide" to "~/src/" with resolved symbolic links and delete any extraneous files from "~/src/" not found in "./htmlguide"
bash: rsync -a -v --copy-dirlinks --delete File File <|endoftext|>
<|endoftext|> english: Print 'cp' commands that would copy a file xyz.c to all the files with '.c' extension present in the ./C directory and below
bash: find Path -name Regex | xargs -n Quantity -I {} echo Regex Regex {} <|endoftext|>
<|endoftext|> english: find all the files ending with "mkv" in current folder
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Print the list of files from the "/zu/durchsuchender/Ordner" directory tree whose names begin with "beispieldatei" and which contain string "Beispielinhalt"
bash: find Path -name Regex -print0 | xargs -0 -I {} grep -l Regex {} <|endoftext|>
<|endoftext|> english: find  symbolic link file that name match  '*sysdep.c'
bash: find Path -lname Regex <|endoftext|>
<|endoftext|> english: Remove "_dbg" from all file or directory names under the current directory
bash: rename Regex Regex File <|endoftext|>
<|endoftext|> english: Find all files/directories named 'pattern' under current directory tree
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: Unzip and extract "*\(userAgent=[^=]*\) [^ =]\+=.*" from "input.gz"
bash: zcat Regex | sed -n Program <|endoftext|>
<|endoftext|> english: Archive directory "/mnt/data" to "/media/WD_Disk_1/current_working_data/", deleting any extraneous files in destination, compress data during copy.
bash: rsync -a -z --delete File File <|endoftext|>
<|endoftext|> english: Verbosely compresses all files on second and third depth level keeping original files in place.
bash: bzip2 -k -v File <|endoftext|>
<|endoftext|> english: Print numbers from 1 to 10 with 2 values per line
bash: seq Number | paste -s -d Regex File <|endoftext|>
<|endoftext|> english: Make directory "/data/db"
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: download contents from "https://www.npmjs.com/install.sh" and execute
bash: curl Regex | sh <|endoftext|>
<|endoftext|> english: Recursively print all directories in the current directory tree
bash: tree -d <|endoftext|>
<|endoftext|> english: find all the files in the home folder that are modified day before yesterday
bash: find Path -mtime -Timespan -mtime +Timespan <|endoftext|>
<|endoftext|> english: delete all the empty files(files with size 0 bytes) in the current folder
bash: find Path -empty -delete -print <|endoftext|>
<|endoftext|> english: dispaly a long listing of all the files in the current folder which have been modified in the last 14 days
bash: find Path -mtime -Timespan -ls <|endoftext|>
<|endoftext|> english: Prompt user to type a list of cron jobs directly at the terminal, then use these replacing previously existing cron jobs.
bash: crontab <|endoftext|>
<|endoftext|> english: Search the /path directory tree for regular files
bash: find Path -type f <|endoftext|>
<|endoftext|> english: Find all 'test' directories in the current directory tree and remove them
bash: find Path -type d -name Regex -exec rm -r -f {} \; <|endoftext|>
<|endoftext|> english: Display the differences between "file1.cf" and "file2.cf" side-by-side with a width of 150 characters
bash: diff -y -W Quantity File File <|endoftext|>
<|endoftext|> english: delete all the empty directories in the current folder
bash: find Path -type d -empty -exec rmdir {} \; <|endoftext|>
<|endoftext|> english: Save the canonical path of "$dir/$file" in variable "path"
bash: readlink --canonicalize File <|endoftext|>
<|endoftext|> english: find all the text files in the current folder and do not  search in the sub directories
bash: find Path -maxdepth Quantity -iname Regex <|endoftext|>
<|endoftext|> english: Find all files/directories under '/home/user/' directory tree whose status were changed 10 minutes ago
bash: find Path -cmin Quantity -print <|endoftext|>
<|endoftext|> english: get the root access
bash: su <|endoftext|>
<|endoftext|> english: Limit each line in "your_file" to 80 characters and view via "more"
bash: fold File File | more <|endoftext|>
<|endoftext|> english: Remove all files in and below the current directory whose names begin with "not"
bash: find Path -name Regex -print0 | xargs -0 -I {} rm {} <|endoftext|>
<|endoftext|> english: Finds every folder with file 'header.php' within, and copies file 'topscripts.php' to every one of them.
bash: find Path -type f -name Regex | xargs -n Quantity -I {} dirname {} | xargs -n Quantity -I {} cp -f File {} <|endoftext|>
<|endoftext|> english: Find all files in /home/kos and below whose names end in ".tmp"
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: Search the current directory tree for executable regular files
bash: find Path Path -type f <|endoftext|>
<|endoftext|> english: Change permissions to 0755 for all directories in the /path directory tree
bash: find Path -type d -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Delete all files under $INTRANETDESTINATION/monthly directory tree that were modified more than 366 days ago
bash: find Path -mtime +Timespan -exec rm {} \; <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory tree wihout descending into './src/emacs' directory
bash: find Path -path Regex -prune -or -print <|endoftext|>
<|endoftext|> english: Recursively finds all files in root folder and prints all strings with 'text-to-find-here' from that files, preceding matched string with filename.
bash: find Path -type f -exec grep -H Regex {} \; <|endoftext|>
<|endoftext|> english: Output two lines of "-tcp"
bash: yes -- Regex | head -n Quantity <|endoftext|>
<|endoftext|> english: Replace all newlines from standard input except the last with spaces
bash: sed -e Program -e Program -e Program -e Program <|endoftext|>
<|endoftext|> english: Find all the regular files under '/your/dir' directory tree which are bigger than 5 MB and display them in decreasing order of their sizes
bash: find Path -type f -size +Size -exec du -h {} + | sort -h -r <|endoftext|>
<|endoftext|> english: Print each character in "orange" on a new line
bash: echo Regex | fold -w Quantity <|endoftext|>
<|endoftext|> english: delete all the empty files in the current directory
bash: find Path -empty -exec rm File \; <|endoftext|>
<|endoftext|> english: Find all directories under var/ directory and change their permission to 700
bash: find Path -type d -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Rename "blah2" to "blah2-new"
bash: mv File File <|endoftext|>
<|endoftext|> english: display all sqlite files in the current directory along with their timestamp
bash: find Path -name Regex -printf '%Tc %p\n' <|endoftext|>
<|endoftext|> english: Find all regular files whose names do not end in "*.html"
bash: find Path -type f -not -name Regex <|endoftext|>
<|endoftext|> english: Print reverse lookup for IP address 72.51.34.34
bash: dig -x Regex <|endoftext|>
<|endoftext|> english: Find and delete all hard links in the /home directory to file1
bash: find Path -xdev -samefile Regex -print0 | xargs -0 -I {} rm {} <|endoftext|>
<|endoftext|> english: Removes 'folderName', and removes all content within if 'folderName' is folder.
bash: rm -r -f File <|endoftext|>
<|endoftext|> english: find all gif files in the file system
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: Make directory "certs"
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: Display only first and second dot-separated numbers of kernel version, ie. 4.4
bash: uname -r | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: find all the files that have been modified in the last 12 hours
bash: find Path -mtime -Timespan <|endoftext|>
<|endoftext|> english: Search the current directory recursively for regular files last changed less than 2 days ago
bash: find Path Path -f -ctime -Timespan <|endoftext|>
<|endoftext|> english: Mount a read only ntfs filesystem
bash: mount -t ntfs <|endoftext|>
<|endoftext|> english: Print the help message for tree
bash: tree --help <|endoftext|>
<|endoftext|> english: display all the directories in the current folder which start with processor followed by digit and ends with .1 or .2
bash: find Path -type d -regextype posix-egrep -regex Regex <|endoftext|>
<|endoftext|> english: Execute "ls -l" on host "something" as user "root"
bash: ssh Regex ls -l <|endoftext|>
<|endoftext|> english: display all the hidden directories in the directory "/dir/to/search/"
bash: find Path -path Regex -print <|endoftext|>
<|endoftext|> english: Find all files under media/ directory and change their permission to 600
bash: find Path -type f -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Delete all regular files under current directory
bash: find Path -type f -print0 | xargs -0 -I {} rm {} <|endoftext|>
<|endoftext|> english: Find all directories on the system whose size is greater than 50k
bash: find Path -type d -size +Size <|endoftext|>
<|endoftext|> english: change owner and group of the file script.sh to user root
bash: chown Regex File <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory and print their paths
bash: find Path -exec echo {} \; <|endoftext|>
<|endoftext|> english: find all text files in the current folder which have been modified after the file /tmp/newerthan
bash: find Path -name Regex -newer File <|endoftext|>
<|endoftext|> english: Search for the case insensitive regex 'STRING_TO_SEARCH_FOR' in all files under current directory
bash: find Path -type f -exec grep -n -i Regex File {} \; <|endoftext|>
<|endoftext|> english: Find all executables in the current directory tree
bash: find Path Path <|endoftext|>
<|endoftext|> english: Search the "katalogi" directory tree for files named "wzorzec"
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Run 'chmod 0644' on all files in the current directory tree
bash: find Path -type f -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Recursively removes all empty folders under current folder.
bash: find Path -depth -type d -empty -exec rmdir {} \; <|endoftext|>
<|endoftext|> english: find all files  that names are 'apt' and display detailed list
bash: find Path -name Regex -ls <|endoftext|>
<|endoftext|> english: find -name '*.js' -not -path './node_modules/*' -not -path './vendor/*'
bash: find Path -name Regex -not \( -path Regex -or -path Regex \) <|endoftext|>
<|endoftext|> english: List the names of the directories in current directory without going into sub-directories
bash: find Path -maxdepth Quantity -mindepth Quantity -type d -printf '%f\n' <|endoftext|>
<|endoftext|> english: Delete all .svn directories under current directory
bash: find Path -type d -name Regex -print0 | xargs -0 -I {} rm -r -f {} <|endoftext|>
<|endoftext|> english: Limits the number of results from grep to 2 lines
bash: grep -o Regex File | head -n Quantity <|endoftext|>
<|endoftext|> english: Remount "/dev/stl12" on "/system" as read only
bash: mount -o ro,remount Regex Regex <|endoftext|>
<|endoftext|> english: Find which ruby files under current directory contain the string 'jump'
bash: find Path -name Regex -exec grep -H Regex {} \; <|endoftext|>
<|endoftext|> english: Print a count of duplicate lines in "filename"
bash: sort File | uniq -c <|endoftext|>
<|endoftext|> english: Print IP addresses of the host name
bash: hostname -i <|endoftext|>
<|endoftext|> english: List all files in the current directory tree invoking xargs only once
bash: find Path -type f -print | xargs -I {} ls -l {} <|endoftext|>
<|endoftext|> english: Remove "\n" from "test1\ntest2\ntest3" and search for "test1.*test3"
bash: echo -e Regex | tr -d Regex | grep Regex <|endoftext|>
<|endoftext|> english: Print amount of space available on the file system containg path to the current working directory human-readable.
bash: df -P -h File | tail - Quantity | awk Program <|endoftext|>
<|endoftext|> english: show all the files in the folder /etc which have been modified in the last 24 hours
bash: find Path -mtime -Timespan <|endoftext|>
<|endoftext|> english: Search the current directory tree for regular files that can be read by noone
bash: find Path -type f ! -perm -Permission <|endoftext|>
<|endoftext|> english: Find all *.rb (regular) files under current directory and change their mode to 600
bash: find Path -name Regex -type f -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Look for files that have SUID or SGID set
bash: find Path -perm +Permission -type f <|endoftext|>
<|endoftext|> english: Executes 'cd /' in a subshell created by a pipeline of built-in function 'true'.
bash: true | cd Directory <|endoftext|>
<|endoftext|> english: Check whether "$path_in_question" is a mount point
bash: df File | grep Regex <|endoftext|>
<|endoftext|> english: Remove containing directories and suffix ".wiki" from specified path, output the result.
bash: basename Regex Regex <|endoftext|>
<|endoftext|> english: Archive "src" to "dst" without overwriting existing files in "dst"
bash: rsync -a -v --ignore-existing File File <|endoftext|>
<|endoftext|> english: Get a list of all files in the /home directory tree and their coressponding inode numbers
bash: find Path -type f -printf "%i@%p\n" <|endoftext|>
<|endoftext|> english: Search the current directory tree for files matching regular expression '^myfile[0-9][0-9]?$'
bash: find Path \( -name Regex -or -name Regex \) <|endoftext|>
<|endoftext|> english: Recursively change the owner of all files in "/usr/local/lib/node_modules" to the current user
bash: chown -R Regex File <|endoftext|>
<|endoftext|> english: Copy local file "$1" to host "$2" into host directory "$3"
bash: cat File | ssh Regex command <|endoftext|>
<|endoftext|> english: search all the lines that start with the word malloc in the files ending with .c or .h or .ch
bash: grep Regex $( find Path -name Regex ) <|endoftext|>
<|endoftext|> english: show all the files  in current directory
bash: find Path <|endoftext|>
<|endoftext|> english: Run 'chmod 0755' on all directories in the current directory tree
bash: find Path -type d -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Print full path of command "python"
bash: which Regex <|endoftext|>
<|endoftext|> english: use regex with find command
bash: find Path Path | grep -P Regex <|endoftext|>
<|endoftext|> english: Find all of jzb's files
bash: find Path -user Regex <|endoftext|>
<|endoftext|> english: Take the section of variable "FILE" between the last slash and the following dot, if any, and store that section in variable "NAME".
bash: basename Regex | cut -d Regex -f -Number <|endoftext|>
<|endoftext|> english: find all the directories in the current folder and create the same directory structure in a remote machine using ssh
bash: find Path -type d | ssh Regex xargs -I {} mkdir -p Directory <|endoftext|>
<|endoftext|> english: Search all files in the current directory tree, except *.html and *.svn*, for "SearchString"
bash: find Path ! -name Regex ! -name Regex -exec grep Regex {} File \; <|endoftext|>
<|endoftext|> english: Print the path names of all .png files in the /home/kibab directory tree
bash: find Path -name Regex -exec echo {} \; <|endoftext|>
<|endoftext|> english: List files larger than 10MB in the /var directory recursively
bash: find Path -size +Size -ls <|endoftext|>
<|endoftext|> english: Find all files in /dir1 and print only the filenames (not paths)
bash: find Path -type f -printf "%f\n" <|endoftext|>
<|endoftext|> english: Find all .java files under and below the current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: find all the files in the current folder with the name "test-a" and move them to the folder test-10. execdir runs the command in the directory where the file is found.
bash: find Path -type f -name Regex -execdir mv {} File \; <|endoftext|>
<|endoftext|> english: Read a line from standard input into variable "REPLY" with prompt "Press [Enter] key to release lock..."
bash: read -p Regex <|endoftext|>
<|endoftext|> english: Print how many files are inside each directory under the current one
bash: find Path | cut -d Regex -f Number | uniq -c <|endoftext|>
<|endoftext|> english: force remove all the c files in the current folder
bash: find Path -name Regex | xargs -I {} rm -r -f {} <|endoftext|>
<|endoftext|> english: Remove all spaces from standard input
bash: tr -d Regex <|endoftext|>
<|endoftext|> english: Find all 100MB files in file system and delete them using rm command
bash: find Path -size +Size -exec rm -r -f {} \; <|endoftext|>
<|endoftext|> english: Reformat date "Sat Aug 09 13:37:14 2014 +1100" according to format string "%a %b %d %H:%M:%S %Y %z"
bash: date -j -f File "Sat Aug 09 13:37:14 2014 +1100" <|endoftext|>
<|endoftext|> english: Display the count of regular files under 'home/magie/d2' directory tree which have execute permission to all the users
bash: find Path -type f -perm +Permission | wc -l <|endoftext|>
<|endoftext|> english: Recursively finds all files in a current folder excluding already compressed files and compresses them with level 9.
bash: find Path -type f | grep -E -v Regex | xargs -I {} bzip2 -9 {} <|endoftext|>
<|endoftext|> english: Remove all regular files from the current directory tree whose names do not end with "ignore1" or "ignore2"
bash: find Path -type f -not -name Regex -not -name Regex | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: find all the header files in /usr/include which have been modified in the last 399 days and display the number of lines, number of files, number of characters of all these files
bash: find Path -name Regex -mtime -Timespan | wc <|endoftext|>
<|endoftext|> english: Find all 'test' directories in the current directory tree and remove them
bash: find Path -name Regex -type d -print0 | xargs -0 -I {} rm -r -- {} <|endoftext|>
<|endoftext|> english: List the number of occurrences of each unique character in "The quick brown fox jumps over the lazy dog" sorted from most frequent to least frequent
bash: echo Regex | grep -o Regex | sort | uniq -c | sort -n -r <|endoftext|>
<|endoftext|> english: Search the home directory for files whose names begin with "test"
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: find all PDFs owned by user “seamstress”
bash: find Path -user Regex -iname Regex <|endoftext|>
<|endoftext|> english: Sort file "file" by line
bash: sort File -o File <|endoftext|>
<|endoftext|> english: Execute 'echo -e "\tHello World"' every 2 seconds
bash: watch echo -e Regex <|endoftext|>
<|endoftext|> english: Change to parent directory and resolve any symlinks in the resulting path, making the physical path the current one.
bash: cd -P Directory <|endoftext|>
<|endoftext|> english: Finds recursion-related options of a 'grep' utility.
bash: grep --help | grep Regex <|endoftext|>
<|endoftext|> english: finds all directories named CVS, and deletes them and their contents.
bash: find Path -type d -name Regex -exec rm -r {} \; <|endoftext|>
<|endoftext|> english: Compare *.csv files in the current directory tree with their analogs stored in /some/other/path/ prompting before running `diff'
bash: find Path -okdir diff {} File \; <|endoftext|>
<|endoftext|> english: Move each of the directories in /path/to/folders/* to another directory whose name is constituted by appending .mbox to each directory name and create a directory named Messages in this directory
bash: find Path -type d -exec mv {} File \; -exec mkdir Directory \; <|endoftext|>
<|endoftext|> english: Find all files in entire file system which are larger than 20000KB and show file name/path followed by its size
bash: find Path -type f -size +Size -exec ls -l -h {} \; | awk Program <|endoftext|>
<|endoftext|> english: find all the files in the entire file system which have been modified in the last 5 days
bash: find Path -mtime -Timespan -print <|endoftext|>
<|endoftext|> english: find CSS files, omitting results containing "CVS"
bash: find Path ! -path Regex -type f -name Regex <|endoftext|>
<|endoftext|> english: Delete files containing whitespaces without recursion
bash: find Path -name Regex -maxdepth Quantity -exec rm -f {} \; <|endoftext|>
<|endoftext|> english: Get domain "$domain" IP address
bash: dig Regex Regex <|endoftext|>
<|endoftext|> english: Find all files and directories last modified less than a day ago and copy to "../changeset" creating directories as needed
bash: find Path -mtime -Timespan -daystart -print0 | cpio -p -d -0 Regex <|endoftext|>
<|endoftext|> english: Go to first directory specified in PATH which contains the command 'oracle'
bash: cd $( dirname $( which Regex ) ) <|endoftext|>
<|endoftext|> english: search for a word in all c files in the current folder
bash: find Path -name Regex | xargs -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: find for xml files in current folder using regular expressions
bash: find Path -regex Regex <|endoftext|>
<|endoftext|> english: Search the /Path directory tree for files matching pattern "file_name*" and containing "bar" in their pathnames
bash: find Path -name Regex | grep Regex <|endoftext|>
<|endoftext|> english: Remove all core dump files from user's home directory
bash: find Path -name Regex -exec rm {} \; <|endoftext|>
<|endoftext|> english: Find all .gz archives in the current directory tree and check if they are valid
bash: find Path -exec gunzip -v -t {} + <|endoftext|>
<|endoftext|> english: Find all file paths under current directory, sort them numerically and show last 10 lines of output with only their paths
bash: find Path -type f -printf '%T@ %p\n' | sort -n | tail - Quantity | cut -f Number -d Regex <|endoftext|>
<|endoftext|> english: Remove all *.tmp files from the /tmp directory tree
bash: find Path -name Regex -print0 | xargs -0 -I {} rm {} <|endoftext|>
<|endoftext|> english: find all the text files in the file system and search only in the disk partition of the root.
bash: find Path -mount -name Regex <|endoftext|>
<|endoftext|> english: recursively change owner of the directory /usr/local/lib to the current user
bash: chown -R $( whoami ) File <|endoftext|>
<|endoftext|> english: find all the files in the current folder which have executable permission to all the users and display the ten files
bash: find Path -perm Permission | head <|endoftext|>
<|endoftext|> english: Find all directories under '/var/www' directory tree excluding '/var/www/web-release-data' and '/var/www/web-development-data' directories and their sub-directories
bash: find Path -type d \( ! -wholename Regex ! -wholename Regex \) <|endoftext|>
<|endoftext|> english: Delete files in /var/tmp/stuff and below that have not been modified in over 90 days
bash: find Path -mtime +Timespan -exec rm {} + <|endoftext|>
<|endoftext|> english: Save the full path of command "oracle" to variable "path"
bash: which Regex <|endoftext|>
<|endoftext|> english: dispaly all the empty regular/normal files in the current folder
bash: find Path -type f -empty <|endoftext|>
<|endoftext|> english: Decompress and unarchive "hello-0.2.tar.gz"
bash: gzip -d -c Regex | tar -x -f File <|endoftext|>
<|endoftext|> english: Print all filenames under /proc and below
bash: find Path -print0 | xargs -0 <|endoftext|>
<|endoftext|> english: Split the contents of "file1 file2 ... file40000" into 1445 files in a round robin fashion with prefix "outputprefix" and numeric suffixes
bash: cat File File File File | split -n Quantity -d File Regex <|endoftext|>
<|endoftext|> english: Find all regular files that were modified $FTIME days ago under current directory tree
bash: find Path -type f -mtime Timespan <|endoftext|>
<|endoftext|> english: Search the current directory tree for executable regular files
bash: find Path -type f Path -exec file {} \; | grep -w -E Regex <|endoftext|>
<|endoftext|> english: Recursively remove all "*.txt" files and answer "n" to any prompt
bash: yes Regex | rm -r File <|endoftext|>
<|endoftext|> english: find all the direcories in the current folder
bash: find Path -type d <|endoftext|>
<|endoftext|> english: Fix files to default permissions 644
bash: find Path -type f -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Display summary of each specified file in human readable form
bash: du -s -h File <|endoftext|>
<|endoftext|> english: count all the regular files that are present in a directory
bash: find Path -type f | wc -l <|endoftext|>
<|endoftext|> english: Remove all directories called "test" from the current directory tree
bash: find Path -path Regex -delete <|endoftext|>
<|endoftext|> english: display all the files in the current folder which have been modified after the files "/bin/sh"
bash: find Path -newer File <|endoftext|>
<|endoftext|> english: find all the files in the file system which have not been modified in the last 100*24 hours
bash: find Path -mtime +Timespan -print <|endoftext|>
<|endoftext|> english: Remove all regular files found in and below /path
bash: find Path -type f -exec rm {} \; <|endoftext|>
<|endoftext|> english: Make directories to "/some/path" as needed
bash: mkdir -p Directory <|endoftext|>
<|endoftext|> english: Remove sequence like '\xEF\xBB\xBF' from first string of every '*.js' file in a current folder and subfolders, creating backup file with .bak extension for every changed file, and removing backup on success.
bash: find Path -iname Regex -type f -exec sed Program -i Regex {} \; -exec rm File \; <|endoftext|>
<|endoftext|> english: Find all files under /myfiles with 647 permission
bash: find Path -type f -perm -Permission <|endoftext|>
<|endoftext|> english: Find all 0644 permission files/directories under current directory tree and show only the first 10 of them
bash: find Path -perm Permission | head <|endoftext|>
<|endoftext|> english: Print the first 32 hexadecimal characters from "/dev/urandom"
bash: cat File | tr -c -d Regex | head -c Quantity <|endoftext|>
<|endoftext|> english: search for all the files ending with "fits" in the folder "/store/01"
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all files/directories named '.todo' under $STORAGEFOLDER directory tree and print the parent directory names
bash: find Path -name Regex -printf '%h\n' <|endoftext|>
<|endoftext|> english: find all regular files  then display the number of occurrences of banana without lines not proper end
bash: find Path -type f -print0 | xargs -0 -I {} grep -c Regex {} | grep -v Regex <|endoftext|>
<|endoftext|> english: Search the home directory for OGG and MP3 files
bash: find Path -iname Regex -or -iname Regex <|endoftext|>
<|endoftext|> english: Print ls output for all non-empty files under under current directory
bash: find Path -type f ! -size Size -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: recursively change owner and group of the directory /your/directory/to/fuel/ and all files into it to user and group nginx
bash: chown Regex File -R <|endoftext|>
<|endoftext|> english: Make directories to file "/full/path/to/file.txt" as needed
bash: mkdir -p $( dirname Regex ) <|endoftext|>
<|endoftext|> english: find files under the current directory containing a space in the filename and delete them
bash: find Path -name Regex -exec rm -f {} \; <|endoftext|>
<|endoftext|> english: Find all directories under current directory and set read-write-execute permission for owner, read-execute permission for group and execute permission for other for those directories
bash: find Path -type d -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Print the list of all files under the current directory and below
bash: find Path <|endoftext|>
<|endoftext|> english: Attempt to connect as root via ssh to host "IP" and copy /root/K to local machine, passing option "StrictHostKeyChecking=no" to the ssh backend - this will normally fail because ssh servers by default don't (and shouldn't) accept root logins.
bash: scp -o StrictHostKeyChecking=no File <|endoftext|>
<|endoftext|> english: Go to directory /cygdrive/c/Program Files (x86) using backslashes to escape special characters
bash: cd Directory <|endoftext|>
<|endoftext|> english: Find all executable files under current directory and show a few lines of output from the beginning
bash: find Path -perm Permission | head <|endoftext|>
<|endoftext|> english: Search the regular files of the current directory tree for string "whatever"
bash: find Path -type f | xargs -L Quantity -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: Split "/usr/bin/cat" into 10000 files of about equal size
bash: split -n Quantity File <|endoftext|>
<|endoftext|> english: Find all directories under 'test' directory tree whose paths match the regex '.*/course[0-9]\.[0-9]\.[0-9]\.[0-9]$'
bash: find Path -type d -regex Regex <|endoftext|>
<|endoftext|> english: Display file.txt with lines numbered, and page interactively through the result.
bash: less -N File <|endoftext|>
<|endoftext|> english: display all the regular/normal files in the current folder that are not accessed in the last 10 minutes
bash: find Path -type f -amin +Quantity <|endoftext|>
<|endoftext|> english: Search /etc for files modified within the last day
bash: find Path -type f -ctime -Timespan <|endoftext|>
<|endoftext|> english: Find all files in the current directory tree that were last changed $minutes minutes ago
bash: find Path -cmin Quantity -print <|endoftext|>
<|endoftext|> english: Remove all regular files with extensions php, css, ini, txt from directory tree /old/WordPress/
bash: find Path -type f -regex Regex -exec rm {} \; <|endoftext|>
<|endoftext|> english: Search the /media/shared directory recursively for MP3 and OGG files
bash: find Path \( -iname Regex -or -iname Regex \) <|endoftext|>
<|endoftext|> english: Locates Erlang distribution, and prints release number from 'RELEASES' file.
bash: awk -F Regex Program $( dirname $( readlink -f $( which Regex ) ) ) <|endoftext|>
<|endoftext|> english: find all the normal/regular files in the current folder which have been accessed in the last 24 hours and display a long listing of them
bash: find Path -type f -atime -Timespan -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: Run 'somecommand' in an environment without the FOO variable.
bash: env -u Regex Program <|endoftext|>
<|endoftext|> english: Connect to host "remotehost" as ssh user "user" to copy remote file "/location/KMST_DataFile_*.kms" to current directory on local host.
bash: scp -v File <|endoftext|>
<|endoftext|> english: display all the regular/normal files in the current folder excluding the files "bbb" and "yyy"
bash: find Path \( -name Regex -or -name Regex \) -prune -or -type f -print <|endoftext|>
<|endoftext|> english: Print the list of all regular files in the current directory and below
bash: find Path -type f <|endoftext|>
<|endoftext|> english: Print unique lines in "file1" compared to "file2" in the order they appear
bash: comm -2 -3 <( sort File ) <( sort File ) | grep -f File Regex <|endoftext|>
<|endoftext|> english: create directory dir
bash: mkdir -p Directory <|endoftext|>
<|endoftext|> english: find all *.java files/directories under current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: search for the file "foo.txt" in the entire file system
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Report file system containing path to the current working directory disk usage in kilobytes.
bash: df -k File <|endoftext|>
<|endoftext|> english: change owner of the files into directory "/mydir" with ".txt" extension to user root
bash: find Path -type f -name Regex -execdir chown Regex {} \; <|endoftext|>
<|endoftext|> english: Find files/directories under current directory that matches 'projects/insanewebproject' in their paths
bash: find Path -ipath Regex <|endoftext|>
<|endoftext|> english: Search the /path directory tree for files that do not have a valid user or group
bash: find Path -nouser -or -nogroup <|endoftext|>
<|endoftext|> english: show a count of the number of filenames ending in .txt in the current directory, without descending into sub-directories
bash: find Path -maxdepth Quantity -name Regex -print0 | grep -c -z Regex <|endoftext|>
<|endoftext|> english: Print a colon-separated list of all directories from the $root directory tree
bash: find Path -type d -printf '%p:' <|endoftext|>
<|endoftext|> english: Count the number of files in the /usr/ports directory tree whose names begin with 'pkg-plist' and which contain 'etc/rc.d/'
bash: find Path -name Regex -exec grep -l Regex {} + | wc -l <|endoftext|>
<|endoftext|> english: Saves printed calendar for $month, $year in positional variables.
bash: set $( cal DateTime DateTime ) <|endoftext|>
<|endoftext|> english: Find the core files and  remove them
bash: find Path -name Regex -exec rm -f {} \; <|endoftext|>
<|endoftext|> english: Find all files/directories named 'findcommandexamples.txt' (case insensitive) in the entire filesystem
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: Find all files under current directory
bash: find Path $( pwd ) -type f <|endoftext|>
<|endoftext|> english: List all files under and below the directory given as variable $FULFILLMENT
bash: find Path -ls <|endoftext|>
<|endoftext|> english: search for the file ".user.log" in a folder
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: display all the header files  and cpp files in the current folder
bash: find Path -regex Regex <|endoftext|>
<|endoftext|> english: force remove all the text files that have not been modified in the last 89 days
bash: find Path -name Regex -type f -daystart -mtime +Timespan | xargs -I {} rm -f {} <|endoftext|>
<|endoftext|> english: find all the files in the file system which belong to the groep "users" and with the name "dateiname"
bash: find Path -group Regex -iname Regex <|endoftext|>
<|endoftext|> english: Send each byte in "/home/cscape/Desktop/table.sql" to awk
bash: fold File File | awk Program <|endoftext|>
<|endoftext|> english: find all the png files in current folder which are present in the pattern list file "search.txt"
bash: find Path -name Regex | grep -f <( sed Program File ) <|endoftext|>
<|endoftext|> english: Display all environment variables, functions, and aliases, pausing for user interaction after each page of output.
bash: set | more <|endoftext|>
<|endoftext|> english: search all the files in the current folder and assign them to a variable
bash: find Path <|endoftext|>
<|endoftext|> english: Uncompress "archive.tar.gz" and extract the archive to "/destination"
bash: gzip -d -c Regex | tar -x -f File -C Directory <|endoftext|>
<|endoftext|> english: Find all directories named "nasa"
bash: find Path -name Regex -type d <|endoftext|>
<|endoftext|> english: Convert ";" separated list "luke;yoda;leila" to new line separated list
bash: echo Regex | tr Regex Regex <|endoftext|>
<|endoftext|> english: Create a symbolic link in directory "~/newlinks" for each file listed in "results2.txt"
bash: cat File | xargs -I {} ln -s {} Regex <|endoftext|>
<|endoftext|> english: Go into the first directory whose name contains 1670
bash: cd $( ls -d File | grep Regex ) <|endoftext|>
<|endoftext|> english: Print a ping request and the number of packets sent, received, and the percentage lost for each ping request to "google.com"
bash: ping Regex | awk Program <|endoftext|>
<|endoftext|> english: Search for broken symlinks
bash: find Path -L -type l <|endoftext|>
<|endoftext|> english: Unsets 'history' shell option.
bash: shopt -u -o history <|endoftext|>
<|endoftext|> english: Find files/directories under current directory and force xargs to print them one by one
bash: find Path | xargs -n Quantity -I {} echo {} <|endoftext|>
<|endoftext|> english: delete all the backup files in current directory
bash: find Path -name Regex -delete <|endoftext|>
<|endoftext|> english: Find SUID files
bash: find Path -perm +Permission <|endoftext|>
<|endoftext|> english: Unzip "daily_backup.sql.gz" and search for lines matching "'x'|/x/"
bash: zcat Regex | grep -E Regex <|endoftext|>
<|endoftext|> english: Print the login time and user of the first person who logged in
bash: who | awk Program | sort | head - Quantity <|endoftext|>
<|endoftext|> english: display a long listing of all the directories in the entire file system
bash: find Path -print0 -type d | xargs -0 -I {} ls -a -l {} <|endoftext|>
<|endoftext|> english: Prints the day of last Friday in a current month.
bash: cal | awk Program <|endoftext|>
<|endoftext|> english: Find all files under /home that belong to user tecmint
bash: find Path -user Regex <|endoftext|>
<|endoftext|> english: Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end
bash: mv File $( echo Regex | rev | cut -f Number -d Regex | rev ) <|endoftext|>
<|endoftext|> english: Make all regular files in the current directory tree world-readable
bash: find Path -type f -print0 | xargs -0 -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: List all symlinks under current directory and search for targetfile.txt in this list
bash: find Path -type l | xargs -I {} ls -l {} | grep Regex <|endoftext|>
<|endoftext|> english: find the file "httpd.log" in the entire file system
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: Save the physical current working directory to variable "END_ABS"
bash: pwd -P <|endoftext|>
<|endoftext|> english: Search for "pattern" in "file" and join each line by a space
bash: cat File | grep Regex | paste -s -d Regex <|endoftext|>
<|endoftext|> english: display all regular/normal files in the current folder ending with the word ummy
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: Search all the regular files in the current directory for "example"
bash: find Path -maxdepth Quantity -type f | xargs -I {} grep -F Regex {} <|endoftext|>
<|endoftext|> english: Copy "*.cc", "*.h", and "SConstruct" to "rsync://localhost:40001/bledge_ce" using blocking IO
bash: rsync --blocking-io File File File File <|endoftext|>
<|endoftext|> english: Find all regular files with space in their names under current directory and rename them by replacing all spaces with _
bash: find Path -name Regex -type f | rename Regex <|endoftext|>
<|endoftext|> english: Get a recursive file list of directory $dir
bash: find Path -type f <|endoftext|>
<|endoftext|> english: Find files that match the executable bit for owner or group
bash: find Path -type f -perm Permission <|endoftext|>
<|endoftext|> english: find all the files in the current folder and search for the word "vps admin" in them.
bash: find Path -exec grep -i Regex {} \; <|endoftext|>
<|endoftext|> english: Find all files and directories and count them
bash: find Path | wc -l <|endoftext|>
<|endoftext|> english: Find all files/directories under 'A' directory tree excluding the paths containing the directory 'a'
bash: find Path ! -path Regex <|endoftext|>
<|endoftext|> english: Print only second from the end field from slash-separated string in file 'datafile'
bash: cat File | rev | cut -d Regex -f Number | rev <|endoftext|>
<|endoftext|> english: Find all .txt files in the user's home directory and below.
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Removes all empty folders under path '/thepath', printing info message on each operation.
bash: find Path -type d -empty -print0 | xargs -0 -I {} rmdir -v {} <|endoftext|>
<|endoftext|> english: Find out all *.sh owned by user vivek
bash: find Path -user Regex -name Regex <|endoftext|>
<|endoftext|> english: Find all files/directories under $1 which have at least write permission for their owner and set write permission for group for these files/directories
bash: find Path -perm -Permission -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: find all the links in the current directory and print them in each line and display their names.
bash: find Path -type l -print | xargs -I {} ls -l -d {} | awk Program <|endoftext|>
<|endoftext|> english: From a script, output the name of the script itself, without containing directories - from a shell, output the name of the shell.
bash: basename -- Regex <|endoftext|>
<|endoftext|> english: Print list of disk and mountpoint of disks matching "/dev/sd*"
bash: mount | awk Program <|endoftext|>
<|endoftext|> english: Search the /dir directory tree for files whose names match regular expression '2015.*(album|picture)'
bash: find Path | grep -E Regex <|endoftext|>
<|endoftext|> english: Print and save the ping results of 25 requests to "google.com" in "/home/user/myLogFile.log" containing at most 100000 bytes
bash: ping -c Quantity Regex | tee >( split -d -b Size File Regex ) <|endoftext|>
<|endoftext|> english: Make directories "a", "b", "c", "d", and "e"
bash: mkdir Directory Directory Directory Directory Directory <|endoftext|>
<|endoftext|> english: Split "/usr/bin/gcc" into 100000 files of about equal size
bash: split -n Quantity File <|endoftext|>
<|endoftext|> english: Find a size of only the target directory in MB format
bash: du -s --block-size Size File <|endoftext|>
<|endoftext|> english: change the permissions of all the regular/normal files to 644 in the folder /home/nobody/public_html
bash: find Path -type f -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: display all the files in the current folder that are at least one week old (7 days) but less then 30 days old
bash: find Path -mtime +Timespan -and -mtime -Timespan -print0 <|endoftext|>
<|endoftext|> english: Gets a current job back to the foreground.
bash: fg <|endoftext|>
<|endoftext|> english: Find all *.mp3 files under current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Prints path to the folder that contains target of symbolic link ../../../../etc/passwd.
bash: $( dirname $( readlink -e File ) ) <|endoftext|>
<|endoftext|> english: Prints logged in users in sorted order.
bash: w | sort <|endoftext|>
<|endoftext|> english: find all the normal/regualar files in the current folder which have a size of 10KB and display a long listing details of them.
bash: find Path -type f -size +Size -exec ls -a -l {} \; <|endoftext|>
<|endoftext|> english: Find all btree*.c files under current directory
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: Find all files/directoires that were modified more than 3 days ago under $dir directory tree
bash: find Path -mtime +Timespan <|endoftext|>
<|endoftext|> english: Remove the last file extension from standard input
bash: sed Program | rev | cut -d Regex -f Number | rev | cut -c Number <|endoftext|>
<|endoftext|> english: Display compter's hostname
bash: echo $( uname -a | awk Program ) <|endoftext|>
<|endoftext|> english: List files in directory "one" and "two" that do not exist in the other
bash: sort <( ls File ) <( ls File ) | uniq -u <|endoftext|>
<|endoftext|> english: Prints process tree of a current process with parents processes and id numbers.
bash: pstree --show-parents -p Regex | head -n Quantity | sed Program | less <|endoftext|>
<|endoftext|> english: Execute command "$cmd_str" on host "$SERVER" as user "$USER"
bash: ssh Regex command <|endoftext|>
<|endoftext|> english: Find only directories
bash: find Path -type d <|endoftext|>
<|endoftext|> english: Remove all files under $DIR that were accessed more than 5 days ago
bash: find Path -type f -atime +Timespan -exec rm {} \; <|endoftext|>
<|endoftext|> english: Locate files with user permissions rwx owned by my_user
bash: find Path -user Regex -perm -Permission <|endoftext|>
<|endoftext|> english: Enables 'dotglob' shell option.
bash: shopt -s dotglob <|endoftext|>
<|endoftext|> english: Remove all files last modified more than 10 days ago from the current directory tree
bash: find Path -mtime +Timespan | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: Revert $string value and print first 20 space-separated fields
bash: echo Regex | rev | cut -d Regex -f -Number <|endoftext|>
<|endoftext|> english: Find the files that have "644" permissions and modify them to have "664" permissions
bash: find Path -type f -perm Permission -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: find httpd.conf file in /etc directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all regular files with case insensitive pattern '*$1*' ($1 expands to first positional parameter and falls back to empty string when not given) under current directory tree and execute a command given by $2 (falls back to 'file' command when $2 is not given) with each of those files as arguments
bash: find Path -type f -iname Regex -exec  \; <|endoftext|>
<|endoftext|> english: Shows status of a shell option 'compat31'.
bash: shopt compat31 <|endoftext|>
<|endoftext|> english: Concatenate files containing `test' in their names
bash: find Path -name Regex -exec cat {} \; <|endoftext|>
<|endoftext|> english: Recursively add ".jpg" to all files in the current directory tree
bash: find Path -type f -exec mv {} File \; <|endoftext|>
<|endoftext|> english: Find all *company* (case-insensitive) files/directories under /basedir with null character as the delimiter
bash: find Path -iname Regex -print0 <|endoftext|>
<|endoftext|> english: Extract host name part from URL.
bash: echo Regex | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: Find all php files in the current directory
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: Change all files in the current directory tree to owner "xx"
bash: find Path \( ! -user Regex -exec chown -- Regex {} + -false \) <|endoftext|>
<|endoftext|> english: find all the directories in the current folder that are empty(size 0 bytes)
bash: find Path -type d -empty <|endoftext|>
<|endoftext|> english: display list of all the hidden regular/normal files in the directory "/dir/to/search/"
bash: find Path -type f -iname Regex -ls <|endoftext|>
<|endoftext|> english: Find all directories under current directory having DIRNAME in their name
bash: find Path -type d | grep Regex <|endoftext|>
<|endoftext|> english: displays all files in the current directory
bash: find Path <|endoftext|>
<|endoftext|> english: Change the owner and group of "uid_demo" to "root"
bash: chown Regex File <|endoftext|>
<|endoftext|> english: Find and remove multiple files such as *.mp3 or *.txt
bash: find Path -type f -name Regex -exec rm -f {} \; <|endoftext|>
<|endoftext|> english: Find .cpp files that differs in subdirectories PATH1 and PATH2.
bash: diff -r -q -x File -x Regex -x Regex File File | grep Regex | grep Regex <|endoftext|>
<|endoftext|> english: Delete all contents form the files that contain the case insensitive regex 'stringtofind' in maximum 1 level down the / directory excluding other partitions
bash: find Path -maxdepth Quantity -xdev -type f -exec grep -i Regex -q {} \; -print0 | xargs -0 -I {} sed Program {} <|endoftext|>
<|endoftext|> english: Change every reference to the colour red to green in all CSS files
bash: find Path -name Regex -exec sed -i -r Program {} \; <|endoftext|>
<|endoftext|> english: Search the current directory tree for all files except SVN ones
bash: find Path | grep -v Regex <|endoftext|>
<|endoftext|> english: search for pattern matched files in the current folder and subfolders exclude "excluded path"
bash: find Path -type f -name Regex ! -path Regex ! -path Regex <|endoftext|>
<|endoftext|> english: Find all files under current directory and print only the filenames (not paths)
bash: find Path -type f -execdir echo {} \; <|endoftext|>
<|endoftext|> english: Write "Hello, world" to standard output and to "/tmp/outfile"
bash: echo Regex | tee File <|endoftext|>
<|endoftext|> english: Run a "rm" process to recursively remove "cache", making it immune to all SIGHUP signals sent to it.
bash: nohup rm -r -f File <|endoftext|>
<|endoftext|> english: Find all regular files or symlinks in the entire file system
bash: find Path -mount -depth \( -type f -or -type l \) -print <|endoftext|>
<|endoftext|> english: Find files/directories in entire file system that were modified a day ago
bash: find Path -mtime Timespan <|endoftext|>
<|endoftext|> english: Change permissions to 777 for all directories in the current directory tree
bash: find Path -type d -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Find files/directories writable by group and others under the /path directory
bash: find Path -perm -Permission <|endoftext|>
<|endoftext|> english: remove all core dump files from user's home directory
bash: find Path -name Regex -exec rm {} \; <|endoftext|>
<|endoftext|> english: find all the files ending with ".sh" in the folder /dir excluding those wth the names foo and bar.
bash: find Path \( -name Regex -prune \) -or \( -name Regex -prune \) -or -name Regex -print <|endoftext|>
<|endoftext|> english: Merge lines whose first comma-separated field in file 'in1' also appears as a first comma-separated in file 'in2', also outputting unmatched lines from 'in2' - both files must be sorted, and the output format of each line will be: first field of in1, second field of in2, and third field of in2.
bash: join -t Regex -o 1.1,1.2,2.3 -a Quantity File File <|endoftext|>
<|endoftext|> english: Backup all of the Java files in the current directory tree by copying them and appending the suffix .bk to each
bash: find Path -name Regex -exec cp {} File \; <|endoftext|>
<|endoftext|> english: find files in /u/bill directory which are access an 2 to 6 minutes ago
bash: find Path -amin +Quantity -amin -Quantity <|endoftext|>
<|endoftext|> english: Find all regular files 1 level down the $dir directory
bash: find Path -maxdepth Quantity -type f <|endoftext|>
<|endoftext|> english: Find files containing string "#!/bin/ksh" and append their names and matching strings to /tmp/allfiles
bash: find Path -type f -execdir grep -i -H Regex {} \; | tee File <|endoftext|>
<|endoftext|> english: find all directories in the current directory
bash: find Path -type d -name Regex <|endoftext|>
<|endoftext|> english: Creates temporary folder in a TMPDIR folder or /tmp folder if TMPDIR doesn`t defined, with folder name like current shell name and 10-letter suffix, and saves created path in 'mydir' variable.
bash: mktemp -d Regex <|endoftext|>
<|endoftext|> english: Find all files in your home directory and below that are larger than 100M.
bash: find Path -size +Size <|endoftext|>
<|endoftext|> english: Find all hard links to file /path/to/file that exist under the current directory tree
bash: find Path -samefile Regex <|endoftext|>
<|endoftext|> english: Look for `regexp' in binary files
bash: find Path -type f -print | xargs -I {} file {} | grep -i Regex | cut -f Number -d Regex | xargs -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: create directory /cpuset
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: Find all regular files in and below the home directory that have been modified in the last 90 minutes
bash: find Path -type f -mmin -Quantity <|endoftext|>
<|endoftext|> english: Find all *.dbf files/directories in entire file system
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: List all directories in maximum 1 level down the current directory
bash: find Path -maxdepth Quantity -type d -exec ls -d -l -r -t {} \; <|endoftext|>
<|endoftext|> english: Search for files which are writable by somebody
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: Print a colon-separated list of all directories from the $root directory tree, except those matching pattern ".[a-z]*"
bash: find Path -name Regex -prune -or -type d -printf '%p:' <|endoftext|>
<|endoftext|> english: Add executable permission to "pretty-print"
bash: chmod +Permission File <|endoftext|>
<|endoftext|> english: Clean up all zombie processes by instantly killing their parent process with SIGKILL signal.
bash: kill - Regex $( ps -A -o stat,ppid | grep -e Regex | awk Program ) <|endoftext|>
<|endoftext|> english: Removes 'latest' folder if empty.
bash: rmdir Directory <|endoftext|>
<|endoftext|> english: Displays information about all network interfaces in system, including inactive ones.
bash: ifconfig -a <|endoftext|>
<|endoftext|> english: create directory TestProject
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: filter output of bind -p by regex
bash: bind -p | grep -a Regex <|endoftext|>
<|endoftext|> english: Finds all folders that contain 'ssh' file and have 'bin' in path.
bash: find Path -name Regex | grep Regex | xargs -I {} dirname {} <|endoftext|>
<|endoftext|> english: Find all the files in file system which are modified in last 1 hour
bash: find Path -mmin -Quantity <|endoftext|>
<|endoftext|> english: search all files in the current folder which match the regular expression
bash: find Path -regex Regex -and -not -regex Regex <|endoftext|>
<|endoftext|> english: display all the regular files in the current folder that are bigger than 10KB
bash: find Path -type f -size +Size <|endoftext|>
<|endoftext|> english: Find all directories in directory tree `httpdocs'
bash: find Path -type d <|endoftext|>
<|endoftext|> english: List each file or directory in the current directory prefixed with its filesize in MB and sorted from smallest to largest
bash: du -s -m -c File | sort -n <|endoftext|>
<|endoftext|> english: Get a two column list of all regular .rb files residing in the current directory tree
bash: find Path -name Regex -type f -print0 | xargs -0 -n Quantity -I {} echo {} <|endoftext|>
<|endoftext|> english: find all the undo files in the current folder and display the toal lines, words, characters
bash: find Path -name Regex | xargs -I {} wc {} <|endoftext|>
<|endoftext|> english: Make directory "saxon_docs"
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: search for "some_function" in all the python files in the current directory
bash: find Path -name Regex | xargs -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: find all files in the file system which belong to the user pat and having the word "filename" in their name.
bash: find Path -user Regex -iname Regex <|endoftext|>
<|endoftext|> english: find all the files in the current folder which do not have the execute permission
bash: find Path -type d ! -perm -Permission <|endoftext|>
<|endoftext|> english: List all files bigger than 10000 blocks
bash: find Path -type f -size +Size -exec ls -a -l {} \; <|endoftext|>
<|endoftext|> english: Print summary of new/missing files, and which files differ between folder1 and folder2.
bash: diff -a -r -q File File <|endoftext|>
<|endoftext|> english: Filter the contents of 'file' through sed commands written in 'commandfile', displaying the result.
bash: sed -f File Program <|endoftext|>
<|endoftext|> english: Find all PNG and JPG files and append them to archive `images.tar'
bash: find Path \( -iname Regex -or -iname Regex \) -print -exec tar -r -f File {} \; <|endoftext|>
<|endoftext|> english: Copy src_dir recursively to dest_dir, but without overwriting existing files.
bash: cp -n -r File File <|endoftext|>
<|endoftext|> english: Find files named core in or below the directory /tmp and delete them. Note that this will work incorrectly if there are any filenames containing newlines, single or double quotes, or spaces.
bash: find Path -name Regex -type f -print | xargs -I {} rm -f {} <|endoftext|>
<|endoftext|> english: Find all files under "/path" that do not contain a "." and append ".jpg" to their file name
bash: find Path -type f -not -name Regex -print0 | xargs -0 -I {} rename Regex {} <|endoftext|>
<|endoftext|> english: use find -exec with multiple commands regardless of their success or failure
bash: find Path -name Regex \( -exec echo {} \; -or -exec true \; \) -exec grep Regex {} \; <|endoftext|>
<|endoftext|> english: Make directory "destdir"
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: Copy all files under director 'foo' whose name doesn't contain 'Music' to directory 'bar'.
bash: find Path -type f ! -name Regex -exec cp {} File \; <|endoftext|>
<|endoftext|> english: Remove all *.bak files under current directory
bash: find Path -type f -name Regex -print0 | xargs -0 -I {} rm -v {} <|endoftext|>
<|endoftext|> english: display the number of lines in all the files in the current folder
bash: find Path -exec wc -l {} \; <|endoftext|>
<|endoftext|> english: Find all files called "file1.txt" that reside under and below /home/wsuNID/
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: find all the regular/normal files in all the directories in the /some/dir and delete them
bash: find Path -type d -exec find {} -type f -delete \; <|endoftext|>
<|endoftext|> english: Get the total size of all files under dir1 directory
bash: find Path ! -type d | xargs -I {} wc -c {} | tail - Quantity <|endoftext|>
<|endoftext|> english: change owner and group of the file uid_demo to user and group root
bash: chown Regex File <|endoftext|>
<|endoftext|> english: Remove sequence like '\xEF\xBB\xBF' from first string of every file in a current folder and subfolders, creating backup file with .bak extension for every changed file, and removing backup on success.
bash: find Path -type f -exec sed Program -i Regex {} \; -exec rm File \; <|endoftext|>
<|endoftext|> english: Remove all .txt files from the /full/path/dir directory tree
bash: find Path -name Regex -print0 | xargs -0 -I {} rm {} <|endoftext|>
<|endoftext|> english: Print which files differ between "folder1" and "folder2" treating all files as text
bash: diff -a -r -q File File <|endoftext|>
<|endoftext|> english: Find regular files under / that contain "stringtofind" and clear out their contents
bash: find Path -maxdepth Quantity -xdev -type f -exec grep -i Regex -l {} \; -exec sed -i Program {} \; <|endoftext|>
<|endoftext|> english: Count the number of equal lines in sorted files "ignore.txt" and "input.txt"
bash: comm -1 -2 File File | wc -l <|endoftext|>
<|endoftext|> english: Create a symbolic link in the current directory for each file under the directories matching "../[12][0-9][0-9]"
bash: find Path -type f -exec ln -s {} \; <|endoftext|>
<|endoftext|> english: Find files in the current directory tree of size between 700k and 1000k
bash: find Path \( -size +Size -and -size -Size \) <|endoftext|>
<|endoftext|> english: List all environment variables whose name starts with PATH, showing the name and value of each one.
bash: env | grep Regex <|endoftext|>
<|endoftext|> english: Replace all instances of "STRING_TO_REPLACE" with "STRING_TO_REPLACE_IT" in file "index.html" and make a backup with suffix "bak" on OSX
bash: sed -i Program -e Program File <|endoftext|>
<|endoftext|> english: Search the current directory tree for all regular files matching pattern "*.rb"
bash: find Path -name Regex -type f <|endoftext|>
<|endoftext|> english: search for the word "nameserver" in all the regular/normal files in the /etc directory and display the name of the file along with the matched line
bash: find Path -iname Regex -type f -print0 | xargs -0 -I {} grep -H Regex {} <|endoftext|>
<|endoftext|> english: List all *.c files in entire file system
bash: find Path ! -name Regex -print <|endoftext|>
<|endoftext|> english: List all .c and .h files in the current directory tree that contain "thing"
bash: find Path -name Regex -print0 | xargs -r -0 -I {} grep -l Regex {} <|endoftext|>
<|endoftext|> english: Report total file systems disk usage in 1T blocks.
bash: df --total -B Size | tail -n Quantity <|endoftext|>
<|endoftext|> english: change owner of the file my_test_expect.exp to user el
bash: chown Regex File File File File File <|endoftext|>
<|endoftext|> english: Find all files/directories named file1 in maximum 2 levels down the current directory
bash: find Path -maxdepth Quantity -name Regex <|endoftext|>
<|endoftext|> english: show the sum of disk used by all the files that belong to the user "test1" in the entire file system
bash: find Path -user Regex -exec du -s -m {} \; | awk Program <|endoftext|>
<|endoftext|> english: display all regular/normal files in the folder "dir" and display the filename along with file size
bash: find Path -type f -printf "f %s %p\n" <|endoftext|>
<|endoftext|> english: find all the files that have been modified in the last 7 days,
bash: find Path -mtime -Timespan -print <|endoftext|>
<|endoftext|> english: Output the system host name and date to the console
bash: echo $( hostname ) $( date ) <|endoftext|>
<|endoftext|> english: Print concatenated content of all files ending with '.foo' under the current folder
bash: cat $( find Path -name Regex -print ) <|endoftext|>
<|endoftext|> english: Find all files under $source_dir that match the regex .*\.\(avi\|wmv\|flv\|mp4\) in their paths and print them with null character as the delimiter
bash: find Path -type f -regex Regex -print0 <|endoftext|>
<|endoftext|> english: Set permissions to 644 for all regular files under the current directory tree that have permissions 755
bash: find Path -type f -perm Permission -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: find all the regular/normal files in the current folder which belong to the group "flossblog"
bash: find Path -group Regex -type f <|endoftext|>
<|endoftext|> english: Find all files/directories under '/abs/path/to/directory' directory non-recursively that match the pattern '.*invalidTemplateName.*' in their names
bash: find Path -maxdepth Quantity -name Regex <|endoftext|>
<|endoftext|> english: delete all the files which start with "Tes" in the current folder
bash: find Path -type f -name Regex -exec rm {} \; <|endoftext|>
<|endoftext|> english: Find all directories in /path/to/dir/ without going into sub-directories
bash: find Path -mindepth Quantity -maxdepth Quantity -type d <|endoftext|>
<|endoftext|> english: Remove all files whose names end with "~" in the /home/peter directory tree
bash: find Path -name Regex | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: Write "foo" to the real path of the current command's standard input
bash: echo Regex | readlink File <|endoftext|>
<|endoftext|> english: Find all directories named "D" in the current directory tree and print their parents
bash: find Path -type d -name Regex | sed Program <|endoftext|>
<|endoftext|> english: Recursively changes group ownership of everything within a current folder to 'admin'.
bash: chgrp -R Regex File <|endoftext|>
<|endoftext|> english: find files in the current directory and sub-directories, whose content was updated within the last hour
bash: find Path -mmin -Quantity <|endoftext|>
<|endoftext|> english: Calculate the md5 sum of the file "filename" and print only the hash
bash: md5sum File | cut -f Number -d Regex <|endoftext|>
<|endoftext|> english: find all the cpp files in the current folder and move them to another folder(plus takes the bulk output of the find command and gives it as input to the move command in exec)
bash: find Path -type f -iname Regex -exec mv -t Directory {} + <|endoftext|>
<|endoftext|> english: Delete all .svn files/directories under current directory
bash: find Path -name Regex -exec rm -v {} \; <|endoftext|>
<|endoftext|> english: Change the ownership of all files in the current directory tree from root to www-data
bash: find Path -user Regex -exec chown Regex {} \; <|endoftext|>
<|endoftext|> english: Search the current directory recursively for regular files that have been changed less than 3 days ago and print 5 of them.
bash: find Path -type f -ctime -Timespan | tail -n Quantity <|endoftext|>
<|endoftext|> english: Convert "595a" into characters and then print the hexadecimal and printable characters of each byte
bash: echo Regex | awk Program Program Program Program | od -t x1c <|endoftext|>
<|endoftext|> english: find all the files in the current directory which end with orig
bash: find Path -name Regex -exec echo {} Regex \; <|endoftext|>
<|endoftext|> english: display all pdf files in the current folder
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: find all gzip files in a folder
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find and the 5 largest regular files in the Downloads folder of tecmint's home directory and output the file sizes in bytes.
bash: find Path -type f -printf "%s %p\n" | sort -r -n | head -n Quantity <|endoftext|>
<|endoftext|> english: Generate the Spanish alphabet and number each character
bash: echo -e Regex | nl <|endoftext|>
<|endoftext|> english: Enables shell option 'cmdhist'.
bash: shopt -s cmdhist <|endoftext|>
<|endoftext|> english: Search for 'foo' in all regular files under 'sources' directory tree and show the matched lines with filenames
bash: find Path -type f -exec grep -H Regex {} + <|endoftext|>
<|endoftext|> english: Print each line in "f1" and "f2" separated by a space and "f3" separated by a tab
bash: paste <( paste -d Regex File File ) File <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory tree with '.old' extension
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: Find all Name* files under ../../$name-module and rename them by replacing 'Name' with $Name (will be expanded in the current shell) in their names
bash: find Path -print0 -name Regex -type f | xargs -0 -I {} rename Regex {} <|endoftext|>
<|endoftext|> english: Find all files/directories under $dir directory
bash: find Path <|endoftext|>
<|endoftext|> english: Print the contents of "file" in reverse order
bash: nl File | sort -n -r | cut -b Number <|endoftext|>
<|endoftext|> english: Find regular files modified within the last ten minutes under /etc
bash: find Path -type f -mmin -Quantity <|endoftext|>
<|endoftext|> english: Search all of /usr for any directory named 'My Files', for each directory found, copy it to /iscsi preserving full paths and attributes, then remove it.
bash: find Path -type d -name Regex -exec rsync -a -v -R {} File \; -exec rm -r -f File \; <|endoftext|>
<|endoftext|> english: Get current directory name without full path, ie. the part after the last /
bash: pwd | awk -F Regex Program <|endoftext|>
<|endoftext|> english: Archive directory "symdir" to "symdir_output" preserving symbolic links.
bash: rsync File File -a --copy-links -v <|endoftext|>
<|endoftext|> english: Find all files that are modified in last 3 days
bash: find Path -type f -mtime -Timespan <|endoftext|>
<|endoftext|> english: search for the file "job.history" in the folder /data/Spoolln and search for multiple patterns in the file and display the count of matched lines along with the pattern
bash: find Path -name Regex | xargs -I {} grep -o -m Quantity -h Regex {} | sort | uniq -c <|endoftext|>
<|endoftext|> english: Lists all files in a current folder, separating names with space.
bash: ls -1 | awk Program <|endoftext|>
<|endoftext|> english: Find all .txt files in the /home/user1 directory tree and copy them to /home/backup
bash: find Path -name Regex | xargs -I {} cp -a -v --target-directory Directory --parents {} <|endoftext|>
<|endoftext|> english: Copies all files like 'lib*.so' to '~/usr/gtest/lib/' directory.
bash: cp File File <|endoftext|>
<|endoftext|> english: display all the text files  in the current folder
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: find all files and directories that have been modified in the last seven days
bash: find Path -mtime -Timespan <|endoftext|>
<|endoftext|> english: Archive "/path/to/copy" to "/path/to/local/storage" on host "host.remoted.from" as user "user" updating files with different checksums, showing human readable progress and statistics, and compressing data during transmission
bash: rsync -c -h -a -v -z -P --stats File File <|endoftext|>
<|endoftext|> english: find all the perl files in /var/www ( case insensitive search )
bash: find Path -type f -iname Regex -print <|endoftext|>
<|endoftext|> english: Set variable "architecture" to machine architecture, ie. x86_64
bash: uname -m <|endoftext|>
<|endoftext|> english: List all available commands in Mac OS
bash: echo Regex | tr Regex Regex | xargs -I {} find {} -maxdepth Quantity -type f -perm Permission <|endoftext|>
<|endoftext|> english: Prints all Saturday days of a current month.
bash: cal -h | cut -c Number <|endoftext|>
<|endoftext|> english: Merge already sorted files "*.txt" and split the result into files of at most 1000000 lines each with a numeric suffix and a prefix "output"
bash: sort File File | split -d -l Quantity File Regex <|endoftext|>
<|endoftext|> english: Find all *Company* files/directories under /root/of/where/files/are directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Load keybindings from a file ~/.inputrc
bash: bind -f File <|endoftext|>
<|endoftext|> english: find all files in current folder which are bigger than 1 MB and move them to another folder
bash: find Path -size +Size -print0 | xargs -0 -I {} mv {} File <|endoftext|>
<|endoftext|> english: Copy all files matching "file_name.extension" to "/path/to/receiving/folder" preserving directory hierarchy
bash: find Path -name Regex -print | cpio -p -a -v -d Regex <|endoftext|>
<|endoftext|> english: find all the files in home folder which have been modified in the last 24 hours
bash: find Path -mtime -Timespan <|endoftext|>
<|endoftext|> english: Find files/directories named 'photo.jpg' in the entire filesystem
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: List the regular files of the current directory tree that contain string "texthere"
bash: find Path -type f -exec grep -l Regex {} + <|endoftext|>
<|endoftext|> english: Print the list of the current directory's subdirectories
bash: find Path -maxdepth Quantity -mindepth Quantity -type d -printf '%f\n' <|endoftext|>
<|endoftext|> english: find files in current folder ending with ".c" or ".h" or ".ch" and search for a word in these files and enable color highlighting of the matched text
bash: find Path -name Regex -exec grep --color -aHn Regex {} \; <|endoftext|>
<|endoftext|> english: Finds all user session in system, and shows sorted user names with number of sessions of each user.
bash: w | sed Program | cut -f Number -d Regex | sort | uniq -c <|endoftext|>
<|endoftext|> english: Prints sequentially listing of a current folder and calendar of a current month.
bash: echo $( ls ) $( cal ) <|endoftext|>
<|endoftext|> english: Print IP addresses of the host name
bash: hostname -I <|endoftext|>
<|endoftext|> english: List all regular files under current directory ensuring white space safety
bash: find Path -type f -print0 | xargs -0 -n Quantity <|endoftext|>
<|endoftext|> english: copy all the regular/normal files from temp folder which have been modified in the last 30*24 hours to /tmp/backup
bash: find Path -type f -mtime -Timespan -exec cp {} File \; <|endoftext|>
<|endoftext|> english: find all files that names are game
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Identify CMS version/releases accross all your PHPBB installations
bash: find Path -type f -wholename Regex -exec grep -H Regex {} \; <|endoftext|>
<|endoftext|> english: Find all *.srt files under directory named 'working' and show the first one found
bash: find Path -type f -name Regex | head - Quantity <|endoftext|>
<|endoftext|> english: find all text files in current folder and trim the extra spaces in all lines in these files
bash: find Path -type f -name Regex -exec sed --in-place Regex {} + <|endoftext|>
<|endoftext|> english: Delete all files with '.old' extension under current directory tree
bash: find Path -name Regex -exec rm {} \; <|endoftext|>
<|endoftext|> english: Split "input.txt" into files of at most 10 bytes each with prefix "/tmp/split-file"
bash: split -b Size File Regex <|endoftext|>
<|endoftext|> english: Silently read a single character into variable "REPLY"
bash: read -n Quantity -s <|endoftext|>
<|endoftext|> english: Find all regular files under $DIR directory tree whose paths match the regex ".*\.${TYPES_RE}" where ${TYPES_RE} expands as a variable
bash: find Path -type f -regex Regex <|endoftext|>
<|endoftext|> english: Search the current directory tree for directories that can be opened by noone
bash: find Path -type d ! -perm -Permission <|endoftext|>
<|endoftext|> english: Find all 50MB files
bash: find Path -size Size <|endoftext|>
<|endoftext|> english: Search directory lpi104-6 for files with inode number 1988884
bash: find Path -inum Quantity <|endoftext|>
<|endoftext|> english: Search for "vid=123" in all compressed files found under "/my_home" matching "*log.20140226*"
bash: zcat $( find Path -name Regex ) | grep Regex <|endoftext|>
<|endoftext|> english: Count number of lines in all files matching "*R1*.fastq.gz"
bash: zcat Regex | wc -l <|endoftext|>
<|endoftext|> english: Displays status of currently active network interfaces.
bash: ifconfig <|endoftext|>
<|endoftext|> english: Search for 'Text To Find' in all regular files under current directory tree and show the matched files and matched lines with line numbers
bash: find Path -type f -exec grep -H -n Regex {} \; <|endoftext|>
<|endoftext|> english: Replaces any occurences of '*favicon.ico*' in any subfolder with file '/root/favicon.ico'.
bash: find Path | grep Regex | xargs -n Quantity -I {} cp -f File {} <|endoftext|>
<|endoftext|> english: Show manual page of find
bash: man Regex <|endoftext|>
<|endoftext|> english: Add the execute and read permission for all and the write permission for the user to the dir_data directory and all of its sub-directories.
bash: find Path -type d -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: find a.out, *.o and core files under the current directory and sub-directories and delete them.
bash: find Path \( -name Regex -or -name Regex -or -name Regex \) -exec rm {} \; <|endoftext|>
<|endoftext|> english: Print the byte count of all regular files found in the current directory tree
bash: find Path -type f | xargs | wc -c <|endoftext|>
<|endoftext|> english: Find all files/directories which have been modified within the last day in the drectories/files taken from the glob pattern '/tmp/test/*'
bash: find Path -mtime -Timespan <|endoftext|>
<|endoftext|> english: Print the full path of command "gcc"
bash: which Regex <|endoftext|>
<|endoftext|> english: create a soft link of the files in the folder /media/movies which have been modified in the last 30 days
bash: find Path -type f -mtime -Timespan -exec ln -s {} Regex \; <|endoftext|>
<|endoftext|> english: Find all files which have 211028 inode number in current directory then Locating and renaming unprintable directories
bash: find Path -inum Quantity -exec mv {} File \; <|endoftext|>
<|endoftext|> english: list all regular files under the directory "$directory"
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: Check if process ID 1 exists (init or systemd) and current user has permission to send it signals.
bash: kill - Regex Regex <|endoftext|>
<|endoftext|> english: check if there any files from the .git folder after excluding it using the prune command
bash: find Path -path Regex -prune -or -print -and \( -type f -or -type l -or -type d \) | grep Regex <|endoftext|>
<|endoftext|> english: Exclude directory from find . command
bash: find Path ! -path Regex -iname Regex <|endoftext|>
<|endoftext|> english: Print a listing of the /usr/local/etc/rc.d directory tree
bash: find Path -type f | awk -F Regex Program <|endoftext|>
<|endoftext|> english: Open a ssh connection to user@host with X11 forwarding to run GUI programs
bash: ssh Regex -X <|endoftext|>
<|endoftext|> english: Set shell option 'histverify'.
bash: shopt -s histverify <|endoftext|>
<|endoftext|> english: Change the user to daisy for directories and subdirectories owned by harry
bash: find Path -type d -user Regex -exec chown Regex {} \; <|endoftext|>
<|endoftext|> english: find all the files in the entire file system starting with the word top
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all directories under /home/username/public_html/sites/all/modules and set their permission to 750
bash: find Path -type d -exec chmod Permission {} + <|endoftext|>
<|endoftext|> english: Make directory "tata"
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: Compress "hello world" and save to variable "hey"
bash: echo Regex | gzip -c -f <|endoftext|>
<|endoftext|> english: Find files with name `aaa.txt' under the current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: display all files ending with ".ext" in current folder and append the file contents of list.txt and sort them based on name and display only uniq items
bash: find Path -name Regex | cat File File | sort | uniq -u <|endoftext|>
<|endoftext|> english: Synchronize "xxx-files" to "different-stuff/xxx-files" recursively preserving metadata with a bandwidth limit of 2000 KiB/s
bash: rsync -p -o -g -t -E -t -v -r --progress --bwlimit Bandwidth File File <|endoftext|>
<|endoftext|> english: Count the *.html files residing in the /usr/src directory tree and containing string "foo"
bash: find Path -name Regex | xargs -I {} grep -l Regex {} | wc -l <|endoftext|>
<|endoftext|> english: create a backup of all the files in the home folder on a partition and save the log to a file
bash: find Path -depth -print | cpio -o -v -0 Regex | tee -a File <|endoftext|>
<|endoftext|> english: find directory which name is Cookbook under /users/al
bash: find Path -name Regex -type d <|endoftext|>
<|endoftext|> english: Report file system containing the current directory disk usage in kilobytes.
bash: df -k File <|endoftext|>
<|endoftext|> english: Search for files/directories which are writable by either their owner or their group
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: search for files in the current folder ending with ".au"
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: display all the text files in the current folder  and do not search in the bin directory
bash: find Path -name Regex -prune -or -name Regex -print <|endoftext|>
<|endoftext|> english: List all files in entire file system that are newer than the file $newerthan and older than the file $olderthan and sort them according to file modification time
bash: find Path -type f -name Regex -newermt Regex ! -newermt Regex -printf "%T+\t%p\n" | sort | awk Program <|endoftext|>
<|endoftext|> english: delete all the text files in the current folder
bash: find Path -type f -name Regex -delete <|endoftext|>
<|endoftext|> english: recursively finds all files newer than a date
bash: find Path -type f -newermt $( date '+%Y-%m-%d %H:%M:%S' -d Regex ) <|endoftext|>
<|endoftext|> english: Find and show all files on the system that are larger than 900 MB
bash: find Path -size +Size <|endoftext|>
<|endoftext|> english: Search the current directory and all of its sub-directory for any PDF files being careful to prevent the shell from expanding anything in '*.pdf'  before it'ss passed to find.
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: Find all *.ogg (case insensitive) files/directories under your home directory
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: Print information about all users who are logged in
bash: who -l -a <|endoftext|>
<|endoftext|> english: Find all *.rb (regular) files under current directory and count their line numbers ensuring white space safety on file name/path.
bash: find Path -name Regex -type f -print0 | xargs -0 -I {} wc -l {} <|endoftext|>
<|endoftext|> english: Change file owner and group of "/path/to/yourapp" to root and print a diagnostic
bash: chown -v Regex File <|endoftext|>
<|endoftext|> english: List all cron jobs where the minute part is either * or a number from 0 to 14.
bash: crontab -l | awk Program <|endoftext|>
<|endoftext|> english: display all files in the entire file system
bash: find Path <|endoftext|>
<|endoftext|> english: A no-op on filename with sed
bash: sed -i Program File <|endoftext|>
<|endoftext|> english: Find directories in the current directory (no sub-directories) and print them appended with a string literal 'Directory: '
bash: find Path -maxdepth Quantity -type d -print | xargs -I {} echo Regex {} <|endoftext|>
<|endoftext|> english: Find all files which  are accessed after modifying /etc/passwd files.
bash: find Path -newer File <|endoftext|>
<|endoftext|> english: display all files in the folder /usr/src excluding those ending with ",v"
bash: find Path ! \( -name Regex -or -name Regex \) {} Path -print <|endoftext|>
<|endoftext|> english: create and list contents of the archive
bash: tar -c -f File File | tar File File <|endoftext|>
<|endoftext|> english: Check if current system is running in 64-bit addressing.
bash: uname -m | grep Regex <|endoftext|>
<|endoftext|> english: Search for 'some string' in all *js files under current directory and show the matched lines with line numbers
bash: find Path -name Regex | grep -n Regex <|endoftext|>
<|endoftext|> english: remove all the files in the folder "myfiiles" which have not been accessed in the last 30*24 hours
bash: find Path -atime +Timespan -exec rm {} \; <|endoftext|>
<|endoftext|> english: Mount remote "cifs" filesystem "//192.168.0.111/serv_share" on "/mnt/my_share" with username "me" and password "mine"
bash: mount -t cifs -o username=me,password=mine Regex Regex <|endoftext|>
<|endoftext|> english: search for the file "process.txt" in the entire file system
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: search for perl files in the folder /users/tom
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Search all files in the current directory tree that are named "whatever" for "you_search_for_it"
bash: find Path -name Regex -exec grep --with-filename Regex {} \; <|endoftext|>
<|endoftext|> english: Find files/directories that does not have write permssion for group
bash: find Path ! -perm Permission <|endoftext|>
<|endoftext|> english: display a long listing of all regular files  in current folder which have been modified in the last 60 minutes
bash: find Path -mmin -Quantity -type f -ls <|endoftext|>
<|endoftext|> english: Find all php files under current directory
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: download content from "http://127.0.0.1:8000" and output to "index.html"
bash: curl Regex Regex Regex <|endoftext|>
<|endoftext|> english: Print a sorted list of the extensions of the regular files from the current directory tree with counts per extension
bash: find Path -type f | sed -e Program | sed -e Program | sort | uniq -c | sort -r -n <|endoftext|>
<|endoftext|> english: Find all *.txt files under / and print their sizes and paths
bash: find Path -name Regex -exec du -h -c {} \; <|endoftext|>
<|endoftext|> english: Remove files named "core" from the /work directory tree and write their names to /dev/stderr (the standard error
bash: find Path -fprint File -and \( -name Regex -exec rm {} \; \) <|endoftext|>
<|endoftext|> english: Remove files under current directory with inode number $inum
bash: find Path -inum Quantity -exec rm {} \; <|endoftext|>
<|endoftext|> english: Search the current directory tree for .log files containing the string "The SAS System" on the first line
bash: find Path -name Regex -type f Path ! -size Size -exec sed -n Program {} \; -print <|endoftext|>
<|endoftext|> english: search for the file, filename.txt in the current folder
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Search for files whose name is "filename" and whose permissions are 777
bash: find Path -perm Permission -iname Regex <|endoftext|>
<|endoftext|> english: Find all the files which are greater than 50MB and less than 100MB
bash: find Path -size +Size -size -Size <|endoftext|>
<|endoftext|> english: Find all .sh files in the current directory tree and remove them
bash: find Path -name Regex -print0 | xargs -0 -I {} rm -r -f {} <|endoftext|>
<|endoftext|> english: Print the percentage of packets lost of the 5 packets sent to "$host"
bash: ping -c Quantity -q Regex | grep -o -P Regex <|endoftext|>
<|endoftext|> english: find files with the extension .conf in the /etc directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all files in /tmp whose names begin with the current user's name followed by "."
bash: find Path -maxdepth Quantity -name Regex <|endoftext|>
<|endoftext|> english: Find all files on the system whose names are 'composer.json'
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all the .mp3 files in the music folder and pass to the ls command, -print0 is required if any filenames contain whitespace
bash: find Path -name Regex -print0 | xargs -0 -I {} ls {} <|endoftext|>
<|endoftext|> english: Gets MAC address of eth0 network interface.
bash: ifconfig | grep -i Regex | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: Set variable value to current kernel release name.
bash: uname -r <|endoftext|>
<|endoftext|> english: Search for all files with same inode NUM
bash: find Path -inum Quantity <|endoftext|>
<|endoftext|> english: Find all the files/directories in the current directory tree which have been modified between 2014-08-25 and 2014-08-26
bash: find Path -newermt Regex ! -newermt Regex -print <|endoftext|>
<|endoftext|> english: Search the /usr/bin directory tree for regular files modified or created less than 10 days ago
bash: find Path -type f -mtime -Timespan <|endoftext|>
<|endoftext|> english: Search the system for regular files whose names are "filename" ignoring the case
bash: find Path -type f -iname Regex <|endoftext|>
<|endoftext|> english: display a long listing of all the files in the current folder
bash: find Path -type f -exec ls -1 {} \; <|endoftext|>
<|endoftext|> english: Print numbers from 1 to 30 with a leading 0
bash: seq -w Number <|endoftext|>
<|endoftext|> english: Creates temporary file by template provided in option '-t'.
bash: mktemp -t Regex <|endoftext|>
<|endoftext|> english: Saves exit statuses of piped commands in a system variable PIPESTATUS='([0]="0" [1]="0" [2]="1" [3]="0" [4]="1")'
bash: true | true | false | true | false <|endoftext|>
<|endoftext|> english: display all the html files in the current folder
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: Search for 'mystring' in all *.txt files under current directory
bash: find Path -name Regex -exec grep -E Regex {} \; <|endoftext|>
<|endoftext|> english: find all the php files
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Display the total count of all the files/directories with '.old' extension under current directory tree
bash: find Path -name Regex -print | wc -l <|endoftext|>
<|endoftext|> english: get the root access
bash: su Regex <|endoftext|>
<|endoftext|> english: Clean the current directory from all subversion directories recursively
bash: find Path -type d -name Regex -print | xargs -I {} rm -r -f {} <|endoftext|>
<|endoftext|> english: Find files/directories under /tmp smaller than 100 bytes
bash: find Path -size -Size <|endoftext|>
<|endoftext|> english: Print newline, word, and byte counts of each '*.java' file within current directory, and total newline, word, and byte counts
bash: find Path -name Regex | tr Regex Regex | xargs -0 -I {} wc {} <|endoftext|>
<|endoftext|> english: Print the contents of "file" with " | " appended to each line
bash: echo $( sed -e Program Program ) <|endoftext|>
<|endoftext|> english: Find all files/directories named 'file' and print them with null character as the delimiter instead of newline
bash: find Path -name Regex -print0 <|endoftext|>
<|endoftext|> english: Sources script incl.sh in the folder where current script is located.
bash: source $( dirname Regex ) <|endoftext|>
<|endoftext|> english: List all *jsp and *java regular files found in the current directory tree
bash: find Path \( -name Regex -or -name Regex \) -type f -ls <|endoftext|>
<|endoftext|> english: Search the /path directory tree for files missing g+w and o+w bits
bash: find Path ! -perm Permission <|endoftext|>
<|endoftext|> english: Find all directories in current directory without going into sub-directories
bash: find Path -type d -maxdepth Quantity <|endoftext|>
<|endoftext|> english: Find all files/directories matching the regex pattern ".*\\.rb$" under current directory
bash: find Path -regex Regex <|endoftext|>
<|endoftext|> english: find all the files in the current directory which start with t and have been modified between one hour (60 minutes) and 12 hours (720 minutes) ago.
bash: find Path -mmin -Quantity -mmin +Quantity -type f -name Regex -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: Rename file ~/junk/cart1 to ~/junk/A
bash: find Path -name Regex -exec mv {} File \; <|endoftext|>
<|endoftext|> english: Print the file content of command "f"
bash: cat $( which Regex ) <|endoftext|>
<|endoftext|> english: Print file name without extension assuming there is only one dot in the file name.
bash: echo Regex | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: Find all SUID files .
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: find file which name like 'foo.*' in current directory.
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Execute awk script "script.awk" with 2 arguments both "file.txt" and format the output as a table
bash: awk -f File Program | column -t <|endoftext|>
<|endoftext|> english: Find all directories in level 1 down the $queue directory
bash: echo Regex | xargs -I {} find {} -mindepth Quantity -maxdepth Quantity -type d <|endoftext|>
<|endoftext|> english: Report all files in /mydir1 and /mydir2 larger than 2000 blocks and accessed in over 30 days
bash: find Path Path -size +Size -atime +Timespan -print <|endoftext|>
<|endoftext|> english: Find all files under /path/to/base/dir and change their permission to 644
bash: find Path -type f -print0 | xargs -0 -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: Find all regular files under $FILES_PATH directory tree and save the output to 'FILES' variable
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: Print info about thread number of process with pid 1
bash: cat File | head -n Quantity <|endoftext|>
<|endoftext|> english: Print flow of random data, showing all non-printing characters
bash: cat -v File <|endoftext|>
<|endoftext|> english: Prints directory where the executing script ($0) is located.
bash: $( dirname Regex ) <|endoftext|>
<|endoftext|> english: Mount partition with label "WHITE" on "/mnt/WHITE"
bash: mount Regex Regex Directory <|endoftext|>
<|endoftext|> english: Find directories in the current directory tree that were modified within the last 24 hours and move them to /path/to/target-dir
bash: find Path -depth -type d -mtime Timespan -exec mv -t Directory {} + <|endoftext|>
<|endoftext|> english: display all the C files or Python files in the folder "euler"
bash: find Path -iname Regex -exec echo {} \; -or -iname Regex -exec echo {} \; <|endoftext|>
<|endoftext|> english: show all directories in the current folder excluding those that are present only in the paths ./media, ./images and ./backups
bash: find Path -path Regex -prune -or -path Regex -prune -or -path Regex -prune -or -print <|endoftext|>
<|endoftext|> english: Find all SUID files in entire file system
bash: find Path -perm +Permission <|endoftext|>
<|endoftext|> english: Delete the line containing "start" plus the next 4 lines from standard input
bash: sed Program <|endoftext|>
<|endoftext|> english: Find files in two different directories (esofthub and esoft) having the "test" string and list them
bash: find Path Path -name Regex -type f -ls <|endoftext|>
<|endoftext|> english: Find regular files whose names end in .JPG
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: find all normal/regular files in the entire file system having the word "filename" in their name.
bash: find Path -type f -iname Regex <|endoftext|>
<|endoftext|> english: Sort standard input in alphabetical order
bash: sort <|endoftext|>
<|endoftext|> english: Search the /var/www/ tree for files owned by root or unknown group and change their group to 'apache'
bash: find Path -group Regex -or -nogroup -print0 | xargs -0 -I {} chown Regex {} <|endoftext|>
<|endoftext|> english: Print lines unique and common to sorted files "file1" and  "file2"
bash: comm File File <|endoftext|>
<|endoftext|> english: Rename all "thumbs" directories to "thumb" in the current directory and 1 level below
bash: find Path -maxdepth Quantity -type d | sed Program | xargs -n Quantity -I {} mv {} <|endoftext|>
<|endoftext|> english: Replace the first occurrence of "string1" on each line with "string2" in all regular files in the current directory tree
bash: find Path -type f -exec sed -i Program {} \; <|endoftext|>
<|endoftext|> english: Count the number of directories under directory '/directory/' non-recursively
bash: find Path -maxdepth Quantity -type d -print | wc -l <|endoftext|>
<|endoftext|> english: find all the text files which are present in the current directory excludinghidden files.
bash: find Path -type f \( -iname Regex ! -iname Regex \) <|endoftext|>
<|endoftext|> english: Print a list of all regular files residing in the current directory
bash: find Path -maxdepth Quantity -type f -print0 <|endoftext|>
<|endoftext|> english: Removes all listed folders with content in sudo mode.
bash: rm -r -f File File File File File File File File <|endoftext|>
<|endoftext|> english: Replace ",," with ", ," in "$file" and display the "," delimited result as a table in "less" with a shift value of 5 and line numbers
bash: cat File | sed -e Program | column -s Regex -t | less File -N -S <|endoftext|>
<|endoftext|> english: Search the current directory tree for files last accessed more than 10 days ago
bash: find Path -atime +Timespan <|endoftext|>
<|endoftext|> english: Find files associated with an inode
bash: find Path -inum Quantity -print <|endoftext|>
<|endoftext|> english: find all the files in the file system which have the permission 777 and with the name "dateiname"
bash: find Path -perm Permission -iname Regex <|endoftext|>
<|endoftext|> english: Silently read a single character from standard input into variable "key" without backslash escapes and using the prompt $'Press any key to continue...\n'
bash: read -r -s -p Regex -n Quantity Regex <|endoftext|>
<|endoftext|> english: Print all filenames under /proc and below
bash: find Path -exec ls {} \; <|endoftext|>
<|endoftext|> english: find all the files ending with ".foo" in the folder /usr
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: find all the files within your home folder accessed more than 100 days ago
bash: find Path -atime Timespan <|endoftext|>
<|endoftext|> english: Send SIGHUP (hangup) signal to all parents of zombie processes.
bash: kill - Regex $( ps -A -o stat,ppid | grep -e Regex | awk Program ) <|endoftext|>
<|endoftext|> english: Report total disk usage info on root file system, printing all sizes as power of 1000
bash: df -H --total File <|endoftext|>
<|endoftext|> english: Search for the case insensitive regex expanded by $2 in all files named $1 (to be expanded) under current directory
bash: find Path -name Regex -type f -print0 | xargs -0 -I {} grep -i Regex {} <|endoftext|>
<|endoftext|> english: Find all pdf files under /dir/containing/unsigned with null character as the delimiter
bash: find Path -name Regex -print0 <|endoftext|>
<|endoftext|> english: Find all files/directories with space in their names under current directory and rename them by replacing all spaces with _
bash: find Path -depth -name Regex -execdir rename Regex {} \; <|endoftext|>
<|endoftext|> english: Find all .php files starting from the root directory and ignoring /media
bash: find Path -name Regex -print -or -path Regex -prune <|endoftext|>
<|endoftext|> english: Clean directories and subdirectories of the temporary files generated during normal use
bash: find Path \( -name Regex -or -name Regex -or -name Regex \) -exec rm {} \; <|endoftext|>
<|endoftext|> english: Find all files/directories under /myfiles following symlinks if needed
bash: find -L Path <|endoftext|>
<|endoftext|> english: Look up for 'myip.opendns.com' in server 'resolver1.opendns.com' and save the terse output in 'IP' variable
bash: dig Regex Regex @resolver1.opendns.com <|endoftext|>
<|endoftext|> english: Numerically sort file "temp.txt" by the second "-" separated value of each line ordered from highest value to least value
bash: tac File | sort -k Number -r -u <|endoftext|>
<|endoftext|> english: display all normal/regular files in current directory
bash: find Path -type f <|endoftext|>
<|endoftext|> english: find all the files in the home folder which are less than 42 Bytes
bash: find Path -size Size <|endoftext|>
<|endoftext|> english: Find all the files which are greater than 50MB but less than 100MB in size
bash: find Path -size +Size -size -Size <|endoftext|>
<|endoftext|> english: Count number of lines in "Sample_51770BL1_R1.fastq.gz"
bash: zcat Regex | wc -l <|endoftext|>
<|endoftext|> english: Print the current directory tree with file sizes
bash: tree -s <|endoftext|>
<|endoftext|> english: display all the files in the /usr folder which have the permissions 777
bash: find Path -perm Permission -print <|endoftext|>
<|endoftext|> english: Perform a dry run to recursively copy "test/a" to "test/dest" excluding "test/a/b/c/d"
bash: rsync -n -v -r -a -L File File --exclude Regex <|endoftext|>
<|endoftext|> english: Print summary of new/missing files, and which files differ between dir_one and dir_two, sorted alphabetically.
bash: diff -q -r File File | sort <|endoftext|>
<|endoftext|> english: Find all files in and below all subdirectories of the current directory
bash: find Path -mindepth Quantity <|endoftext|>
<|endoftext|> english: Print the contents of "n"
bash: cat File <|endoftext|>
<|endoftext|> english: Find all files under current directory and set read-write permission for owner, read permission for group and no permission for other for those files
bash: find Path -type f -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: List all leaf directories (directories which don't contain any sub-directory) under current directory
bash: find Path -type d -links Quantity <|endoftext|>
<|endoftext|> english: display a list of all regular/normal files in the current folder
bash: find Path -type f -ls <|endoftext|>
<|endoftext|> english: Remove the "^M" characters from all *.ext files under /home directory
bash: find Path -type f -name Regex -exec sed -i -e Program {} \; <|endoftext|>
<|endoftext|> english: Insert "insert" every 3 lines for the output of "seq 1 10"
bash: seq Number Number | sed Program <|endoftext|>
<|endoftext|> english: Find files that were modified 7 days ago and archive them
bash: find Path -type f -mtime Timespan | xargs -I {} tar -c -v -f $( date '+%d%m%Y'_archive.tar ) {} <|endoftext|>
<|endoftext|> english: Find all files in current directory that were modified less than 1 day ago excluding hidden files  and archive them and put the output into the variable file_changed
bash: find Path -depth -wholename Regex -prune -or -mtime -Timespan -print | cpio -o -a -v <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory that match the case insensitive glob pattern {EA,FS}_*
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: display all the files on the current folder excluding those that are present in the folder "./src/emacs"
bash: find Path -path Regex -prune -or -print <|endoftext|>
<|endoftext|> english: Remove "-" from the contents of "/proc/sys/kernel/random/uuid" and save output to variable "comment"
bash: cat File | sed Program <|endoftext|>
<|endoftext|> english: Get the total sizes of all files under current directory
bash: find Path -type f -printf '%p %s\n' | awk Program <|endoftext|>
<|endoftext|> english: find all the files in the file system whcih have been modified in the last 1 day
bash: find Path -mtime -Timespan <|endoftext|>
<|endoftext|> english: Correct permissions for files in the web directory
bash: find Path -type f | xargs -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: Search user1's home directory tree for *.bin files
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: display all the files in the current folder excluding the directory aa
bash: find Path -type d ! -name Regex <|endoftext|>
<|endoftext|> english: Find directories modified within the last 7 days
bash: find Path -mtime -Timespan -type d <|endoftext|>
<|endoftext|> english: Change all directories under "./storage/" to owner "apache" and group "laravel"
bash: find Path -type d -exec chown Regex {} \; <|endoftext|>
<|endoftext|> english: Find and print the names of all files found in the current directory and all of its sub-directories
bash: find Path -print <|endoftext|>
<|endoftext|> english: Display the last slash-separated part of path, in this case "example".
bash: basename Regex <|endoftext|>
<|endoftext|> english: returns a list of  files create time is 1 minute ago under the root directory.
bash: find Path -newerct Regex -print <|endoftext|>
<|endoftext|> english: Send 5 pings to broadcast address "10.10.0.255" and print the unique IPs who responded
bash: ping -c Quantity -b Regex | sed -n Program | sort | uniq <|endoftext|>
<|endoftext|> english: display all html files  in  current folder
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: list all files in the current directory recursively
bash: find Path <|endoftext|>
<|endoftext|> english: Split "$in_file" excluding the first line into files of at most 100000 lines each with numeric suffixes of length 5 and the prefix $in_file"_"
bash: awk Program Program | split -d -a Quantity -l Quantity File Regex <|endoftext|>
<|endoftext|> english: Read a line from standard input into variable "i" with the prompt " Again? Y/n "
bash: read -p Regex Regex <|endoftext|>
<|endoftext|> english: Print command with PID 11383
bash: ps | grep -E Regex | tr -s Regex | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: Change directory to the "lib" directory located two parent directories above the path to command "perl"
bash: cd $( dirname $( dirname $( which Regex ) ) ) <|endoftext|>
<|endoftext|> english: Calculate the md5sum of the executable file of command "cc"
bash: md5sum $( which Regex ) <|endoftext|>
<|endoftext|> english: change the permissions of all the regular files in the current folder
bash: find Path -type f -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Create all directories in the path specified by variable $tempWork
bash: mkdir -p Directory <|endoftext|>
<|endoftext|> english: display a long listing of all the empty files in the entire file system which are empty
bash: find Path -type f -size Size -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: Copy the entire directory tree under t1 to t2, do not create a containing t1 directory in t2.
bash: cp -R File File <|endoftext|>
<|endoftext|> english: Remount "/dev/block/mtdblock3" on "/system" with read only permission
bash: mount -o remount,ro -t yaffs2 Regex Regex <|endoftext|>
<|endoftext|> english: Print the names of all files in or below the current directory, with all of the file permission bits S_ISUID, S_ISGID, and S_IWOTH set
bash: find Path -perm -Permission <|endoftext|>
<|endoftext|> english: Search the home directory for files accessed more than 10 days ago
bash: find Path -atime +Timespan <|endoftext|>
<|endoftext|> english: Find all files recursively starting from / that have been modified in the past 30 minutes and list them
bash: find Path -mmin -Quantity -ls <|endoftext|>
<|endoftext|> english: Exit the shell immediately if an error is encountered
bash: set -o errexit <|endoftext|>
<|endoftext|> english: Search the current directory recursively for regular files last accessed less than 2 days ago
bash: find Path Path -f -atime -Timespan <|endoftext|>
<|endoftext|> english: Rename "/usr/bin/php" to "/usr/bin/~php"
bash: mv File File <|endoftext|>
<|endoftext|> english: Perform white space safe deletion of files named core under /tmp
bash: find Path -name Regex -type f -print0 | xargs -0 -I {} rm -f {} <|endoftext|>
<|endoftext|> english: Store content of uncompressed file "$file.fastq" in variable "reads"
bash: zcat Regex <|endoftext|>
<|endoftext|> english: Find and show all files in the current directory tree that are smaller than 500 kB
bash: find Path -size -Size <|endoftext|>
<|endoftext|> english: Delete files under $LOCATION that match $REQUIRED_FILES in their names and were modified more than 1 day ago
bash: find Path -name Regex -type f -mtime +Timespan -delete <|endoftext|>
<|endoftext|> english: Print every found file like '*.cfg' under '/path/to/files/' directory followed by its content, and wait 2 seconds after each printed file
bash: find Path -type f -name Regex -print -exec cat {} \; -exec sleep Timespan \; <|endoftext|>
<|endoftext|> english: find all the text files in the current folder starting with "somefiles-"
bash: find Path -name Regex -type f <|endoftext|>
<|endoftext|> english: Find all the files whose name is tecmint.txt
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Add content of "filename" to the existing cron jobs of user "user", without removing the previously existing cron jobs.
bash: crontab -l -u Regex | cat File File | crontab -u Regex File <|endoftext|>
<|endoftext|> english: Find files larger than 100MB in /var/www and exclude files with /download/ in their path from the output
bash: find Path -type f -name Regex -size +Size -exec du -h {} \; | grep -v Regex <|endoftext|>
<|endoftext|> english: Find files/directories named 'aaa.txt' under current directory tree
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all *$VERSION* files/directories under current directory where $VERSION is a variable
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: change permissions of all the script files in a directory
bash: find Path -name Regex -type f -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: searches through the /usr directory for the regular  file named 'Chapter1*'
bash: find Path -name Regex -type f <|endoftext|>
<|endoftext|> english: display all the files ending with ".user" or beginning with "admin" or ending with ".user.gz" in /var/adm/logs/morelogs/ and excluding  all regular files
bash: find Path -type f -prune \( -name Regex -or -name Regex -or -name Regex \) -print <|endoftext|>
<|endoftext|> english: Forward port 8000 bound on localhost to port 22 in 'clusternode' via 'user@bridge'
bash: ssh -L Regex Regex <|endoftext|>
<|endoftext|> english: Find all .less files in the current directory tree
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Remove all CVS directories from the current directory tree
bash: find Path -name Regex -type d -exec rm -r -f {} \; <|endoftext|>
<|endoftext|> english: Delete all files throughout the entire filesystem that are no longer owned by a valid user.
bash: find Path -nouser | xargs -0 -I {} rm {} <|endoftext|>
<|endoftext|> english: List all the emptry files in thecurrent directory only.
bash: find Path -maxdepth Quantity -empty <|endoftext|>
<|endoftext|> english: delete all the normal files in the current folder and do not delete those in the subfolders
bash: find Path -maxdepth Quantity -type f -delete <|endoftext|>
<|endoftext|> english: Remove all *.log files from the current directory tree
bash: find Path -name Regex -delete <|endoftext|>
<|endoftext|> english: Find all files matching "abc*" in the current directory and append a column with "OK"
bash: find Path -name Regex -exec echo Regex \; | column -t <|endoftext|>
<|endoftext|> english: Make a list of all files in the current directory tree, except *.png and *.class, and view it in the vim editor
bash: find Path | grep -E -v Regex | vim File <|endoftext|>
<|endoftext|> english: Make directory expanded by $dir variable
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: replace the word foo to bar in all the regular/normal files in the current folder (does not update the file)
bash: find Path -type f -exec sed -i Program {} + <|endoftext|>
<|endoftext|> english: List the current directory recursively ignoring ./src/emacs/ and all its contents
bash: find Path -path Regex -prune -or -print <|endoftext|>
<|endoftext|> english: delete all the files in the current folder which end with ".bak" or ".backup" and which have not been accessed in the last 30 days
bash: find Path \( -name Regex -or -name Regex \) -type f -atime +Timespan -exec rm {} \; <|endoftext|>
<|endoftext|> english: Find all empty directories in the current one and delete them
bash: find Path -type d -maxdepth Quantity -empty -delete <|endoftext|>
<|endoftext|> english: Prints long listing of content in the current folder with C-style escapes for nongraphic characters
bash: ls -l -b <|endoftext|>
<|endoftext|> english: Print list of all user names who are logged in
bash: who | sed -e Program <|endoftext|>
<|endoftext|> english: Replace all sequence of 'blank' characters in file 'log' with a single occurence of such symbol and print space-separated fields of each string but first two fields
bash: cat File | tr -s Regex | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: Split "$file" into files with at most 1000 lines each and use a prefix length of 5
bash: split -a Quantity File <|endoftext|>
<|endoftext|> english: set a crontab to create or update the timestamp of "washere1" in the current directory every minute.
bash: echo $( pwd ) | crontab <|endoftext|>
<|endoftext|> english: find all CSS files that do something with your HTML ID #content
bash: find Path -name Regex -exec grep -l Regex {} \; <|endoftext|>
<|endoftext|> english: Find all *.c files under and below the current directory that contain "wait_event_interruptible"
bash: find Path -name Regex -print0 | xargs -0 -I {} grep Regex File {} <|endoftext|>
<|endoftext|> english: Save IP address of your SSH session in variable "WORKSTATION"
bash: who -m | awk Program | sed Program <|endoftext|>
<|endoftext|> english: Find recursively all regular files in the current directory whose names contain "."
bash: find Path -type f -and -name Regex <|endoftext|>
<|endoftext|> english: Print the common third whitespace separated fields in "file1" and "file2"
bash: comm -1 -2 <( awk Program Program | sort -u ) <( awk Program Program | sort -u ) <|endoftext|>
<|endoftext|> english: Copy the directory hierarchy of the current directory to "destdir"
bash: find Path -type d | cpio -p -d -v -m Regex <|endoftext|>
<|endoftext|> english: remove all the ".core" files in the file system
bash: find Path -name Regex | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: find dirctory files which modification time is  7 days ago
bash: find Path -mtime -Timespan -type d <|endoftext|>
<|endoftext|> english: Find all directories recursively starting from / and count them
bash: find Path -type d | wc -l <|endoftext|>
<|endoftext|> english: Find all /path/to/check/* regular files without descending into any directory
bash: find Path -maxdepth Quantity -type f <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory tree whose names start with 'some_text_2014.08.19'
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all directories in 1 level down the /home directory that have two consecutive vowels in their names and count them
bash: find Path -mindepth Quantity -maxdepth Quantity -type d -name Regex -printf '*' | wc -c <|endoftext|>
<|endoftext|> english: Find files/directories that isn't owned by the user 'apache' under /var/www
bash: find Path ! -user Regex -print0 | xargs -0 <|endoftext|>
<|endoftext|> english: search for a file "file" in current folder and display all instances of this file
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: create a symbolic link in current directory named "environments" to file "../config/environments"
bash: ln -s File <|endoftext|>
<|endoftext|> english: Find files whose name starts with "MyFile", ignoring the case
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: Find all *.old files and move them to directory oldfiles
bash: find Path -name Regex -exec mv {} File \; <|endoftext|>
<|endoftext|> english: Rename all files in current directory to lowerase.
bash: rename Regex Regex <|endoftext|>
<|endoftext|> english: Write out the entire directory hierarchy from the current directory
bash: find Path -print <|endoftext|>
<|endoftext|> english: Find all leaf directories that include only one occurrence of "modules"
bash: find Path -regex Regex ! -regex Regex -type d -links Quantity <|endoftext|>
<|endoftext|> english: Remount "/dev/stl12" on "/system" as read and write
bash: mount -o rw,remount Regex Regex <|endoftext|>
<|endoftext|> english: list broken symbolic links under "somedir"
bash: find Path -type l -print0 | xargs -r -0 -I {} file {} | grep Regex | sed -e Program <|endoftext|>
<|endoftext|> english: display all the users in the current folder which do not belong to the user root
bash: find Path ! -user Regex <|endoftext|>
<|endoftext|> english: Find files/directories under current directory that matches './projects/insanewebproject' in their paths and show the first one
bash: find Path -ipath Regex | head -n Quantity <|endoftext|>
<|endoftext|> english: Archive "somedir/./foo/bar/baz.c" to "remote:/tmp/" preserving the relative path of "foo/bar/baz.c"
bash: rsync -a -v -R File File <|endoftext|>
<|endoftext|> english: display all the empty files in the folder /opt (file size 0 bytes)
bash: find Path -type f -empty <|endoftext|>
<|endoftext|> english: Answer "y" to all "Are you sure?" prompts from command "cp * /tmp"
bash: yes | cp File File <|endoftext|>
<|endoftext|> english: Find all the files whose permissions are 777 in the current directory
bash: find Path -type f -perm Permission -print <|endoftext|>
<|endoftext|> english: Change permssions of *.cgi files under directories htdocs and cgi-bin to 755
bash: find Path Path -name Regex -type f -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: split compressed content of the file www into pieces per 1073741824 bytes named as "backup.tar.NNN"
bash: tar -c -z -f File File | split -b Size File Regex <|endoftext|>
<|endoftext|> english: Rename all "thumbs" directories to "thumb" in the current directory tree
bash: find Path -type d -exec rename Regex {} \; <|endoftext|>
<|endoftext|> english: Find all files named 'aaa.txt' under current directory tree and display their contents
bash: cat $( find Path -name Regex ) <|endoftext|>
<|endoftext|> english: Search for regular file foo ignoring case
bash: find Path -iname Regex -type f <|endoftext|>
<|endoftext|> english: Numerically sort each line of standard input
bash: sort -n <|endoftext|>
<|endoftext|> english: Find all the files which are modified in last 1 hour
bash: find Path -mmin -Quantity <|endoftext|>
<|endoftext|> english: List all aliencoders.[0-9]+ files/directories under /home/jassi/ directory
bash: find Path -name Regex | xargs -I {} ls -l -r -t {} | awk Program <|endoftext|>
<|endoftext|> english: Print whether the unique contents of "set1" and "set2" differ
bash: diff -q <( sort File | uniq ) <( sort File | uniq ) <|endoftext|>
<|endoftext|> english: Search for the pattern '^use strict' in all *.pl files under current directory
bash: find Path -name Regex | xargs -I {} grep -L Regex {} <|endoftext|>
<|endoftext|> english: Unzip and untar "openssl-fips-2.0.1.tar.gz"
bash: gunzip -c Regex | tar -x -f File <|endoftext|>
<|endoftext|> english: find all the files in the file system which have been accessed in the last 1 day
bash: find Path -atime -Timespan <|endoftext|>
<|endoftext|> english: find all the files in the current folder that have a single letter in their name which have been modified in the last 3 days but not today
bash: find Path -name Regex -daystart -mtime +Timespan -mtime -Timespan <|endoftext|>
<|endoftext|> english: Add read permission for 'other' for all files/directories named 'rc.conf' under current directory tree
bash: find Path -name Regex -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: delete all the files in the current folder which have been modified in the last 14*24 hours
bash: find Path -mtime -Timespan -print | xargs -i -I {} rm File {} <|endoftext|>
<|endoftext|> english: display all the files with the names "name1" and "name2" in the current folder and do not search in the sub directories
bash: find Path -maxdepth Quantity -name Regex -or -name Regex <|endoftext|>
<|endoftext|> english: Find a used disk space of a target directory and files inside of it
bash: du -h File <|endoftext|>
<|endoftext|> english: Search for all jpg images on the system and archive them
bash: find Path -name Regex -type f -print | xargs -I {} tar -c -v -z -f File {} <|endoftext|>
<|endoftext|> english: keep only read access to all the files in a directory.
bash: find Path ! -perm Permission -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: display the name and size of all the regular/normal files  in the var/log folder which are bigger than 100MB
bash: find Path -type f -size +Size -exec ls -l -h {} \; | awk Program <|endoftext|>
<|endoftext|> english: Find all files recursively which end in ".php"
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: Prints calendar for a current month, replacing current data with asterisk.
bash: cal -h | sed -r $( date | cut -d Regex -f Number ) <|endoftext|>
<|endoftext|> english: Change the permission to 644 for all files under current directory
bash: find Path -type f | xargs -I {} chmod -v Permission {} <|endoftext|>
<|endoftext|> english: Repeat "image.png" 10 times on a single line
bash: yes Regex | head -n Quantity | xargs -I {} echo {} <|endoftext|>
<|endoftext|> english: change the extension of all the ".abc" files in the folder "/the/path" to ".edefg" and do not change in the sub directories. execdir ensures that the command after it is executed only in the folder where the file is found
bash: find Path -type f -name Regex -execdir rename Regex {} \; <|endoftext|>
<|endoftext|> english: Find files/directories under current directory excluding the path ./src/emacs
bash: find Path -path Regex -prune -or -print <|endoftext|>
<|endoftext|> english: Print name of the block device containing the file system containing $path.
bash: df -P File | awk Program <|endoftext|>
<|endoftext|> english: Save absolute path of the script filename in variable "SCRIPT"
bash: readlink --canonicalize-existing File <|endoftext|>
<|endoftext|> english: Execute "${MD5}" on all files found under "${1}", numerically sort the results, and save to variable "DATA"
bash: find Path -type f -exec  \; | sort -n <|endoftext|>
<|endoftext|> english: Find all .java files whose name contains "Message"
bash: find Path -print | grep Regex <|endoftext|>
<|endoftext|> english: find all files in the current directory excluding those that end with .js or have the words .min or console in their name
bash: find Path -type f \( -name Regex ! -name Regex ! -name Regex \) <|endoftext|>
<|endoftext|> english: Locate all .txt files in and below the current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Replace newline with "_" in "file" then search for "_foo_" and output with "_" characters deleted
bash: grep -o Regex <( paste -s -d Regex File ) | tr -d Regex <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory
bash: find Path <|endoftext|>
<|endoftext|> english: Use "$BYTES" amount of RAM for "$SECONDS" seconds with no output
bash: cat <( yes | tr Regex Regex | head -c Quantity ) <( sleep Timespan ) | grep Regex <|endoftext|>
<|endoftext|> english: Make directories "Labs/lab4a/folder1", "Labs/lab4a/myfolder", and "Labs/lab4a/foofolder"
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: Find files/directories with exactly read,write and execute permission for all (owner, group and others) under /path
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: Show the number of lines for each PHP file in the current directory tree
bash: find Path -type f -name Regex -exec wc -l {} + <|endoftext|>
<|endoftext|> english: Search the current directory tree for symbolic links named "link1"
bash: find Path -type l -name Regex <|endoftext|>
<|endoftext|> english: search for all the mp3 files in the folder /home/you which have been accessed 24 ago
bash: find Path -iname Regex -atime Timespan -type -f <|endoftext|>
<|endoftext|> english: find all the shell scripts or perl files in the current directory
bash: find Path -type f \( -name Regex -or -name Regex \) <|endoftext|>
<|endoftext|> english: find all the zip files in the current folder and create a tar ball of these zip files
bash: find Path -type f -name Regex -print0 | xargs -0 -I {} tar -x -z -f {} <|endoftext|>
<|endoftext|> english: Delete the 4th tab separated column from the output of "finger"
bash: finger | awk -F Regex -v Program Program | sed Program <|endoftext|>
<|endoftext|> english: Lists all directories in the current folder.
bash: ls -d File <|endoftext|>
<|endoftext|> english: Find files that were modified in less than 1 minute ago
bash: find Path -mmin -Quantity <|endoftext|>
<|endoftext|> english: Search all *.txt files under ~/documents for the word "DOGS"
bash: find Path -type f -name Regex -exec grep -s Regex {} \; -print <|endoftext|>
<|endoftext|> english: search for files which are writable by both their owner and their group
bash: find Path -perm -Permission <|endoftext|>
<|endoftext|> english: Saves byte size of $myvar variable value in the 'var2' variable.
bash: $( echo Regex | wc -c ) <|endoftext|>
<|endoftext|> english: Prints hierarchical process tree.
bash: pstree <|endoftext|>
<|endoftext|> english: change group of the file /tmp/php_session to group daemon
bash: chown -R Regex File <|endoftext|>
<|endoftext|> english: count all the html files having a specifc word in a folder.
bash: find Path -name Regex -exec grep -l Regex {} \; | wc -l <|endoftext|>
<|endoftext|> english: List all files under current directory that are greater than 10MB in size
bash: find Path -size +Size -exec ls -l -d {} \; <|endoftext|>
<|endoftext|> english: Find files ending in "config"
bash: find Path -path Regex <|endoftext|>
<|endoftext|> english: Find all files larger than 20000k
bash: find Path -type f -size +Size <|endoftext|>
<|endoftext|> english: Find all files in the current user's home directory and its sub-directories with the optional constraints of опция_поиска, значение and/or опция_действия.
bash: find Path Path Path Path <|endoftext|>
<|endoftext|> english: Filter the cron list of user "user" through "my_wonderful_sed_script" and re-apply the resulting output.
bash: crontab -u Regex -l | sed Program | crontab -u Regex File <|endoftext|>
<|endoftext|> english: Find all *.jpg files under current directory and print only unique names
bash: find Path -name Regex | uniq -u <|endoftext|>
<|endoftext|> english: Change all directories under "./bootstrap/cache/" to owner "apache" and group "laravel"
bash: find Path -type d -exec chown Regex {} \; <|endoftext|>
<|endoftext|> english: Find files whose data was modified within the given days of the month
bash: find Path -daystart -mtime -Timespan -and -mtime +Timespan <|endoftext|>
<|endoftext|> english: Search the regular files of the current directory tree for string "whatever"
bash: find Path -type f -exec grep -H Regex {} \; <|endoftext|>
<|endoftext|> english: split content of the files *.txt beginning with 1001st line into pieces per 1000 lines
bash: cat File | tail -n +Quantity | split --lines Quantity <|endoftext|>
<|endoftext|> english: Use "vagrant-ssh" as the config file and ssh into "default" host
bash: ssh -F File Regex <|endoftext|>
<|endoftext|> english: search in all the regular/normal files of the current folder for the word "word" and display the matched file name
bash: find Path -type f -exec grep -l Regex {} + <|endoftext|>
<|endoftext|> english: Delete files in /var/tmp/stuff and below that have not been modified in over 90 days
bash: find Path -mtime +Timespan -exec rm {} \; <|endoftext|>
<|endoftext|> english: using exec in find command to dispaly the searched files
bash: find Path Path -exec cat {} \; -exec echo \; <|endoftext|>
<|endoftext|> english: Find all *.py files under current directory
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: Find all top-level files in the current folder but ones with name like '*Music*' to the 'dest/' folder.
bash: find Path -maxdepth Quantity -name Regex -prune -or -print0 | xargs -0 -i -I {} cp {} File {} <|endoftext|>
<|endoftext|> english: Get the number of regular files in the directory given as the bash script argument $1
bash: find Path -type f | wc -l <|endoftext|>
<|endoftext|> english: Page through the contents of file 'file_name', positioning the view at the first occurrence of regular expression 'regex'.
bash: less -p Regex File <|endoftext|>
<|endoftext|> english: find files with pattern` '*.h' and print comparison between file and /tmp/master directory
bash: find Path -name Regex -execdir diff -u {} File \; <|endoftext|>
<|endoftext|> english: Delete all files in the /myDir directory tree that were last modfied 7 days ago
bash: find Path -mindepth Quantity -mtime Timespan -delete <|endoftext|>
<|endoftext|> english: Find all files that are set group ID to 10
bash: find Path -group Regex -perm -Permission -print <|endoftext|>
<|endoftext|> english: Perform a dry run replacing "special" with "regular" in all file names in the current directory
bash: rename -n Regex Regex <|endoftext|>
<|endoftext|> english: Check if the directory tree whose name is given as variable $somedir contains no regular files
bash: find Path -type f -exec echo Regex Regex Regex {} \; <|endoftext|>
<|endoftext|> english: Wrap each line in "file" to fit in 80 characters and count the number of lines
bash: fold File | wc -l <|endoftext|>
<|endoftext|> english: List the directory contents of the current working directory
bash: echo $( ls $( pwd ) ) <|endoftext|>
<|endoftext|> english: View contents of files matching "/usr/share/doc/mysql-server-5.0/changelog*.gz" in "less"
bash: zcat Regex | less <|endoftext|>
<|endoftext|> english: Display the host's ECDSA fingerprint using the sha256 hasing algorithm.
bash: ssh-keygen -l -f File <|endoftext|>
<|endoftext|> english: display all regular/normal files in current folder
bash: find Path -type f <|endoftext|>
<|endoftext|> english: Find the directory with least modification time under current directory
bash: find Path -type d -printf '%T+ %p\n' | sort | head - Quantity <|endoftext|>
<|endoftext|> english: Delete files in /var/tmp/stuff and below that have not been modified in over 90 days
bash: find Path -mtime +Timespan -print0 | xargs -0 -I {} rm {} <|endoftext|>
<|endoftext|> english: Find directories in the current directory tree that were modified within the last 24 hours and move them to /path/to/target-dir
bash: find Path -type d -mtime -Timespan -exec mv -t Directory {} + <|endoftext|>
<|endoftext|> english: Write "Australia/Adelaide" to standard output and to "/etc/timezone"
bash: echo Regex | tee File <|endoftext|>
<|endoftext|> english: create a compressed archive "filename.tar.gz" with verbose output
bash: tar -c -v -z -f File File <|endoftext|>
<|endoftext|> english: Search the current directory tree for files named "accepted_hits.bam"
bash: find Path $( pwd ) -name Regex <|endoftext|>
<|endoftext|> english: Find all files under current directory that were modified in the last 24 hours and also include the files that were modified in less than 1 day ago
bash: find Path -daystart -mtime +Timespan <|endoftext|>
<|endoftext|> english: display all the regular/normal files in current directory
bash: find Path -type f <|endoftext|>
<|endoftext|> english: Print the absolute path of "$path"
bash: readlink -f File <|endoftext|>
<|endoftext|> english: change the owner and group of all the normal/regular files in the current folder and /home/admin/data/ to admin & admin
bash: find Path Path -type f -exec chown Regex {} \; <|endoftext|>
<|endoftext|> english: Split all files in the directory tree "/dev/shm/split/" into files of at most 1000 lines each and use the filename as the prefix
bash: find Path -type f -exec split -l Quantity {} {} \; <|endoftext|>
<|endoftext|> english: Find all files/directories with '.o' extension under '/lib/modules' directory tree
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all files/directories not with the name 'query_to_avoid' under current directory
bash: find Path ! -name Regex <|endoftext|>
<|endoftext|> english: Print characters 2 through 4 of "abcdefg"
bash: echo Regex | tail -c +Quantity | head -c Quantity <|endoftext|>
<|endoftext|> english: Delete all directories in the TBD directory that were modified more than 1 day ago
bash: find Path -mtime +Timespan -type d | xargs -I {} rm -f -r {} <|endoftext|>
<|endoftext|> english: find case-insentive example.com file, omit ./beta path
bash: find Path -path Regex -prune -or -iname Regex -print <|endoftext|>
<|endoftext|> english: force delete all the files that have been modified in the last 3 days
bash: find Path -mtime -Timespan -exec rm -r -f {} \; <|endoftext|>
<|endoftext|> english: Create a symbolic link named ".profile" to "git-stuff/home/profile" without dereferencing ".profile"
bash: ln -s -n File Regex <|endoftext|>
<|endoftext|> english: Find and remove multiple files such as *.mp3 or *.txt under current directory
bash: find Path -type f -name Regex -exec rm -f {} \; <|endoftext|>
<|endoftext|> english: Delete all files under and below the current directory
bash: find Path -mindepth Quantity -delete <|endoftext|>
<|endoftext|> english: find all the non compressed files in the current directory and compress them.
bash: find Path ! -name Regex -exec compress -f {} \; <|endoftext|>
<|endoftext|> english: Find all regular files under current directory non-recursively that have execute permission set for all (user, group and other)
bash: find Path -maxdepth Quantity -type f -perm -Permission <|endoftext|>
<|endoftext|> english: Remove all .mpg files in the /home/luser directory tree
bash: find Path -type f -name Regex | xargs -I {} rm -f {} <|endoftext|>
<|endoftext|> english: display all files in current folder and follow the symbolic links and display the pointed file
bash: find -L Path <|endoftext|>
<|endoftext|> english: split content of the file inputfile except lines started with "^t:" into pieces per 200 lines
bash: cat File | grep Regex | split -l Quantity <|endoftext|>
<|endoftext|> english: ERROR - Probably means -pgoDt (capital D)
bash: rsync -p -g -o -d -t File File <|endoftext|>
<|endoftext|> english: Find files in the current directory excluding CVS, SVN, GIT repository files and all binary files.
bash: find Path -not \( -name Regex -prune -or -name Regex -prune -or -name Regex -prune \) -type f -print0 | xargs -0 -I {} file -n {} | grep -v Regex | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: Save hexadecimal bytes 7 and 8 in binary file "file.moi" to variable "year"
bash: od -t x2 --skip-bytes Size --read-bytes Size File | head - Quantity | awk Program <|endoftext|>
<|endoftext|> english: display all directories in current folder
bash: find Path -type d <|endoftext|>
<|endoftext|> english: Delete and count files in $DIR_TO_CLEAN that are older than $DAYS_TO_SAVE days
bash: find Path -type -f -mtime Timespan -exec rm {} \; -printf '.' | wc -c <|endoftext|>
<|endoftext|> english: find all files in the current folder with the permission 777 and modify the permissions as 755.
bash: find Path -type f -perm Permission -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Saves path to the $SCRIPT file in the SCRIPTPATH variable.
bash: set $( dirname Regex ) <|endoftext|>
<|endoftext|> english: Make directories "./es/es_MX.utf8/LC_MESSAGES" as needed and do not error if it exists
bash: mkdir --parents Directory <|endoftext|>
<|endoftext|> english: Display kernel release name.
bash: uname -r <|endoftext|>
<|endoftext|> english: split listing of the current directory into pieces per 500 lines named "outputXYZNNN"
bash: ls | split -l Quantity File Regex <|endoftext|>
<|endoftext|> english: show all files in the current directory and all subdirectories
bash: find Path <|endoftext|>
<|endoftext|> english: List executable files in the current directory, sort the list and then display the differences between the list and file .gitignore.
bash: find Path -perm Permission -type f | sed Program | sort | diff -u Quantity File <|endoftext|>
<|endoftext|> english: Print unique lines of "a" and "b"
bash: comm -3 File File <|endoftext|>
<|endoftext|> english: change permission of all the files in the entire file system which have the permissions 777.
bash: find Path -type f -perm Permission -print -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: find files in the current directory having name "filename"
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: Recursively removes all files and folders named '.svn' in a current folder.
bash: find Path -name Regex | xargs -I {} rm -f -r {} <|endoftext|>
<|endoftext|> english: Save host name in variable "thisHOSTNAME"
bash: hostname <|endoftext|>
<|endoftext|> english: Find *.o files with permissions 664 in the current directory tree
bash: find Path -name Regex -perm Permission -print <|endoftext|>
<|endoftext|> english: Move each of the directories in /path/to/folders/* to another directory whose name is constituted by appending .mbox to each directory name and create a directory named Messages in this directory then move all *.emlx files into this directory
bash: find Path -type d -exec mv {} File \; -exec mkdir Directory \; -exec sh -c mv File File \; <|endoftext|>
<|endoftext|> english: Find the string 'joomla' case insensitively in all the php and html files under current directory tree and display the matched lines along with the file names and line numbers
bash: find Path \( -name Regex -or -name Regex \) -print0 | xargs -0 -I {} grep -H -i -n Regex {} <|endoftext|>
<|endoftext|> english: display all the regular files in current folder that belong to the user "tom"
bash: find Path -type f -user Regex <|endoftext|>
<|endoftext|> english: Login to "host" using identity file "id_rsa"
bash: ssh -i File Regex <|endoftext|>
<|endoftext|> english: Find root's Ruby files accessed in the last two minutes
bash: find Path -user Regex -type f -amin -Quantity -name Regex <|endoftext|>
<|endoftext|> english: Move all 10*jpg files under /path to 2010*jpg files under the same directory
bash: find Path -type f -name Regex | sed Program | sed Program | sh <|endoftext|>
<|endoftext|> english: Filters only directories from long file listing of the current directory
bash: ls -l --color always File | grep -E --color never Regex <|endoftext|>
<|endoftext|> english: change the group of all the files which belong to the user edwarda to pubs
bash: find Path -user Regex -exec chgrp Regex {} \; <|endoftext|>
<|endoftext|> english: Prints long listing of the current directory, sorted from oldest to newest, with appended indicators.
bash: ls -F -l -t -r <|endoftext|>
<|endoftext|> english: Enables shell option 'lithist'.
bash: shopt -s lithist <|endoftext|>
<|endoftext|> english: Print and delete all directories named 'work' under '/usr/ports/' directory tree
bash: find Path -name Regex -type d -print -exec rm -r -f {} \; <|endoftext|>
<|endoftext|> english: Save long listing of all files listed in file 'filenames.txt' to 'listing' variable
bash: ls -l $( cat File ) <|endoftext|>
<|endoftext|> english: Print "deb http://ppa.launchpad.net/webupd8team/java/ubuntu precise main" and append to file "/etc/apt/sources.list"
bash: echo Regex | tee -a File <|endoftext|>
<|endoftext|> english: find all the files in the home folder which have been modified today
bash: find Path -type f -mtime Timespan <|endoftext|>
<|endoftext|> english: Save the line number matching "}]" in lines starting with "item_1" to "item_2" in "itemlist.json" to variable "line_to_be_replaced"
bash: cat File | nl | sed -n Program | grep -i -n Regex | awk Program <|endoftext|>
<|endoftext|> english: Print lines in the sorted contents of "file1" that are not in the sorted contents of "file2"
bash: comm -2 -3 <( sort File ) <( sort File ) <|endoftext|>
<|endoftext|> english: Make "bar" executable
bash: chmod +Permission File <|endoftext|>
<|endoftext|> english: Gets IP address of 'en0' network interface.
bash: ifconfig Regex | awk Program <|endoftext|>
<|endoftext|> english: find all files in /usr/bin and run the "file" command on them.
bash: find Path | xargs -I {} file {} <|endoftext|>
<|endoftext|> english: Changes group ownership of '/etc/btsync/[prefered conf name].conf' to 'btsync'.
bash: chgrp Regex File File File <|endoftext|>
<|endoftext|> english: find all the cpp files in the current folder
bash: find Path -iname Regex -print <|endoftext|>
<|endoftext|> english: display all the directories in the current folder excluding those that are present in the .svn directory tree
bash: find Path -type d -path Regex -prune -or -print <|endoftext|>
<|endoftext|> english: Find files matching pattern $2 in the $1 directory recursively and search them for text $3, where $1, $2, $3 are the command line arguments to the Bash script
bash: find Path -path Regex -prune -or -name Regex -print -exec grep -H -n Regex {} \; <|endoftext|>
<|endoftext|> english: Find all executable upvoter-* files (following symlinks) under maximum 1 level down the current directory
bash: find Path -L -maxdepth Quantity -name Regex -type f -perm Permission <|endoftext|>
<|endoftext|> english: Find all foo.mp4 files in the current directory tree
bash: find Path -name Regex -exec echo {} \; <|endoftext|>
<|endoftext|> english: display the number of lines in all the files in the current folder
bash: find Path -name Regex | xargs -I {} wc -l {} <|endoftext|>
<|endoftext|> english: Find all the files which are accessed 50 days back
bash: find Path -atime Timespan <|endoftext|>
<|endoftext|> english: display the count of all the files in the current folder
bash: find Path -print | wc -l <|endoftext|>
<|endoftext|> english: search for a word in all the .C files( those having the extension "c") in current directory
bash: find Path -type f -iname Regex | grep -i -r Regex <|endoftext|>
<|endoftext|> english: Find all the files in the current directory recursively whose permissions are 644 and show the first 10 of them
bash: find Path -perm Permission | head <|endoftext|>
<|endoftext|> english: Find files in the current directory tree whose pathnames contain "sub"
bash: find Path | grep Regex <|endoftext|>
<|endoftext|> english: Create a symbolic link to file "/usr/bin/perl" named with escaped characters "/usr/local/bin/perl\r\n"
bash: ln -s File $( echo -e Regex ) <|endoftext|>
<|endoftext|> english: list regular files under the user's home directory that are over 100KB and have not been accessed in over 30 days.
bash: find Path -type f -atime +Timespan -size Size <|endoftext|>
<|endoftext|> english: Find all *.xml.bz2 files under current directory
bash: find Path | grep Regex <|endoftext|>
<|endoftext|> english: Search all files called "abc" that reside in the current directory tree for string "xyz"
bash: find Path -name Regex -exec grep Regex {} \; <|endoftext|>
<|endoftext|> english: Replace 'company' with 'newcompany' in all files under current directory and keep backups with .bakup extension
bash: find Path -type f -print0 | xargs -0 -I {} sed -i Program File {} <|endoftext|>
<|endoftext|> english: Removes first and last parts of path $path and saves the result in 'finalName' variable.
bash: dirname Regex <|endoftext|>
<|endoftext|> english: Find all the files that were modified more than one day ago
bash: find Path -mtime +Timespan <|endoftext|>
<|endoftext|> english: List files and directories one level deep in the current directory tree
bash: tree -L Number <|endoftext|>
<|endoftext|> english: Copy all files from the current directory tree to /path/to/destination/dir preserving their times, permissions, and ownership
bash: find Path | cpio -p -d -u -m -v Regex <|endoftext|>
<|endoftext|> english: Find all the files in the current directory recursively whose permissions are not 777
bash: find Path -type f ! -perm Permission | head <|endoftext|>
<|endoftext|> english: find all files in the current folder which start with pro
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all the files/directories under '/var/adm' directory tree that have not been modified in the last 3 days
bash: find Path -mtime +Timespan -print <|endoftext|>
<|endoftext|> english: List first 5 files named 'something' that are found under current directory
bash: find Path -name Regex -print | head -n Quantity <|endoftext|>
<|endoftext|> english: Print the current date in '%H:%M:%S' format followed by the string ': done waiting. both jobs terminated on their own or via timeout; resuming script'
bash: echo $( date +%H:%M:%S ) <|endoftext|>
<|endoftext|> english: display all files in the current folder
bash: find Path <|endoftext|>
<|endoftext|> english: Recursively finds 'pattern' in files from current folder, and prints matched string with number only if matching whole word.
bash: grep -r -n -w Regex <|endoftext|>
<|endoftext|> english: List directories in the current working directory and remove the trailing "/"
bash: ls -d File | sed Program <|endoftext|>
<|endoftext|> english: find directories in the folder /usr/spool/uucp
bash: find Path -type d -print <|endoftext|>
<|endoftext|> english: Find all directories under $1/.hg and set their SGID bit
bash: find Path -type d -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: search for all perl files in the folder /nas/projects/mgmt/scripts/perl which have been modified yesterday
bash: find Path -mtime Timespan -daystart -iname Regex <|endoftext|>
<|endoftext|> english: Set variable 'path' to name of current directory (without the containing directories).
bash: basename $( pwd ) <|endoftext|>
<|endoftext|> english: Print amount of space available on the file system containing path to the current working directory.
bash: df File | awk Program <|endoftext|>
<|endoftext|> english: show all the files in the entire file system which are bigger than 100MB
bash: find Path -size +Size <|endoftext|>
<|endoftext|> english: Search the home directory tree for files matching pattern '*.txt'
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all the .c files in the current directory tree that contain the string ‘stdlib.h’
bash: find Path -name Regex | xargs -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: create a symbolic link with absolute path "/cygdrive/c/Program Files" to file "/cygdrive/c/ProgramFiles"
bash: ln -s File Regex <|endoftext|>
<|endoftext|> english: Search the files from the current directory tree for "chrome"
bash: find Path | xargs -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: Find all files starting from the current directory which are exactly 100MB in size
bash: find Path -size Size <|endoftext|>
<|endoftext|> english: Search the current directory tree for all image files
bash: find Path -type f -regex Regex <|endoftext|>
<|endoftext|> english: as root, find from / all files called "file.txt"
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Go to directory /cygdrive/c/Program Files (x86)/$dollarsign using single quotes to escape special characters, including dollar signs
bash: cd Directory <|endoftext|>
<|endoftext|> english: Recursively change the owner and group of "subdir3" to "user3"
bash: chown Regex -R File <|endoftext|>
<|endoftext|> english: Find files in the current directory and below that are newer than /bin/sh
bash: find Path -newer File <|endoftext|>
<|endoftext|> english: Find all regular .abc files under and below /the/path and rename them prefixing their names with "version_1"
bash: find Path -type f -name Regex -execdir rename Regex {} \; <|endoftext|>
<|endoftext|> english: Search the regular files of the current directory tree for string "foo"
bash: find Path -type f | xargs -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: Calculate md5 checksum of '/etc/localtime' and save the first space separated part in variable 'checksum'
bash: md5sum File | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: cope *.mp3 files to /tmp/MusicFiles
bash: find Path -type f -name Regex -exec cp {} File \; <|endoftext|>
<|endoftext|> english: extract "phantomjs-1.9.0-linux-x86_64.tar.bz2"
bash: tar -x -v -f File <|endoftext|>
<|endoftext|> english: Display human-readable file type description of ascii.txt
bash: file File <|endoftext|>
<|endoftext|> english: Find writable regular files omitting those that contain sites/default/files in their names
bash: find Path -type f Path | grep -v Regex <|endoftext|>
<|endoftext|> english: Find all files/directories named 'FindCommandExamples.txt' under '/root' directory tree
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: long list all the files in the curent folder starting with "Tes"
bash: find Path -type f -name Regex -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: Search the /path directory recursively for TXT files
bash: find Path -type f -iname Regex <|endoftext|>
<|endoftext|> english: Set timestamp of all PHP files in current directory to date specified.
bash: touch -d Regex File <|endoftext|>
<|endoftext|> english: create directories a b c d e
bash: mkdir Directory Directory Directory Directory Directory <|endoftext|>
<|endoftext|> english: Find all files files under the current directory except *.txt
bash: find Path -maxdepth Quantity -type f -not -regex Regex <|endoftext|>
<|endoftext|> english: Find all directories starting from YOUR_STARTING_DIRECTORY that contain the string "99966" in their names
bash: find Path -type d -name Regex -print <|endoftext|>
<|endoftext|> english: Save absolute path of "$path" whose parents exist to variable "abspath"
bash: readlink -f File <|endoftext|>
<|endoftext|> english: display all the files in the folder /home which do not belong to the group test
bash: find Path ! -group Regex <|endoftext|>
<|endoftext|> english: Display all lines containing UTRACE in the current kernel's compile-time config file.
bash: grep Regex $( uname -r ) <|endoftext|>
<|endoftext|> english: Set permissions of all files under "/opt/lampp/htdocs" to 644
bash: find Path -type f -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Print the average round trip time of 5 pings to "google.com" from OSX
bash: ping -c Quantity Regex | grep Regex | cut -f Number -d Regex <|endoftext|>
<|endoftext|> english: Search the current directory tree for .VER files
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: find all the files in the directory which is pointed by $1 variable ending with the name held in the variable $2 or having the extension of value saved in the argument $2.
bash: find Path \( -name Regex -or -name Regex \) -print <|endoftext|>
<|endoftext|> english: Rename all files in current directory whose name starts with 'F0000', trimming a zero from any sequence of four zeroes in the name.
bash: rename Regex Regex <|endoftext|>
<|endoftext|> english: Find all regular files with '.txt' extension excluding 'README.txt' files under current directory tree
bash: find Path -type f -name Regex ! -name Regex -print <|endoftext|>
<|endoftext|> english: Find all files/directories under minimum 2 level down the current directory and set their permission to 700
bash: find Path -mindepth Quantity | xargs -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: Search for case-insensitive "string" in "log.tar.gz"
bash: zcat Regex | grep -a -i Regex <|endoftext|>
<|endoftext|> english: Print the minimum transmission time of 10 ping requests to "google.com" from cygwin
bash: ping Regex -n Regex | awk Program <|endoftext|>
<|endoftext|> english: Add execute permission to "ComputeDate", "col", and "printdirections" for all users
bash: chmod Permission File File File <|endoftext|>
<|endoftext|> english: Search the entire file hierarchy for files named zsh that exist on ext3 file systems and print out detailed information about the file.
bash: find Path -fstype ext3 -name Regex -ls <|endoftext|>
<|endoftext|> english: display all soft links in current folder
bash: find Path -type l <|endoftext|>
<|endoftext|> english: Search the current directory tree for *bash* files printing them on a single line
bash: find Path -name Regex | xargs <|endoftext|>
<|endoftext|> english: Find all files throughout the entire file hierarchy with the optional constraints of опция_поиска, значение and/or опция_действия.
bash: find Path Path Path Path <|endoftext|>
<|endoftext|> english: find all the files in the current folder and display those that are not present in the list "file.lst"
bash: find Path | grep -v -f Regex <|endoftext|>
<|endoftext|> english: Search the current directory tree for files and directories whose names do not end in "exe" and "dll"
bash: find Path | grep -v Regex <|endoftext|>
<|endoftext|> english: find all the log files in the file system which are present in the current partition
bash: find Path -xdev -name Regex <|endoftext|>
<|endoftext|> english: Make directory "new_dir"
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: display a long listing of all the xls or csv files in the entire file system
bash: find Path -type f \( -name Regex -or -name Regex \) -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: List all the file links
bash: find Path -type l <|endoftext|>
<|endoftext|> english: Display 12345 backwards
bash: echo Regex | rev <|endoftext|>
<|endoftext|> english: Find all *.java files under current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Copies file 'file.txt' to each top-level directory in the current directory.
bash: ls -d File | xargs -i Regex -I {} cp File File {} <|endoftext|>
<|endoftext|> english: Find all directories in the current directory tree
bash: find Path -type d <|endoftext|>
<|endoftext|> english: Search for files/directories which are writable by either their owner or their group
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: List each subdirectory name composing the current working directory
bash: pwd | cut -b Number | tr Regex Regex <|endoftext|>
<|endoftext|> english: Display differences between /destination/dir/1 and /destination/dir/2 excluding files with names ending with extensions '.foo', '.bar' and '.baz'
bash: diff -x Regex -x Regex -x Regex File File <|endoftext|>
<|endoftext|> english: View the man page of find
bash: man Regex <|endoftext|>
<|endoftext|> english: Search the .VER files from the current directory tree for Perl regular expression "Model-Manufacturer:.\n."
bash: find Path -name Regex -exec grep -P Regex {} \; -print <|endoftext|>
<|endoftext|> english: Find all .core files on the system starting from / and delete them
bash: find Path -name Regex | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: Forcefully delete all files in the current directory that begin with spam-
bash: find Path -name Regex | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: Set timestamp of old_file.dat to specified timestamp.
bash: touch -t DateTime File <|endoftext|>
<|endoftext|> english: Go to directory named "~" (not home directory)
bash: cd $( echo -n Regex ) <|endoftext|>
<|endoftext|> english: search the entire file system for the file "jan92.rpt"
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: Find recursively all regular files in directory tree b that were changed within the last 5 minutes and copy them to directory c
bash: find Path -type f -cmin -Quantity -exec cp {} File \; <|endoftext|>
<|endoftext|> english: Search for files/directories which are writable by both their owner and their group
bash: find Path -perm -Permission <|endoftext|>
<|endoftext|> english: Search the current directory tree for directories lacking execute permissions for user, group, or others
bash: find Path -type d ! -perm -Permission <|endoftext|>
<|endoftext|> english: display the contents of all the files in the current folder which start with test (case insensitive search)
bash: find Path -iname Regex -exec cat {} \; <|endoftext|>
<|endoftext|> english: Find and print the full pathname of all PDF files in the current directory and its sub-directories.
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: find all the files in the folder /opt which have been modified exactly 20 days ago
bash: find Path -mtime Timespan <|endoftext|>
<|endoftext|> english: Find all symbolic links containg 'vim' in their names under '/usr/bin' directory tree
bash: find Path -name Regex -type l <|endoftext|>
<|endoftext|> english: Print which files differ between "dir1/" and "dir2/"
bash: diff --brief -r File File <|endoftext|>
<|endoftext|> english: Read a line from standard input into variable "password" without echoing the input
bash: read -s Regex <|endoftext|>
<|endoftext|> english: Open gcc info manual and select "option index" menu entry.
bash: info Regex Regex <|endoftext|>
<|endoftext|> english: delete a hard link and create a symbolic link to file named "$link"
bash: ln -s -f $( readlink -f File ) Regex <|endoftext|>
<|endoftext|> english: Change permissions to 755 for all directories in the current directory tree
bash: find Path -type d | xargs -I {} chmod -v Permission {} <|endoftext|>
<|endoftext|> english: Remove all files in the $backup_path directory recursively that were last modified more than 30 days ago
bash: find Path -mtime +Timespan -exec rm {} \; <|endoftext|>
<|endoftext|> english: create directory certs
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: Find and list all regular files
bash: find Path -type f -ls <|endoftext|>
<|endoftext|> english: Set permissions to 400 for regular files under the current directory
bash: find Path -type f -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Print 'file' content, formatting output as 29-symbol wide column, regarding space symbol as a word separator
bash: cat File | fold -s -w Quantity <|endoftext|>
<|endoftext|> english: Print fourth column of space-separated data from text file text.txt.
bash: cat File | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: display all the files in the folder a
bash: find Path <|endoftext|>
<|endoftext|> english: Find all files/directories owned by user 'michel' under current directory
bash: find Path -user Regex <|endoftext|>
<|endoftext|> english: create directory /data/db
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: Look for files in the current directory tree to which the group users have full access
bash: find Path -perm -Permission -print <|endoftext|>
<|endoftext|> english: extracts text between pattern1 and pattern2 if and only if the pattern1 is followed by pattern2
bash: tac File | sed -n -e Program | tac File <|endoftext|>
<|endoftext|> english: search for files with the name "temp" in the /usr folder
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: Compare the contents of "/bin" and "/usr/bin" line by line
bash: diff <( ls File ) <( ls File ) <|endoftext|>
<|endoftext|> english: find all normal/regular files in current folder which end with "~" or which begin and end with "#" and and move them to  temp folder
bash: find Path -maxdepth Quantity -type f -name Regex -exec mv {} File \; -or -name Regex -exec mv {} File \; <|endoftext|>
<|endoftext|> english: Delete all empty files and directories in the "test" directory tree
bash: find Path -depth -empty -delete <|endoftext|>
<|endoftext|> english: Format the time string $timestamp according to the format string "%Y-%m-%d %H:%M:%S" and save the output to variable 'CDATE'
bash: date -d Regex +"%Y-%m-%d %H:%M:%S" <|endoftext|>
<|endoftext|> english: Find all .sql files in the current directory recursively and print their path names separated by zeroes
bash: find Path -name Regex -print0 <|endoftext|>
<|endoftext|> english: Move all the .c files from the current directory tree to temp/
bash: find Path -name Regex -print0 | xargs -0 -n Quantity -I {} mv {} File <|endoftext|>
<|endoftext|> english: Locate all *.txt files in the current directory tree
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: search for directories in the folder "test" which end have 5 digits as their name
bash: find Path -type d -name Regex <|endoftext|>
<|endoftext|> english: Print argument "$1" "$number" times
bash: yes Regex | head - Quantity <|endoftext|>
<|endoftext|> english: Print 'infile' content with line numbers
bash: cat -n File <|endoftext|>
<|endoftext|> english: Decompresses file 'xac.bz2', redirecting output to standard out.
bash: bzip2 -d -c File <|endoftext|>
<|endoftext|> english: Find all directories in maximum 2 levels down the /tmp/test directory
bash: find Path -maxdepth Quantity -mindepth Quantity -type d <|endoftext|>
<|endoftext|> english: Remove all regular files from the current directory tree that were modified between August 10th and August 17th
bash: find Path -type f -newermt Regex ! -newermt Regex -exec rm {} \; <|endoftext|>
<|endoftext|> english: find all ".flac" files starting with "cmn-" and search for files having CJK characters using unicodes
bash: find Path -name Regex -print | grep -P Regex <|endoftext|>
<|endoftext|> english: Search the files from the current directory tree for text "documentclass"
bash: find Path -type f -print0 | xargs -0 -I {} grep -H Regex {} <|endoftext|>
<|endoftext|> english: Make directory "~/public_html"
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: replace "exp_to_find_for_replacement" with "exp_to_replace" for all the files in the current folder
bash: find Path -name Regex -exec rename Regex {} \; <|endoftext|>
<|endoftext|> english: find a specfic video file in the current directory
bash: find Path -name Regex -exec echo {} \; <|endoftext|>
<|endoftext|> english: Search for all files newer than file /tmp/t1 but not newer than file /tmp/t2
bash: find Path -newer File -and -not -newer File <|endoftext|>
<|endoftext|> english: Find directories that are directly under /home/user/workspace directory (no-subdirectories) and were modified more than 30 days ago and print a message saying that the directory wasn't modified during last 30 days
bash: find Path -mindepth Quantity -maxdepth Quantity -type d -mtime +Timespan -execdir echo Regex \; <|endoftext|>
<|endoftext|> english: Find all files/directories that do not belong to any user under '/home' directory tree
bash: find Path -nouser -print <|endoftext|>
<|endoftext|> english: Find all Makefile's in the current directory tree and look for line 235 in each of them
bash: find Path -type f -name Regex -exec awk Program {} + <|endoftext|>
<|endoftext|> english: List all nfs mount points on the system
bash: mount -l | grep Regex | sed Program <|endoftext|>
<|endoftext|> english: find regular files and directories that have been modified in the last seven days
bash: find Path -mtime -Timespan -type f <|endoftext|>
<|endoftext|> english: list *.bmp and *.txt files under the /home/user/Desktop directory.
bash: find Path -name Regex -or -name Regex <|endoftext|>
<|endoftext|> english: Search for 'mystring' in all *.txt files under current directory
bash: find Path -name Regex -print0 | xargs -0 -I {} grep -E Regex {} <|endoftext|>
<|endoftext|> english: Prints process tree, showing only strings with 'MDSImporte', and chopping output after ${WIDTH} characters.
bash: pstree | grep Regex | cut -c Number <|endoftext|>
<|endoftext|> english: Search for the regex expaned by the variable $SEARCH in all regular files under $DIR directory tree
bash: find Path -type f -exec grep Regex {} \; <|endoftext|>
<|endoftext|> english: Find all files under $d directory and set read-write permission for owner and group and no permission for other for those files
bash: find Path -type f -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Print a line of 3 '%' characters
bash: seq -s Regex Number | tr -d Regex <|endoftext|>
<|endoftext|> english: find all directories with the name test in a directory
bash: find Path -type d -name Regex -print <|endoftext|>
<|endoftext|> english: Run an awk program on every TXT file found in the current directory tree
bash: find Path -name Regex -print -exec awk Program {} \; <|endoftext|>
<|endoftext|> english: Search for 'some string' in all *.axvw files under current directory and show the matched lines with line numbers
bash: find Path -name Regex -exec grep -n Regex {} + <|endoftext|>
<|endoftext|> english: Save "something" into variable "param" in ksh
bash: echo Regex | read Regex <|endoftext|>
<|endoftext|> english: Search the current directory tree for files named 'Subscription.java'
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: generates a list of all files beneath the current directory whose filename DOES NOT end in .html, so it matches files like *.txt, *.jpg, and so on.
bash: find Path -type f -not -name Regex <|endoftext|>
<|endoftext|> english: find all headers file *.h in /nas/projects directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: display all the files in the file system which belong to the group lighttpd
bash: find Path -group Regex -print <|endoftext|>
<|endoftext|> english: display list of all the hidden directories in the directory "/dir/to/search/"
bash: find Path -type d -iname Regex -ls <|endoftext|>
<|endoftext|> english: check if myfile has 0644 permissions
bash: find Path -perm Permission -print <|endoftext|>
<|endoftext|> english: Print unique lines of sorted file "A.txt" compared to sorted file "B.txt"
bash: comm -2 -3 <( sort -u File ) <( sort File ) <|endoftext|>
<|endoftext|> english: Search case insensitively for 'foo' in all the files with '.java' extension under current directory tree and show only the file names
bash: find Path -type f -name Regex -exec grep -i -l Regex {} \; <|endoftext|>
<|endoftext|> english: list any files modified since /bin/sh was last modified
bash: find Path -newer File <|endoftext|>
<|endoftext|> english: Print the base name of the current working directory
bash: basename $( pwd ) <|endoftext|>
<|endoftext|> english: Force the group stickiness for directories under /var/www
bash: find Path -type d -print0 | xargs -0 -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: Find files that were modified second last week and archive them
bash: find Path -type f -mtime +Timespan -mtime -Timespan | xargs -I {} tar -c -v -f $( date '+%d%m%Y'_archive.tar ) {} <|endoftext|>
<|endoftext|> english: delete all files in the home directory which ahve the name core in them
bash: find Path -name Regex -exec rm {} \; <|endoftext|>
<|endoftext|> english: Prints server name from SOA record for domain yahoo.com
bash: dig Regex Regex soa yahoo.com | awk Program <|endoftext|>
<|endoftext|> english: print lines from last match of ^Statistics until end of file
bash: tac File | sed Program | tac <|endoftext|>
<|endoftext|> english: find all files in the current directory do not display the files which are not readable
bash: find Path ! Path -prune <|endoftext|>
<|endoftext|> english: Delimit standard input with ":" and display as a table
bash: column -s Regex -t <|endoftext|>
<|endoftext|> english: Print command line of process with pid 17709
bash: cat File | xargs -0 -I {} echo {} <|endoftext|>
<|endoftext|> english: Find all $tofind* files/directories under $parentdir
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Connect to port 2222 of example.com as ssh user "user", and copy local file "/absolute_path/source-folder/some-file" to remote directory "/absolute_path/destination-folder"
bash: scp -P Regex File File <|endoftext|>
<|endoftext|> english: Find all files starting from the current directory which are smaller than 100MB
bash: find Path -size -Size <|endoftext|>
<|endoftext|> english: Find all files that have the SUID bit set
bash: find Path -perm -Permission -print <|endoftext|>
<|endoftext|> english: Rename all directories under current directory by replacing all occurrences of 'Foo' (case insensitive) with 'Bar' in their names
bash: find Path -type d -iname Regex -depth -exec rename Regex {} + <|endoftext|>
<|endoftext|> english: Write "error" to standard output
bash: echo Regex | tee <|endoftext|>
<|endoftext|> english: find all the php files in current folder and search for multiple patterns in these files
bash: find Path -name Regex -exec grep -l -i Regex {} + | xargs -I {} grep -l Regex {} <|endoftext|>
<|endoftext|> english: find all the swap files (files ending with ~) in the current folder and delete them
bash: find Path -name Regex -exec rm {} \; <|endoftext|>
<|endoftext|> english: Remount "/dev/block/mtdblock3" on "/system" with read and write permission
bash: mount -o remount,rw -t yaffs2 Regex Regex <|endoftext|>
<|endoftext|> english: List all files in entire file system that belong to the user wnj or modified later than the ttt file
bash: find Path \( -newer File -or -user Regex \) -print <|endoftext|>
<|endoftext|> english: find all text files in current folder and trim the extra spaces in all lines in these files ( MAC version )
bash: find Path -iname Regex -type f -exec sed -i Program File {} + <|endoftext|>
<|endoftext|> english: Create the directory '.npm-packages' in the user's home directory($HOME)
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: Display differences between files dir1.txt and dir2.txt.
bash: diff File File <|endoftext|>
<|endoftext|> english: Find all files/directories which have been modified from the start of the day in directories/files taken from the glob pattern '/tmp/test/*'
bash: find Path -daystart -mtime -Timespan <|endoftext|>
<|endoftext|> english: Serach for all the files starting with grep in man pages
bash: find Path -regex Regex <|endoftext|>
<|endoftext|> english: Open all .c files in the current directory tree in the vim editor
bash: find Path -name Regex -print | vim File <|endoftext|>
<|endoftext|> english: find all the directories in the current folder which have been modified in 24 hours and move them to the folder  /path/to/target-dir
bash: find Path -depth -type d -mtime Timespan -exec mv -t Directory {} + <|endoftext|>
<|endoftext|> english: Remove all *~ files under current directory with confirmation prompt
bash: find Path -name Regex -ok rm {} \; <|endoftext|>
<|endoftext|> english: Copy *.mp3 files to /tmp/MusicFiles
bash: find Path -type f -name Regex -exec cp {} File \; <|endoftext|>
<|endoftext|> english: Counts lines in file $file and prints number only.
bash: wc -l File | awk Program <|endoftext|>
<|endoftext|> english: Stores system load average number in the 'proc_load_average' variable.
bash: w | head - Quantity | cut -d Regex -f Number | cut -d Regex -f Number | tr Regex Regex <|endoftext|>
<|endoftext|> english: find all directories in the current folder and do not search in sub directories
bash: find Path -type d -maxdepth Quantity <|endoftext|>
<|endoftext|> english: change the ownership of all regular/normal files in the current directory
bash: find Path -type f | xargs -I {} chown Regex {} <|endoftext|>
<|endoftext|> english: prints a number stored among text in $filename
bash: echo Regex | grep -E -o Regex | head -n Quantity <|endoftext|>
<|endoftext|> english: Find all files/directories with space in their names under  /tmp/ directory and rename them by replacing all spaces with _
bash: find Path -depth -name Regex -execdir rename Regex Regex {} \; <|endoftext|>
<|endoftext|> english: Save the directory of the full path to the current script in variable "dir"
bash: dirname $( readlink -m File ) <|endoftext|>
<|endoftext|> english: find all the files which end with ".deb" and display their base name (strip the extension)
bash: find Path -name Regex | xargs -n Quantity -I {} basename {} <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory tree excluding files/directories with name 'query_to_avoid'
bash: find Path ! -name Regex <|endoftext|>
<|endoftext|> english: Hunting down files with at least one banana
bash: find Path -type f -print0 | xargs -0 -I {} grep -c Regex {} | grep -v Regex <|endoftext|>
<|endoftext|> english: Find all the SGID files in the current directory tree
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: Find writable regular files in the current directory
bash: find -type f -maxdepth Quantity Path <|endoftext|>
<|endoftext|> english: Set 644 permission to all regular files under /path
bash: find Path -type f -exec chmod Permission {} + <|endoftext|>
<|endoftext|> english: Change owner to "$FUID" and group to "$FGID" of "$FILE2"
bash: chown Regex File <|endoftext|>
<|endoftext|> english: search for the word bananas in the all the regular/normal files in the entire file system
bash: find Path -type f -exec grep Regex {} \; -print <|endoftext|>
<|endoftext|> english: dispaly a long listig of all the files in the current folder which are bigger than 100KB
bash: find Path -size +Size -ls <|endoftext|>
<|endoftext|> english: display all the php files in the current folder which do not have the permission 644
bash: find Path -type f -name Regex ! -perm Permission <|endoftext|>
<|endoftext|> english: Find files/directories named 'articles.jpg' under current directory tree and change their permission to 644
bash: find Path -name Regex -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Find all files/directories with space in their names under  /tmp/ directory and rename them by replacing all spaces with _
bash: find Path -depth -name Regex -execdir rename Regex {} \; <|endoftext|>
<|endoftext|> english: find all the files in current folder ending with "ini" and search for a word in all these files
bash: find Path -name Regex -exec grep -w Regex {} \; -print | grep Regex <|endoftext|>
<|endoftext|> english: Find all files/directories under /myfiles that were modified 2 days ago
bash: find Path -mtime Timespan <|endoftext|>
<|endoftext|> english: display all files in the current folder along with their last access timestamps
bash: find Path -printf "%h/%f : dernier accès le %Ac\n" <|endoftext|>
<|endoftext|> english: Counts all lines in $i file.
bash: cat File | wc -l <|endoftext|>
<|endoftext|> english: Saves folder path where target of symbolic link $file file is located in 'base' variable.
bash: dirname $( readlink File ) <|endoftext|>
<|endoftext|> english: Find all 400 permission files under /data directory and print 'Modifying ' appended with file path for each of them
bash: find Path -type f -perm Permission -exec echo Regex {} \; <|endoftext|>
<|endoftext|> english: Remove all files named "filename" from the current directory tree, ignoring directory "FOLDER1"
bash: find Path -name Regex -prune -or -name Regex -delete <|endoftext|>
<|endoftext|> english: find all txt files under the current folder except ./directory folder
bash: find Path -name Regex -not -path Regex <|endoftext|>
<|endoftext|> english: Change ownership of "/vol" to the current user
bash: chown $( whoami ) File <|endoftext|>
<|endoftext|> english: Find files in entire file system with at least 644 permissions
bash: find Path -perm -Permission <|endoftext|>
<|endoftext|> english: Set environment variables using assignments are listed in '.env' file and run 'rails' command with defined environment
bash: env $( cat File | xargs ) Program <|endoftext|>
<|endoftext|> english: Copies file 'fileName.txt' to each of directories listed in the 'allFolders.txt' list.
bash: cat File | xargs -n Quantity -I {} cp File {} <|endoftext|>
<|endoftext|> english: List the entire cron job list of user "apache".
bash: crontab -u Regex -l <|endoftext|>
<|endoftext|> english: print top 10 largest files and directories
bash: du -a File | sort -n -r | head <|endoftext|>
<|endoftext|> english: Counts all files in a current folder and subfolders.
bash: find Path $( pwd ) -type f -exec ls -l {} \; | wc -l <|endoftext|>
<|endoftext|> english: Remove all \*~ files under dir
bash: find Path -name Regex -exec rm {} + <|endoftext|>
<|endoftext|> english: Receive input and print it to terminal preceeding with line number
bash: cat -n <|endoftext|>
<|endoftext|> english: Remove all a.out, *.o, and core files under the current directory
bash: find Path \( -name Regex -or -name Regex -or -name Regex \) -exec rm {} \; <|endoftext|>
<|endoftext|> english: Print the files in the current directory as a list of comma separated values
bash: ls | sed Program | tr -d Regex <|endoftext|>
<|endoftext|> english: Print the file sizes along with their paths for all *.txt (case insensitive) files/directories under current directory tree
bash: find Path -name Regex -print0 | xargs -0 -I {} du -c -h {} <|endoftext|>
<|endoftext|> english: Find all the files in the current directory with “linkin park” in their names
bash: find Path -maxdepth Quantity -iname Regex <|endoftext|>
<|endoftext|> english: Find files matching `.ssh*' and append their anmes to file `ssh-stuff'
bash: find Path -name Regex -print | tee -a File <|endoftext|>
<|endoftext|> english: delete all the mp3 files in the current folder.
bash: find Path -type f -name Regex -exec rm -f {} \; <|endoftext|>
<|endoftext|> english: find all the files which have been changed after the modification of a file.
bash: find Path -cnewer File <|endoftext|>
<|endoftext|> english: Split the contents of all ".txt" excluding the first 1000 lines into files of at most 1000 lines each
bash: cat File | tail -n +Quantity | split --lines Quantity <|endoftext|>
<|endoftext|> english: Find all file paths under current directory, perform a reverse numerical sort and show first 10 file paths with their status change time
bash: find Path -type f -printf "%C@ %p\n" | sort -r -n | head -n Quantity <|endoftext|>
<|endoftext|> english: Find files and directories modified in last 24 hours
bash: find Path -mtime Timespan <|endoftext|>
<|endoftext|> english: delete all the files in the current folder
bash: find Path -print0 | xargs -0 -I {} rm {} <|endoftext|>
<|endoftext|> english: Find all files/directories that start with 'readme' (case insensitive) in their names under '/usr/share/doc' directory tree
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Copy directory tree preserving UID and GID and leaving user files alone
bash: find Path -depth -print | cpio -o -O Regex <|endoftext|>
<|endoftext|> english: Recursively set all permissions under "/directory" to 755
bash: chmod -R Permission File <|endoftext|>
<|endoftext|> english: find all the files in the current directory whose size is equal to exactly 126MB.
bash: find Path -size Size <|endoftext|>
<|endoftext|> english: Print the last 10 commands in history
bash: history | tail -n Quantity <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory in maximum 3 levels deep
bash: find Path -maxdepth Quantity <|endoftext|>
<|endoftext|> english: find all the "jpg" file in a folder.
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: Remove all .txt files in and below the current directory
bash: find Path -name Regex -exec rm {} + <|endoftext|>
<|endoftext|> english: Create 5 empty .txt files
bash: echo Regex | xargs -I {} touch {} <|endoftext|>
<|endoftext|> english: Search for files in your home directory which have been modified in the last twenty-four hours
bash: find Path -mtime Timespan <|endoftext|>
<|endoftext|> english: List regular files in current directory with read, write and execute permission for all users and also show the permissions
bash: find Path -type f -perm Permission -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: Removes all empty folders under path '/foo/bar' and the path itself.
bash: find Path -type d -depth -exec rmdir -p {} + <|endoftext|>
<|endoftext|> english: List all files with their modification time in entire file system that are newer than the file $newerthan and older than the file $olderthan in regards of modification time and sort them according to file modification time
bash: find Path -type f -name Regex -newermt Regex ! -newermt Regex -printf "%T+\t%p\n" | sort <|endoftext|>
<|endoftext|> english: Run command 'su whoami' on host 'remotehost'
bash: echo Regex | ssh Regex <|endoftext|>
<|endoftext|> english: Show logged in users with idle time of each one
bash: w | tr -s Regex | cut -d Regex -f Number | tail -n +Quantity <|endoftext|>
<|endoftext|> english: Add "prefix" to every non-blank line in "file.txt"
bash: nl -s Regex File | cut -c Number <|endoftext|>
<|endoftext|> english: Delete all hidden files/directories under $some_directory
bash: find Path -name Regex ! -name Regex ! -name Regex -delete <|endoftext|>
<|endoftext|> english: Find *.js UTF-8 files with BOM and correct them
bash: find Path -iname Regex -type f -exec sed Program -i Regex {} \; -exec rm File \; <|endoftext|>
<|endoftext|> english: Create a symbolic link named "temp" to "newtarget"
bash: ln -s File Regex <|endoftext|>
<|endoftext|> english: Create a symolic link in "/usr/local/bin/" to "/Applications/Sublime\ Text\ 2.app/Contents/SharedSupport/bin/subl"
bash: ln -s File Regex <|endoftext|>
<|endoftext|> english: Set up a local SSH tunnel from port 80 to port 3000
bash: ssh Regex -L Regex -N <|endoftext|>
<|endoftext|> english: Find all empty directories under /tmp
bash: find Path -type d -empty <|endoftext|>
<|endoftext|> english: find all the files in the current folder which have been modified in the 10 minutes ago
bash: find Path -mmin +Quantity -mmin -Quantity <|endoftext|>
<|endoftext|> english: Build an "svn hotcopy" command for each subdirectory of /usr/local/svn/repos/
bash: find Path -maxdepth Quantity -mindepth Quantity -type d -printf "%f\0" | xargs -0 -I {} echo Regex Regex Regex Regex <|endoftext|>
<|endoftext|> english: Set variable OS to the name of the operating system, ie. "Linux"
bash: uname -s <|endoftext|>
<|endoftext|> english: Search the XML files from directories /res/values-en-rUS and /res/xml for string "hovering_msg"
bash: find Path Path -iname Regex -print0 | xargs -0 -d Regex -- -I {} grep -i Regex -- {} <|endoftext|>
<|endoftext|> english: display the count of number of files in the current folder
bash: find | wc -l <|endoftext|>
<|endoftext|> english: Find all *1234.56789* files/directories under current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Print 10 space separated "x"s with at most 4 per line
bash: yes Regex | head - Quantity | awk Program <|endoftext|>
<|endoftext|> english: Run command specified by $line, replace space (' ') with newline and save the output to variable 'arr'
bash: | tr Regex Regex <|endoftext|>
<|endoftext|> english: find all of the executable files on your computer
bash: find Path Path <|endoftext|>
<|endoftext|> english: Find all *.txt (case insensitive) files of user root under / directory and show a few lines of output from the beginning
bash: find Path -user Regex -iname Regex | head <|endoftext|>
<|endoftext|> english: Find all *-* files under current directory
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: Search for files/directories with the case insensitive pattern anaconda* in /var/log
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: find all directories that names are 'project.images'
bash: find Path -type d -name Regex <|endoftext|>
<|endoftext|> english: Print which files differ in "PATH1/" and "PATH2/" recursively excluding any files that match any pattern in "file1"
bash: diff File File -r -q -X File <|endoftext|>
<|endoftext|> english: Print fourth column of data from text file text.txt where columns separated by one or more whitespaces.
bash: cat File | tr -s Regex | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: List all regular files in the current directory tree that were modified less than 60 minutes ago
bash: find Path -mmin -Quantity -type f -exec ls -l {} + <|endoftext|>
<|endoftext|> english: Print the 5th space separated fields in "file" as a comma separated list
bash: cut -d Regex -f Number File | paste -d Regex -s <|endoftext|>
<|endoftext|> english: Find all files in the /home/ directory tree that were last modified less than 7 days ago
bash: find Path -mtime -Timespan <|endoftext|>
<|endoftext|> english: Display a long listing of all files/directories named 'file' under current directory tree
bash: find Path -name Regex -ls <|endoftext|>
<|endoftext|> english: display files in current folder ending with "pdf" or "PDF"
bash: find Path -name Regex -or -name Regex <|endoftext|>
<|endoftext|> english: Sort a file 'file' preserving only unique lines and change the file in-place
bash: sort -u -o File File <|endoftext|>
<|endoftext|> english: Run perl -V (displays informations about perl's setup) in an empty environment.
bash: env -i Program Program <|endoftext|>
<|endoftext|> english: Print a sorted list of the extensions of the regular files from the current directory tree matching pattern '*.???'
bash: find Path -type f -name Regex | awk -F Regex Program | sort -u <|endoftext|>
<|endoftext|> english: change user and group of the file /usr/bin/aws to user amzadm and group root
bash: chown Regex File <|endoftext|>
<|endoftext|> english: Print the entire saved command history
bash: history <|endoftext|>
<|endoftext|> english: Find files and directories in the /tmp/ tree that contain spaces in their names and replace those spaces with underscores
bash: find Path -depth -name Regex -execdir rename Regex {} \; <|endoftext|>
<|endoftext|> english: Display list of files ending with '.txt' in the current folder to the terminal twice and output it to the text file "txtlist.txt"
bash: ls File | tee File File <|endoftext|>
<|endoftext|> english: Find files with 002 permission in entire file system and print them with the string 'has world write permissions' printed at last
bash: echo $( find Path -type f -perm -Permission ) Regex Regex Regex Regex <|endoftext|>
<|endoftext|> english: Remove all regular files from the current directory tree except textfile.txt, backup.tar.gz, script.php, database.sql, info.txt
bash: find Path -type f ! -regex Regex -delete <|endoftext|>
<|endoftext|> english: Find all *.dbf files/directories in entire file system and print their sorted and unique parent directory paths
bash: find Path -name Regex -print0 | xargs -0 -n Quantity -I {} dirname {} | sort | uniq <|endoftext|>
<|endoftext|> english: Search for "www.athabasca" in all files under current directory
bash: find Path -exec grep Regex {} \; -print <|endoftext|>
<|endoftext|> english: Scan every file in /etc for IPV4 addresses while trying to elminate false positives.
bash: find Path -type f -exec cat {} \; | tr -c Regex Regex | grep Regex <|endoftext|>
<|endoftext|> english: search in the current folder for all the regular/normal file with the name "test"
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: Search directory tree $DIR for *.txt files
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: Find all regular files under and below /home/admin/public_html/, and change their permissions to 644
bash: find Path Path -type f -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: find all the files in the current folder which have been changed in the last 60 minutes
bash: find Path -cmin -Quantity <|endoftext|>
<|endoftext|> english: Find directories starting from /TBD that were modified more than 1 day ago
bash: find Path -mtime +Timespan -type d <|endoftext|>
<|endoftext|> english: Print a single line of numbers from "001" to "010"
bash: yes | head -n Quantity | awk Program <|endoftext|>
<|endoftext|> english: Find all regular files in the current directory tree ignoring GIT and SVN directories
bash: find Path \( -type d -regex Regex -prune -false \) -or -type f -print0 <|endoftext|>
<|endoftext|> english: search for the folder .dummy in the entire directory structure of "test folder" and remove it.
bash: find -depth Path -type d -name Regex -exec rm -r -f File \; <|endoftext|>
<|endoftext|> english: Find all *.tex files/directories in maximum 2 levels down the current directory
bash: find Path -maxdepth Quantity -name Regex <|endoftext|>
<|endoftext|> english: Change permissions to 500 for all regular files under and below the current directory
bash: find Path -type f -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Look for any files that have not been modified in the last two days
bash: find Path -mtime +Timespan <|endoftext|>
<|endoftext|> english: Search for 'It took' in all $srch1* (case insensitive) files under current directory and run the sed script 'N;s/(.*)\n(.*)/\2 \1/' on the output
bash: find Path -iname Regex -exec grep Regex {} \; -print | sed -r Program <|endoftext|>
<|endoftext|> english: Change to folder where the oracle binary is.
bash: cd $( dirname $( which Regex ) ) <|endoftext|>
<|endoftext|> english: Recursively print all files and directories in the directory tree "$absolute/path/of/your/dir"
bash: tree Directory <|endoftext|>
<|endoftext|> english: search for the directory "config" in the current folder and change directory to the first instance of the search
bash: cd $( find Path -name Regex -type d | sed Program ) <|endoftext|>
<|endoftext|> english: Search the current directory tree for files whose names contain "bills"
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: Replace each newline in input "1\n2\n3\n4\n5" with a comma
bash: echo Regex | paste -s -d Regex File <|endoftext|>
<|endoftext|> english: Find all .zip files in the current directory tree
bash: find Path -depth -name Regex <|endoftext|>
<|endoftext|> english: Search the current directory tree for files executable by at least someone
bash: find Path -type f -perm +Permission -print <|endoftext|>
<|endoftext|> english: Delete all files under $DESTINATION directory tree that were modified more than 7 days ago
bash: find Path -mtime +Timespan -exec rm {} \; <|endoftext|>
<|endoftext|> english: The file "files_to_find.txt" contains a list of filenames, create each file or update its timestamp if it exists.
bash: touch $( cat File ) <|endoftext|>
<|endoftext|> english: List all regular files in and below the home directory that were modified more than 5 years ago
bash: find Path -type f -mtime +Timespan | xargs -r -I {} ls -l {} <|endoftext|>
<|endoftext|> english: Recursively copy local file/directory "/copy/from/path" to remote location "/copy/to/path" on host "server", connecting as ssh user "user" and using identity key file "/path/to/your/.pemkey" instead of the default in ~/.ssh/
bash: scp -i File -r File File <|endoftext|>
<|endoftext|> english: Find all files/directories under /home/foo/public_html/ that were modified less than 60 minutes ago
bash: grep Regex File | find Path -mmin -Quantity <|endoftext|>
<|endoftext|> english: List all files 2 levels deep in the current directory tree
bash: tree -L Number -f -i <|endoftext|>
<|endoftext|> english: Replace each new line in "INPUT.txt" with ":"
bash: paste -s -d Regex File <|endoftext|>
<|endoftext|> english: find all the files in the folder /home which are exactly of size 10MB
bash: find Path -size Size <|endoftext|>
<|endoftext|> english: Find all files except files with '.gz' extension in the current directory non-recursively and compress them with gzip
bash: find Path -maxdepth Quantity -type f ! -name Regex -exec gzip {} \; <|endoftext|>
<|endoftext|> english: Search "mygzfile.gz" for "string to be searched"
bash: gunzip -c Regex | grep Regex <|endoftext|>
<|endoftext|> english: Recursively finds and compresses all files in a current folder.
bash: find Path -type f -exec bzip2 {} + <|endoftext|>
<|endoftext|> english: Print the path of all the network mounts
bash: mount | sed -n -e Program <|endoftext|>
<|endoftext|> english: Search the regular files of the current directory tree for string "whatever"
bash: find Path -type f | xargs -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: Recursively changes group ownership of everything within '.git' to 'git'.
bash: chgrp -R Regex File <|endoftext|>
<|endoftext|> english: Search /dev/shm and /tmp for regular files not changed in two weeks
bash: find Path Path -type f -ctime +Timespan <|endoftext|>
<|endoftext|> english: Find all directories under current directory
bash: find Path -type d -print <|endoftext|>
<|endoftext|> english: Add a line number to every line in "infile"
bash: nl -b a File <|endoftext|>
<|endoftext|> english: Find all files/directories with 664 permission under current directory tree
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: display all normal/regular files in current  folder
bash: find Path -type f <|endoftext|>
<|endoftext|> english: Find all *.xml files under current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: display all files in current folder which have not been modified in the last 60 minutes
bash: find Path -mmin +Quantity <|endoftext|>
<|endoftext|> english: Search the "test1" directory recursively for regular files named "textfile.txt"
bash: find Path -type f -name Regex -print <|endoftext|>
<|endoftext|> english: Search for all files and directories named foo, FOO, or any other combination of uppercase and lowercase characters beneath the current directory.
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: List all files/directories under /data1/Marcel which are greater than 524288 bytes and were modified or accessed more than 1 year ago
bash: find Path -size +Size \( -mtime +Timespan -or -atime +Timespan \) -ls <|endoftext|>
<|endoftext|> english: Save the md5 sum of $twofish to variable 'twofish'
bash: echo -n Regex | md5sum | tr -d Regex <|endoftext|>
<|endoftext|> english: display the names without extensions of all the data files in current folder which have not been changed in the last 60 mins
bash: find Path -prune -name Regex -type f -cmin +Quantity | xargs -i -I {} basename {} Regex {} <|endoftext|>
<|endoftext|> english: Saves invoked command 'check_script_call=$(history |tail -1|grep myscript.sh )' in variable 'check_script_call', preceeding by its number in history.
bash: history | tail - Quantity | grep Regex <|endoftext|>
<|endoftext|> english: search for all the files which have not been modified in the last 6 months (180 days) in current folder and display the total disk usage of them in MB
bash: find Path -type f -mtime Timespan -exec du -k -s {} \; | cut -f Number | awk Program <|endoftext|>
<|endoftext|> english: create symbolic links in current directory to all files located in directory "/original" and have filename extension ".processname"
bash: find Path -name Regex -exec echo Regex Regex {} Regex \; <|endoftext|>
<|endoftext|> english: Read the first 10 characters from standard input in an interactive shell into variable "VAR"
bash: read -n Quantity -e Regex <|endoftext|>
<|endoftext|> english: Search the current directory recursively for files containing "needle text"
bash: find Path -type f -exec grep -I -q Regex {} \; -and -print0 | xargs -0 -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: Find all regular files in the current directory tree and count them
bash: find Path -type f | wc -l <|endoftext|>
<|endoftext|> english: Search the given $directory for files with permissions stored in $permissions
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: Find recursively all files changed within the last 5 minutes starting from directory b
bash: find Path -cmin -Quantity <|endoftext|>
<|endoftext|> english: Remove files whose names start with `Foo'
bash: find Path -type f -name Regex -exec rm {} \; <|endoftext|>
<|endoftext|> english: Read a line from standard input into variable "prompt" with the prompt "Are you sure you want to continue? <y/N> "
bash: read -p Regex Regex <|endoftext|>
<|endoftext|> english: split file t.txt into pieces per 30000000 lines named as "t.NN" with numeric suffix
bash: split --lines Quantity --numeric-suffixes --suffix-length Quantity File Regex <|endoftext|>
<|endoftext|> english: Recursively change the owner group of "/var/www" of to "www-data"
bash: chown -R Regex File <|endoftext|>
<|endoftext|> english: Counts all top-level files in a current folder.
bash: ls -1 | wc -l <|endoftext|>
<|endoftext|> english: Find all broken symlinks in maximum 1 level down the $path directory
bash: find -L Path -maxdepth Quantity -type l <|endoftext|>
<|endoftext|> english: Gets MAC address of p2p0 network interface.
bash: ifconfig Regex | grep -o -E Regex <|endoftext|>
<|endoftext|> english: search for the directory testdir in the folder /home
bash: find Path -type d -name Regex <|endoftext|>
<|endoftext|> english: Create a symbolic link in the current directory to "../config/init"
bash: ln -s File <|endoftext|>
<|endoftext|> english: create a symbolic link in current directory named "my_db" to file "/media/public/xampp/mysql/data/my_db"
bash: ln File -s <|endoftext|>
<|endoftext|> english: search for the word "damian" in all the regular/normal files in the /etc folder and display only the matched file name
bash: find Path -type f | xargs -I {} grep -l -i Regex {} <|endoftext|>
<|endoftext|> english: display the count of number html files in the current folder
bash: find Path -name Regex -print | xargs -l -i -I {} wc {} {} <|endoftext|>
<|endoftext|> english: Find all `doc.txt' files in the current directory tree printing "found" for each of them
bash: find Path -name Regex -printf "found\n" <|endoftext|>
<|endoftext|> english: Find all files/directories under $1 which have at least read permission for their owner and set read permission for group for these files/directories
bash: find Path -perm -Permission -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Create compressed archive of all the files in the current directory tree that have been modified in the last 7 days
bash: find Path -type f -mtime -Timespan -print -exec cat {} \; | tar -c -f File | gzip -9 <|endoftext|>
<|endoftext|> english: Write output of "ls -lR /" to standard output and append to "output.file"
bash: ls -l -R File | tee -a File <|endoftext|>
<|endoftext|> english: Change permission to 000 of all directories named '.texturedata' under '/path/to/look/in/' directory tree
bash: find Path -type d -name Regex -exec chmod Permission {} \; -prune <|endoftext|>
<|endoftext|> english: Count line numbers on files and record each count along with individual file name.
bash: find Path -name Regex | xargs -I {} grep -c Regex {} <|endoftext|>
<|endoftext|> english: Remove all CVS directories in the current directory tree
bash: find Path -type d -name Regex -exec rm -r {} \; <|endoftext|>
<|endoftext|> english: Find files readable only by the group
bash: find Path -perm Permission -type f -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: Removes the last 2 lines from a file
bash: head -n -Quantity File <|endoftext|>
<|endoftext|> english: Make directory "~/practice"
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: find all the files in the current folder which are modified after /bin/sh.
bash: find Path -newer File <|endoftext|>
<|endoftext|> english: find all the files and folder that were created in 2012 on Friday of every month
bash: find Path -daystart -mtime +Timespan -mtime -Timespan Path -printf "%M %n %u %g %10s %TY-%Tm-%Td %Ta %TH:%TM:%TS %h/%f\n" | awk Program <|endoftext|>
<|endoftext|> english: Compare "$source_file" and "$dest_file" line by line
bash: diff File File <|endoftext|>
<|endoftext|> english: display a long listing of all images with the name "articles" in the current folder ( print0 is used to preserve file names with new line in their name )
bash: find Path -iname Regex -print0 | xargs -0 -I {} ls -l {} <|endoftext|>
<|endoftext|> english: Saves logged in users names in 'tmp' variable.
bash: w | awk Program <|endoftext|>
<|endoftext|> english: Find all *.gz files in the current directory and decompress them using gunzip
bash: find Path -name Regex -print0 | xargs -0 -I {} gunzip {} <|endoftext|>
<|endoftext|> english: Go back to last directory.
bash: cd Directory <|endoftext|>
<|endoftext|> english: Find files under [directory] that match 'pattern_to_INCLUDE' in their names without descending into directories that match 'pattern_to_exclude' and 'another_pattern_to_exclude', then search for 'pattern' in those files
bash: find Path -name Regex -prune -or -name Regex -prune -or -name Regex -print0 | xargs -0 -I {} grep -I -R Regex {} <|endoftext|>
<|endoftext|> english: Page through the contents of yourFile, adding a $ at the end of each line and replacing tab characters by ^I.
bash: cat -v -e -t File | less <|endoftext|>
<|endoftext|> english: find all the files that have been modified exactly 24 hours ago
bash: find Path -type f -mtime Timespan <|endoftext|>
<|endoftext|> english: Find file1 in the level 1 directories and above
bash: find Path -maxdepth Quantity -name Regex <|endoftext|>
<|endoftext|> english: Recursively finds all files with whole word "pattern" in a current folder, and precedes found string with its number in file.
bash: grep -r -n -w $( pwd ) -e Regex <|endoftext|>
<|endoftext|> english: find all the files with the name "datainame" in the file system which are bigger than 50MB
bash: find Path -size +Size -iname Regex <|endoftext|>
<|endoftext|> english: display all files in the current folder which end with extension "myfile" followed by one digit or two digits
bash: find Path \( -name Regex -or -name Regex \) <|endoftext|>
<|endoftext|> english: List the files in the /etc directory tree containing text "old1.old2.co.com"
bash: find Path -type f -print | xargs -I {} grep -i -l Regex {} <|endoftext|>
<|endoftext|> english: Copies file 'file1' to each of directories 'dir1', 'dir2', 'dir3'.
bash: echo Regex Regex Regex | xargs -n Quantity -I {} cp File {} <|endoftext|>
<|endoftext|> english: Count the number of unique 3 to 6 character file extensions are in the current directory tree
bash: find Path -type f -name Regex | grep -o -E Regex | grep -o -E Regex | awk Program | sort | uniq -c | sort -r -n <|endoftext|>
<|endoftext|> english: Find all files/directories named 'foo' under current directory tree without descending into directories named 'foo'
bash: find Path -name Regex -type d -prune -or -name Regex <|endoftext|>
<|endoftext|> english: Find all files matching "abc*" in the current directory and append "\tok"
bash: find Path -name Regex | sed Program | column -t <|endoftext|>
<|endoftext|> english: Find files that don’t have 644 permissions
bash: find Path -type f ! -perm Permission <|endoftext|>
<|endoftext|> english: Delete files in /var/tmp/stuff and below that have not been modified in over 90 days
bash: find Path -mtime +Timespan -execdir rm {} + <|endoftext|>
<|endoftext|> english: Print TXT record with server`s hostname from nameserver 'server'
bash: dig Regex Regex ch txt <|endoftext|>
<|endoftext|> english: Print mount point of the file system containing $path.
bash: df File | tail - Quantity | awk Program <|endoftext|>
<|endoftext|> english: Search case insensitively for 'facebook', 'xing', 'linkedin', ''googleplus' in file 'access-log.txt', extract the matched part, sort them and print them by sorting them in asending order of the number of repeated lines
bash: grep -i -o -h Regex File | sort | uniq -c | sort -n <|endoftext|>
<|endoftext|> english: Trim leading and trailing whitespace from variable 'var'.
bash: echo Regex | awk Program <|endoftext|>
<|endoftext|> english: list *.pdf, *.bmp and *.txt files under the /home/user/Desktop directory.
bash: find Path -name Regex -or -name Regex -or -name Regex <|endoftext|>
<|endoftext|> english: Search for all the directories named 'm?' under current directory tree, add the extension ".mbox" to all, create a 'Messages' directories inside them and move all files with .emlx extension to 'Messages' directory
bash: find Path -name Regex -type d -exec mv {} File \; -exec mkdir Directory \; -exec sh -c mv File File \; <|endoftext|>
<|endoftext|> english: Create a symbolc link named "public_html" to "current/app/webroot" under the current working directory
bash: ln -s $( pwd ) Regex <|endoftext|>
<|endoftext|> english: Change to the directory of the executable "python"
bash: cd $( dirname $( which Regex ) ) <|endoftext|>
<|endoftext|> english: Find all directories under $ROOT_DIR and show the sub-directories of the directories before the directories themselves
bash: find Path -type d -depth -print <|endoftext|>
<|endoftext|> english: Find all *.rb (regular) files under current directory and count their line numbers
bash: find Path -name Regex -type f | xargs -I {} wc -l {} <|endoftext|>
<|endoftext|> english: Find all files under /path/to/dir that were modified less than 7 days ago and show only first several lines of output
bash: find Path -type f -mtime -Timespan -print0 | xargs -0 -I {} ls -l -t {} | head <|endoftext|>
<|endoftext|> english: Prints lines count of each *.php file in a current folder and subfolders, and prints total count.
bash: find Path -name Regex -print0 | xargs -0 -I {} wc -l {} <|endoftext|>
<|endoftext|> english: change permissions for directories in the entire file system
bash: chmod Permission $( find Path -type d -print ) <|endoftext|>
<|endoftext|> english: Archive "/my/dir" on host "server" as user "user" to the current local directory excluding files ending in ".svn"
bash: rsync -a -v --exclude Regex File File <|endoftext|>
<|endoftext|> english: Get domain name with 'google' from address $IP
bash: dig -x Regex | grep Regex | cut -d Regex -f Number | grep Regex | cut -f Number <|endoftext|>
<|endoftext|> english: Find all files, folders, symlinks, etc matching pattern "*.php" in the current directory recursively
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: List all variables (names only) with names containing X.
bash: env | awk -F Regex Program <|endoftext|>
<|endoftext|> english: display all the files in the home folder that have been modified in the last 24 hours
bash: find Path -mtime -Timespan <|endoftext|>
<|endoftext|> english: Find writable files in the current directory tree
bash: find Path Path <|endoftext|>
<|endoftext|> english: Remove all files from the current directory tree whose names contain whitespaces
bash: find Path -name Regex -exec rm -f {} \; <|endoftext|>
<|endoftext|> english: Changes group ownership of 'public' to 'pub'.
bash: chgrp Regex File <|endoftext|>
<|endoftext|> english: Saves listing of a current folder in 'var' variable.
bash: ls -l <|endoftext|>
<|endoftext|> english: Saves exit statuses of piped commands in a system variable PIPESTATUS='([0]="0" [1]="1" [2]="0")'
bash: true | false | true <|endoftext|>
<|endoftext|> english: Split "$SOURCE_FILE" into files of at most 100 lines each
bash: split -l Quantity File <|endoftext|>
<|endoftext|> english: display all the files in the folder /etc /srv excluding those that are present in the path of ./srv/tftp/pxelinux.cfg* and /etc/mtab
bash: find Path Path ! -path Regex -and ! -name Regex <|endoftext|>
<|endoftext|> english: List files larger than 9MB residing in the current directory and below
bash: find Path -size +Size <|endoftext|>
<|endoftext|> english: Convert the contents of 'var1' variable to lowercase
bash: $( echo Regex | tr Regex Regex ) <|endoftext|>
<|endoftext|> english: display all the html files in the current folder excluding search in the paths ./foo, ./bar.
bash: find Path -path Regex -prune -or -path Regex -prune -or -type f -name Regex <|endoftext|>
<|endoftext|> english: Find all directories under path_to_dir directory
bash: find Path -type d <|endoftext|>
<|endoftext|> english: find files under the current directory called "foo" or "bar"
bash: find Path \( -name Regex -or -name Regex \) <|endoftext|>
<|endoftext|> english: find all files which name contain 'foo' and path is not dir1 or dir2
bash: find Path ! -path Regex ! -path Regex -name Regex <|endoftext|>
<|endoftext|> english: Replace all newlines from standard input except the last with spaces
bash: sed Program <|endoftext|>
<|endoftext|> english: Find files under current directory that contains the string '/bin/ksh'
bash: find Path -type f -print | xargs -I {} grep -i -l Regex {} <|endoftext|>
<|endoftext|> english: Locate files not owned by any user or group
bash: find Path -path Regex -prune -or -nouser -or -nogroup <|endoftext|>
<|endoftext|> english: Unzip file "$empty_variable"
bash: gunzip Regex <|endoftext|>
<|endoftext|> english: Delete empty lines from standard input
bash: sed -n Program <|endoftext|>
<|endoftext|> english: Simulate a full login
bash: su Regex <|endoftext|>
<|endoftext|> english: delete all text files in the home folder after user confirmation
bash: find Path -name Regex -ok rm {} \; <|endoftext|>
<|endoftext|> english: find all the files in the folder /opt which have been accessed exactly 20 days ago
bash: find Path -atime Timespan <|endoftext|>
<|endoftext|> english: Search directory /path/to/check/ for regular files
bash: find Path -maxdepth Quantity -type f <|endoftext|>
<|endoftext|> english: Find the largest files in a particular location
bash: find Path -type f -printf "%s %p\n" | sort -r -n | head -n Quantity <|endoftext|>
<|endoftext|> english: Find all regular files that start with stat
bash: find Path -type f -iname Regex <|endoftext|>
<|endoftext|> english: List the directory paths of all file.ext files under present working directory
bash: find Path -name Regex -execdir pwd \; <|endoftext|>
<|endoftext|> english: Serach in current directory downwards all files which  have not been modified since last 7 days
bash: find Path -mtime +Timespan -print <|endoftext|>
<|endoftext|> english: Find all files/directories under test directory
bash: find Path <|endoftext|>
<|endoftext|> english: Search for a line starting with 'use strict' in all files with '.pl' extension under current directory tree and show the unmatched files only
bash: find Path -name Regex | xargs -I {} grep -L Regex {} <|endoftext|>
<|endoftext|> english: Print a welcome message with the current user's user name
bash: echo $( whoami ) <|endoftext|>
<|endoftext|> english: Search the current directory tree for regular files whose names end in "log"
bash: find Path $( pwd ) -name Regex -type f <|endoftext|>
<|endoftext|> english: Run rsync with options specified by variable OPTS, copying directory(ies) specified by variable FIND, and to destination specified by variable BACKUPDIR.
bash: rsync File File File <|endoftext|>
<|endoftext|> english: Find all php files that belong to user 'takuya' and have been modified in the last 1 day
bash: find Path -user Regex -name Regex -daystart -mtime -Timespan <|endoftext|>
<|endoftext|> english: Recursively change the user and group of all files in "/var/log/jenkins" to "root"
bash: chown -R Regex File <|endoftext|>
<|endoftext|> english: Search for all *.conf files in entire file system
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: search for multiple files in the current folder
bash: find Path -name Regex Path Path <|endoftext|>
<|endoftext|> english: find and image in current folder (case insensitive search)
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory with a Depth-First search
bash: find Path -depth <|endoftext|>
<|endoftext|> english: Counts total lines in all *.php files in the current directory recursively
bash: find Path -name Regex -type f | xargs -I {} cat {} | wc -l <|endoftext|>
<|endoftext|> english: Log in as "middleuser" with key "./middle_id.pem" and forward port 22 on host "middle.example.org" to port 2222 on localhost
bash: ssh -i File -R Regex Regex <|endoftext|>
<|endoftext|> english: Move all files including hidden files and excluding ".." in "/path/subfolder/" to "/path/"
bash: mv File File <|endoftext|>
<|endoftext|> english: recursively change owner of the directory /usr/local/lib/node_modules/ to the current user
bash: chown -R Regex File <|endoftext|>
<|endoftext|> english: Find all *.foo files under current directory and print their contents
bash: cat $( find Path -name Regex ) <|endoftext|>
<|endoftext|> english: find all the files in the current directory that have the extension "bar" and donot search in the subdirecotries directories.
bash: find Path -name Regex -maxdepth Quantity -print <|endoftext|>
<|endoftext|> english: find all files with pattern` '*.mp3'
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Search the current directory tree for files that are less than 50kb
bash: find Path -size -Size <|endoftext|>
<|endoftext|> english: Update timestamps of all files (not directories) under current directory. Also works on older Unix systems with obsolete 'find' command.
bash: find Path -print -exec touch {} \; <|endoftext|>
<|endoftext|> english: Set permissions to 700 for directories under media/
bash: find Path -type d -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: create directory /tmp/new
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: Search directory tree `MyApp.app' for directories whose name is 'Headers' and delete them
bash: find Path -name Regex -type d -delete <|endoftext|>
<|endoftext|> english: Find and clear UTF-8 files with BOM
bash: find Path -type f -exec sed Program -i Regex {} \; -exec rm File \; <|endoftext|>
<|endoftext|> english: Changes the group of defined file.
bash: chgrp <|endoftext|>
<|endoftext|> english: rename all the text files  in the current folder to html files
bash: find Path -name Regex -exec mv {} $( basename {} Regex ) \; <|endoftext|>
<|endoftext|> english: Delete all .svn files/directories under current directory
bash: find Path -name Regex | xargs -I {} rm -r -f {} <|endoftext|>
<|endoftext|> english: Print numbers from 1 to 10 using up to 4 processes
bash: seq Number | xargs -P Quantity -I {} echo {} <|endoftext|>
<|endoftext|> english: Extracts single file 'filename' from bzip2-compressed tarball archive.tbz.
bash: bzip2 -d -c File | tar -x -v -f File File <|endoftext|>
<|endoftext|> english: Print history with the first field removed
bash: history | awk Program <|endoftext|>
<|endoftext|> english: Remove duplicate lines in "file_name" and print the output on stdout
bash: awk Program Program | sort -t Regex -k Number | uniq --skip-fields Quantity | sort -k Number -t Regex | cut -f Number -d Regex <|endoftext|>
<|endoftext|> english: Search for case insensitive pattern 'search for me' in all files that match the name pattern '*.[!r]*' under current directory tree
bash: find Path -name Regex -exec grep -i -l Regex {} \; <|endoftext|>
<|endoftext|> english: find all the cpp files in the current folder and move them to another folder
bash: find Path -type f -iname Regex -exec mv {} File \; <|endoftext|>
<|endoftext|> english: Print the character representations of 65 to 90
bash: seq Number Number | awk Program <|endoftext|>
<|endoftext|> english: Set permissions of command "node" to 755
bash: chmod Permission $( which Regex ) <|endoftext|>
<|endoftext|> english: Find all *.py files under and below the current directory and search them for "xrange"
bash: find Path -name Regex -exec grep --color 'xrange' {} + <|endoftext|>
<|endoftext|> english: find all files in the current folder that are not modified in the last 10 minutes
bash: find Path -mmin +Quantity -print <|endoftext|>
<|endoftext|> english: Find all regular files starting from level 3 of directory tree ~/container and move them one level up
bash: find Path -mindepth Quantity -type f -execdir mv {} File \; <|endoftext|>
<|endoftext|> english: Change directory to the output of command '~/marker.sh go "$@"'
bash: cd $(  ) <|endoftext|>
<|endoftext|> english: Find all files in the current directory tree whose names end with the suffix ".keep.$1", where $1 is the first command line argument, and remove that suffix
bash: find Path -type f -name Regex -print0 | xargs -0 -I {} rename Regex {} <|endoftext|>
<|endoftext|> english: find all the files that are modified exactly one day ago
bash: find Path -daystart -mtime Timespan <|endoftext|>
<|endoftext|> english: List in detail the regular files from the /somelocation/log_output directory tree that were last changed more than 40 days ago
bash: find Path -type f -ctime +Timespan -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: display files ending with ".ext" in current folder which are present in the file "foo"
bash: find Path -type f -name Regex | xargs -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: Finds recursively all files not having extension .o in '/path/' that contain 'pattern', and prints matched strings with string number and file name.
bash: grep --exclude Regex -r -n -w Regex -e Regex <|endoftext|>
<|endoftext|> english: find all the word press configuration php files in the folder /var/www
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Recursively rename all files under /your/target/path replacing 'special' with 'regular' - all file/diretory names may not include spaces, and directory names containing such files may not contain the word 'special' in their name.
bash: find Path -type f -exec rename Regex {} \; <|endoftext|>
<|endoftext|> english: Search all *.c files from the current directory tree for "hogehoge"
bash: find Path -name Regex -print0 | xargs -0 -I {} grep Regex File {} <|endoftext|>
<|endoftext|> english: Print all files containing "word1" and "word2" in the current directory tree
bash: comm -1 -2 <( grep -r -l Regex File | sort ) <( grep -r -l Regex File | sort ) <|endoftext|>
<|endoftext|> english: display all the text files in the current folder except readme files
bash: find Path -type f -name Regex ! -name Regex -print <|endoftext|>
<|endoftext|> english: Print the output of history without line numbers
bash: history | sed Program <|endoftext|>
<|endoftext|> english: Print the sorted unique column of usernames of users who are currently logged in
bash: finger | cut -d Regex -f Number | sort -u <|endoftext|>
<|endoftext|> english: Print which files differ in "dir_one" and "dir_two" recursively and sort the output
bash: diff -q -r File File | sort <|endoftext|>
<|endoftext|> english: list all running jobs
bash: jobs <|endoftext|>
<|endoftext|> english: Save the canonical path of "/usr/bin/java" with "/bin/java" removed to variable "JAVA_HOME"
bash: readlink -f File | sed Program <|endoftext|>
<|endoftext|> english: find all the regular/normal files in the folder "myfiles" which have the permission 647.
bash: find Path -type f -perm -Permission <|endoftext|>
<|endoftext|> english: Save the system load average for the past 1 minute of the currently logged in user to variable 'proc_load_average'
bash: w | head - Quantity | cut -d Regex -f Number | cut -d Regex -f Number | tr Regex Regex <|endoftext|>
<|endoftext|> english: Find all broken symlinks under current directory
bash: find Path -type l -xtype l <|endoftext|>
<|endoftext|> english: find all the video files which are bigger than 10 MB which have not been modified in the last 60 days but have been changed in the last 100 days in /tmp and /var/tmp folder home folders
bash: find Path Path Path -type f -size +Size -mtime +Timespan -ctime -Timespan -exec file -N -i -- {} + | sed -n Program <|endoftext|>
<|endoftext|> english: Find all files under ./lib/app and redirect their sorted list to myFile
bash: find Path -type f | sort | tee File <|endoftext|>
<|endoftext|> english: Find files that were modified more than 7 days ago and archive them
bash: find Path -type f -mtime +Timespan | xargs -I {} tar -c -v -f $( date '+%d%m%Y'_archive.tar ) {} <|endoftext|>
<|endoftext|> english: Save small letter short day name of the week to variable 'DayOfWeek'
bash: date +%a | tr Regex Regex <|endoftext|>
<|endoftext|> english: Search the files in the current directory tree for lines containing string "vds admin"
bash: find Path -exec grep -i Regex {} \; <|endoftext|>
<|endoftext|> english: Display a binary file as a sequence of hex codes
bash: od -t x1 File | cut -c Number <|endoftext|>
<|endoftext|> english: List all leaf directories of the current directory tree
bash: find Path -type d | sort | awk Program <|endoftext|>
<|endoftext|> english: Mount "nifs" filesystem "/dev/mapper/myldm" on "/mnt" as read only
bash: mount -t ntfs -o ro Regex Regex <|endoftext|>
<|endoftext|> english: List each file or directory in the current directory prefixed by its human readable filesize and sorted from largest to smallest
bash: du -h --max-depth Quantity File | sort -h -r <|endoftext|>
<|endoftext|> english: Split "mybigfile.txt" into files of at most 200000 lines each
bash: split -l Quantity File <|endoftext|>
<|endoftext|> english: List all files in the current directory tree that were modified 60 minutes ago
bash: find Path -mmin Quantity <|endoftext|>
<|endoftext|> english: Search the /root directory recursively for the regular file named "myfile"
bash: find Path -name Regex -type f <|endoftext|>
<|endoftext|> english: Remove duplicate lines in "file_name" and print the output on stdout
bash: awk Program Program | sort -t Regex -k Number | uniq -u --skip-fields Quantity | sort -k Number -t Regex | cut -f Number -d Regex <|endoftext|>
<|endoftext|> english: Find all files under $dir directory
bash: find Path -type f <|endoftext|>
<|endoftext|> english: Prints a random number between 2000 and 65000
bash: seq Number Number | sort -R | head -n Quantity <|endoftext|>
<|endoftext|> english: Print the directory of the full path to the current script
bash: echo $( dirname $( readlink -m File ) ) <|endoftext|>
<|endoftext|> english: Recursively search for all directories containing "foo" (case insensitive) under the current directory, renaming them to replace "foo" (case insensitive) with "Bar"
bash: find Path -type d -iname Regex -depth -exec rename Regex {} + <|endoftext|>
<|endoftext|> english: Find all files/directories under $dir directory tree which have been modified in the last 3 days
bash: find Path -mtime -Timespan <|endoftext|>
<|endoftext|> english: change the permissions of mp3 files in the folder /var/ftp/mp3 to 644
bash: find Path -name Regex -type f -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Recursively finds all *.txt files and prints strings with "text_pattern" ignoring text distincts.
bash: find Path -name Regex | xargs -I {} grep -i Regex {} <|endoftext|>
<|endoftext|> english: Page through the contents of BIG_FILE.txt, letting the user move around with the arrow keys, the Q key quits.
bash: cat File | less <|endoftext|>
<|endoftext|> english: Forcibly removes ${temp} file.
bash: rm --force File <|endoftext|>
<|endoftext|> english: Print numbers from 1 to 5 without separating spaces
bash: seq Number | awk Program <|endoftext|>
<|endoftext|> english: Find all duplicate ".jar" files in the current directory tree
bash: find Path -type f -printf "%f\n" -name Regex | sort -f | uniq -i -d <|endoftext|>
<|endoftext|> english: Search  all directory from /usr downwards for files whose inode number is 1234 and print them .
bash: find Path -inum Quantity -print <|endoftext|>
<|endoftext|> english: Find files that were modified less than 7 days ago and archive them
bash: find Path -type f -mtime -Timespan | xargs -I {} tar -c -v -f $( date '+%d%m%Y'_archive.tar ) {} <|endoftext|>
<|endoftext|> english: Calculate and show md5 sums for every files under current directory tree
bash: find Path | xargs -I {} md5sum {} <|endoftext|>
<|endoftext|> english: Find all directories that have been accessed $FTIME days ago under current directory tree
bash: find Path -type d -atime Timespan <|endoftext|>
<|endoftext|> english: display all the files having the word "searched phrasse" in their name in the current folder excluding those from the paths "/tmp/" and "./var/log"
bash: find Path -type f -name Regex ! -path Regex ! -path Regex <|endoftext|>
<|endoftext|> english: search for all the c files in the current folder
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: Open all .java files in the current directory tree in the vim editor
bash: find Path -name Regex -exec vim {} + <|endoftext|>
<|endoftext|> english: Handles shell option 'nullglob' according with flags stored in $NGV variable.
bash: shopt "$NGV" nullglob <|endoftext|>
<|endoftext|> english: List file contents of compressed file $i
bash: gzip -l Regex <|endoftext|>
<|endoftext|> english: View the bash manpage, starting with the view positioned at the first occurrence of the expression "BASH_SOURCE".
bash: man Regex | less -p Regex <|endoftext|>
<|endoftext|> english: Create symbolic link "$1/link" to the absolute path of "$2"
bash: ln -s $( readlink -e File ) Regex <|endoftext|>
<|endoftext|> english: Find all files called wp-config.php in the /var/www directory and below
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Print the file names along with their sizes under current directory tree
bash: find Path -type f -printf "%f %s\n" <|endoftext|>
<|endoftext|> english: Print unique lines of "second-file-sorted.txt" compared to "first-file-sorted.txt"
bash: comm -2 -3 File File <|endoftext|>
<|endoftext|> english: find all the symbolic links in the current folder
bash: find Path -type l -print <|endoftext|>
<|endoftext|> english: Request NS record for com. domain, receiving only authoritative answers
bash: dig Regex Regex com. <|endoftext|>
<|endoftext|> english: Print numbers from 1 to 10 with 2 values per line
bash: seq Number | sed Program <|endoftext|>
<|endoftext|> english: Extract, sort and print only group names from /etc/group.
bash: cut -d Regex -f Number File | sort <|endoftext|>
<|endoftext|> english: Print a count of each unique line from standard input
bash: sort | uniq -c <|endoftext|>
<|endoftext|> english: Get the list of regular files in the current directory
bash: find Path -mindepth Quantity -maxdepth Quantity -type f -print0 | xargs -0 -I {} echo {} <|endoftext|>
<|endoftext|> english: Execute md5sum command on files found by the find command
bash: find Path -iname Regex -exec md5sum {} \; <|endoftext|>
<|endoftext|> english: Find all broken symlinks under current directory
bash: find -L Path -type l <|endoftext|>
<|endoftext|> english: split file abc.txt into pieces per 1500000000 bytes named as "abc.NNN"
bash: split --bytes Size File Regex <|endoftext|>
<|endoftext|> english: display all the files in the current folder which contains form feed (^L) and does not contain NULL
bash: find Path | xargs -I {} grep -P -L Regex {} | xargs -I {} grep -P -l Regex {} <|endoftext|>
<|endoftext|> english: Print a list of regular files from directory tree sort_test/ sorted with LC_COLLATE=en_US.utf8
bash: find Path -type f | env -i Program Program <|endoftext|>
<|endoftext|> english: Extract the contents of "Input.txt.gz", list the unique first comma separated field prefixed by the number of occurrences
bash: zcat Regex | cut -d Regex -f Number | sort | uniq -c <|endoftext|>
<|endoftext|> english: list in long format all files from / whose filename ends in "jbd", not descending into directories that are not readable while searching, and not descending into directories on other filesystems
bash: find Path -mount ! Path -prune -or -path Regex -prune -or -name Regex -ls <|endoftext|>
<|endoftext|> english: Find all 'test' directories in the current directory tree
bash: find Path -type d -and -name Regex <|endoftext|>
<|endoftext|> english: Compress all directories found in directory tree $LOGDIR that have been modified within the last 24 hours
bash: find Path -type d -mtime -Timespan -exec compress File {} \; <|endoftext|>
<|endoftext|> english: Print 'echo 'hello, world'
bash: echo Regex | cat <|endoftext|>
<|endoftext|> english: List all files under the current working directory last modified less than a day ago
bash: find Path $( pwd ) -mtime -Timespan -type f -print <|endoftext|>
<|endoftext|> english: List the largest file prefixed by its size in bytes of all files under the current directory
bash: find Path -type f -name Regex -printf '%s %p\n' | sort -n -r | head -n Quantity <|endoftext|>
<|endoftext|> english: Do a dry run of renaming file extension '.andnav' to '.tile' for all files/directories under current directory tree
bash: find Path -name Regex | rename -v -n Regex <|endoftext|>
<|endoftext|> english: Replace "dummyvalue" with the system IP address in "filename"
bash: sed -i $( hostname -I | head -n Quantity | awk Program ) File <|endoftext|>
<|endoftext|> english: Find all files of the user with UID=1000
bash: find Path -user Regex <|endoftext|>
<|endoftext|> english: Print each line in "file1.txt" that is not found in "file2.txt"
bash: sort File File File | uniq -u <|endoftext|>
<|endoftext|> english: find all files under the current directory, filtering the output through a regular expression to find any lines that contain the word foo or bar.
bash: find Path | grep -E Regex <|endoftext|>
<|endoftext|> english: display all the users in the current folder that belong to the group "sunk"
bash: find Path -type f -group Regex <|endoftext|>
<|endoftext|> english: Delete all files and directories
bash: find Path -delete <|endoftext|>
<|endoftext|> english: Removes files ~/.android/adbkey and ~/.android/adbkey.pub without prompting.
bash: rm -f File File <|endoftext|>
<|endoftext|> english: Print file name without the last two extensions assuming the file name doesn't contain any other dots.
bash: echo Regex | cut -d Regex --complement -f Number <|endoftext|>
<|endoftext|> english: Recursively delete all files/folders named '.svn' in a current folder.
bash: find Path -name Regex -delete <|endoftext|>
<|endoftext|> english: Print a count of all unique entries in "ips.txt" with the most frequent results at the top
bash: sort File | uniq -c | sort -b -g -r <|endoftext|>
<|endoftext|> english: Search the current directory tree for all files except SVN ones
bash: find Path ! -regex Regex <|endoftext|>
<|endoftext|> english: Search for first match of the case insensitive regex 're' in all *.coffee files under current directory and print the file paths along with the matches
bash: find Path -print0 -name Regex | xargs -0 -I {} grep -m Quantity -r -i Regex {} <|endoftext|>
<|endoftext|> english: Time stamp every ping request to 8.8.8.8 in Unix epoch format
bash: ping Regex -n Regex -i Quantity -W Quantity Regex <|endoftext|>
<|endoftext|> english: Print help on 'cat' command usage
bash: cat --help <|endoftext|>
<|endoftext|> english: Search only for directories
bash: find Path -type d <|endoftext|>
<|endoftext|> english: split file "$file into pieces named with 5 character suffix
bash: split -a Quantity File <|endoftext|>
<|endoftext|> english: Add execute permission to all files ending in ".sh"
bash: chmod +Permission File <|endoftext|>
<|endoftext|> english: Update the archive '2009.tar' with the files from the data/ directory tree that match pattern 'filepattern-*2009*'
bash: find Path -name Regex -print0 | xargs -0 -I {} tar -u -f File {} <|endoftext|>
<|endoftext|> english: Remove trailing white spaces from all *.rb, *.html, *.js, *.coffee, *.css, *.scss, *.erb, *.yml, *.ru files under current directory
bash: find Path \( -name Regex -or -name Regex -or -name Regex -or -name Regex -or -name Regex -or -name Regex -or -name Regex -or -name Regex -or -name Regex \) -print0 | xargs -0 -I {} sed -i Program File File {} <|endoftext|>
<|endoftext|> english: Print numbers from 1 to 5 without separating spaces and without a newline
bash: seq Number | awk Program <|endoftext|>
<|endoftext|> english: Set 644 permission to all regular files under current directory
bash: chmod Permission $( find Path -type f ) <|endoftext|>
<|endoftext|> english: Create symbolic links in the current directory for all files excluding "CONFIGFILE" located in "/your/project"
bash: find Path -maxdepth Quantity ! -name Regex -exec ln -s File Regex \; <|endoftext|>
<|endoftext|> english: Locate all files in the current directory and below that have "testfile" in their names regardless of the case
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: Force delete all the regular/normal files in the current folder and do not search in the sub folders
bash: find Path -maxdepth Quantity -type f -exec rm -f {} \; <|endoftext|>
<|endoftext|> english: Search the current directory tree for files matching sed regular expression '.*myfile[0-9]\{1,2\}'
bash: find Path -regextype sed -regex Regex <|endoftext|>
<|endoftext|> english: Delete all files in the /TBD directory that were modified more than 1 day ago
bash: find Path -mtime +Timespan -exec rm -r -f {} \; <|endoftext|>
<|endoftext|> english: Find files matching an exact set of permissions
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: Backup all PHP files under the current directory tree
bash: find Path -name Regex -exec cp {} File \; <|endoftext|>
<|endoftext|> english: Print summary of files present only in dir1.
bash: diff -r -q File File | grep Regex <|endoftext|>
<|endoftext|> english: Save first IP address of domain 'google.com' in 'address' variable
bash: dig Regex Regex | grep -E Regex | head -n Quantity <|endoftext|>
<|endoftext|> english: Find all files/directories startring with 'onlyme' in their names under current directory without going into sub-directories
bash: find Path -maxdepth Quantity -name Regex <|endoftext|>
<|endoftext|> english: Extract files from archive 'archive.tar'
bash: cat File | tar -x <|endoftext|>
<|endoftext|> english: recursively change owner and group of the directory  /opt/antoniod/ to user and group antoniod
bash: chown -R Regex File <|endoftext|>
<|endoftext|> english: Display the first 32 bytes in "foo" as printable characters with 16 characters per line
bash: od -c File | head - Quantity <|endoftext|>
<|endoftext|> english: find all the files in the current directory that have the word "bash" in their name
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Change the owner of "/var/www/html/mysite/tmp_file_upload/" to "nobody"
bash: chown Regex File <|endoftext|>
<|endoftext|> english: find all files in the folder "myfiles" which have not been accessed in the last 30*24 hours
bash: find Path -atime +Timespan <|endoftext|>
<|endoftext|> english: Show the last 10 .conf files found by `find' in the /etc directory and 1 level below
bash: find Path -maxdepth Quantity -name Regex | tail <|endoftext|>
<|endoftext|> english: display long listing of all files in the current directory whose size is 24 or 25 bytes.
bash: find Path -size -Size -size +Size -ls <|endoftext|>
<|endoftext|> english: Find all the Sticky Bit set files whose permission are 551
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: find all files in the file system having the name "filename"
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: Print the list of files in the current directory tree skipping SVN files
bash: find Path -name Regex -and -type d -prune -or -print <|endoftext|>
<|endoftext|> english: Sort "some_data" by the first and second ";" delimited entries, outputing unique lines and stabilizing the sort
bash: sort -k Number -k Number -t Regex --stable --unique File <|endoftext|>
<|endoftext|> english: display all the files in the folder "/Users/Me/Desktop" which have read permission to them
bash: find Path Path <|endoftext|>
<|endoftext|> english: Print current date as epoch seconds
bash: date +%s <|endoftext|>
<|endoftext|> english: Search the current directory tree for all files except SVN ones
bash: find Path -not -iwholename Regex <|endoftext|>
<|endoftext|> english: Archive "/path/to/files" to "/path" on host "user@targethost" with elevated permission on the remote host
bash: rsync -a -v --rsync-path Program File File <|endoftext|>
<|endoftext|> english: List the full path of each directory under the current working directory
bash: tree -d -f -i $( pwd ) <|endoftext|>
<|endoftext|> english: Find all directories under $x directory and set read-write-execute permission for owner and group and no permission for other for those directories
bash: find Path -type d -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Find all regular files under and below /home/user/demo/
bash: find Path -type f -print <|endoftext|>
<|endoftext|> english: copy all the mp3 files from current folder to another folder
bash: find Path -name Regex -exec cp -a {} File \; <|endoftext|>
<|endoftext|> english: Copy permissions from "version2/somefile" to "version1/somefile"
bash: chmod --reference File Permission <|endoftext|>
<|endoftext|> english: Find all files/directories greater than 100MB and print their list along with their size in /root/big.txt file
bash: find Path \( -size +Size -fprintf File '%-10s %p\n' \) <|endoftext|>
<|endoftext|> english: Find all *.txt files/directories under current directory
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: Add a date time stamp to every line of output in "ping google.com"
bash: ping Regex | xargs -L Quantity -I {} date '+%c: {}' <|endoftext|>
<|endoftext|> english: find all files in current folder which are bigger than 270MB and less than 300MB
bash: find Path -size +Size -size -Size <|endoftext|>
<|endoftext|> english: Save number of strings with $expression pattern in 'foo.txt' to 'big_lines' variable.
bash: cat File | grep -c Regex <|endoftext|>
<|endoftext|> english: List all files/directories under current directory
bash: find Path -ls <|endoftext|>
<|endoftext|> english: Find files which are more than 2 days old under  ${userdir}/${i}/incoming directory and remove them
bash: find Path -mtime +Timespan -type f -exec rm {} \; <|endoftext|>
<|endoftext|> english: Delete empty directories
bash: find Path -type d -empty -delete <|endoftext|>
<|endoftext|> english: Find all "G*.html" files modified more than 7 days ago in the current directory tree
bash: find Path -mtime +Timespan -name Regex <|endoftext|>
<|endoftext|> english: search for all the perl files in the folder /nas/projects/mgmt/scripts/perl which have been modified 8-10 days ago.
bash: find Path -mtime Timespan -mtime -Timespan -daystart -iname Regex <|endoftext|>
<|endoftext|> english: Find all directories in the current one recursively which have the write bit set for "other"
bash: find Path -type d -perm -Permission <|endoftext|>
<|endoftext|> english: Remove files from the file system that are owned by nobody
bash: find Path -nouser -exec rm {} + <|endoftext|>
<|endoftext|> english: Display all the files/directories under '/home/bozo/projects' directory tree that have been modified within the last day
bash: find Path -mtime -Timespan <|endoftext|>
<|endoftext|> english: rename all the png files to jpg files in the current fodler
bash: find Path -name Regex -print0 | sed Program | xargs -0 -n Quantity -I {} mv {} <|endoftext|>
<|endoftext|> english: Find all executable symlinks or upvoter-* files under maximum 1 level down the {} directory
bash: find {} -name Regex -type f -or -type l -maxdepth Quantity -perm +Permission <|endoftext|>
<|endoftext|> english: Create symlinks to all  /home/folder1/*.txt files and 'folder1_' directory with the same name in a target directory named '+'
bash: find Path -type f -exec ln -s {} Regex File \; <|endoftext|>
<|endoftext|> english: Recursively changes group ownership of everything within a current folder and having group 'X_GNAME' to 'Y_GNAME'.
bash: find Path -group Regex -exec chgrp Regex {} + <|endoftext|>
<|endoftext|> english: Recursively find the latest modified file in the current directory and print the modification time and filename
bash: find Path -type f -printf '%TY-%Tm-%Td %TH:%TM: %Tz %p\n' | sort -n | tail -n Quantity <|endoftext|>
<|endoftext|> english: Find all symbolic links under '/proc/$pid/fd' directory tree with name pattern '$save_path/sess_\*' and update their timestamps
bash: find Path -ignore_readdir_race -lname Regex -exec touch -c {} \; <|endoftext|>
<|endoftext|> english: display all hidden files in the current folder
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: find all regex  ".*/[a-f0-9\-]\{36\}\.jpg" files
bash: find Path -regextype sed -regex Regex <|endoftext|>
<|endoftext|> english: find all the text files in the entire filesystem which belong to the user root and display the ten files.
bash: find Path -user Regex -iname Regex | head <|endoftext|>
<|endoftext|> english: For each line in 'file', print "result = " followed by the line backwards.
bash: awk Program <( rev File ) <|endoftext|>
<|endoftext|> english: Search the current directory tree for files modified less than 5 days ago
bash: find Path -mtime -Timespan <|endoftext|>
<|endoftext|> english: create a hard link as directory named "new_hard_link" to the directory "existing_dir" as root
bash: ln -d File Regex <|endoftext|>
<|endoftext|> english: Find all executable files under the current directory and below
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: Searches through the /usr/local directory for files that end with the extension .html. When these files are found, their permission is changed to mode 644 (rw-r--r--).
bash: find Path -name Regex -type f -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Find files on the system bigger than 50MB but smaller than 100MB
bash: find Path -type f -size +Size -size -Size <|endoftext|>
<|endoftext|> english: Find all files/directories under /myfiles that are 2560 bytes in size
bash: find Path -size Size <|endoftext|>
<|endoftext|> english: Find all *.ogg (case insensitive) files/directories under your home directory that are not greater than 20MB in size
bash: find Path -iname Regex ! -size +Size <|endoftext|>
<|endoftext|> english: display all the files in the file system which belong to the user "wnj" or which are modified after the file "ttt"
bash: find Path \( -newer File -or -user Regex \) -print <|endoftext|>
<|endoftext|> english: Search the /tmp/ directory recursively for files matching regular expression ".*file[0-9]+$"
bash: find Path -regex Regex <|endoftext|>
<|endoftext|> english: Archive "blanktest/" to "test/" deleting any files in the destination not found in the source
bash: rsync -a --delete File File <|endoftext|>
<|endoftext|> english: display all files in the folder /usr and its sub directory(do not search beyond the sub directory)
bash: find Path -maxdepth Quantity -print <|endoftext|>
<|endoftext|> english: Change the ownership of "/home/bob" to "root"
bash: chown Regex File <|endoftext|>
<|endoftext|> english: Find files matching pattern $2 in the $1 directory recursively and search them for text $3, where $1, $2, $3 are the command line arguments to the Bash script
bash: find Path -name Regex | grep -v Regex | xargs -I {} grep -H -n Regex {} File {} <|endoftext|>
<|endoftext|> english: Print the base name of the current working directory
bash: echo $( basename $( pwd ) ) <|endoftext|>
<|endoftext|> english: Find all files/directories that are owned by user 'wnj' and are newer than 'ttt' by modification time in the entire filesystem
bash: find Path -newer File -user Regex -print <|endoftext|>
<|endoftext|> english: Check if 'nullglob' shell option is enabled, and if so, saves its status in 'is_nullglob' variable.
bash: shopt -s | grep -E -i Regex <|endoftext|>
<|endoftext|> english: Print pathname of a file that is connected to the standard output of the command "yes"
bash: echo <( yes ) <|endoftext|>
<|endoftext|> english: Find all regular files under $dir directory tree with name pattern provided by the first positional parameter and show only the $num'th line from each of those files
bash: find Path -type f -name Regex -exec sed Program {} \; <|endoftext|>
<|endoftext|> english: Finds IP address of 'en0' network interface.
bash: ifconfig Regex | grep Regex | grep -v Regex | awk Program <|endoftext|>
<|endoftext|> english: Find movies over a gigabyte in size
bash: find Path -size +Size <|endoftext|>
<|endoftext|> english: Find directories modified in last 7 days
bash: find Path -mtime -Timespan -type d <|endoftext|>
<|endoftext|> english: Create symbolic links in the current directory for all files excluding "CONFIGFILE" located under "/your/project" directory tree
bash: find Path -type f ! -name Regex -exec ln -s File Regex \; <|endoftext|>
<|endoftext|> english: Unhide all hidden files in the current directory
bash: find Path -maxdepth Quantity -type f -name Regex | sed -e Program | sort | xargs -I {} mv File File {} <|endoftext|>
<|endoftext|> english: Print a time stamp for each successful ping to "host"
bash: ping Regex | awk Program <|endoftext|>
<|endoftext|> english: Search the entire file system for .jpg files.
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: List all files in the current directory tree that were last modified in March 2007
bash: find Path ! -newermt Regex -newermt Regex -ls <|endoftext|>
<|endoftext|> english: Archive showing progress all files in "/media/2TB\ Data/data/music/" to "/media/wd/network_sync/music/" excluding files matching "*.VOB", "*.avi", "*.mkv", "*.ts", "*.mpg", "*.iso", "*ar", "*.vob", "*.BUP", "*.cdi", "*.ISO", "*.shn", "*.MPG", "*.AVI", "*.DAT", "*.img", "*.nrg", "*.cdr", "*.bin", "*.MOV", "*.goutputs*", "*.flv", "*.mov", "*.m2ts", "*.cdg", "*.IFO", "*.asf", and "*.ite"
bash: rsync -a -v --progress --exclude Regex --exclude Regex --exclude Regex --exclude Regex --exclude Regex --exclude Regex --exclude Regex --exclude Regex --exclude Regex --exclude Regex --exclude Regex --exclude Regex --exclude Regex --exclude Regex --exclude Regex --exclude Regex --exclude Regex --exclude Regex --exclude Regex --exclude Regex --exclude Regex --exclude Regex --exclude Regex --exclude Regex --exclude Regex --exclude Regex --exclude Regex --exclude Regex File File <|endoftext|>
<|endoftext|> english: Resolve any symlinks in working directory, and go to resulting pathname.
bash: cd $( pwd -P ) <|endoftext|>
<|endoftext|> english: Show files in maximum 1 level down the current directory that were modified less than 1 day ago from today
bash: less $( find Path -maxdepth Quantity -type f -daystart -mtime -Timespan ) <|endoftext|>
<|endoftext|> english: find all the files in the current folder which have execute permission to all the users
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: Extract data from HTML table in "mycode.html"
bash: paste -d Regex >( grep Regex File | sed -e Program ) >( grep Regex File | sed -e Program ) <|endoftext|>
<|endoftext|> english: Search through the /usr directory for all files that begin with the letters Chapter, followed by anything else.
bash: find Path -name Regex -type f <|endoftext|>
<|endoftext|> english: find all the files in the current folder which are smaller than 9MB
bash: find Path -size -Size <|endoftext|>
<|endoftext|> english: Search the current directory, except the subdirectory tree ".svn", for files whose name is "foo.cpp"
bash: find Path -name Regex ! -path Regex <|endoftext|>
<|endoftext|> english: show all .cpp, .c, .h, .hpp files in the folder ~/src
bash: find Path -type f \( -iname Regex -or -iname Regex -or -iname Regex -or -iname Regex \) -exec echo {} \; <|endoftext|>
<|endoftext|> english: Request IP address for each domain name received on the command input
bash: dig Regex -f File | uniq <|endoftext|>
<|endoftext|> english: change the permissions of all the regular/normal files in the current folder
bash: chmod Permission $( find Path -type f -print ) <|endoftext|>
<|endoftext|> english: delete all the regular files in the temp folder which have not been modified in the last 24 hours
bash: find Path -type f -mtime +Timespan -print0 | xargs -0 -n Quantity -I {} rm {} <|endoftext|>
<|endoftext|> english: Find .txt files on the system whose size is greater than 12000 bytes
bash: find Path -name Regex -size +Size <|endoftext|>
<|endoftext|> english: find the path of a specfic video file in the current directory
bash: find Path -name Regex | sed Program <|endoftext|>
<|endoftext|> english: Print the list of files in the current directory tree skipping SVN files
bash: find Path -type d -name Regex -prune -or -print <|endoftext|>
<|endoftext|> english: Saves list of logged in users in system together with 'USER' header in the 'a' variable.
bash: w | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: find all files in the current folder which have only the write permission for the others
bash: find Path -perm -Permission -print <|endoftext|>
<|endoftext|> english: Remove all white space from "infile.txt" and wrap each line to 80 characters
bash: cat File | tr -d Regex | fold File <|endoftext|>
<|endoftext|> english: Locate symbolic links in /usr and below
bash: find Path -type l <|endoftext|>
<|endoftext|> english: Gets string with MAC addess of network interface eth0.
bash: ifconfig Regex | grep Regex <|endoftext|>
<|endoftext|> english: Find out all files owned by user vivek
bash: find Path -user Regex <|endoftext|>
<|endoftext|> english: Search for 'mystring' in all *.txt files under current directory
bash: find Path -name Regex | xargs -I {} grep -E Regex {} <|endoftext|>
<|endoftext|> english: find all directories in the current directory
bash: find Path -type d <|endoftext|>
<|endoftext|> english: List files under current directory according to their size in descending order
bash: find Path -type f -exec ls -s {} \; | sort -n -r <|endoftext|>
<|endoftext|> english: Archive "myfile" to "/foo/bar/" and create directory "/foo/bar/" if "/foo/" exists
bash: rsync -a File File <|endoftext|>
<|endoftext|> english: Prints Kb size of all top-level files and folders in a current folder in descending order in human readable format.
bash: du -k -s -h File | sort -n -r <|endoftext|>
<|endoftext|> english: Search the file system for regular files whose names are shorter than 25 characters
bash: find Path -type f | grep -E Regex <|endoftext|>
<|endoftext|> english: Find every file/directory under the directory /home owned by the user joe
bash: find Path -user Regex <|endoftext|>
<|endoftext|> english: Search all regular files in the current directory tree for "string"
bash: find Path -type f -exec grep Regex {} \; <|endoftext|>
<|endoftext|> english: Save number of lines in '/some/big/file' to 'LINES' variable
bash: cat File | wc -l <|endoftext|>
<|endoftext|> english: Print the list of files in the current directory tree ignoring .svn, .git, and other hidden directories
bash: find Path -type f -not -path Regex <|endoftext|>
<|endoftext|> english: find all the files ending with jpg in current folder and display their count ( case insensitive )
bash: find Path -type f -regex Regex | wc -l <|endoftext|>
<|endoftext|> english: Create tar archive "foo.tar" and copy all files from directory tree /tmp/a1 to it
bash: find Path | xargs -I {} tar -c -v -f File {} <|endoftext|>
<|endoftext|> english: Add "new." to the beginning of the name of "original.filename", renaming it to "new.original.filename".
bash: rename Regex Regex <|endoftext|>
<|endoftext|> english: Search for file "file" between level 2 and 3 of the directory tree
bash: find Path -mindepth Quantity -maxdepth Quantity -name Regex <|endoftext|>
<|endoftext|> english: Look for any files that were modified 2-5 days ago
bash: find Path -mtime +Timespan -mtime -Timespan <|endoftext|>
<|endoftext|> english: Left justify number each non-blank line in "log.txt" as input to "sed ..."
bash: nl -n ln File | sed Program <|endoftext|>
<|endoftext|> english: Find files/directories that are bigger than 10000 KB in size uder '/usr/local' directory tree
bash: find Path -size +Size <|endoftext|>
<|endoftext|> english: Connect to host 'hostname' as user 'username' by forcing host key confirmation
bash: ssh -o UserKnownHostsFile=/dev/null Regex <|endoftext|>
<|endoftext|> english: Filnd all files in root directory with 777 permission and change permision 644  with chmod commad .
bash: find Path -type f -perm Permission -print -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Change the group of "myfile" to "friends"
bash: chown Regex File <|endoftext|>
<|endoftext|> english: replace the word foo to bar in the current folder in all the regular/normal files which have execute permission  (does not update the file)
bash: find Path -type f Path -exec sed -i Program {} + <|endoftext|>
<|endoftext|> english: Find users whose names begin with "ab" and ends with "1"
bash: who | cut -d Regex -f Number | grep -e Regex -e Regex <|endoftext|>
<|endoftext|> english: Recursively search for everything under the current directory, displaying human-readable file type description for each entry.
bash: find Path -exec file {} \; <|endoftext|>
<|endoftext|> english: Find files not matching the posix extended regex '.+\-[0-9]{2,4}x[0-9]{2,4}\.jpg' in their paths under Folder1 and copy them to Folder2
bash: find Path -type f -regextype posix-extended \( ! -regex Regex \) -print0 | xargs -0 -I {} cp -p --target-directory Directory {} <|endoftext|>
<|endoftext|> english: Removes '/var/lib/mongodb/mongod.lock' in 'sudo' mode.
bash: rm File <|endoftext|>
<|endoftext|> english: Connect to host "$USER_AT_HOST" in master mode in the background without executing any commands and set the ControlPath to "$SSHSOCKET"
bash: ssh -M -f -N -o ControlPath="$SSHSOCKET" Regex <|endoftext|>
<|endoftext|> english: Copies file 'index.html' to each top-level directory in the current directory beginning with 'd'.
bash: find Path -mindepth Quantity -maxdepth Quantity -type d | grep Regex | xargs -n Quantity -I {} cp -i File {} <|endoftext|>
<|endoftext|> english: Recursively change owner of all files in "folder" to "user_name"
bash: chown -R Regex File <|endoftext|>
<|endoftext|> english: Locate all *.mov files in the current directory tree
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Count the number of lines in each .java file in the current directory tree
bash: find Path -name Regex -exec wc -l {} \; <|endoftext|>
<|endoftext|> english: Print the file content of command "f"
bash: cat $( which Regex ) <|endoftext|>
<|endoftext|> english: Find all files/directories under /home/baumerf/public_html/ that were modified less than 60 minutes ago excluding error_log files/directories
bash: find Path -mmin -Quantity -not -name Regex <|endoftext|>
<|endoftext|> english: Save a list of all the files/directories under current directory tree to a file named 'foo'
bash: find Path -fprint File <|endoftext|>
<|endoftext|> english: Print a list of all the files in entire file system whose inode has been modified no later than one minute ago
bash: find Path -newerct Regex -print <|endoftext|>
<|endoftext|> english: Find all files in $dir directory without going into sub-directories and print only their names preceded by 3 spaces
bash: find Path -maxdepth Quantity -type f | sed Program <|endoftext|>
<|endoftext|> english: display all the files in the kat folder
bash: find Path -printf "%f\n" <|endoftext|>
<|endoftext|> english: List file information of the full path of command "c++"
bash: ls -a -l -d $( which Regex ) <|endoftext|>
<|endoftext|> english: Replace all occurrence of "subdomainA.example.com" with "subdomainB.example.com" in all files under /home/www and below
bash: find Path -type f -print0 | xargs -0 -I {} sed -i Program {} <|endoftext|>
<|endoftext|> english: Find all regular files in .git and replace every occurrences of 'subdomainB.example.com'  with 'subdomainA.example.com' in those files
bash: find Path -type f -print0 | xargs -0 -I {} sed -i Program {} <|endoftext|>
<|endoftext|> english: Print the full path of command "cc"
bash: which Regex <|endoftext|>
<|endoftext|> english: Search for 'pattern' in file 'file' and print the matched lines by separating them with spaces instead of newlines
bash: grep Regex File | tr Regex Regex <|endoftext|>
<|endoftext|> english: use find command to search for .png and .jpg files
bash: find Path -type f \( -iname Regex -or -iname Regex \) <|endoftext|>
<|endoftext|> english: Perform case insensitive search for *.gif files/directories under downloads directory
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: Find all regular files named 'Chapter1' under current directory tree
bash: find Path -name Regex -type f -print <|endoftext|>
<|endoftext|> english: Print all business days in the current month without column titles
bash: cal -h | cut -c Number | tail -n +Quantity <|endoftext|>
<|endoftext|> english: Search the .c files residing in the Lib/ directory tree for lines beginning with "PyErr"
bash: find Path -name Regex -print0 | xargs -0 -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: Copy all files named 'script.sh' in directory 'olddir' to directory 'newdir'
bash: find Path -name Regex -printf "%p\0" -printf "newdir/%P\0" | xargs -0 -L Quantity -I {} cp -n {} <|endoftext|>
<|endoftext|> english: same as above example with -exec , in this example with -OK it should ask for confirmation before executing the rm command . that is called user intractive command
bash: find Path -name Regex -ok rm {} \; <|endoftext|>
<|endoftext|> english: Search for command "tail" in the maps of the process with PID 2671
bash: cat File | grep $( which Regex ) <|endoftext|>
<|endoftext|> english: find all files without 777 permision
bash: find Path -type f ! -perm Permission <|endoftext|>
<|endoftext|> english: Mount partition with label "WHITE" on "/mnt/WHITE" with read and write permission and have it accessible by user and group "test"
bash: mount Regex Regex Directory -o rw,uid=test,gid=test <|endoftext|>
<|endoftext|> english: List the files/directories under /PATH_to_SEARCH, do a numeric sort and print the ones with different inode numbers
bash: find Path -ls | sort -n | awk Program <|endoftext|>
<|endoftext|> english: Search for 'string-to-find' in all HTML files under current directory tree and show the matched lines with their filenames
bash: find Path -name Regex -exec grep -H Regex {} \; <|endoftext|>
<|endoftext|> english: Print all distinct characters in input "He likes cats, really?"
bash: echo Regex | fold -w Quantity | sort -u <|endoftext|>
<|endoftext|> english: find all the swap files (files ending with ~) in the current folder and delete them
bash: find Path -name Regex -delete <|endoftext|>
<|endoftext|> english: Find directories in the current directory recursively that are not "executable" by all
bash: find Path -type d ! -perm -Permission <|endoftext|>
<|endoftext|> english: Print a count of files and directories in the current directory tree
bash: tree | tail - Quantity <|endoftext|>
<|endoftext|> english: Query SRV records for domain '_kerberos._udp.foo.com'
bash: dig -t SRV Regex <|endoftext|>
<|endoftext|> english: Make directory and parents as needed for the directory name of file "$f"
bash: mkdir -p -- $( dirname -- Regex ) <|endoftext|>
<|endoftext|> english: Lists all directories in '/home/alice/Documents/'.
bash: ls -d File <|endoftext|>
<|endoftext|> english: Compares two listings 'ls' and 'ls *Music*', showing only strings that unique for first listing.
bash: comm -2 -3 <( ls ) <( ls File ) <|endoftext|>
<|endoftext|> english: Find all files/directories ignoring *~ files/directories without descending into .snapshot directory with null character as the delimiter
bash: find Path -name Regex -prune -or \( ! -name Regex -print0 \) <|endoftext|>
<|endoftext|> english: find the file "filename.txt" in the entire file system
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: Add the .abc suffix to the names of all *.txt regular files in the current directory tree
bash: find Path -type f -iname Regex -print0 | xargs -0 -I {} mv {} File {} <|endoftext|>
<|endoftext|> english: Reverse the text in $input by taking each 4 characters as each units and save the result in variable 'output'
bash: echo Regex | fold -w Quantity | tac | tr -d Regex <|endoftext|>
<|endoftext|> english: Remove all vmware-*.log files/directories under current directory
bash: find Path -name Regex | xargs -i -I {} rm -r -f {} {} <|endoftext|>
<|endoftext|> english: List absolute path of files in the current directory
bash: ls -1 | xargs -I {} readlink -f {} <|endoftext|>
<|endoftext|> english: Find all *.ogg (case insensitive) files/directories under your home directory that are greater than 20MB in size
bash: find Path -iname Regex -size +Size <|endoftext|>
<|endoftext|> english: search for all mp3 files in the folder /home/you which have been accessed exactly 10*24 hours ago
bash: find Path -iname Regex -atime Timespan -type -f <|endoftext|>
<|endoftext|> english: Make directories "/tmp/A", "/tmp/B", "/tmp/C", and "/tmp/ dir with spaces"
bash: mkdir Directory Directory Directory Directory <|endoftext|>
<|endoftext|> english: Change owner to "$1" and group to "httpd" of ".htaccess"
bash: chown Regex File <|endoftext|>
<|endoftext|> english: Set permissions to 755 for every subdirectory of the current directory
bash: find Path -type d -mindepth Quantity -print -exec chmod Permission File \; <|endoftext|>
<|endoftext|> english: Remove symbolic links and get absolute path of "${the_stuff_you_test}" and save to variable "DIR_PATH"
bash: readlink -f File <|endoftext|>
<|endoftext|> english: Delete all .svn files/directories under current directory
bash: find Path -name Regex -exec rm -r -f {} \; <|endoftext|>
<|endoftext|> english: find list of all files with file permission , link , owner , group , reation time , size , file name
bash: find Path -exec ls -l -d {} \; <|endoftext|>
<|endoftext|> english: list *.pdf files under the /home/user/Desktop directory.
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: search for the word "foo" in all the regular/normal files in the directory "/path/to/dir"
bash: find Path -type f | xargs -I {} grep -l Regex {} <|endoftext|>
<|endoftext|> english: Execute /usr/bin/find with $* arguments
bash: find Path <|endoftext|>
<|endoftext|> english: find all the mp3 files in the file system
bash: find Path -iname Regex -print <|endoftext|>
<|endoftext|> english: Print the names of the subdirectories of /usr/local/svn/repos/ prepending "/usr/local/backup" to them
bash: find Path -maxdepth Quantity -mindepth Quantity -type d -exec echo Regex \; <|endoftext|>
<|endoftext|> english: Print "$line" in hexadecimal 2-byte units
bash: echo -n Regex | od -x <|endoftext|>
<|endoftext|> english: display all the regular/normal files in current folder
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: search for all the foo.txt files in the current folder and move them to another location
bash: find Path -name Regex -print0 | xargs -0 -I {} mv {} File <|endoftext|>
<|endoftext|> english: Append "& Bytes" to the end of every line in "$TEMPFILE" and format the result as a table
bash: sed Program File | column -t <|endoftext|>
<|endoftext|> english: create and list filenames in the archive
bash: tar -c -f File File | tar File File | awk Program | grep -v Regex <|endoftext|>
<|endoftext|> english: find all the files in the current directory which have been modified in the last 24 hours
bash: find Path -mtime Timespan <|endoftext|>
<|endoftext|> english: List all *.txt files/directories under current directory ensuring white space safety
bash: find Path -name Regex -print0 | xargs -0 -n Quantity -I {} echo {} <|endoftext|>
<|endoftext|> english: Find all files in the current directory tree, except GIT files
bash: find Path -type f -name Regex -prune -or -print <|endoftext|>
<|endoftext|> english: Unzip "file.gz" to standard output and execute in bash with arguments "-n wordpress"
bash: gzip -d --stdout Regex | bash -s -- File <|endoftext|>
<|endoftext|> english: Print the last white space separated field of every line in "file.txt" as a ", " separated list
bash: awk Program Program | paste -s -d Regex | sed Program <|endoftext|>
<|endoftext|> english: Sets shell option 'nullglob'.
bash: shopt -s nullglob <|endoftext|>
<|endoftext|> english: Find all files in /var/www/html/zip/data/*/*/*/*/* that are older than 90 days
bash: find Path -type f -mtime +Timespan <|endoftext|>
<|endoftext|> english: Find all files/directories containing the case insensitive string something' in their names under current directory tree
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: Give all files in the /path/to/base/dir tree read privileges
bash: find Path -type f -exec chmod Permission {} + <|endoftext|>
<|endoftext|> english: find all files  that names are 'apt'
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Unzip all ".gz" files in the current directory tree to their respective directories
bash: find Path -name Regex -execdir gunzip {} \; <|endoftext|>
<|endoftext|> english: list symbolic links under the directory "$directory" using contents of the $IFS variable between output of each one
bash: find Path -type l -printf "%p$IFS" <|endoftext|>
<|endoftext|> english: Check if $path_in_question is mount point of filesystem
bash: df File | grep Regex <|endoftext|>
<|endoftext|> english: Find all files in the file system with the SUID bit
bash: find Path -perm -Permission -print <|endoftext|>
<|endoftext|> english: display all directories in the folder "PROD" and do not search in the sub directories
bash: find Path -maxdepth Quantity -type d <|endoftext|>
<|endoftext|> english: find all files in the current folder which have been modified after /etc/passwd
bash: find Path -newer File <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory tree that start with 'R' and end with 'VER' in their names and were modified more than 1 day ago
bash: find Path -name Regex -mtime +Timespan <|endoftext|>
<|endoftext|> english: find all files in current folder having the name pattern "some_pattern" and move them to the folder target_location (GNU VERSION)
bash: find Path -name Regex -print0 | xargs -0 -i -I {} mv {} File {} <|endoftext|>
<|endoftext|> english: Search the current directory recursively for regular files last accessed 2 days ago
bash: find Path Path -f -atime Timespan <|endoftext|>
<|endoftext|> english: Find files/directories named blah (case insensitive) under current directory
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: Search non-recursively directory tree `MyApp.app' for directories whose name is 'Headers' and delete them in an optimized way
bash: find Path -name Regex -type d -prune -exec rm -r -f {} + <|endoftext|>
<|endoftext|> english: Extract any line in sorted file "A" that does not appear in "B", "C", or "D"
bash: cat File File File | sort | comm -2 -3 File File <|endoftext|>
<|endoftext|> english: Search for 'foo' in all the java files under 'dir1', 'dir2' and 'dir3' directory tree and print only the names of the matched files
bash: find Path Path Path -type f -name Regex -exec grep -i -l Regex {} \; <|endoftext|>
<|endoftext|> english: Print the last 10 lines of "great-big-file.log"
bash: tail File <|endoftext|>
<|endoftext|> english: Find all files in the /home/myuser directory recursively that are older than 7 days
bash: find Path -mtime +Timespan -print <|endoftext|>
<|endoftext|> english: List all functions defined in the shell
bash: set | grep Regex | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: Find all directories in entire file system which are larger than 50KB
bash: find Path -type d -size +Size <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory with null character as the delimiter
bash: find Path -print0 <|endoftext|>
<|endoftext|> english: Delete all files in the current directory tree whose names end with ~
bash: find Path -name Regex -delete <|endoftext|>
<|endoftext|> english: Print the base name of the current working directory
bash: pwd | xargs -I {} basename {} <|endoftext|>
<|endoftext|> english: Display the mimetype of "filename"
bash: file -i File <|endoftext|>
<|endoftext|> english: Search "whatyousearchfor" in history and print 3 lines before and 4 lines after
bash: history | grep -A Quantity -B Quantity Regex <|endoftext|>
<|endoftext|> english: Recursively list all files and directories in "coreutils-8.9" with "DIR: " prepending directory names
bash: tree -F Directory | sed -r Program <|endoftext|>
<|endoftext|> english: Find all files/directories named '.todo' under $STORAGEFOLDER directory tree and print the parent directory names
bash: find Path -name Regex -exec dirname {} \; <|endoftext|>
<|endoftext|> english: Search for $GROUP at the beginning of each line in /etc/group and print the last colon (':') separated entry with comma replaced with newlines
bash: grep Regex File | grep -o Regex | tr Regex Regex <|endoftext|>
<|endoftext|> english: Show directory sizes in KB and sort to give the largest at the end
bash: du -s -k $( find Path -type d ) | sort -n -k Number <|endoftext|>
<|endoftext|> english: display all empty files(files with sisze 0 bytes) in home folder
bash: find Path -empty <|endoftext|>
<|endoftext|> english: Find all /home/folder1/*.txt files and create symlinks appending '_CUSTOM_TEXT.txt' in their names
bash: find Path -type f | awk -F Regex Program | sh <|endoftext|>
<|endoftext|> english: Use 'less' to nicely display control characters from the outupt of 'grep'.
bash: grep -b -o Regex File | less <|endoftext|>
<|endoftext|> english: Calculate the md5 sum of all files in the current directory with the filename printed first
bash: find Path -maxdepth Quantity -type f -exec md5sum {} \; | awk Program <|endoftext|>
<|endoftext|> english: Search for 'stuff' in all *,txt files under current directory
bash: find Path -name Regex -print0 | xargs -0 -I {} grep -E Regex {} <|endoftext|>
<|endoftext|> english: Print only strings from file 'file2' that not found in 'file1'
bash: comm -1 -3 File File <|endoftext|>
<|endoftext|> english: find all the directories in the home folder do not search in sub directories
bash: find Path -maxdepth Quantity -type d <|endoftext|>
<|endoftext|> english: find all empty files in the current directory ( empty file = size 0 bytes )
bash: find Path -size Size <|endoftext|>
<|endoftext|> english: Uncomment every entry in current user's cron job list which contains "test.sh"
bash: crontab -l | sed Program | crontab File <|endoftext|>
<|endoftext|> english: display list of all the regular/normal files in the home folder which are exactly 6579 bytes
bash: find Path -type f -size Size -exec ls {} \; <|endoftext|>
<|endoftext|> english: Remove all libEGL* files from the current directory tree
bash: find Path -name Regex | xargs -I {} rm -f {} <|endoftext|>
<|endoftext|> english: Print the names of the directories from the paths expanded by the glob pattern /path/to/directory/*
bash: find Path -maxdepth Quantity -type d -exec basename {} \; <|endoftext|>
<|endoftext|> english: create directory es if it is not exist and create direcoty LC_MESSAGES
bash: mkdir -p Directory <|endoftext|>
<|endoftext|> english: Search .c and .h files in the current directory tree for "expr"
bash: find Path -name Regex | xargs -I {} grep -E Regex {} <|endoftext|>
<|endoftext|> english: extract archive stored in $1
bash: tar -z -x -v -f File <|endoftext|>
<|endoftext|> english: Find the files in the current directory that match pattern '*.JUKEBOX.*.txt' and move them to folder ./JUKEBOX
bash: find Path -name Regex -maxdepth Quantity -print0 | xargs -0 -I {} mv {} File <|endoftext|>
<|endoftext|> english: Recursively copy directory "/path/to/data/myappdata" to "user@host:/remote/path/to/data/newdirname"
bash: rsync -r -v -v --recursive File File <|endoftext|>
<|endoftext|> english: Make directory "dir" and do not cause an error if it exists
bash: mkdir -p Directory <|endoftext|>
<|endoftext|> english: Print "#include" statements found in "file2" that are not in "file1"
bash: comm -1 -3 <( grep Regex File | sort ) <( grep Regex File | sort ) <|endoftext|>
<|endoftext|> english: list all the sqlite files in the current folder
bash: find Path -name Regex -ls <|endoftext|>
<|endoftext|> english: Find all files under /mnt/naspath directory without descending into .snapshot directory that were modified in last 24 hours with null character as the delimiter
bash: find Path -name Regex -prune -or \( -type f -mtime Timespan -print0 \) <|endoftext|>
<|endoftext|> english: create a tar ball of all pdf files in current folder
bash: find Path -name Regex | xargs -I {} tar -c -z -v -f File {} <|endoftext|>
<|endoftext|> english: Delete all files named 'sample' (case insensitive) under '/home/user/Series' directory tree with superuser privilege
bash: find Path -iname Regex -exec rm {} \; <|endoftext|>
<|endoftext|> english: Creates temporary file in a current folder and saves path to it in 'f' variable.
bash: mktemp -p Directory <|endoftext|>
<|endoftext|> english: Find all files named 'Makefile' in the /usr/ports directory tree and count the number of lines in them beginning with USE_RC_SUBR
bash: find Path -name Regex -exec grep Regex {} + | wc -l <|endoftext|>
<|endoftext|> english: find all the png files in current folder which are present in the pattern list file "search.txt"
bash: find Path -name Regex | grep -f <( sed Program File ) <|endoftext|>
<|endoftext|> english: Search all .c and .h files in the current directory tree for string "e"
bash: find Path -name Regex -exec grep --color -aHn Regex {} \; <|endoftext|>
<|endoftext|> english: List all functions or variables containing " ()" defined in the shell
bash: set | grep Regex <|endoftext|>
<|endoftext|> english: Search for files only that end with .php and look for the string $test inside those files
bash: find Path -name Regex -type f -print0 | xargs -0 -I {} grep -H -n Regex {} <|endoftext|>
<|endoftext|> english: find all log files larger then 100MB  in /home directory and delete them .
bash: find Path -type f -name Regex -size +Size -exec rm -f {} \; <|endoftext|>
<|endoftext|> english: Filters only directories from long file listing of a current directory, and prints their names.
bash: ls -l | grep Regex | awk -F Regex Program <|endoftext|>
<|endoftext|> english: Calculate the md5 sum of "a"
bash: echo Regex | md5sum <|endoftext|>
<|endoftext|> english: Find all *.htm files under current directory and print the changed names by appending 3 levels of parent directory names at the beginning and modifying the actual name to dd-nnn format
bash: find Path -type f -name Regex | awk -F Regex Program <|endoftext|>
<|endoftext|> english: Find all 664 permission files/drectories under current directory tree
bash: find Path -perm -Permission <|endoftext|>
<|endoftext|> english: Numerically sort file "file.dat" by the second word of each line and output from greatest value to least value
bash: sort -n -r -k File File <|endoftext|>
<|endoftext|> english: Search for 'magic' in all regular files under current directory tree
bash: find Path -type f | xargs -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: Find all empty directories recursively starting from the current one and delete them
bash: find Path -type d -empty -delete <|endoftext|>
<|endoftext|> english: Read a line from standard input and save received words sequentially in variables XPID XUSERID XPRIORITY XVIRTUAL XRESIDENT XSHARED XSTATE XCPU XMEM XTIME XCOMMAND
bash: read Regex Regex Regex Regex Regex Regex Regex Regex Regex Regex Regex <|endoftext|>
<|endoftext|> english: Clear the terminal's search history
bash: history -c <|endoftext|>
<|endoftext|> english: Split "database.sql" into files of at most 100000 lines each with prefix "database-"
bash: split -l Quantity File Regex <|endoftext|>
<|endoftext|> english: List directories in the current working directory and remove the trailing "/"
bash: ls -1 -p | grep Regex | sed Program <|endoftext|>
<|endoftext|> english: Remove all "core" files that were last changed more than 4 days ago from the current directory tree
bash: find Path -name Regex -ctime +Timespan -exec rm -f {} \; <|endoftext|>
<|endoftext|> english: Create a table from '111 22 3\n4 555 66\n' with columns separated by a single space
bash: echo -e -n Regex | column -t | sed Program <|endoftext|>
<|endoftext|> english: Find all files under /home/feeds/data without descending into *def/incoming* and *456/incoming* paths
bash: find Path -type f -not -path Regex -not -path Regex <|endoftext|>
<|endoftext|> english: find all the files in the entire filesystem which belong to the group root and display the ten files.
bash: find Path -group Regex | head <|endoftext|>
<|endoftext|> english: Find *.html files in the current directory tree that were modified less than 7 days ago
bash: find Path -mtime -Timespan -name Regex -print <|endoftext|>
<|endoftext|> english: Find *.html files in the /usr/src/linux directory tree
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find x* files/directories under /tmp directory whose status was changed less than 1 day ago and move them to ~/play
bash: find Path -ctime -Timespan -name Regex -print0 | xargs -r -0 -I {} mv -t Directory {} <|endoftext|>
<|endoftext|> english: perform a case insensitive search
bash: find Path -type d -iname Regex -ls <|endoftext|>
<|endoftext|> english: find files in /dir/path/look/up directory that names are dir-name-here
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: Find all *.log files under current directory that contain the string "Exception"
bash: find Path -name Regex -mtime -Timespan -exec grep -H -c Regex {} \; | grep -v Regex <|endoftext|>
<|endoftext|> english: list in long format all files from / whose filename ends in "jbd", not descending into directories that are not readable while searching.
bash: find Path ! Path -prune -or -name Regex -ls <|endoftext|>
<|endoftext|> english: Count the number of users logged in
bash: who | wc -l <|endoftext|>
<|endoftext|> english: find all the normal/regular files in the current folder which are present in the pattern file "file_list.txt"
bash: find Path Path Path -print | grep -F -f File <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory with 'FooBar' in their paths and copy them to ~/foo/bar
bash: find Path | grep Regex | xargs -I {} cp {} File <|endoftext|>
<|endoftext|> english: find all the files that have been modified in the last 1 day ago
bash: find Path -mtime -Timespan <|endoftext|>
<|endoftext|> english: Print multiline text "ONBOOT=\"YES\"\nIPADDR=10.42.84.168\nPREFIX=24" to the terminal, replacing '\n' with newline symbol, and append that text to file /etc/sysconfig/network-scripts/ifcfg-eth4 as root user.
bash: echo -e Regex | tee -a File <|endoftext|>
<|endoftext|> english: Find all files named "file.ext" within the current folder and print the path where each one is located
bash: find Path $( pwd ) -name Regex -exec dirname {} \; <|endoftext|>
<|endoftext|> english: Print "echo ping -c 2" on each string in file 'ips'
bash: cat File | xargs -n Quantity -I {} echo Regex Regex Regex {} <|endoftext|>
<|endoftext|> english: Search for the string "ERROR" in all XML files in the current working directory tree
bash: find Path -name Regex -exec grep Regex File {} + <|endoftext|>
<|endoftext|> english: Print 1 byte from "/dev/urandom" as a signed decimal value and no address radix
bash: od -A n -t d -N File File <|endoftext|>
<|endoftext|> english: find all the files that have been modified in the last 4 days ( daystart is used to check files according to date i.e, all files modified from currentDay-4 00:00:00 to current day) and copy them to folder.
bash: find Path -mtime Timespan -daystart -exec cp -a {} File File \; <|endoftext|>
<|endoftext|> english: Print the date followed by the host name
bash: echo $( date ) $( hostname ) <|endoftext|>
<|endoftext|> english: Use awk command 'FNR==NR { array[$1,$2]=$8; next } ($1,$2) in array { print $0 ";" array[$1,$2] }' on compressed files "input1.vcf.gz" and "input2.vcf.gz"
bash: gzip -d -c Regex Regex | awk Program <|endoftext|>
<|endoftext|> english: Read a line from standard input with prompt "Is this a good question (y/n)? " and save the response to variable "answer"
bash: read -p Regex Regex <|endoftext|>
<|endoftext|> english: Print only printable characters from "/dev/urandom"
bash: cat File | tr -d -C Regex <|endoftext|>
<|endoftext|> english: print all files in the directories except the ./src/emacs directory
bash: find Path -wholename Regex -prune -or -print <|endoftext|>
<|endoftext|> english: change html files to mode 644
bash: find Path -name Regex -type f -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Replace any sequence of spaces in file 'text.txt' with single space and print 4th space separated field
bash: cat File | tr -s Regex | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: Print "echo ping -c 2" on each string in file 'ips'
bash: cat File | xargs -I {} echo Regex Regex Regex {} <|endoftext|>
<|endoftext|> english: Print NS record for domain 'domain.' from 8.8.8.8 nameserver
bash: dig Regex Regex ns <|endoftext|>
<|endoftext|> english: Print as many dots as there are files named "file.ext" in the /home/kibab directory tree
bash: find Path -name Regex -exec echo Regex \; <|endoftext|>
<|endoftext|> english: Display a long listing of the oldest file under '/hom/backups' directory tree
bash: find Path -printf "%T@ %p\n" | sort -n | head - Quantity | cut -d Regex -f Number | xargs -I {} ls -a -l {} <|endoftext|>
<|endoftext|> english: Calculate the md5 sum of all ".py" files in "/your/dir" including content and filenames
bash: grep -a -r -e Regex --include Regex Regex | md5sum | cut -c -Number <|endoftext|>
<|endoftext|> english: this find command Substitute space with underscore in the file name replaces space in all the *.mp3 files with _
bash: find Path -type f -iname Regex -exec rename Regex {} \; <|endoftext|>
<|endoftext|> english: Count all directories in maximum 1 level down the current directory
bash: find Path -maxdepth Quantity -type d -exec ls -d -l -r -t {} \; | wc --lines <|endoftext|>
<|endoftext|> english: Enable history in a script
bash: set -o history <|endoftext|>
<|endoftext|> english: find all the files in the entire file system that were modified in the last 10 minutes
bash: find Path -mmin -Quantity <|endoftext|>
<|endoftext|> english: Find *.java files in the current directory with GNU find and replace foo with bar in those files
bash: find Path -name Regex -exec sed -i Program \; <|endoftext|>
<|endoftext|> english: Print appended data in "/var/log/some.log" that match "foo" and "bar"
bash: tail -f Regex | grep --line-buffered Regex | grep Regex <|endoftext|>
<|endoftext|> english: Print the first line of "filename" as a hex dump of characters
bash: head -n Quantity File | od -c <|endoftext|>
<|endoftext|> english: Extract path and query part from URL
bash: echo Regex | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: Locate all files named 'restore.php' in the current directory and 3 levels below
bash: find Path -maxdepth Quantity -name Regex <|endoftext|>
<|endoftext|> english: Search all non-hidden files in the current directory and all non-hidden sub-directories for the file hi.dat.
bash: find Path Path <|endoftext|>
<|endoftext|> english: Find all files in the home directory with open permissions
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: print all files in the file system excluding those ending with ".c"
bash: find Path ! -name Regex -print <|endoftext|>
<|endoftext|> english: Format time string @$TIMESTAMP according to default time format
bash: date -d Regex <|endoftext|>
<|endoftext|> english: Make 999 folders one inside another where first 998 of them is named as "folderX" where X goes from 1 to 998 and the last folder named as "folder9991000"
bash: mkdir -p $( seq -s Regex Number ) <|endoftext|>
<|endoftext|> english: Remove the file with inode number 752010
bash: find Path -inum Quantity -exec rm {} \; <|endoftext|>
<|endoftext|> english: find files under the current directory ending in "txt" and list them, or ending in  "html" but do nothing.
bash: find Path -name Regex -print -or -name Regex <|endoftext|>
<|endoftext|> english: Remove all tmp/*.mp3 files
bash: find Path -maxdepth Quantity -name Regex -maxdepth Quantity | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: Login to "$HOST" and create file "$FILE_PATH" if it does not exist
bash: ssh -q Regex command <|endoftext|>
<|endoftext|> english: Find all files/directories named 'file' without descending into directories with the same name under current directory tree
bash: find Path -name Regex -prune <|endoftext|>
<|endoftext|> english: Gets MAC address of en0 network interface.
bash: ifconfig Regex | grep -E -o Regex <|endoftext|>
<|endoftext|> english: Find all regular files with '.what_to_find' extension in the entire filesystem and move them to directory '/new_directory'
bash: find Path -iname Regex -type f -exec mv {} File \; <|endoftext|>
<|endoftext|> english: List the current directory recursively ignoring the "dir1" subdirectory
bash: find Path -path Regex -or -print <|endoftext|>
<|endoftext|> english: Change mode of all files ending with ".php" under the current folder to 755 and write the output to the console and "logfile.txt" file
bash: find Path -name Regex -exec chmod Permission {} \; | tee File <|endoftext|>
<|endoftext|> english: Find only permission field & file name from long listing with find command .
bash: find Path -type f -iname Regex -exec ls -l -r -t {} \; | awk -F Regex Program <|endoftext|>
<|endoftext|> english: Generates name for temporary file with 6-letter suffix, and saves path to that new file in 'fn' variable.
bash: mktemp -u -t Regex <|endoftext|>
<|endoftext|> english: Search for the extened regex 'expr' in all files with '.c' and '.h' extension under current directory tree
bash: find Path -name Regex | xargs -I {} grep -E Regex {} <|endoftext|>
<|endoftext|> english: Find all *gz files under asia and emea directory
bash: find Path Path -type f -name Regex <|endoftext|>
<|endoftext|> english: Move "file.txt" to docker container "$CONTAINER_ID" in path "/var/lib/docker/devicemapper/mnt/$CONTAINER_ID/rootfs/root/file.txt"
bash: mv -f File File <|endoftext|>
<|endoftext|> english: Numerically sort standard input by the second word of each line and output from greatest value to least value
bash: sort -n -r -k File <|endoftext|>
<|endoftext|> english: Remount "/" without writing in "/etc/mtab"
bash: mount -n -o remount Regex <|endoftext|>
<|endoftext|> english: Archive "/home/path" to "path" on host "server" showing progress and statistics and remove files in the destination not found in the source
bash: rsync -a --stats --progress --delete File File <|endoftext|>
<|endoftext|> english: Read standard input until a null character is found and save the result in variable "line"
bash: read -r -d Regex <|endoftext|>
<|endoftext|> english: Sort and compare files "$def.out" and "$def-new.out"
bash: diff <( sort File ) <( sort File ) <|endoftext|>
<|endoftext|> english: print apparent size rather than disk usage
bash: du -B Size --apparent-size File <|endoftext|>
<|endoftext|> english: Find files and directories with the name RAID but don't traverse a particular directory
bash: find Path -name Regex -prune -or -print <|endoftext|>
<|endoftext|> english: find all the symbolic links in the current folder and check the file type and display the output of those files which are broken
bash: find Path -type l -exec file {} \; | grep Regex <|endoftext|>
<|endoftext|> english: Find all files whose names begin with 'Makefile' in the /usr/ports directory tree and count how many of them contain 'QTDIR'
bash: find Path -name Regex -exec grep -l Regex {} + | wc -l <|endoftext|>
<|endoftext|> english: find all the reguar/normal php files in current directory.
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: Save standard input to variable "myVar"
bash: tee <|endoftext|>
<|endoftext|> english: Display all lines in 'file' containing 'something', pausing for user input after each page.
bash: grep Regex File | more <|endoftext|>
<|endoftext|> english: List content of 'myfile' in a subshell and returns output to parent shell
bash: $( cat File ) <|endoftext|>
<|endoftext|> english: display all the normal/regular files in the current folder and do not go beyond 3 levels
bash: find Path -maxdepth Quantity -type f <|endoftext|>
<|endoftext|> english: Compress all files with '.txt' extension under current directory
bash: echo Regex | xargs -I {} gzip -9 {} <|endoftext|>
<|endoftext|> english: Print the physical current working directory
bash: echo $( pwd -P ) <|endoftext|>
<|endoftext|> english: Copies defined file to the target folder without overwriting existing files.
bash: cp -n <|endoftext|>
<|endoftext|> english: Find all files under foldername directory and set their permission to 644
bash: find Path -type f -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Move all files including hidden files in "/path/subfolder/" to "/path/"
bash: mv File File <|endoftext|>
<|endoftext|> english: Delete all .pyc files in the current directory tree
bash: find Path -name Regex | xargs -0 -I {} rm -r -f {} <|endoftext|>
<|endoftext|> english: Search the files from the current directory tree for "chrome"
bash: find Path | xargs -I {} grep Regex -l -s {} <|endoftext|>
<|endoftext|> english: Find all files named `file1' on the system
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: list all processes with its PIDs
bash: jobs -l <|endoftext|>
<|endoftext|> english: Search everywhere for files changed within the last minute
bash: find Path -newerct Regex -print <|endoftext|>
<|endoftext|> english: Copy file linked to by "bar.pdf" to "bar.pdf"
bash: cp --remove-destination $( readlink File ) File <|endoftext|>
<|endoftext|> english: find all the files in the home folder which have been modified in the last 30 minutes
bash: find Path -mmin -Quantity <|endoftext|>
<|endoftext|> english: Delete all files in the /myDir directory tree that were last modified 7 days ago
bash: find Path -mtime Timespan -exec rm -r -f {} \; <|endoftext|>
<|endoftext|> english: Recursively change the group of all files in "/var/lib/php/session" to "lighttpd"
bash: chown -R Regex File <|endoftext|>
<|endoftext|> english: Remove all files whose names begin with "no-such-thing" in the /home/peter directory tree
bash: find Path -name Regex | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: Recursively change the owner and group of "/var/antoniod-data/" to "antoniod"
bash: chown -R Regex File <|endoftext|>
<|endoftext|> english: Remove newline characters from "file.txt"
bash: paste -s -d File File <|endoftext|>
<|endoftext|> english: Find all regular files in the current directory tree last modified between 1 and 3 days ago and list them using format '%Tc %p\n'
bash: find Path -daystart -mtime -Timespan -type f ! -mtime -Timespan -printf '%Tc %p\n' <|endoftext|>
<|endoftext|> english: Replace all instances of "STRING_TO_REPLACE" with "STRING_TO_REPLACE_IT" in "index.html"
bash: sed -i Program File <|endoftext|>
<|endoftext|> english: Finds strings with text "searched-string" recursively in all files of current folder.
bash: grep -r Regex File <|endoftext|>
<|endoftext|> english: Remove all tmp/*.mp3 files
bash: find Path -maxdepth Quantity -name Regex -maxdepth Quantity | xargs -n Quantity -I {} rm {} <|endoftext|>
<|endoftext|> english: search for text files in the directory "/home/user1" and copy them to the directory /home/backup
bash: find Path -name Regex | xargs -I {} cp -a -v --target-directory Directory --parents {} <|endoftext|>
<|endoftext|> english: Search for the string 'device' in all regular files in the entire filesystem
bash: find Path -type f -print | xargs -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: Find all broken symlinks under /path/to/search directory
bash: find Path -xtype l <|endoftext|>
<|endoftext|> english: Remove all regular files under and below directory "$DIR" that were last accessed more than 5 days ago
bash: find Path -type f -atime +Timespan -exec rm {} \; <|endoftext|>
<|endoftext|> english: Recursively change the owner to "$USER" and group to "$GROUP" of "/var/lib/cassandra"
bash: chown -R Regex File <|endoftext|>
<|endoftext|> english: change owner of the file file.sh to user root
bash: chown Regex File <|endoftext|>
<|endoftext|> english: Change owner to "root" and group to "wheel" of "bin"
bash: chown Regex File <|endoftext|>
<|endoftext|> english: Find all HTML files starting with letter 'a' in the current directory and below ignoring the case
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: Read a line from standard input with prompt "Enter your choice: ", arrow keys enabled, and "yes" as the default input, and save the response to variable "choice"
bash: read -e -i Regex -p Regex Regex <|endoftext|>
<|endoftext|> english: Creates temporary file with name formatted like '.script.XXXXXX' in '/tmp/' folder and saves path to it in 'script2' variable.
bash: $( mktemp Regex ) <|endoftext|>
<|endoftext|> english: Show all running processes with a name matching "postgres"
bash: ps -e -f | grep Regex <|endoftext|>
<|endoftext|> english: Find directories with permissions 777 and change them to 755 recursively
bash: find Path -type d -perm Permission -print -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: find all the directories in the current folder and replace the
bash: find Path -type d | sed -r Program <|endoftext|>
<|endoftext|> english: Display infinite scroll of random ASCII art
bash: yes Regex | bash <|endoftext|>
<|endoftext|> english: Update the history file in the current session
bash: history -w <|endoftext|>
<|endoftext|> english: search for all the files having spaces in the current folder and save the output to the variable founddata
bash: find Path -name Regex -print0 <|endoftext|>
<|endoftext|> english: Find files with a question mark in their names
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all 100MB+ files and delete them
bash: find Path -size +Size -exec rm -r -f {} \; <|endoftext|>
<|endoftext|> english: Silently read $char number of symbols from file descriptor 4, without backslash escaping, and store received input in 'line' variable
bash: read -u Regex -N Quantity -r -s Regex <|endoftext|>
<|endoftext|> english: display all the files in the current folder which have been modified in the last 2 days
bash: find Path -mtime -Timespan <|endoftext|>
<|endoftext|> english: Display a long listing of the files/directories with human readable sizes (100M, 10G etc..) under '/var' directory tree which are bigger than 10MB
bash: find Path -size +Size -exec ls -l -h {} \; <|endoftext|>
<|endoftext|> english: Change all files with no user under "/var/www" to have owner "root" and group "apache"
bash: find Path -nouser -exec chown Regex {} \; <|endoftext|>
<|endoftext|> english: Search the current directory tree for a regular file named "file_name"
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: Search for files/directories with the case insensitive pattern anaconda.* in var/log directory and create an archive (file.tar) of the last file found
bash: find Path -iname Regex -exec tar -c -v -f File {} \; <|endoftext|>
<|endoftext|> english: Split the sorted and unique lines in files "emails_*.txt" into files with at most 200 lines each with numeric suffixes of length 4
bash: sort --unique File | split --numeric-suffixes --lines Quantity --suffix-length Quantity --verbose <|endoftext|>
<|endoftext|> english: Find all files under and below the current working directory with the word California in the file, and count the number of lines in the output
bash: find Path -type f -exec grep Regex {} \; -print | wc -l <|endoftext|>
<|endoftext|> english: Save full path of command "rm" to variable "RM"
bash: which Regex <|endoftext|>
<|endoftext|> english: find ".flac" files in current folder using regular expressions
bash: find Path -regex Regex <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory tree that belong to user 'john'
bash: find Path -user Regex <|endoftext|>
<|endoftext|> english: Read a line from standard input into variable "password" without echoing the input and using the prompt "Password: "
bash: read -s -p Regex Regex <|endoftext|>
<|endoftext|> english: Find all files named "file.ext" in the current directory tree and print the path names of the directories they are in
bash: find Path -name Regex -execdir pwd \; <|endoftext|>
<|endoftext|> english: Prints lines count in each *.c file of a current folder and total count.
bash: wc -l File <|endoftext|>
<|endoftext|> english: Find all executable files under {} and reverse sort them
bash: find {} -type f -depth Path -perm +Permission | sort -r <|endoftext|>
<|endoftext|> english: find all the wav files in the current folder and do not search in the sub directories
bash: find Path -name Regex -maxdepth Quantity <|endoftext|>
<|endoftext|> english: Find all build* directories under /var/www/html/ and reverse sort them
bash: find Path -type d -name Regex | sort -r <|endoftext|>
<|endoftext|> english: find all the files in the current folder which end with .o or with the name a.out and display them.
bash: find Path \( -name Regex -or -name Regex \) -print <|endoftext|>
<|endoftext|> english: Verbosely change ownership of "$file" to "root"
bash: chown -v Regex File <|endoftext|>
<|endoftext|> english: search for the directory "ora10" in the entire file system
bash: find Path -type d -name Regex <|endoftext|>
<|endoftext|> english: Find all *.pdf files under ./polkadots
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: find files which full path name like '*/*config' at current directory and print
bash: find Path -path Regex <|endoftext|>
<|endoftext|> english: Search for "YOURSTRING" in all files under current directory
bash: grep Regex $( find Path ) <|endoftext|>
<|endoftext|> english: change the permission of all php files in current folder
bash: find Path -name Regex -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Takes folder path from string '/path/to/copy/file/to/is/very/deep/there' and created it with all parents.
bash: mkdir -p $( dirname Regex ) <|endoftext|>
<|endoftext|> english: Find directories in /proc and show only those that doesn't match the regex '/proc/[0-9]*($|/)'
bash: find Path -type d | grep -E -v Regex | less <|endoftext|>
<|endoftext|> english: Print file system disk space usage with a grand total
bash: df --total <|endoftext|>
<|endoftext|> english: Set file permission to 664 and directory permission to 775 for all files and directories under htdocs
bash: find Path -type f -exec chmod Permission {} + -or -type d -exec chmod Permission {} + <|endoftext|>
<|endoftext|> english: Copy and always overwrite all files in "/zzz/zzz" to "/xxx/xxx"
bash: yes | cp -r -f File File <|endoftext|>
<|endoftext|> english: find all files in the current folder which have not been accessed in the last 30 days in the current folder
bash: find Path -atime +Timespan -print <|endoftext|>
<|endoftext|> english: long list the detials of all the shell scripts in current directory
bash: find Path -name Regex -exec ls -l -d {} \; <|endoftext|>
<|endoftext|> english: Remove all regular files named "Waldo" in the ~/Books directory tree
bash: find Path -type f -name Regex -exec rm {} \; <|endoftext|>
<|endoftext|> english: Find all files in the `sourceDir' directory
bash: find Path -mindepth Quantity -maxdepth Quantity <|endoftext|>
<|endoftext|> english: Find all .mp3 files starting from the current directory and delete them
bash: find Path -type f -iname Regex -delete <|endoftext|>
<|endoftext|> english: Find all .gif files in the /var/www directory tree that are between 5 kB and 10 kB in size
bash: find Path -name Regex -size +Size -size -Size <|endoftext|>
<|endoftext|> english: display the manual page of find
bash: man Regex <|endoftext|>
<|endoftext|> english: List the z* links in the /usr/bin directory and the file to which it points to
bash: find Path -type l -name Regex -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: Delete all files in directory $DIR that have not been accessed in at least 5 days
bash: find Path -type f -atime +Timespan -exec rm {} \; <|endoftext|>
<|endoftext|> english: display all the files in the folder /mp3-collection which are bigger than 10MB or which start with the name "Metallica"
bash: find Path -name Regex -or -size +Size <|endoftext|>
<|endoftext|> english: Remove all .sh files in the current directory tree whose names begin with "new"
bash: find Path -name Regex -exec rm -f {} \; <|endoftext|>
<|endoftext|> english: Write "suspend" to standard output and to file "/sys/bus/usb/devices/usb3/power/level"
bash: echo Regex | tee File <|endoftext|>
<|endoftext|> english: Find files under '/travelphotos' directory tree which are bigger than 200KB and do not have 2015 in their names
bash: find Path -type f -size +Size -not -iname Regex <|endoftext|>
<|endoftext|> english: Execute "awk -F, '$1 ~ /F$/'" on contents of "file.gz"
bash: zcat Regex | awk -F Regex Program <|endoftext|>
<|endoftext|> english: Recursively copy "old/" to "new/" as a dry run skipping files that have matching checksums and output the name only
bash: rsync -r -c -n --out-format "%n" File File <|endoftext|>
<|endoftext|> english: Search for 'DOGS' in all files with '.txt' extension under ~/documents and also print the file names
bash: find Path -type f -name Regex -exec grep -s Regex {} \; -print <|endoftext|>
<|endoftext|> english: Unzip and untar "tarball.tar.gz"
bash: zcat Regex | tar -x <|endoftext|>
<|endoftext|> english: Return a list of files newer than file poop
bash: find Path -mnewer File <|endoftext|>
<|endoftext|> english: Find all directories under ~/code without descending into hidden directories and print them appended with : (colon)
bash: find Path -name Regex -prune -or -type d -printf ':%p' <|endoftext|>
<|endoftext|> english: Counts lines in each *.cpp, *.c, *.h file.
bash: wc -l $( find Path -type f \( -name Regex -or -name Regex -or -name Regex \) -print ) <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory
bash: find | xargs <|endoftext|>
<|endoftext|> english: sort each file in the bills directory, leaving the output in that file name with .sorted appended
bash: find Path -type f | xargs -I {} sort -o File {} <|endoftext|>
<|endoftext|> english: Compress and display the original filename of every file on the system that is greater than 100000 bytes and ends in ".log"
bash: find Path -xdev -type f -size +Size -name Regex -exec gzip {} \; -exec echo {} \; <|endoftext|>
<|endoftext|> english: List all directories and subdirectories
bash: find Path -type d <|endoftext|>
<|endoftext|> english: Print the names and sizes of all regular files from the current directory tree
bash: find Path -type f -printf "%f %s\n" <|endoftext|>
<|endoftext|> english: Print the hexadecimal bytes and printable characters of "Hello world"
bash: echo Regex Regex | od -t x1 -t c <|endoftext|>
<|endoftext|> english: Print information of the process running the current script as the current user
bash: ps -e -f | grep Regex | grep $( whoami ) <|endoftext|>
<|endoftext|> english: Find symlinks in the current directory tree
bash: find Path -type l | xargs -I {} ls -l -d {} <|endoftext|>
<|endoftext|> english: Find all *.htm files under current directory
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: find all the directories in the current folder
bash: find Path -type d <|endoftext|>
<|endoftext|> english: Find all files whose names end with "macs" in and below the current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all .txt files in the dir/ directory tree and copy them along with times, permissions, and ownership to dir_txt/
bash: find Path -name Regex | xargs -I {} cp -a --target-directory Directory --parents {} <|endoftext|>
<|endoftext|> english: Prints total count of lines of all *.php files in a current folder and subfolders.
bash: find Path -name Regex -type f -exec cat -- {} + | wc -l <|endoftext|>
<|endoftext|> english: Changes group ownership of 'myprogram' to ${USER} (the current user)
bash: chgrp Regex File <|endoftext|>
<|endoftext|> english: Recursively finds all "file_pattern_name" files and folders and prints strings with "pattern", searching through found folders recursively.
bash: find Path -name Regex -exec grep -r Regex {} \; <|endoftext|>
<|endoftext|> english: Find all files/directores under /etc and run the file command on each of them
bash: find Path -print0 | xargs -0 -I {} file {} <|endoftext|>
<|endoftext|> english: Prints processes with 'MDSImporte' in name, cutting off  lines longer than screen width, exiting from less after end of output and saving printed lines on terminal after exit.
bash: pstree | grep Regex | less -S -E -X <|endoftext|>
<|endoftext|> english: delete all the broken symbolic links from the folder /usr/ports/packages
bash: find -L Path -type l -exec rm -- {} + <|endoftext|>
<|endoftext|> english: Find all files in the current directory tree whose size is greater than 1MB, and move them to the "files" folder
bash: find Path -size +Size -print0 | xargs -0 -I {} mv {} File <|endoftext|>
<|endoftext|> english: Create new crontab set for user 'test' including $job and only jobs from current crontab of 'test' user that don`t contain $command
bash: cat <( grep -F -i -v Regex <( crontab -u Regex -l ) ) <( echo Regex ) | crontab -u Regex File <|endoftext|>
<|endoftext|> english: Find files newer than main.css in ~/src
bash: find Path -newer File <|endoftext|>
<|endoftext|> english: Find all the regular files in $DIR directory tree which have not been modified in the last 450 days and delete them
bash: find Path -type f -mtime +Timespan -exec rm {} \; <|endoftext|>
<|endoftext|> english: Wrap each line in "file.txt" to fit in 80 characters
bash: cat File | fold <|endoftext|>
<|endoftext|> english: Find all regular files in the current directory tree, except GIT files
bash: find Path -name Regex -prune -or -type f -print <|endoftext|>
<|endoftext|> english: Print the first line of each file under the home directory
bash: find Path -name Regex -exec head -n Quantity -v {} \; <|endoftext|>
<|endoftext|> english: Find all *.epub, *.mobi, *.chm, *.rtf, *.lit and *.djvu files/directories under current directory
bash: find Path -name Regex -or -name Regex -or -name Regex -or -name Regex -or -name Regex -or -name Regex <|endoftext|>
<|endoftext|> english: Find all directories under minimum 1 level down the  $GIVEN_DIR directory with null character as the delimiter
bash: find Path -type d -mindepth Quantity -print0 <|endoftext|>
<|endoftext|> english: display all the regular/normal files in a folder
bash: find Path -type f <|endoftext|>
<|endoftext|> english: find all the files in the current folder whose name starts with 2 alphabets and ends with 2 digits.
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: find all files in the current folder which are bigger than 10bytes
bash: find Path -size +Size -print <|endoftext|>
<|endoftext|> english: Recursively copy directory or file /something on host "myServer" to current directory on local host, connecting as ssh user matching username on local host.
bash: scp -r File <|endoftext|>
<|endoftext|> english: Find all files, starting from / but ignoring removable media, whose names end with ".rpm"
bash: find Path -xdev -name Regex <|endoftext|>
<|endoftext|> english: create directory testExpress
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: count lines of C or C++ or Obj-C or Java code under the current directory
bash: find Path \( -name Regex -or -name Regex -or -name Regex -or -name Regex -or -name Regex \) -print0 | xargs -0 -I {} wc {} <|endoftext|>
<|endoftext|> english: Remove the "123_" prefix from all filenames of .txt files in current directory.
bash: rename Regex Regex <|endoftext|>
<|endoftext|> english: Find all .tmp files under and below the /tmp/ directory and remove them
bash: find Path -name Regex | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: find foo, Foo, FOo, FOO, etc., but only files
bash: find Path -iname Regex -type f <|endoftext|>
<|endoftext|> english: Find all files under current directory whose file type description contains "image", display only path to each file.
bash: find Path -type f -exec file {} \; | awk -F Regex Program <|endoftext|>
<|endoftext|> english: Send each byte in "/home/cscape/Desktop/file" to awk script "x.awk"
bash: fold File File | awk -f File <|endoftext|>
<|endoftext|> english: Read yesterday's date with format "%a %d/%m/%Y" into variable "dt" in a subshell
bash: date --date Regex "+%a %d/%m/%Y" | read Regex <|endoftext|>
<|endoftext|> english: delete all the regular files in the temp folder which have not been modified in the last 24 hours
bash: find Path -type f -mtime +Timespan -delete <|endoftext|>
<|endoftext|> english: find all the files in the entire file system that have been modified between 50 to 100 days and display ten files
bash: find Path -mtime +Timespan -mtime -Timespan | head <|endoftext|>
<|endoftext|> english: Print the current directory tree
bash: tree <|endoftext|>
<|endoftext|> english: delete all the files ending with "~" in current folder
bash: find Path -name Regex -delete <|endoftext|>
<|endoftext|> english: Find all the Sticky Bit set files in entire file system whose permission are 551
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: find all the files in the current folder and display adding quotations to each file and replace spaces with new line
bash: find Path | sed -e Program -e Program | tr Regex Regex <|endoftext|>
<|endoftext|> english: Remove all files on the system that have been changed within the last minute
bash: find Path -newerct Regex -print | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: Format "file.txt" as space separated columns 28 characters in width
bash: cat File | column -c Quantity -s Regex <|endoftext|>
<|endoftext|> english: find all the files in the current folder which are bigger than 10MB and less than 50MB
bash: find Path -size +Size -size -Size -print <|endoftext|>
<|endoftext|> english: Print the top 10 commands with their use count
bash: history | awk Program | awk Program | sort | uniq -c | sort -n -r | head <|endoftext|>
<|endoftext|> english: Print only name and login columns of the currently logged in users
bash: finger -s | awk Program <|endoftext|>
<|endoftext|> english: Output all lines in BigFile.csv whose secondn comma-separated second field matches first field of a line in LittleFile.csv.
bash: join -1 Regex -2 Regex -t Regex File File <|endoftext|>
<|endoftext|> english: Print information of the root mount point
bash: mount -v | grep Regex <|endoftext|>
<|endoftext|> english: Find all *FooBar* files/directories under current directory and copy them to ~/foo/bar
bash: find Path -name Regex | sed Program | xargs -I {} cp File {} <|endoftext|>
<|endoftext|> english: Check if "~/mnt/sdc1" is mounted
bash: mount | grep -q Regex <|endoftext|>
<|endoftext|> english: Create tar archive "dirall.tar" and copy all files from directory tree /tmp/a1 to it
bash: find Path -exec tar -r -v -f File {} \; <|endoftext|>
<|endoftext|> english: Send an audible ping to "10.100.3.104"
bash: ping -a Regex <|endoftext|>
<|endoftext|> english: Find all regular files under $DIR directory tree with ".$TYPE" extension (case insensitive) where $TYPE expands in the current shell
bash: find Path -type f -iname Regex <|endoftext|>
<|endoftext|> english: Find all test1.h files under current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Search all *.c files from the current directory tree for "hogehoge"
bash: find Path -name Regex -print | xargs -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: display all the files in the file system which belong to no user
bash: find Path -nouser -print <|endoftext|>
<|endoftext|> english: Print IP addresses of the host name
bash: hostname -I | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: Print paths to all subdirectories inside of a directory
bash: du | awk Program <|endoftext|>
<|endoftext|> english: Find all the files which were accessed 50 days ago
bash: find Path -atime Timespan <|endoftext|>
<|endoftext|> english: display all files in the current folder which end with extension "myfile" followed by one digit or two digits
bash: find Path -regextype sed -regex Regex <|endoftext|>
<|endoftext|> english: use regex with find command
bash: find Path -regextype sed -regex Regex <|endoftext|>
<|endoftext|> english: Removes everything from current folder but '*ddl*' and '*docs*' files.
bash: ls -1 | grep -v -e Regex -e Regex | xargs -I {} rm -r -f {} <|endoftext|>
<|endoftext|> english: Write output and error of "bash myscript.sh" to standard output and to "output.log"
bash: bash File | tee File <|endoftext|>
<|endoftext|> english: delete all the log files in the current folder
bash: find Path -name Regex -print0 | xargs -0 -I {} rm {} <|endoftext|>
<|endoftext|> english: Gets IP address of first listed active network interface in system.
bash: ifconfig | grep Regex | grep -v Regex | awk -F Regex Program | awk Program | head - Quantity <|endoftext|>
<|endoftext|> english: Recursively removes all files like "(__pycache__|\.pyc|\.pyo$)" in a current folder.
bash: find Path | grep -E Regex | xargs -I {} rm -r -f {} <|endoftext|>
<|endoftext|> english: Force create a symbolc link named "/usr/local/bin/fpt" to "/usr/local/bin/findpdftext"
bash: ln -s -f File Regex <|endoftext|>
<|endoftext|> english: Search decompressed "filename.gz" for case-insensitive "user-user"
bash: zcat Regex | grep -i Regex <|endoftext|>
<|endoftext|> english: Delete all *.zip files under current directory that are older than 2 days
bash: find Path -name Regex -mtime +Timespan Path | xargs -0 -I {} rm {} <|endoftext|>
<|endoftext|> english: search all jpg files in current folder
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: Copy "src/prog.js" and "images/icon.jpg" to "/tmp/package/" keeping relative path names
bash: rsync -R -v File File File <|endoftext|>
<|endoftext|> english: Remove all files that contain the word GUI in entire file system
bash: find Path -type f -print0 | xargs -0 -I {} grep -l -i -w -Z Regex {} | xargs -0 -I {} rm -f {} <|endoftext|>
<|endoftext|> english: update the permissions of the directories in the folder folder_name to 775
bash: find Path -type d -exec chmod Permission File \; <|endoftext|>
<|endoftext|> english: display all the files in the current folder that end with ".ksh"
bash: find Path -name Regex -prune <|endoftext|>
<|endoftext|> english: Find all .mp3 files starting from the current directory
bash: find Path -type f -iname Regex <|endoftext|>
<|endoftext|> english: Gets IP address of 'en0' network interface.
bash: ifconfig Regex | awk Program <|endoftext|>
<|endoftext|> english: Locate all *.csv files under the current directory tree
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: find all text files in current folder; which have been modified exactly 5 days ago
bash: find Path -name Regex -mtime Timespan <|endoftext|>
<|endoftext|> english: Make directories "$@" and replace "mkdir: created directory " with "$USER created folder " in the output
bash: mkdir Directory | sed -e Program <|endoftext|>
<|endoftext|> english: display all the regular files in the current folder which dont not have the permission 777
bash: find Path -type f ! -perm Permission <|endoftext|>
<|endoftext|> english: set variable r to currently running kernel release, ie. 4.4.0-81-generic
bash: uname -r <|endoftext|>
<|endoftext|> english: Read a single character from standard input into variable "key" without backslash escapes, with a timeout of 5 seconds, and with the prompt "Press any key in the next five seconds..."
bash: read -t Quantity -n Quantity -r -p Regex Regex <|endoftext|>
<|endoftext|> english: Find all files under current directory and append a null character at the end of each of their paths
bash: find Path -type f -print0 <|endoftext|>
<|endoftext|> english: Determine if /full/path exists on a mounted file system.
bash: df File | grep -q Regex <|endoftext|>
<|endoftext|> english: Print groups of all users logged in
bash: groups $( who | cut -d Regex -f Number ) <|endoftext|>
<|endoftext|> english: List all *.txt files/directories under /etc
bash: ls -l $( find Path -name Regex ) <|endoftext|>
<|endoftext|> english: Replace all occurrences of foo (case insensitive) with bar in all *.css (case insensitive) files under %s directory
bash: find Path -iname Regex | xargs -I {} sed -i Program {} <|endoftext|>
<|endoftext|> english: Find all regular files under current directory tree containing 'some text' in their names without descending into hidden directories and excluding hidden files
bash: find Path -type d -path Regex -prune -or -not -name Regex -type f -name Regex -print <|endoftext|>
<|endoftext|> english: Copy the owner and group from "file.txt" to "$tempfile"
bash: chown --reference File -- Regex <|endoftext|>
<|endoftext|> english: Rename "file.txt" in directories "v_1", "v_2", and "v_3" each to "v_1.txt", "v_2.txt", and "v_3.txt" respectively and print the conversion
bash: rename -v Regex Regex <|endoftext|>
<|endoftext|> english: Print 3 space separated '%'
bash: echo $( yes Regex | head -n Quantity ) <|endoftext|>
<|endoftext|> english: Opens new tmux session.
bash: tmux <|endoftext|>
<|endoftext|> english: Find all files whose filename does not end with *.html.
bash: find Path -type f -not -name Regex <|endoftext|>
<|endoftext|> english: search all mp3 files in the folder "/home/you" which have been modified yesterday (from the start of day 00:00 to 23:59)
bash: find Path -iname Regex -daystart -type f -mtime Timespan <|endoftext|>
<|endoftext|> english: find all files under the /etc/sysconfig directory that were accessed in the last 30 minutes
bash: find Path -amin -Quantity <|endoftext|>
<|endoftext|> english: Find all directories in the current directory tree excluding hidden directories and create them in "../demo_bkp"
bash: find Path -not -path Regex -type d -exec mkdir -p -- Directory \; <|endoftext|>
<|endoftext|> english: Print the directories that are taken by the glob pattern $SrvDir*
bash: find Path -maxdepth Quantity -type d <|endoftext|>
<|endoftext|> english: Recursively finds in all folders but "./output/*" all files but *.o, *.swp and prints strings with 'soc_attach' text pattern and number of matched string.
bash: find Path \( ! -path Regex \) -and -type f -and \( ! -name Regex \) -and \( ! -name Regex \) | xargs -I {} grep -n Regex {} <|endoftext|>
<|endoftext|> english: Execute awk script "script.awk" on "File2" and "File1" and format output as a table
bash: awk -f File Program Program | rev | column -t | rev <|endoftext|>
<|endoftext|> english: Find recursively the latest modified .zip file in the current directory
bash: find Path -name Regex -type f | xargs -I {} ls -l -t -r {} | tail - Quantity <|endoftext|>
<|endoftext|> english: search for a regular/normal file "myfile" in the entire file system excluding the folder in excluded_path
bash: find Path -path Regex -prune -or -type f -name Regex -print <|endoftext|>
<|endoftext|> english: Find all OGG files in the home directory that are at most 20 megabytes in size
bash: find Path -iname Regex ! -size +Size <|endoftext|>
<|endoftext|> english: Gives longest '*.php' files with line count first, and excludes directories with "libs", "tmp", "tests" and  "vendor" in their paths.
bash: find Path -name Regex | xargs -I {} wc -l {} | sort -n -r | grep -E -v Regex | less <|endoftext|>
<|endoftext|> english: Change permissions for all PHP files under the current directory tree to 755
bash: find Path -name Regex -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: display all the html files in the current folder excluding search in the path ./foo
bash: find Path -path Regex -prune -or -type f -name Regex <|endoftext|>
<|endoftext|> english: Archive "/media/10001/music/" on host "server" to local directory "/media/incoming/music/" and skip files that are newer in the destination, delete any files in the destination not in the source, and compress data during transmission
bash: rsync -a -v -z -r -u --delete-excluded File File <|endoftext|>
<|endoftext|> english: Search the current directory for regular files whose names start with my
bash: find Path -name Regex -type f <|endoftext|>
<|endoftext|> english: Creates temporary file in TMPDIR folder or /tmp/ if TMPDIR is not defined, named by template ${tempname}.XXXXXX, and saves path to new file in  a TMPPS_PREFIX variable.
bash: mktemp Regex <|endoftext|>
<|endoftext|> english: Remove all directories called "test" from the /path/to/dir directory tree
bash: find Path -name Regex -type d -delete <|endoftext|>
<|endoftext|> english: find all the files that have been modified today
bash: find Path -type f -mtime Timespan <|endoftext|>
<|endoftext|> english: Write the current date and time followed by " 0" to the console and append to "log.csv"
bash: echo $( date ) Regex | tee -a File <|endoftext|>
<|endoftext|> english: Find all regular files in /usr/bin accessed more than 20 days ago
bash: find Path -type f -atime +Timespan <|endoftext|>
<|endoftext|> english: search all the ".sh" files in the /usr folder and follow the symbolic links to their original file
bash: find Path -follow -name Regex <|endoftext|>
<|endoftext|> english: Append history lines from this session to the history list
bash: history -a <|endoftext|>
<|endoftext|> english: delete all the files in the current folder  which do not belong to any user
bash: find Path -nouser -exec rm File \; <|endoftext|>
<|endoftext|> english: Search for all files not newer than file /tmp/t
bash: find Path -not -newer File <|endoftext|>
<|endoftext|> english: Create a symbolic link named "/usr/local/bin/subl" to "/Applications/Sublime Text 2.app/Contents/SharedSupport/bin/subl"
bash: ln -s File Regex <|endoftext|>
<|endoftext|> english: Find all files matching the pattern "${pattern}" in their name and execute ${my_command} for each of them with the file path as argument
bash: find Path -name Regex -print0 | xargs -0 <|endoftext|>
<|endoftext|> english: Search in current directory downwards all files whose size is 10 bytes ( Characters ) .
bash: find Path -size Size -print <|endoftext|>
<|endoftext|> english: Show the files or directories in the current directory whose names are not "MyCProgram.c"
bash: find Path -maxdepth Quantity -not -iname Regex <|endoftext|>
<|endoftext|> english: Find all .core files on the system starting from / and delete them
bash: find Path -name Regex -print -exec rm {} \; <|endoftext|>
<|endoftext|> english: Find all files/directores under '/usr/local' directory tree that case insensitively contain the word 'blast' in their names
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: Move all files not matching "Tux.png" in "~/Linux/Old" to "~/Linux/New/" using zsh with "EXTENDED_GLOB"
bash: mv File File <|endoftext|>
<|endoftext|> english: Set shell option 'checkwinsize'.
bash: shopt -s checkwinsize <|endoftext|>
<|endoftext|> english: Create 6-letter named temporary file in a folder path $file1, and save the path to it in a variable 'tmpfile'
bash: mktemp $( dirname Regex ) <|endoftext|>
<|endoftext|> english: View history using "vim" in read only mode
bash: history | vim -R File <|endoftext|>
<|endoftext|> english: Find all *.mp4 files under /foo/bar and move them to /some/path
bash: find Path -name Regex -exec mv -t Directory {} + <|endoftext|>
<|endoftext|> english: display all the hidden files in the directory "/dir/to/search/"
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: find all foo.bar files in the entire file system and which are present in the same partition as root.
bash: find Path -name Regex -print -xdev <|endoftext|>
<|endoftext|> english: display all the regular/normal files in current folder
bash: find Path -type f -print0 <|endoftext|>
<|endoftext|> english: List files larger than 10MB under /var/log /tmp that haven't changed in a month
bash: find Path Path -size +Size -mtime Timespan -print0 | xargs -0 -I {} ls -l {} <|endoftext|>
<|endoftext|> english: Recursively and forcibly removes $TMP folder with all content.
bash: rm -f -R File <|endoftext|>
<|endoftext|> english: Find & calculate total number of caractor  in all .txt file from current directory
bash: find Path -type f -name Regex -exec wc -c {} \; | awk Program <|endoftext|>
<|endoftext|> english: Find all empty files in the current directory and delete them
bash: find Path -maxdepth Quantity -type f -empty -delete <|endoftext|>
<|endoftext|> english: Creates temporary folder in a $temp_dir folder with name pattern defined by $template, and stores path to created folder in 'my_temp' variable.
bash: mktemp -d --tmpdir Directory -t Regex <|endoftext|>
<|endoftext|> english: Counts lines in each of *.php files in a current folder and subfolders and prints total count as well.
bash: find Path -name Regex | xargs -I {} wc -l {} <|endoftext|>
<|endoftext|> english: Save the "Pictures" directory in the current user's home directory on the directory stack
bash: pushd $( whoami ) <|endoftext|>
<|endoftext|> english: Move the directory named "some-dir" and residing under the current one to x/
bash: find Path -maxdepth Quantity -name Regex -type d -print0 | xargs -0 -r -I {} mv -t Directory {} <|endoftext|>
<|endoftext|> english: Find all files/directories in directories/files taken from the glob pattern '/tmp/test/*' recursively that have not been modified from the start of the day
bash: find Path -daystart -mtime +Timespan <|endoftext|>
<|endoftext|> english: delete all the normal/regular files in the current folder
bash: find Path -type f -print -delete <|endoftext|>
<|endoftext|> english: Print the list of files and directories of the /etc directory
bash: find Path ! -name Regex -prune <|endoftext|>
<|endoftext|> english: Find all files under /path and below writable by `group' and `other'
bash: find Path -perm -Permission <|endoftext|>
<|endoftext|> english: Print the current user's mail file in "/var/spool/mail"
bash: cat $( whoami ) <|endoftext|>
<|endoftext|> english: For each item in array "alpha", display the basename, that is the part following the last slash, or the whole item if no slash is present.
bash: basename -a Regex <|endoftext|>
<|endoftext|> english: Remove all files from the system whose path names contain "GUI"
bash: find Path -type f -print0 | xargs -0 -I {} grep -l -i -w -Z Regex {} | xargs -0 -I {} rm -f {} <|endoftext|>
<|endoftext|> english: Find files/directories named<filetype> under current directory which were accessed less than 5 days ago
bash: find Path -name Regex -atime -Timespan <|endoftext|>
<|endoftext|> english: Compresses file 'example.log' keeping original file in place.
bash: bzip2 -k File <|endoftext|>
<|endoftext|> english: Delete all files beneath the current directory that begin with the letters 'Foo'.
bash: find Path -type f -name Regex -exec rm {} \; <|endoftext|>
<|endoftext|> english: Read a line from standard input with prompt "<Your Friendly Message here> : y/n/cancel" and save the response to variable "CONDITION"
bash: read -p Regex Regex <|endoftext|>
<|endoftext|> english: find all the files in the current directory which have been accessed in the last 1 day and move them to TMP folder.
bash: find Path -atime +Timespan -type f -exec mv {} File \; <|endoftext|>
<|endoftext|> english: Prints real path of the folder containing $0 file.
bash: $( readlink -f $( dirname Regex ) ) <|endoftext|>
<|endoftext|> english: Find all empty files starting from the current directory and delete them
bash: find Path -type f -empty -print0 | xargs -0 -I {} rm {} <|endoftext|>
<|endoftext|> english: Print each logged in user's full name
bash: finger | awk Program <|endoftext|>
<|endoftext|> english: Print the list of regular files in the current directory and all subdirectories
bash: find Path -type f <|endoftext|>
<|endoftext|> english: Find symbolic links in /usr/lib and /usr/lib64 to files whose pathnames contain "libstdc++"
bash: find Path Path -lname Regex <|endoftext|>
<|endoftext|> english: Search the /myfiles directory tree for regular files with read and write permissions set for `others'
bash: find Path -type f -perm -Permission <|endoftext|>
<|endoftext|> english: Print file extension assuming there is only one dot in the file name.
bash: echo Regex | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: Print inode, permissions, size, and modification date of all files in the current directory tree as a list with an extra column prepended
bash: tree -a -f -i -s -p -u -g -D --inodes | awk Program <|endoftext|>
<|endoftext|> english: Find all *.* directories under /home/feeds/data directory
bash: find Path -type d \( -name Regex -or -name Regex -or -name Regex \) -prune -or -name Regex -print <|endoftext|>
<|endoftext|> english: Find and uncompress all files in the current directory tree ending in ".csv.gz"
bash: find Path -name Regex -print0 | xargs -0 -n Quantity -I {} gzip -d {} <|endoftext|>
<|endoftext|> english: Find all files/directories under $1 which have at least write permission for their owner and set write permission for group for these files/directories
bash: find Path -perm -Permission -print0 | xargs -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: Silently read a single character from standard input into variable "REPLY" without backslash escapes, with a timeout of 5 seconds, and using the prompt $'Press any key or wait 5 seconds to continue...\n'
bash: read -r -s -p Regex -n Quantity -t Quantity <|endoftext|>
<|endoftext|> english: find *.gif files under the currently directory and sub-directories and list them using the ls command
bash: find Path -name Regex -exec ls {} \; <|endoftext|>
<|endoftext|> english: Print all logins formatted as "The user USER is on TTY" where USER is the user name and TTY is the login terminal
bash: who | awk Program <|endoftext|>
<|endoftext|> english: find all the files in current directory of size greater than 2GB.
bash: find Path -size +Size <|endoftext|>
<|endoftext|> english: Move all Emacs backup files from the current directory tree to ~/backups/
bash: find Path -name Regex -print Path | xargs -0 -I {} cp {} File <|endoftext|>
<|endoftext|> english: Delete all empty subdirectories in and below directory/
bash: find Path -mindepth Quantity -type d -empty -delete <|endoftext|>
<|endoftext|> english: Print numbers 1 through 10 separated by ":"
bash: yes | head -n Quantity | grep -n Regex | cut -d Regex -f Number | paste -s -d Regex <|endoftext|>
<|endoftext|> english: find all the files in the current folder which are writable
bash: find Path Path <|endoftext|>
<|endoftext|> english: Rename all files and directories under current directory tree by converting the names to small letters without descending into 'CVS' directory
bash: find Path -name Regex -prune -or -exec mv {} $( echo {} | tr Regex Regex ) \; -print <|endoftext|>
<|endoftext|> english: View manual page of find utility
bash: man Regex <|endoftext|>
<|endoftext|> english: Recursively change "/usr/local" owner to the current user and group to admin
bash: chown -R $( whoami ) File <|endoftext|>
<|endoftext|> english: display all the files in the usr folder and those that are in the path local
bash: find Path -path Regex <|endoftext|>
<|endoftext|> english: change the group of all the files in the folder /u/netinst/ to staff
bash: find Path -print | xargs -I {} chgrp Regex {} <|endoftext|>
<|endoftext|> english: Shuffles strings of text received by 'awk' command on the input.
bash: awk Program | sort -n | cut -c Number <|endoftext|>
<|endoftext|> english: display all directories in the folder "$ORIG_DIR"
bash: find Path -name Regex -type d <|endoftext|>
<|endoftext|> english: Find all the files without permission 777 in the file system
bash: find Path -type f ! -perm Permission <|endoftext|>
<|endoftext|> english: Print 7 spaces in a row
bash: yes Regex | head - Quantity | tr -d Regex <|endoftext|>
<|endoftext|> english: Print the lines of file "strings" not specified in file "index"
bash: join -v Quantity File <( nl File ) <|endoftext|>
<|endoftext|> english: Print file system disk space usage in posix and human readable format, format as a table
bash: df -P -h | column -t <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory and count the number of lines for the output
bash: find | wc -l <|endoftext|>
<|endoftext|> english: Find all regular files under current directory (excluding hidden directories) and replace every occurrences of 'subdomainA.example.com' with 'subdomainB.example.com' in those files
bash: find Path \( ! -regex Regex \) -type f -print0 | xargs -0 -I {} sed -i Program {} <|endoftext|>
<|endoftext|> english: find all the files in the entire file system that have been modified exactly  50 days ago
bash: find Path -mtime Timespan <|endoftext|>
<|endoftext|> english: Find all *.txt files under current directory, change their permission to 666 and copy them to /dst/ directory
bash: find Path -name Regex -exec chmod Permission {} \; -exec cp {} File \; <|endoftext|>
<|endoftext|> english: Find regular files that have SUID or SGID set
bash: find Path -perm +Permission -type f <|endoftext|>
<|endoftext|> english: Print the list of files and directories of the /etc directory
bash: find Path ! -name Regex <|endoftext|>
<|endoftext|> english: Find directories in the current directory tree that were modified within the last 24 hours and move them to /path/to/target-dir
bash: find Path -type d -mtime -Timespan -print0 | xargs -0 -I {} mv -t Directory {} <|endoftext|>
<|endoftext|> english: List all leaf directories of the current directory tree
bash: find Path -type d -links Quantity <|endoftext|>
<|endoftext|> english: bind key "\x61" to insert itself
bash: bind Regex <|endoftext|>
<|endoftext|> english: Find files accessed at 23:59
bash: find Path -atime -Timespan -print <|endoftext|>
<|endoftext|> english: display all the regular files in current folder
bash: find Path -type f <|endoftext|>
<|endoftext|> english: Add "Line of text here" on top of each *.py files under current directory
bash: find Path -name Regex | xargs -I {} sed -i Program {} <|endoftext|>
<|endoftext|> english: Merge already sorted files in the current directory starting with "_tmp" and write the output to "data.tsv.sorted"
bash: sort File File -o File <|endoftext|>
<|endoftext|> english: Find all regular files under and below /somepath that have extensions PDF, TIF, TIFF, PNG, JPG, JPEG, BMP, PCX, or DCX, ignoring the case and excluding "*_ocr.pdf" files
bash: find Path -type f -iregex Regex ! -name Regex -print0 <|endoftext|>
<|endoftext|> english: Save the first three octets of the current host's IP address to variable "local"
bash: hostname -I | awk Program | cut -f Number -d Regex <|endoftext|>
<|endoftext|> english: Read a line from standard input into variable "ENTERED_PASSWORD" without echoing the input
bash: read -s Regex <|endoftext|>
<|endoftext|> english: find the type of all the regular/normal files in the current folder
bash: find Path -type f | xargs -I {} file {} <|endoftext|>
<|endoftext|> english: Dump "/dev/ttySomething" in both hex and text
bash: od -t x1 -t a File <|endoftext|>
<|endoftext|> english: Creates temporary file with file name formatted like /tmp/gnuplot_cmd_$(basename "${0}").XXXXXX.gnuplot and saves path to it in a variable 'gnuplotscript'.
bash: mktemp $( basename Regex ) <|endoftext|>
<|endoftext|> english: Find all files/directories named Root under current directory and copy them to newRoot
bash: find Path -name Regex | xargs -I {} cp File {} <|endoftext|>
<|endoftext|> english: Change all cron jobs running "anm.sh" to be run every 10 minutes instead of 5 minutes.
bash: crontab -l | sed Program | crontab File <|endoftext|>
<|endoftext|> english: Remount "/system" with read and write permission
bash: mount -o rw,remount Regex <|endoftext|>
<|endoftext|> english: Find all files in  /mydir  and replace every occurrences of <string1> with <string2> in those files invoking sed as few times as possible
bash: find Path -type f -exec sed -i Program {} + <|endoftext|>
<|endoftext|> english: display all the files in the file system which are changed a minute ago
bash: find Path -newerct Regex -print <|endoftext|>
<|endoftext|> english: Replace all ' ' with '-' from standard input
bash: tr Regex Regex <|endoftext|>
<|endoftext|> english: Find all .rb files owned by root in the /apps/ folder and below that have been accessed in the last two minutes.
bash: find Path -user Regex -type f -amin -Quantity -name Regex <|endoftext|>
<|endoftext|> english: find all the empty directories in current folder and delete them
bash: find Path -empty -type d -delete <|endoftext|>
<|endoftext|> english: split content of the file file.txt started from second line into pieces per 4 lines named as split_NNN
bash: tail -n +Quantity File | split -l Quantity File Regex <|endoftext|>
<|endoftext|> english: Copies file 'index.html' to each top-level directory in the current directory.
bash: find Path -mindepth Quantity -maxdepth Quantity -type d | xargs -n Quantity -I {} cp -i File {} <|endoftext|>
<|endoftext|> english: Find all files/directories under '/usr/local' containing 'blast' (case insensitive) in their names
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: Print all files in the current directory tree as a comma separated list
bash: find Path -type f -print0 | tr Regex Regex <|endoftext|>
<|endoftext|> english: Find all regular files under current directory (no subdirectories) and replace every occurrences of 'toreplace' with 'replace' in those files
bash: find Path -maxdepth Quantity -type f -print0 | xargs -0 -I {} sed -i Program {} <|endoftext|>
<|endoftext|> english: Generates temporary file in a '/dev/shm' folder and saves path to it in a 'tFile' variable.
bash: mktemp --tmpdir Directory <|endoftext|>
<|endoftext|> english: Lists all subdirectories in current directory with a trailing slash
bash: ls -d File <|endoftext|>
<|endoftext|> english: Construction with additional '-exec true' to be used if both commands need to run regardless of their success or failure.
bash: find Path -name Regex \( -exec echo {} \; -or -exec true \; \) -exec grep Regex {} \; <|endoftext|>
<|endoftext|> english: Find all catalina* files/directories under current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Print the ping time of a single request to "8.8.8.8"
bash: ping -c Quantity Regex | awk Program <|endoftext|>
<|endoftext|> english: display all the files in the current folder which have the word "bills" in their name
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: Save a random 4 byte unsigned integer from "/dev/urandom" to variable "RAND"
bash: od -t uI -N File File | awk Program <|endoftext|>
<|endoftext|> english: Find all directories named "0" in the current directory tree and create a tar archive of their RS* subdirectories
bash: find Path -type d -name Regex -execdir tar -c -v -f File File \; <|endoftext|>
<|endoftext|> english: Find all 400 permission files under /data directory and change their permission to 755
bash: find Path -type f -perm Permission -print | xargs -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: Executes 'sleep 10' in a subshell created by a pipeline of built-in function 'true'.
bash: true | sleep Timespan <|endoftext|>
<|endoftext|> english: Insert "|" every 30 characters in file "longline"
bash: fold -w Quantity File | tr Regex Regex | sed Program <|endoftext|>
<|endoftext|> english: Find all regular files under $FOLDER directory tree that start with '".' and end with '"' in their names and were modified in less than $RETENTION days excluding the files whose contents match one of the regular expressions defined per line in file $SKIP_FILE
bash: find Path -type f ! -name Regex -mtime -Timespan | grep -E -v -f Regex <|endoftext|>
<|endoftext|> english: Hash hostnames in user's known hosts file.
bash: ssh-keygen -H -f File <|endoftext|>
<|endoftext|> english: List all regular files in and below the home directory that were modified more than 5 years ago
bash: find Path -type f -mtime +Timespan | xargs -I {} ls -l {} <|endoftext|>
<|endoftext|> english: Find *.pl files/directories under /users/tom
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Search for all files in the /home directory tree that have the same inode number
bash: find Path -xdev -inum Quantity <|endoftext|>
<|endoftext|> english: Rename all files in the current directory to the md5 sum followed by the extension and print the conversions
bash: md5sum File | sed -e Program <|endoftext|>
<|endoftext|> english: Print the names of any differing files in directories "dir1/" and "dir2/"
bash: diff --brief --recursive File File <|endoftext|>
<|endoftext|> english: Show all files that have not been accessed in the $HOME directory for 30 days or more
bash: find Path -atime +Timespan <|endoftext|>
<|endoftext|> english: find all the files that have been modified in the last 60 minutes
bash: find Path -mmin -Quantity <|endoftext|>
<|endoftext|> english: Print a minimal set of differences between files in directories "a" and "b", ignore the first 3 lines of output, and print any line starting with "-" with the first character removed
bash: diff File File File | tail -n +Quantity | grep Regex | cut -c Number <|endoftext|>
<|endoftext|> english: Read a line from standard input with prompt "Are you sure you wish to continue?"
bash: read -p Regex <|endoftext|>
<|endoftext|> english: List files under $CURR_DIR which were modified, accessed or whose status were changed $FTIME ago replacing the $CURR_DIR path string to './'
bash: find Path -type f \( -ctime Timespan -or -atime Timespan -or -mtime Timespan \) -printf "./%P\n" <|endoftext|>
<|endoftext|> english: Puts the job 1 in the background.
bash: bg Regex Regex Regex Regex Regex Regex Regex <|endoftext|>
<|endoftext|> english: Find all TXT files on the system and copy them to /tmp/txt
bash: find Path -iname Regex | xargs --replace Regex -I {} cp File File {} <|endoftext|>
<|endoftext|> english: Archive all files specified on standard input under "/path/to/files" to "/path" on host "targethost" as user "user" with escalated privileges
bash: rsync -a -v --files-from File --rsync-path Program File File <|endoftext|>
<|endoftext|> english: Print each unique line that is duplicated in files "file1" and "file2" combined
bash: sort File File | uniq -d <|endoftext|>
<|endoftext|> english: Find all regular files in the "aaa" directory
bash: find Path -maxdepth Quantity -type f <|endoftext|>
<|endoftext|> english: Find all files name passwd in the root directory and all its sub-directories.
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Search for files greater than 20MB under your home directory (/home/user)
bash: find Path -size +Size <|endoftext|>
<|endoftext|> english: Search the current directory tree for files without "test" in their path names
bash: find Path -not -regex Regex <|endoftext|>
<|endoftext|> english: Recursively removes all files and folders named '.svn' in a current folder.
bash: find Path -name Regex -exec rm -r -f {} + <|endoftext|>
<|endoftext|> english: Replace all the mathes to regex '<script type="text\/javascript" charset="utf-8" src="file.js"><\/script>.*' with '<script type="text\/javascript" charset="utf-8" src="file2.js"><\/script>' in all HTML files under $DIR directory tree modifying the files in-place
bash: find Path -type f -name Regex -exec sed -i Program {} \; <|endoftext|>
<|endoftext|> english: List all regular files from the current directory tree that were modified less than 60 minutes ago
bash: find Path -mmin -Quantity -type f -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: Print each logged in user's full name
bash: finger -l | grep Regex | cut -d Regex -f Number | cut -c Number | sort | uniq <|endoftext|>
<|endoftext|> english: Print the average round trip time of 5 pings to "google.com"
bash: ping -q -c Quantity Regex | tail -n Quantity | cut -f Number -d Regex <|endoftext|>
<|endoftext|> english: Copies all files like "*foo*" under the current directory to the '/your/dest' directory.
bash: find Path -name Regex | sed -e Program -e Program -e Program | xargs -I {} cp File {} <|endoftext|>
<|endoftext|> english: Change the ownership of "file.sh" to "root"
bash: chown Regex File <|endoftext|>
<|endoftext|> english: Find one file or directory in the current directory whose name matches the pattern given as a variable $a
bash: find Path -maxdepth Quantity -name Regex -print Path <|endoftext|>
<|endoftext|> english: Save a comma separated list of all $MY_DIRECTORY/*/ directories to variable 'FOLDER'
bash: ls -d -m File | tr -d Regex <|endoftext|>
<|endoftext|> english: Sets 'extglob' shell option.
bash: shopt -s extglob <|endoftext|>
<|endoftext|> english: search files in the folder /home which have been modified after /tmp/after and before /tmp/before
bash: find Path -type f -newer File -not -newer File <|endoftext|>
<|endoftext|> english: delete recursively, without prompting, any files or directories under the current directory that case insensitively match the filename ".svn"
bash: find Path -iname Regex -exec rm -r -f {} \; <|endoftext|>
<|endoftext|> english: Recursively change the owner and group of all files in "public_html" to "owner"
bash: chown -R Regex File <|endoftext|>
<|endoftext|> english: Find files on the system modified more than 90 minutes ago
bash: find Path -mmin +Quantity <|endoftext|>
<|endoftext|> english: Report file system containing path to /some/dir disk usage in kilobytes.
bash: df -k File <|endoftext|>
<|endoftext|> english: Composes full process tree with process id numbers, and prints only those strings that contain 'git'.
bash: pstree -p | grep Regex <|endoftext|>
<|endoftext|> english: Create 998 directories one inside another with sequential names folder1, folder2, ... folder998 and create an additional folder named 'folder9991000' inside the last 'folder998' directory
bash: mkdir -p $( seq -s Regex Number ) <|endoftext|>
<|endoftext|> english: Move all files from "src/test/" to "dest" displaying progress
bash: rsync -a --progress --remove-source-files File File <|endoftext|>
<|endoftext|> english: Search the current directory tree for regular files omitting directory `omit-directory'
bash: find Path \( -name Regex -prune \) -or \( -type f -print \) <|endoftext|>
<|endoftext|> english: Search for regular files of the user bluher in the file system
bash: find Path -type f -user Regex -exec ls -l -s {} \; <|endoftext|>
<|endoftext|> english: Delete all broken symbolic links under '/usr/ports/packages' directory tree
bash: find -L Path -type l -exec rm -- {} + <|endoftext|>
<|endoftext|> english: removes the 4th-from to 6th-from last lines in file
bash: tac File | sed Program | tac <|endoftext|>
<|endoftext|> english: change permissions of files older than 30 days
bash: find Path -type f -mtime +Timespan -exec chmod Permission {} + <|endoftext|>
<|endoftext|> english: Rename recursively all files in the current directory tree that are called "article.xml" to "001_article.xml"
bash: find Path -name Regex -exec rename Regex {} \; <|endoftext|>
<|endoftext|> english: Search in current directory downwards all files whose owner is aa1 and grop is grp .
bash: find Path \( -user Regex Path Path Path \) -print <|endoftext|>
<|endoftext|> english: Search the file system for regular files whose names are shorter than 25 characters
bash: find Path -type f | grep -E -o Regex | cut -c Number <|endoftext|>
<|endoftext|> english: Remove all subdirectories of the current directory, except for "bar", "foo", "a", and "b"
bash: find Path -maxdepth Quantity -type d \( ! -name Regex -and ! -name Regex -and ! -name Regex -and ! -name Regex \) -delete <|endoftext|>
<|endoftext|> english: display all the files in the entire file system which have set uid bit set.
bash: find Path -perm -Permission -print <|endoftext|>
<|endoftext|> english: View the contents of "file.txt" with line numbers in the pager "less"
bash: cat -n File | less <|endoftext|>
<|endoftext|> english: Find '.git' directories in directory tree /home/madhu/release/workspace
bash: find Path -type d -name Regex <|endoftext|>
<|endoftext|> english: Prints sorted list of logged in users.
bash: w -h | cut -d Regex -f Number | sort | uniq <|endoftext|>
<|endoftext|> english: Print lines in "file1" that exist in "file2"
bash: join -t Regex -j Regex <( sort File ) <( sort File ) <|endoftext|>
<|endoftext|> english: Find files under current directory that contains the string '/bin/ksh'
bash: find Path -type f -exec grep -i -H Regex {} \; <|endoftext|>
<|endoftext|> english: Remove the files from the home directory tree that were last accessed more than 100 days ago, with confirmation
bash: find Path -atime +Timespan -exec rm -i {} \; <|endoftext|>
<|endoftext|> english: Find and delete all hard links in the /home directory tree to file1
bash: find Path -xdev -samefile Regex | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: Counts lines in each of *.php files in current folder with subfolders and prints total count as well.
bash: find Path -name Regex | xargs -I {} wc -l {} | sort -r <|endoftext|>
<|endoftext|> english: Change to directory 'foo' and print to terminal all received on standard input
bash: cd Directory | cat <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory which have read-write permission for owner and only read permission for group and others
bash: find Path -perm -Permission <|endoftext|>
<|endoftext|> english: Print absolute path of java executable
bash: readlink -f $( which Regex ) <|endoftext|>
<|endoftext|> english: find all the html files in the current folder which have been modified in the last 7 days
bash: find Path -mtime -Timespan -name Regex -print <|endoftext|>
<|endoftext|> english: find symbolic links with pattern` '*sysdep.c'
bash: find Path -lname Regex <|endoftext|>
<|endoftext|> english: search for files that are readable for everybody, have at least on write bit set but are not executable for anybody
bash: find Path -perm -Permission -perm Permission ! -perm Permission <|endoftext|>
<|endoftext|> english: Find all *stat files/directories under /usr
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Split "$INFILE" into files of at most "$SPLITLIMT" with a numeric suffix and a prefix "x_"
bash: split -d -l Quantity File Regex <|endoftext|>
<|endoftext|> english: Find all .java files starting from the current folder
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Save the latest modification time (in format "%T@ %t" of any file under "./$dir" to variable "timestamp"
bash: find Path -type f -printf "%T@ %t\\n" | sort -n -r -k Number | head -n Quantity <|endoftext|>
<|endoftext|> english: Find all regular files recursively in the current directory
bash: find Path -type f <|endoftext|>
<|endoftext|> english: Search the /root directory recursively for the regular file named "myfile" ignoring "work" directories
bash: find Path -name Regex -prune -or -name Regex -type f -print <|endoftext|>
<|endoftext|> english: Find files/directories modified within the last hour under current directory
bash: find Path -mtime -Timespan <|endoftext|>
<|endoftext|> english: Make directory "/tmp/googleTestMock"
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: Set up a remote port forward from port 10022 on host "server" to port 22 on localhost
bash: ssh -R Regex Regex <|endoftext|>
<|endoftext|> english: search for the regular/normal file 'myfile' in the folder /root excluding those that are present in the /root/work directory
bash: find Path -path Regex -prune -or -name Regex -type f -print <|endoftext|>
<|endoftext|> english: Search the current directory recursively for regular files last accessed more than 2 days ago
bash: find Path Path -f -atime +Timespan <|endoftext|>
<|endoftext|> english: delete all the ".bak" or swap files in kat folder
bash: find Path -type f \( -name Regex Path -name Regex \) -delete <|endoftext|>
<|endoftext|> english: Change every directory under "/var/www/html/" to have permissions 775
bash: find Path -type d -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: display the base name(name without extension) of all the ".NEF" files in the current folder
bash: find Path -name Regex -exec basename Regex Regex \; <|endoftext|>
<|endoftext|> english: Find all files in the current directory tree with size bigger than 5 MB and sort them by size
bash: find Path -size +Size -type f | xargs -r -I {} ls -S -s -h {} <|endoftext|>
<|endoftext|> english: Read a line from standard input with prompt "Continue (y/n)?" and save response in variable "choice"
bash: read -p Regex Regex <|endoftext|>
<|endoftext|> english: Remove all libGLE* files from the current directory tree
bash: find Path -name Regex | xargs -I {} rm -f {} <|endoftext|>
<|endoftext|> english: set variable "uname_m" to machine architecture, ie. x86_64
bash: uname -m <|endoftext|>
<|endoftext|> english: Receive pattern to search for on the standard input and print only matching part of lines from file 'f.html'
bash: cat File | grep -o <|endoftext|>
<|endoftext|> english: Copy all .pdf files in the ./work/ directory tree with size bigger then 2 MB and modified more than 5 days ago to the ./backup/ directory
bash: find Path -type f -name Regex -mtime +Timespan -size +Size | xargs -r -I {} cp -t Directory {} <|endoftext|>
<|endoftext|> english: Find out if there are any files on the system owned by user `account'
bash: find Path -path Regex -prune -or -user Regex -ls <|endoftext|>
<|endoftext|> english: Search the files from the current directory tree for "chrome"
bash: find Path -exec grep Regex {} \; <|endoftext|>
<|endoftext|> english: Find files whose pathnames contain "string" and print these pathnames replacing 'search string' with 'new string'
bash: find Path | xargs -I {} grep Regex File {} | sed Program <|endoftext|>
<|endoftext|> english: Write "2-1" to standard output and to "/sys/bus/usb/drivers/usb/unbind"
bash: echo Regex | tee File <|endoftext|>
<|endoftext|> english: Copy the current directory tree to "newdirpathname" preserving directory hierarchy
bash: find Path -depth -print | cpio -p -v -d Regex <|endoftext|>
<|endoftext|> english: Format each line as 3 columns based on extraneous columns
bash: awk Program Program | column -t <|endoftext|>
<|endoftext|> english: Set the value of "to_sort" to "$1" in a subshell which no longer exists after the pipeline completes
bash: echo Regex | read -a Regex <|endoftext|>
<|endoftext|> english: Find and remove multiple *.txt files
bash: find Path -type f -name Regex -exec rm -f {} \; <|endoftext|>
<|endoftext|> english: Recursively print all files and directories in the current directory tree
bash: tree Directory <|endoftext|>
<|endoftext|> english: Rename all .png files, changing the string "_h.png" into "_half.png".
bash: rename Regex Regex <|endoftext|>
<|endoftext|> english: Display each line in file.txt backwards
bash: rev File <|endoftext|>
<|endoftext|> english: search for the word "slrn" in all the files in the current folder
bash: find Path -exec grep -q Regex {} \; -print <|endoftext|>
<|endoftext|> english: Searches for 'something' in a large file and prints the matching line
bash: grep -n Regex File | head -n Quantity <|endoftext|>
<|endoftext|> english: Replace all instances of ";" with "\n" in "bla@some.com;john@home.com"
bash: echo Regex | sed -e Program <|endoftext|>
<|endoftext|> english: get the root user access
bash: su <|endoftext|>
<|endoftext|> english: Search for .pdf files
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all files/directories in level $i down the current directory with all positional parameters appended with the find command
bash: find -mindepth Quantity -maxdepth Quantity Path <|endoftext|>
<|endoftext|> english: list symbolic links under the directory "$directory"
bash: find Path -type l <|endoftext|>
<|endoftext|> english: Search for occurrences of string "main(" in the .c files from the current directory tree
bash: find Path -name Regex -print | xargs -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: Print bash environment variable array "fields" and its values
bash: set | grep Regex <|endoftext|>
<|endoftext|> english: Replace all occurrences of '2013 Magento Inc.' with '2012 Magento Inc.' in all files with '.php, '.xml' and '.phtml' extensions under current directory tree
bash: find Path -name Regex -print0 -or -name Regex -print0 -or -name Regex -print0 | xargs -0 -I {} sed -i Program File {} <|endoftext|>
<|endoftext|> english: Push the current directory path to the dirs stack
bash: pushd $( pwd ) <|endoftext|>
<|endoftext|> english: Print differences between the sorted content of file $1 and file $2, executing 'diff' with options from "${@:3}" array slice
bash: diff File <( sort File ) <( sort File ) <|endoftext|>
<|endoftext|> english: Remove all empty files in /tmp/ and below
bash: find Path -type f -empty -print | xargs -I {} rm -f {} <|endoftext|>
<|endoftext|> english: Move all files and directories not starting with "l" in "/mnt/usbdisk" to "/home/user/stuff/."
bash: mv File File <|endoftext|>
<|endoftext|> english: Find files under /some/path that are not executable by the owner
bash: find Path -type f ! -perm -Permission -ls <|endoftext|>
<|endoftext|> english: Find all files that are less than 50 bytes
bash: find Path -size -Size <|endoftext|>
<|endoftext|> english: Lists all paths to all subfolders in a current folder.
bash: ls -m -R File | sed -n Program <|endoftext|>
<|endoftext|> english: Replace all occurrences of "StringA" with "StringB" in the *.php and *.html files residing in the current directory tree
bash: find Path \( -name Regex -or -name Regex \) | xargs -I {} grep -l Regex {} | xargs -I {} sed -i -e Program {} <|endoftext|>
<|endoftext|> english: Search for "largecalculation" in all processes owned by the current user
bash: ps -u $( whoami ) | grep Regex <|endoftext|>
<|endoftext|> english: Search recursively through /mydir, outputting only the base (leaf) name of each file, directory, symlink etc. without any containing directories, that is the part following the last slash.
bash: find Path | xargs -I {} basename {} <|endoftext|>
<|endoftext|> english: display all files in the directory "dir" which have been accessed in the last 60 minutes
bash: find Path -amin -Quantity <|endoftext|>
<|endoftext|> english: Print contents of "file" as space separated hexadecimal bytes on a single line
bash: od -t x1 -A n File | tr -d Regex <|endoftext|>
<|endoftext|> english: Print the current directory
bash: find Path -maxdepth Quantity <|endoftext|>
<|endoftext|> english: find all files in the current directory whose size is 24 or 25 bytes.
bash: find Path -size -Size -size +Size -print <|endoftext|>
<|endoftext|> english: Find all the *.txt files in the current directory older than 48 hours
bash: find Path -maxdepth Quantity -name Regex -mtime +Timespan <|endoftext|>
<|endoftext|> english: list regular file which file name is NOT end with '.html' in current directory in current directory
bash: find Path -type f -not -name Regex <|endoftext|>
<|endoftext|> english: Display permissions, user, group, and full path for each file in the current directory tree
bash: tree -p -u -g -f <|endoftext|>
<|endoftext|> english: Give all directories in the /path/to/base/dir tree read and execute privileges
bash: find Path -type d -exec chmod Permission {} + <|endoftext|>
<|endoftext|> english: display all the files in the current folder which end with ".bash"
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all *.c files under and below the current directory that contain "wait_event_interruptible"
bash: find Path -name Regex -print | xargs -I {} grep Regex File {} <|endoftext|>
<|endoftext|> english: Show the last 10 .conf files found by `find' in the /etc directory
bash: find Path -maxdepth Quantity -name Regex | tail <|endoftext|>
<|endoftext|> english: Print the file sizes along with their paths for all *.txt (case insensitive) files/directories under current directory tree
bash: find Path -iname Regex -exec du -b {} + <|endoftext|>
<|endoftext|> english: Find all files/directories named 'foo.bar' in the entire filesystem
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: Exchanges the top two directories in the dirs stack.
bash: pushd <|endoftext|>
<|endoftext|> english: display all the files in the current folder expect perl shell and python fiels
bash: find Path -not -name Regex -not -name Regex -not -name Regex <|endoftext|>
<|endoftext|> english: Copy the executable "python2.7" in $PATH to "myenv/bin/python"
bash: cp $( which Regex ) File <|endoftext|>
<|endoftext|> english: Find all files/directories in entire file system less than 50 bytes
bash: find Path -size -Size <|endoftext|>
<|endoftext|> english: Save IP addresses of the host name in variable "ip"
bash: hostname -I <|endoftext|>
<|endoftext|> english: Find all files starting from / that belong to user1
bash: find Path -user Regex <|endoftext|>
<|endoftext|> english: Find all directories named "D" in the "A" directory tree
bash: find Path -type d -name Regex <|endoftext|>
<|endoftext|> english: Force create a symbolic link named "$*" to the canonical absolute path of "$1"
bash: ln -s -f $( readlink -f File ) Regex <|endoftext|>
<|endoftext|> english: Compress all *.img files using bzip2
bash: find Path -name Regex -exec bzip2 -v {} \; <|endoftext|>
<|endoftext|> english: search for the file test in the current folder
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Remove empty directories
bash: find Path -type d -exec rmdir --ignore-fail-on-non-empty {} + <|endoftext|>
<|endoftext|> english: Find all files that were last modified less than7 days ago under /home
bash: find Path -mtime -Timespan <|endoftext|>
<|endoftext|> english: Remove junk files modified more than 31 days ago recursively
bash: find Path -type f -mtime +Timespan -exec rm -f {} \; <|endoftext|>
<|endoftext|> english: Search for files which have read and write permission for their owner, and group, but which other users can read but not write to.
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: Saves list of logged in users in system together with 'USER' header in the 'b' variable.
bash: w | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: Set variable 'path' to name of current directory (without the containing directories) converted to lowercase.
bash: basename $( pwd ) | tr Regex Regex <|endoftext|>
<|endoftext|> english: Search /etc for files modified within the last 10 minutes
bash: find Path -type f -mmin -Quantity <|endoftext|>
<|endoftext|> english: Search appended data in "logfile.log" for "something" with a timeout of 3 seconds
bash: tail -f Regex | grep --line-buffered Regex | read -t Quantity <|endoftext|>
<|endoftext|> english: search all jpg images in current folder and rename them
bash: find Path -type f -name Regex -print0 | xargs -0 -I {} rename Regex {} <|endoftext|>
<|endoftext|> english: Display differences between files "a.txt" and "b.txt" side-by-side and do not output common lines.
bash: diff -a --suppress-common-lines -y File File <|endoftext|>
<|endoftext|> english: Print relative path of device of disk with UUID "b928a862-6b3c-45a8-82fe-8f1db2863be3"
bash: readlink File <|endoftext|>
<|endoftext|> english: display all normal/regular files in the folder "pathfolder"
bash: find Path -type f <|endoftext|>
<|endoftext|> english: Search for *pattern* in and below current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Print the difference between line 2 and 3 in file "$f"
bash: diff <( fold -w Quantity <( sed Program File ) ) <( fold -w Quantity <( sed Program File ) ) | awk Program <|endoftext|>
<|endoftext|> english: Search for the case insensitive pattern 'PATTERN' in all files under current directory tree and display the matched files
bash: find Path -print | xargs -I {} grep -l -i Regex {} <|endoftext|>
<|endoftext|> english: Creates temporary folder relative to directory '/path/to/dir'.
bash: mktemp -d -p Directory <|endoftext|>
<|endoftext|> english: Remount subtree "/outside" to "/inside" as a bind
bash: mount Regex Regex -o bind <|endoftext|>
<|endoftext|> english: Archive all directories in /path/to/directory/* (only command line arguments, no sub-directories) to files with .tar.gz extension transforming the full paths to relative paths
bash: find Path -maxdepth Quantity -type d -exec tar -z -c -p -v -f File {} \; <|endoftext|>
<|endoftext|> english: Saves printed calendar of February,1900 in positional variables.
bash: set -- $( cal DateTime DateTime ) <|endoftext|>
<|endoftext|> english: find  directory which case-insensitive name is too in currect directory
bash: find Path -iname Regex -type d <|endoftext|>
<|endoftext|> english: Recursively change the owner of all files in "/home/test" to "test"
bash: chown -R Regex File <|endoftext|>
<|endoftext|> english: Move all files that contain "Subject: \[SPAM\]" to "your_file"
bash: mv $( grep -l Regex | awk -F Regex Program ) File <|endoftext|>
<|endoftext|> english: Change to the directory pointed by variable TAG
bash: cd Directory <|endoftext|>
<|endoftext|> english: Find the top 5 big files
bash: find Path -type f -exec ls -s {} \; | sort -n -r | head - Quantity <|endoftext|>
<|endoftext|> english: Unzip all files matching "test1/*/*.gz"
bash: gunzip Regex <|endoftext|>
<|endoftext|> english: Numerically sort IPv4 addresses specified on standard input with presedence to first, second, third, then fourth octet
bash: tr Regex Regex | sort -n -u -t Regex -k Number -k Number -k Number -k Number | tr Regex Regex <|endoftext|>
<|endoftext|> english: find all the files in the current folder which have execute permission
bash: find Path Path <|endoftext|>
<|endoftext|> english: display all the html files in the current folder that have not been modified in the last 7*24 horus
bash: find Path -mtime +Timespan -name Regex -print <|endoftext|>
<|endoftext|> english: Send TERM signal to process with id listed in '/var/run/DataBaseSynchronizerClient.pid' file
bash: kill $( cat File ) <|endoftext|>
<|endoftext|> english: Ensure all 5 of UEDP0{1..5}_20120821.csv files exist, creating empty files for any missing ones (updates the file's timestamps)
bash: touch -a File <|endoftext|>
<|endoftext|> english: List all cron jobs for current user.
bash: crontab -l <|endoftext|>
<|endoftext|> english: create directory destdir
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: Find all *.jpg files under current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: delete what was typed in the command line and run "pwd" when button "\e[24~"
bash: bind Regex <|endoftext|>
<|endoftext|> english: Find all directories named 'files' under current directory and set read-write-execute permission for owner and group and no permission for other for those directories
bash: find Path -type d -name Regex -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Count the number of non localhost users
bash: who | grep -v Regex | wc -l <|endoftext|>
<|endoftext|> english: Find all regular files under $dir directory tree that are bigger than $size MB in size and print them along with their sizes in decreasing order of size
bash: find Path -type f -size +Size -printf '%s %p\n' | sort -r -n <|endoftext|>
<|endoftext|> english: Prints last modified file in a current folder.
bash: find Path -type f -printf '%T@ %p\n' | sort -n | tail - Quantity | cut -f Number -d Regex <|endoftext|>
<|endoftext|> english: change the owner of all the files in the current directory
bash: find Path -exec chown Regex {} + <|endoftext|>
<|endoftext|> english: Change permissions of all regular files from the current directory tree to 644
bash: find Path -type f -exec chmod Permission {} + <|endoftext|>
<|endoftext|> english: Find all target files outside the current working directory with symbolic links in the current working directory
bash: find Path -type l -exec readlink -f {} \; | grep -v $( readlink -f File ) <|endoftext|>
<|endoftext|> english: Recursively change all permissions under "theDirectory/" to 777(read,write,execute for all users)
bash: chmod -R Permission File <|endoftext|>
<|endoftext|> english: Find & Write Changes to a File and Print the Changes Using sed s//gpw
bash: find Path -type f -name Regex -exec sed -n Program File \; <|endoftext|>
<|endoftext|> english: find all executable files in /home directory.
bash: find Path -type f -perm Permission <|endoftext|>
<|endoftext|> english: Print a colon-separated list of all directories from the ~/code directory tree
bash: find Path -type d | tr Regex Regex | sed Program <|endoftext|>
<|endoftext|> english: Counts all files in a current folder and subfolders.
bash: find Path -type f -printf '\n' | wc -l <|endoftext|>
<|endoftext|> english: Find all regular files under current directory tree that match the regex 'tgt/etc/*' in their paths
bash: find Path -type f -name Regex | grep Regex <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory that were accessed more than 25 but less than 35 minutes ago
bash: find Path -amin +Quantity -amin -Quantity <|endoftext|>
<|endoftext|> english: find all read me files in a folder
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all symlinks under /myfiles directory
bash: find Path -type l <|endoftext|>
<|endoftext|> english: Force remove all files and folders in the physical current working directory
bash: rm -r -f $( pwd -P ) <|endoftext|>
<|endoftext|> english: Find all files/directories named 'file_name' under current directory tree
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Remove all *.swp files/directories under current directory
bash: find Path -name Regex Path Path {} Path <|endoftext|>
<|endoftext|> english: search for the file picasso in the folder /home/calvin/ (case insensitive search)
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: Find all directories by the name `httpdocs' on the system
bash: find Path -type d -name Regex <|endoftext|>
<|endoftext|> english: Find all files/directories that start with 'screen' (case insensitive) in their names under user's home directory tree
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: Set permissions to ug=rw,o= for files inside the ./default/files tree
bash: find Path -type f -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: split file /usr/bin/firefox into pieces per 1000 lines
bash: split -n Quantity File <|endoftext|>
<|endoftext|> english: Enables shell option 'expand_aliases'.
bash: shopt -s expand_aliases <|endoftext|>
<|endoftext|> english: find all the perl files in the current folder
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: display all the files in the current folder excluding search in the paths containing the folder having the word "mmm"
bash: find Path ! -path Regex <|endoftext|>
<|endoftext|> english: Find *log files/directories within a maximum of 3 levels of directories
bash: find Path -maxdepth Quantity -name Regex <|endoftext|>
<|endoftext|> english: List all of the subdirectories in the current directory with no trailing slash.
bash: ls -d File | cut -f Number -d Regex <|endoftext|>
<|endoftext|> english: Enable history and history expansion within a script
bash: set -o history -o histexpand <|endoftext|>
<|endoftext|> english: Display a dump of standard input as floating point values of double size
bash: od -t fD <|endoftext|>
<|endoftext|> english: Removes 5 oldest files in the current folder.
bash: ls -t File | tail - Quantity | xargs -I {} rm -f {} <|endoftext|>
<|endoftext|> english: Find all .gif files in the /var/www directory tree
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all .sh files in or below the current directory and move them to folder ~/back.scripts
bash: find Path -name Regex -print0 | xargs -0 -I {} mv {} File <|endoftext|>
<|endoftext|> english: Saves value '1' in the $PIPESTATUS variable and returns 0.
bash: false | tee File <|endoftext|>
<|endoftext|> english: Compress every file in the current directory that matches "*cache.html" and keep the original file
bash: gzip -k Regex <|endoftext|>
<|endoftext|> english: Rename all files in current directory with names starting with "fgh" so they start with "jkl" instead
bash: rename Regex Regex <|endoftext|>
<|endoftext|> english: Print a single line of numbers from "001" to "010"
bash: yes | head -n Quantity | awk Program <|endoftext|>
<|endoftext|> english: Replace all commas with tab characters in 'filename.csv' and page interactively through the result.
bash: sed Program File | less <|endoftext|>
<|endoftext|> english: Calculate md5 sum of file ${my_iso_file} and save it to variable 'md5'
bash: $( md5sum File | cut -b -Number ) <|endoftext|>
<|endoftext|> english: Copy file "exist" from directory "/file/that" to a new file named "file" in "/location/for/new"
bash: cp File File <|endoftext|>
<|endoftext|> english: Search the entire file hierarchy for files ending in '.old' and delete them.
bash: find Path -name Regex -delete <|endoftext|>
<|endoftext|> english: Find all regular files starting from level 3 of directory tree ~/container and move them to the current directory
bash: find Path -mindepth Quantity -type f -exec mv {} File \; <|endoftext|>
<|endoftext|> english: Run commands "df -k;uname -a" on server "192.168.79.134"
bash: echo Regex | ssh Regex <|endoftext|>
<|endoftext|> english: find all files that do not have execute permission to all
bash: find Path -type d ! -perm -Permission <|endoftext|>
<|endoftext|> english: change the ownership of all regular/normal files in the current directory after users confirmation
bash: find Path -type f -ok chown Regex {} \; <|endoftext|>
<|endoftext|> english: display all empty files in the current folder
bash: find Path -size Size <|endoftext|>
<|endoftext|> english: Gets domain name from dig reverse lookup.
bash: | grep Regex | grep -o Regex <|endoftext|>
<|endoftext|> english: Read a line from standard input into variable "response" ignoring backslash escapes and using the prompt "${1:-Are you sure? [y/N]} "
bash: read -r -p Regex Regex <|endoftext|>
<|endoftext|> english: Display a list of files with sizes in decreasing order of size of all the regular files under $dir directory tree that are bigger than $size in size
bash: find Path -type -f Path Path -print0 | xargs -0 -I {} ls -1 -h -s -S {} <|endoftext|>
<|endoftext|> english: Print short TXT record of domain o-o.myaddr.l.google.com from nameserver 8.8.8.8
bash: dig Regex Regex o-o.myaddr.l.google.com @8.8.8.8 <|endoftext|>
<|endoftext|> english: find md5sums of files named "file*.txt"
bash: md5sum File <|endoftext|>
<|endoftext|> english: Search for the regex "\$wp_version =" in all the regular files that end with '/wp-includes/version.php' (case insensitive) in their paths in directories/files taken from the glob pattern '/home/*//public_html/' and show the matched lines along with the file names
bash: find Path -type f -iwholename Regex -exec grep -H Regex {} \; <|endoftext|>
<|endoftext|> english: Output lines 16224 to 16482 of 'file', and stop reading 'file' after line 16482.
bash: awk Program Program <|endoftext|>
<|endoftext|> english: Search the current directory recursively for files last modified within the past 24 hours ignoring .swp files and paths ./es* and ./en*
bash: find Path -mtime Timespan -not \( -name Regex -or -path Regex -or -path Regex \) <|endoftext|>
<|endoftext|> english: Search for "facebook\|xing\|linkedin\|googleplus" in "access-log.txt" and print a count of the unique entries
bash: grep -i -o -h Regex File | sort | uniq -c | sort -n <|endoftext|>
<|endoftext|> english: Stores date of last month day in the 'lastdaymonth' variable.
bash: set $( cal DateTime DateTime | tr -s Regex Regex | tail - Quantity ) <|endoftext|>
<|endoftext|> english: displays all the files in the current folder
bash: find Path <|endoftext|>
<|endoftext|> english: Print your/dir if it's empty
bash: find Path -prune -empty <|endoftext|>
<|endoftext|> english: Find all directories that start with stat
bash: find Path -type d -iname Regex <|endoftext|>
<|endoftext|> english: Print the names of all files and directories in the current directory tree
bash: find Path -print <|endoftext|>
<|endoftext|> english: find all the text files in current folder and move all these to another folder appending ".bar" at the end of these files
bash: find Path -name Regex | xargs -I {} mv {} File <|endoftext|>
<|endoftext|> english: display all files in current folder with NULL separating each file
bash: find Path -print0 <|endoftext|>
<|endoftext|> english: check the type of files in the folder /usr/bin
bash: find Path | xargs -I {} file {} <|endoftext|>
<|endoftext|> english: display all the files in the current folder which are present in the path "./src/emacs"
bash: find Path -path Regex -prune -or -print <|endoftext|>
<|endoftext|> english: Recursively copy "source", "dir", and "target" to "dir" as a dry run
bash: rsync -r -v -c --delete --size-only --dry-run File File File File <|endoftext|>
<|endoftext|> english: display all the html files in the current folder
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: delete all files that have the extension "bam" in current directory
bash: find Path -name Regex | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: Search the current directory tree for regular files named `doc.txt' and print "found" for each of them
bash: find Path -type f -name Regex -printf "found\n" <|endoftext|>
<|endoftext|> english: Set variable 'rav' to the contents of 'var' spelled backwards.
bash: echo Regex | rev <|endoftext|>
<|endoftext|> english: find all the directories in the current folder which have been modified in 24 hours and move them to the folder  /path/to/target-dir
bash: find Path -type d -mtime Timespan -exec mv {} File \; <|endoftext|>
<|endoftext|> english: Find all TXT files in the current directory and copy them to directory "$HOME/newdir"
bash: find Path -name Regex -type f -not -path Regex -print0 | xargs -0 -I {} cp -t Directory {} <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory that were accessed 30 minutes ago
bash: find Path -amin Quantity <|endoftext|>
<|endoftext|> english: Change the owner of all files in the current directory tree excluding those who match "./var/foo*" to "www-data"
bash: find Path -not -iwholename Regex -exec chown Regex {} \; <|endoftext|>
<|endoftext|> english: Print differences between files in directories folder1 and folder2 recursively, with unified context, ignoring changes in the amount of white space
bash: diff -b -u Quantity File File <|endoftext|>
<|endoftext|> english: Creates temporary file with name formatted like expression in variable ${PROG}, and saves path to it in 'mytemp' variable.
bash: mktemp -t Regex <|endoftext|>
<|endoftext|> english: Find all files/directories under /proc and run ls command on each.
bash: find Path -exec ls {} \; <|endoftext|>
<|endoftext|> english: Disable jobs running in their own process group in the shell
bash: set Regex <|endoftext|>
<|endoftext|> english: find all the files in the current directory and sub-directories whose status was changed after /etc/fstab was modified
bash: find Path -cnewer File <|endoftext|>
<|endoftext|> english: Find all directories under and below /home/admin/public_html/, and change their permissions to 755
bash: find Path -type d -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Find all file in current directory with have .c extenstion & have 777 permission . delete then
bash: find Path -name Regex -and -perm -Permission | xargs -I {} rm -r -f {} <|endoftext|>
<|endoftext|> english: display all the directories in the current folder for the files which have not been accessed in the last 48 hours
bash: find Path -type d -atime +Timespan <|endoftext|>
<|endoftext|> english: Find all regular files that reside in the current directory tree and were last modified at least 1 day ago
bash: find Path -type f -mtime +Timespan <|endoftext|>
<|endoftext|> english: Archive all *html files using tar.
bash: find Path -type f -name Regex | xargs -I {} tar -c -v -f File File {} <|endoftext|>
<|endoftext|> english: find all the files that have been modified exactly 2 days ago
bash: find Path -mtime Timespan <|endoftext|>
<|endoftext|> english: Find all files that have additional permissions
bash: find Path -perm -Permission <|endoftext|>
<|endoftext|> english: Create a copy of the current working directory structure in the usr/project directory,
bash: find Path -type d -print | sed Program | xargs -I {} mkdir {} <|endoftext|>
<|endoftext|> english: Print "y" for each line in "file2.txt" found in "file1.txt" and a blank newline otherwise
bash: comm -2 File File | awk -F Regex Program <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory
bash: find Path -print <|endoftext|>
<|endoftext|> english: Update the timestamp of '/tmp/$$' to the current month and day
bash: touch -t $( date +%m%d0000 ) File <|endoftext|>
<|endoftext|> english: Count the number of regular files with case insensitive name pattern $srchfor under 'teste2' directory tree
bash: find Path -type f -iname Regex | wc -l <|endoftext|>
<|endoftext|> english: Recursively change owner to "www-data" of "/var/www/.gnome2", "/var/www/.config", and "/var/www/.config/inkscape"
bash: chown -R Regex File File File <|endoftext|>
<|endoftext|> english: Find all directories at level 3 of directory tree $from_dir
bash: find Path -mindepth Quantity -maxdepth Quantity -type d <|endoftext|>
<|endoftext|> english: Find all *.c files in /usr/src bigger than 100k
bash: find Path -name Regex -size +Size -print <|endoftext|>
<|endoftext|> english: searches through the root filesystem ("/") for the file named Chapter1.
bash: find Path -name Regex -type f <|endoftext|>
<|endoftext|> english: recursively look for files ending in either .py or .py.server
bash: find Path \( -name Regex -or -name Regex \) <|endoftext|>
<|endoftext|> english: The cpio command is a copy command designed to copy files into and out of a cpio or tar archive, automatically preserving permissions, times, and ownership of files and subdirectories.
bash: find Path | cpio -p -d -u -m -v Regex <|endoftext|>
<|endoftext|> english: display all the regular files in current folder excluding all the directories and all the sub directories having "normal" in their name
bash: find Path \( \( -path Regex -type d \) -or -path Regex \) -prune -or -type f -print <|endoftext|>
<|endoftext|> english: search for all non empty regular/normal files in the current folder and empty them ie., delete the content not the file
bash: find Path -type f -maxdepth Quantity -not -empty -print0 | xargs -0 -i -I {} cp File {} {} <|endoftext|>
<|endoftext|> english: Find all files/directories under '/etc' directory tree that have been modified after '/etc/motd'
bash: find Path -newer File <|endoftext|>
<|endoftext|> english: SSH with trusted X11 forwarding into "user@remoteToRemote_IP" from SSH connection "user@remote_IP"
bash: ssh -X -Y -t Regex ssh -X -Y -t Regex <|endoftext|>
<|endoftext|> english: Force create a hard link named '/home/user/Musik/youtube converted/aesthesys~ I Am Free, That Is Why I'"'"'m Lost..mp3' with target '/home/user/Musik/mix-2012-13/aesthesys~ I Am Free, That Is Why I'"'"'m Lost..mp3'
bash: ln -f File Regex <|endoftext|>
<|endoftext|> english: Decompresses each of "*bz2" files under the current folder, redirecting output to the standard out, and prints only fourth of comma-separated fields.
bash: find Path -name Regex -print0 | xargs -I {} -0 bzip2 -d -c {} | cut -f Number -d Regex <|endoftext|>
<|endoftext|> english: Find all files under /home/username/public_html/modules  and set their permission to 640
bash: find Path -type f -exec chmod Permission {} + <|endoftext|>
<|endoftext|> english: Get domain name from dig reverse lookup.
bash: | grep Regex | grep -o Regex <|endoftext|>
<|endoftext|> english: Find all files/directories containing 'farm' in their names under '/usr/share' directory tree
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Print the list of files in the current directory tree skipping Git files
bash: find Path -path Regex -prune -or -type f <|endoftext|>
<|endoftext|> english: copy a files from one folder to all the folder in the /raid which have an extension local_sd_customize.
bash: find Path -type d -name Regex -ok cp File {} \; <|endoftext|>
<|endoftext|> english: Find all *text files/directories under current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Copy all files with '.png' (case insensitive) extension under '/home/mine' directory tree to '/home/mine/pngcoppies/' directory with new names constructed by prepending 'copy' in their names
bash: find Path -iname Regex -printf "%P\n " | xargs -I {} -n Quantity cp {} File <|endoftext|>
<|endoftext|> english: Find all orm.* files/directories under current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Print the first 5 decompressed lines of compressed file "$line"
bash: zcat Regex | head -n Quantity <|endoftext|>
<|endoftext|> english: Find all directories under the current directory that is on the same filesystem, execute "/tmp/count_em_$$" with the directory as an argument, sort the result numerically from least value to greatest value
bash: find Path -mount -type d -print0 | xargs -0 -n Quantity  | sort -n <|endoftext|>
<|endoftext|> english: Find all files/directories that start with 'test' in their names under current directory tree
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Search the dir_data directory and all of its sub-directories for regular files and remove the execute permission for all while adding the write permission for the user.
bash: find Path -type f -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Print each logged in user's username and full name
bash: finger -l | grep Regex | tr -s Regex | cut -d Regex -f Number | sort | uniq <|endoftext|>
<|endoftext|> english: display all the files in the current folder excluding those ending with ".disabled" in sorted order
bash: find Path | grep -v Regex | sort <|endoftext|>
<|endoftext|> english: Display the mount point of a device file "$path"
bash: mount | grep Regex | awk Program <|endoftext|>
<|endoftext|> english: Display an infinite number of lines consisting of "y", until the user presses the Q key.
bash: yes | more <|endoftext|>
<|endoftext|> english: Send SIGKILL signal to processes ID 18581, 18582, and 18583, killing them instantly.
bash: kill - Regex Regex Regex Regex <|endoftext|>
<|endoftext|> english: change the owner and group of all the files in the folder  /usr/lpp/FINANCIALS
bash: find Path -print | xargs -I {} chown Regex {} <|endoftext|>
<|endoftext|> english: Recursively removes $TMPDIR folder, prompting user on each deletion.
bash: rm -r File <|endoftext|>
<|endoftext|> english: Search the xargstest/ directory recursively for files matching pattern 'file??'
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Recursively changes group ownership of every folder in a current directory to the name of that folder.
bash: find Path -type d | sed -e Program -e Program | grep -v Regex | awk Program | xargs -I {} chgrp {} <|endoftext|>
<|endoftext|> english: Change permission to 755 for all directories under $d directory tree
bash: find Path -type d -print0 | xargs -0 -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: list regular files under the current directory ending in .mbox putting a null between each file found
bash: find Path -type f -wholename Regex -print0 <|endoftext|>
<|endoftext|> english: Search PATH for utilities called "rename", display the type of file (script, executable, ...) for each match found.
bash: which -a Regex | xargs -I {} file -L {} <|endoftext|>
<|endoftext|> english: Prints strings with text "texthere" in all files recursively in a current folder.
bash: grep -r Regex File <|endoftext|>
<|endoftext|> english: Change permissions of ".bash_logout", ".bashrc", and ".profile" to 444
bash: chmod Permission File File File <|endoftext|>
<|endoftext|> english: Delete everything in the current directory
bash: find Path -mindepth Quantity -maxdepth Quantity -print0 | xargs -0 -I {} rm -r -f {} <|endoftext|>
<|endoftext|> english: Search the current directory for files whose names start with "messages." ignoring SVN and CVS files
bash: find Path \( -name Regex ! -path Regex ! -path Regex \) -exec grep -I -w Regex {} + <|endoftext|>
<|endoftext|> english: Split the output of "tar [your params]" into files of at most 500 MiB in size and use prefix "output_prefix"
bash: tar File File | split -b Size File Regex <|endoftext|>
<|endoftext|> english: Find all files in the current directory tree and count them
bash: find | wc -l <|endoftext|>
<|endoftext|> english: Print a count of duplicate lines in "filename" sorted by most frequent
bash: sort File | uniq -c | sort -n -r <|endoftext|>
<|endoftext|> english: display the contents of all the files in the current folder which start with test ( case insensitive search )
bash: find Path -iname Regex -exec cat {} \; <|endoftext|>
<|endoftext|> english: Split "complete.out" into files with at most "$lines_per_file" lines each
bash: split --lines Quantity File <|endoftext|>
<|endoftext|> english: Show all of the .conf files in Pat's user folder and subdirectories using the less pager
bash: find Path -iname Regex | less <|endoftext|>
<|endoftext|> english: Find PHP files with abstract classes
bash: find Path -type f -name Regex -exec grep --with-filename -c Regex {} \; | grep Regex <|endoftext|>
<|endoftext|> english: Remove all "work" directories residing in /usr/ports and below
bash: find Path -name Regex -type d -print -exec rm -r -f {} \; <|endoftext|>
<|endoftext|> english: Change directory to parent directory and do not resolve any symlinks in the resulting path
bash: cd -L Directory <|endoftext|>
<|endoftext|> english: Find all regular files in the current directory tree whose names end with ".DS_Store" and delete them
bash: find Path -type f -name Regex -ls -delete <|endoftext|>
<|endoftext|> english: find all the empty files and folders in your system
bash: find Path -empty <|endoftext|>
<|endoftext|> english: display all the files in the current folder which have been modified in the last 5*24 hours
bash: find Path -mtime -Timespan <|endoftext|>
<|endoftext|> english: Find all TXT files in the current directory and copy them to directory "$HOME/newdir"
bash: find Path -name Regex -type f -print0 | sort -z -u | xargs -0 -I {} cp -t Directory {} <|endoftext|>
<|endoftext|> english: Delete all regular files that reside in directory $OUTPUTDIR and below, and were last modified more than 7 days ago
bash: find Path -type f -mtime +Timespan -delete <|endoftext|>
<|endoftext|> english: Merge data in file1 and file2 where second field is common in both files
bash: join -j Regex <( sort -k Number File ) <( sort -k Number File ) <|endoftext|>
<|endoftext|> english: Search for "search term" in a sorted list of all files under current directory
bash: find Path | awk Program | sort -n | awk Program | xargs -I {} grep -d skip Regex {} <|endoftext|>
<|endoftext|> english: Write "\n/usr/local/boost_1_54_0/stage/lib" to standard output and append to "/etc/ld.so.conf"
bash: echo -e Regex | tee -a File <|endoftext|>
<|endoftext|> english: delete all the text files starting with the name "oldStuff" in the file system
bash: find Path -name Regex -delete <|endoftext|>
<|endoftext|> english: Print content of all files ending with '*.foo' under the current directory
bash: cat $( find Path -name Regex ) <|endoftext|>
<|endoftext|> english: Print the average time of 4 ping requests to "www.stackoverflow.com"
bash: ping -c Quantity Regex | awk -F Regex Program <|endoftext|>
<|endoftext|> english: Print /some/dir/ if it's empty
bash: find Path -maxdepth Quantity -empty <|endoftext|>
<|endoftext|> english: Recursively changes group ownership on everything in the 'public_html' folder to 'website' group.
bash: chgrp --recursive Regex File <|endoftext|>
<|endoftext|> english: Find all files/directories with 644 permission in entire file system
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: Calculate md5 checksum of the list of all files/dirs in /path recursively including dot files and excluding the patterns 'run', 'sys', 'tmp' and 'proc', then check the checksum against the checksum saved in /tmp/file
bash: ls -a -l -R -I File -I File -I File -I File -I File File | md5sum -c File <|endoftext|>
<|endoftext|> english: Save only the digits in "$filename" to variable "number"
bash: echo Regex | tr -c -d Regex <|endoftext|>
<|endoftext|> english: find  files which  full path name is /tmp/foo/bar under foo directory and print
bash: find Path -path Regex -print <|endoftext|>
<|endoftext|> english: Prints running process that has id 'pid' with command line arguments.
bash: pstree -a Regex <|endoftext|>
<|endoftext|> english: Print a list of differing files
bash: diff -q File File | cut -f Number -d Regex <|endoftext|>
<|endoftext|> english: Dump the character output of "echo 'hi'"
bash: echo Regex | od -c <|endoftext|>
<|endoftext|> english: Find files/directories writable by group and others under the /path directory
bash: find Path -perm -Permission <|endoftext|>
<|endoftext|> english: Set permissions of all directories under "/path/to/base/dir" to 755
bash: chmod Permission $( find Path -type d ) <|endoftext|>
<|endoftext|> english: Search subdirectory `Linux' in the current directory for file `teste.tex'
bash: find Path -path Regex -name Regex <|endoftext|>
<|endoftext|> english: Find all regular files that contain 'linux' (case insensitive) in their names under '/root' directory tree
bash: find Path -type f -iname Regex <|endoftext|>
<|endoftext|> english: Search the current directory tree for regular files omitting directory `omit-directory'
bash: find Path \( -name Regex -prune -or -type f \) -print <|endoftext|>
<|endoftext|> english: find all normal/regular files in current folder and replace a word in all these files
bash: find Path -type f -print0 | xargs -0 -I {} sed -i Program File {} <|endoftext|>
<|endoftext|> english: Locates bzip2 command in a system.
bash: which Regex <|endoftext|>
<|endoftext|> english: search for files which are writable by either their owner or their group
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: search for the word "foo" in all the regular/normal files with the name "file-pattern" in the directory "/path/to/dir"
bash: find Path -type f -name Regex -print0 | xargs -I {} -0 grep -l Regex {} <|endoftext|>
<|endoftext|> english: Find files in the current directory tree whose names match regular expression "^.*~$\|^.*#$"
bash: find Path -regex Regex <|endoftext|>
<|endoftext|> english: Find all *.page (case insensitive) files/directories under current directory and run ~/t.sh for each of them with the file path as argument, then sort the output
bash: find Path -iname Regex -exec  \; | sort <|endoftext|>
<|endoftext|> english: display all the normal/regular files in the current folder
bash: find Path -type f <|endoftext|>
<|endoftext|> english: Print command history
bash: history <|endoftext|>
<|endoftext|> english: Verbosely compresses all files on sixth and seventh depth level keeping original files in place.
bash: bzip2 -k -v File <|endoftext|>
<|endoftext|> english: Print amount of space available on the file system containg path to the current working directory.
bash: df File | awk Program <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory tree that start with 'test' in their names without descending into directories with the same name pattern
bash: find Path -name Regex -prune <|endoftext|>
<|endoftext|> english: Delete all files with inode number 804180
bash: find Path -inum Quantity -exec rm {} \; <|endoftext|>
<|endoftext|> english: display all the files in the current folder which are in the path ending with the folder f
bash: find Path -path Regex <|endoftext|>
<|endoftext|> english: List all files and directories residing in the current directory and below
bash: find | xargs -I {} ls {} <|endoftext|>
<|endoftext|> english: Find directories owned by user news with permissions 775
bash: find Path -user Regex -type d -perm Permission -print <|endoftext|>
<|endoftext|> english: Print the second line of output of "ls -l"
bash: ls -l | head - Quantity | tail - Quantity <|endoftext|>
<|endoftext|> english: delete all the empty files in the current directory only if they are ok and the user has the permission to delete them
bash: find Path -empty -ok rm File \; <|endoftext|>
<|endoftext|> english: Search directory foo for files containing "foo/bar" in their full names
bash: find Path -path Regex -print <|endoftext|>
<|endoftext|> english: Find all broken symlinks under current directory
bash: find Path -xtype l <|endoftext|>
<|endoftext|> english: Find all directories by the name `httpdocs' on the system
bash: find Path -type d -name Regex <|endoftext|>
<|endoftext|> english: Remove all broken symbolic links in /usr/ports/packages
bash: find -L Path -type l -delete <|endoftext|>
<|endoftext|> english: find files in current folder using name patterns and sort the display the file names in the sorted order
bash: find Path -name Regex | awk -F Regex Program | sort -t Regex -k Number | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: Find all .java files  under current directory
bash: find Path -print | grep Regex <|endoftext|>
<|endoftext|> english: Find all directories named 'octave' under current directory tree
bash: find Path -name Regex -type d <|endoftext|>
<|endoftext|> english: Search  in current directory downwards all files whose owner is aa1 or whose name is myfile .
bash: find Path \( -user Regex -or -name Regex \) -print <|endoftext|>
<|endoftext|> english: Find all files/directories under 'A' directory tree excluding directory 'A/a' and all of it's contents
bash: find Path ! -path Regex -and ! -path Regex <|endoftext|>
<|endoftext|> english: find not case sensitive all directories that names are 'apt'
bash: find Path -type d -iname Regex <|endoftext|>
<|endoftext|> english: Search the current directory recursively for files containing "string"
bash: find Path -type f -exec grep -l Regex {} \; <|endoftext|>
<|endoftext|> english: Find all directories matching the regex '.texturedata' in their names under '/path/to/look/in/' directory tree
bash: find Path -type d | grep Regex <|endoftext|>
<|endoftext|> english: find the file "dateiname" in the current folder ( case insensitive search)
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: search the file "myfile.txt" in home folder
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: change the owner of all the files in the file system which belong to the user with the uid 999
bash: find Path -user Regex -exec chown Regex {} \; <|endoftext|>
<|endoftext|> english: List all files under current directory
bash: find Path -type f | xargs -I {} ls {} <|endoftext|>
<|endoftext|> english: Search the current directory and two levels below for file `teste.tex'
bash: find Path -maxdepth Quantity -name Regex <|endoftext|>
<|endoftext|> english: Removes first and last parts of path $path and saves the result in 'finalName' variable.
bash: basename -- $( dirname -- Regex ) <|endoftext|>
<|endoftext|> english: Copy a large sparse file "sparse-1" to "sparse-1-copy"
bash: rsync --sparse File File <|endoftext|>
<|endoftext|> english: Find files/directories that are owned by the user 'syslog' in entire filesystem
bash: find Path -user Regex <|endoftext|>
<|endoftext|> english: List the full path of each directory in the current working directory
bash: tree -d -f -i -L Number $( pwd ) <|endoftext|>
<|endoftext|> english: Print a list of case insensitive duplicate filenames in the current directory
bash: ls | sort -f | uniq -i -d <|endoftext|>
<|endoftext|> english: gives the chars in line 5 and chars 5 to 8 of line 5, in tst.txt
bash: head - Quantity File | tail - Quantity | cut -c Number <|endoftext|>
<|endoftext|> english: Find *.tex files in the current directory tree that contain text "documentclass"
bash: find Path -type f -name Regex -print0 | xargs -0 -I {} grep -l Regex {} <|endoftext|>
<|endoftext|> english: Find all files under path_to_dir
bash: find Path -type f <|endoftext|>
<|endoftext|> english: Print the path to the pipe created for process substitution
bash: echo <( true ) <|endoftext|>
<|endoftext|> english: Find all *.mp3 files in file system with more than 10MB and delete them using rm command
bash: find Path -type f -name Regex -size +Size -exec rm {} \; <|endoftext|>
<|endoftext|> english: find all the directories in current folder and delete them
bash: find Path -type d -delete <|endoftext|>
<|endoftext|> english: Print a tab separated table in "table.txt" with cell borders
bash: sed -e Program Program | column -t -s Regex | awk Program <|endoftext|>
<|endoftext|> english: find all the files in the current folder that have been accessed in today from the start of the day
bash: find Path -daystart -atime Timespan <|endoftext|>
<|endoftext|> english: Extract protocol part from URL.
bash: echo Regex | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: Find all directories under foldername directory and set their permission to 755
bash: find Path -type d -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Format space separated fields in "filename" as a table
bash: column -t -s Regex File <|endoftext|>
<|endoftext|> english: Find files on the system whose names begin with either x or X
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Processes all files recursively in /var/spool/cron/tabs folder and filters out all strings with '#'.
bash: grep -v Regex -R File <|endoftext|>
<|endoftext|> english: search  in current directory downwards all files whose status has changed more then 7  days ago
bash: find Path -ctime +Timespan -print <|endoftext|>
<|endoftext|> english: Search for the regex 'pattern_to_search' in all files under '/directory/containing/files' and show the matched lines as well as the file names
bash: find Path -type f -exec grep -H Regex {} + <|endoftext|>
<|endoftext|> english: Search the current directory tree for regular files omitting directory `omit-directory'
bash: find Path -name Regex -prune -or -type f -print <|endoftext|>
<|endoftext|> english: Count the number of the regular files residing under and below ./randfiles/
bash: find Path -type f | wc -l <|endoftext|>
<|endoftext|> english: Remove all regular files found in and below /path
bash: find Path -type f -print | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: Find files in the current directory tree that have one link
bash: find Path -links Quantity <|endoftext|>
<|endoftext|> english: Create intermediate directories foo and bar as required and directory foo/bar/baz
bash: mkdir -p Directory <|endoftext|>
<|endoftext|> english: Find all files under current directory and count the output line number
bash: find Path -type f | wc -l <|endoftext|>
<|endoftext|> english: Find all Read Only files
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: Find all *.txt files under the current directory whose names are not "File.txt"
bash: find Path -maxdepth Quantity -type f -regex Regex -not -name Regex <|endoftext|>
<|endoftext|> english: Print the contents of "numbers.txt"
bash: cat File <|endoftext|>
<|endoftext|> english: Search for files/directories which have read and write permission for their owner, and group and only read permission for others
bash: find Path -perm -Permission <|endoftext|>
<|endoftext|> english: Find all *.txt, *.html files under /basedir that match the case insensitive pattern *company* in their names
bash: find Path \( -iname Regex -and \( -iname Regex -or -iname Regex \) \) -print0 <|endoftext|>
<|endoftext|> english: Display users who are currently logged in
bash: finger | sed Program <|endoftext|>
<|endoftext|> english: List all files in /home/bozo/projects directory tree that were modified exactly one day ago.
bash: find Path -mtime Timespan <|endoftext|>
<|endoftext|> english: find all readable files
bash: find Path Path <|endoftext|>
<|endoftext|> english: Edit current user's cron job list with editor specified by EDITOR environment variable, or default /usr/bin/editor if EDITOR is not set.
bash: crontab -e <|endoftext|>
<|endoftext|> english: Display file type description of 'file-name' based on contents.
bash: file File <|endoftext|>
<|endoftext|> english: find all the perl files in /var/www
bash: find Path -type f -name Regex -print <|endoftext|>
<|endoftext|> english: search for text files in the current folder which do not have write access to others
bash: find Path -type f \( -iname Regex ! -perm -Permission \) <|endoftext|>
<|endoftext|> english: Change directory to the directory containing the executable file of command "oracle"
bash: cd $( which Regex | xargs -I {} dirname {} ) <|endoftext|>
<|endoftext|> english: Copy file or folder linked to by "file" to "file"
bash: cp -r -f --remove-destination $( readlink File ) File <|endoftext|>
<|endoftext|> english: Search the current directory tree for files whose names end in "rb" or "js"
bash: find Path -regextype posix-egrep -regex Regex <|endoftext|>
<|endoftext|> english: Gets IP address of first listed network interface in system.
bash: ifconfig | grep Regex | grep -v Regex | head -n Quantity | cut -f Number -d Regex | cut -f Number -d Regex <|endoftext|>
<|endoftext|> english: Find all files under /home/username/public_html/sites/default/files and set their permission to 660
bash: find Path -type f -exec chmod Permission {} + <|endoftext|>
<|endoftext|> english: Move all files that contain "Subject: \[SPAM\]" to "DIR"
bash: grep -l Regex | xargs -I {} mv {} File <|endoftext|>
<|endoftext|> english: Remove with prompting all files starting in /mydir that have not been accessed in over 100 days
bash: find Path -atime +Timespan -ok rm {} \; <|endoftext|>
<|endoftext|> english: Print all unique file paths under "dir1" compared to "dir2"
bash: comm -2 -3 <( find Path | sed Program | sort ) <( find Path | sed Program | sort ) | sed Program <|endoftext|>
<|endoftext|> english: Find all regular files that reside in the current directory tree and were last modified more than 5 days ago
bash: find Path -type f -mtime +Timespan <|endoftext|>
<|endoftext|> english: Print the full real path of "/dev/disk/by-uuid/$1" followed by "is mounted"
bash: echo $( readlink -f File ) Regex Regex <|endoftext|>
<|endoftext|> english: find all directory list which have empty list in /tmp directory
bash: find Path -type d -empty <|endoftext|>
<|endoftext|> english: sleep for 5 seconds
bash: sleep Timespan <|endoftext|>
<|endoftext|> english: Copies files 'src/prog.js' and 'images/icon.jpg' with fully-defined path to '/tmp/package' directory.
bash: cp --parents File File File <|endoftext|>
<|endoftext|> english: extract "passwd.tar.gz" with verbose output
bash: tar -x -v -z -f File <|endoftext|>
<|endoftext|> english: Remove all .mpg files in the /home/luser directory tree
bash: find Path -type f -name Regex -exec rm -f {} \; <|endoftext|>
<|endoftext|> english: display all text files in current folder
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Remove all files from the current directory tree whose names end in "~"
bash: find Path -iname Regex | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: Unzip all files that match "*.gz" in the current directory and subdirectories to stdout and search for "test"
bash: find Path -name Regex -exec zcat {} + | grep Regex <|endoftext|>
<|endoftext|> english: Prints process tree for each process owned by user 'username'.
bash: ps -a -u Regex | awk Program | xargs -I {} pstree {} <|endoftext|>
<|endoftext|> english: find all files in the file system which belong to no user or which have no user
bash: find Path -nouser <|endoftext|>
<|endoftext|> english: Change owner of "my_test_expect.exp" to "el"
bash: chown Regex File <|endoftext|>
<|endoftext|> english: Print the list of the current directory's subdirectories
bash: find Path -maxdepth Quantity -type d <|endoftext|>
<|endoftext|> english: Prefix all files and folders in the current directory with "PRE_"
bash: ls | xargs -I {} mv {} File <|endoftext|>
<|endoftext|> english: print readline bindings that use key code '\\e\\C-k'
bash: bind -P | grep Regex <|endoftext|>
<|endoftext|> english: Find files under /some/path that are not executable
bash: find Path -type f ! -perm -Permission -ls <|endoftext|>
<|endoftext|> english: Recursively finds strings with 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.
bash: grep -E -R Regex File <|endoftext|>
<|endoftext|> english: find all files in the current folder which are of size 0 bytes.
bash: find Path -type f -empty <|endoftext|>
<|endoftext|> english: Display all lines containing PROBES in the current kernel's compile-time config file.
bash: grep Regex $( uname -r ) <|endoftext|>
<|endoftext|> english: Replace all instances of "STRING_TO_REPLACE" with "STRING_TO_REPLACE_IT" in "index.html" and write the output to standard output and "index.html"
bash: sed Program File | tee File <|endoftext|>
<|endoftext|> english: Find all files in the current directory tree whose names are "file_name", except for those with pathnames matching pattern "./dirt to be Excluded/*"
bash: find Path -iname Regex ! -path Regex <|endoftext|>
<|endoftext|> english: Find all *.txt files under current directory and print their timestamps and paths
bash: find Path -name Regex -printf "%T+ %p\n" <|endoftext|>
<|endoftext|> english: The  command runs all the directories (-type d) found in the $LOGDIR directory wherein a file's data has been modified within the last 24 hours (-mtime +0) and compresses them (compress -r {}) to save disk space.
bash: find Path -type d -mtime +Timespan -exec compress File {} \; <|endoftext|>
<|endoftext|> english: Print details for all files in the ./work directory tree with extension .sh that were modified less than 20 days ago
bash: find Path -type f -name Regex -mtime -Timespan | xargs -r -I {} ls -l {} <|endoftext|>
<|endoftext|> english: Search for the extended regex expanded by"$MONTH\/$YEAR.*GET.*ad=$ADVERTISER HTTP\/1" in the decompressed contents of the /var/log/apache2/access*.gz files that are newer than ./tmpoldfile and older than ./tmpnewfile
bash: find Path -type f -newer File ! -newer File Path | xargs -I {} zcat {} | grep -E Regex -c <|endoftext|>
<|endoftext|> english: Find files with size more than 200557600B and which are more than 2 days old under  ${userdir}/${i}/incoming directory and remove them
bash: find Path -mtime +Timespan -type f -size +Size -exec rm {} \; <|endoftext|>
<|endoftext|> english: Remove all files whose names end with "~" in the /home/peter directory tree
bash: find Path -name Regex -print0 | xargs -0 -I {} rm {} <|endoftext|>
<|endoftext|> english: Find all files/directories under '/var/log' directory tree that bave been modified today (from the start of the day)
bash: find Path -daystart -mtime Timespan <|endoftext|>
<|endoftext|> english: Find all flies under current directory excluding *.png files and print the file paths (with match count) that match the case insensitive regex 'foo=' in their contents
bash: find Path -not -name Regex -or -type f -print | xargs -I {} grep -i -c -l Regex {} <|endoftext|>
<|endoftext|> english: Find all directories under /home/me/target_dir_1
bash: find Path -type d <|endoftext|>
<|endoftext|> english: Set the timestamp of B to the same one as A
bash: touch -r File File <|endoftext|>
<|endoftext|> english: Print the names of the directories from the paths expanded by the glob pattern /path/to/directory/*
bash: find Path -maxdepth Quantity -type d -exec basename -a {} + <|endoftext|>
<|endoftext|> english: display all the files in the current folder along with the hidden files with the depth
bash: find Path -name Regex -print Path -name Regex -print -depth <|endoftext|>
<|endoftext|> english: Lists content of compressed text file.
bash: zless Regex <|endoftext|>
<|endoftext|> english: Recursively change the owner of all "*.txt" files under "/mydir" to "root"
bash: find Path -type f -name Regex -execdir chown Regex {} \; <|endoftext|>
<|endoftext|> english: Send ping requests to hostname specified by variable "c" for 1 second.
bash: ping -w Timespan Regex <|endoftext|>
<|endoftext|> english: find files which modification time is  one day ago
bash: find Path -mtime Timespan <|endoftext|>
<|endoftext|> english: find all the php files in the current folder (discards any directory which has an extension of ".php")
bash: find Path -name Regex -type f <|endoftext|>
<|endoftext|> english: print all files in the current directory and all subdirectories
bash: find Path -print <|endoftext|>
<|endoftext|> english: prints a line 19 lines from the line containing PATTERN
bash: tac | sed -n Program | tac <|endoftext|>
<|endoftext|> english: Find all files under current directory and show their file information
bash: find Path -type f -exec file {} \; <|endoftext|>
<|endoftext|> english: Remove all .sh files in the current directory tree whose names begin with "new"
bash: find Path -name Regex -exec rm -f {} + <|endoftext|>
<|endoftext|> english: Replace all occurrence of "toreplace" with "replaced" in all files under /home/www
bash: find Path -maxdepth Quantity -type f -print0 | xargs -0 -I {} sed -i Program {} <|endoftext|>
<|endoftext|> english: Find all image.pdf files/directories under ./polkadots with null character as the delimiter
bash: find Path -name Regex -print0 <|endoftext|>
<|endoftext|> english: List jobs and their process ids and print them by replacing newline with '^'
bash: jobs -l | tr Regex Regex <|endoftext|>
<|endoftext|> english: search the file myfile.txt in the current folder
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: Lists all files in a '/home/dreftymac/' folder and subfolders without recursion.
bash: ls File <|endoftext|>
<|endoftext|> english: Change directory to the real path of the directory containing the current script
bash: cd $( readlink -f $( dirname Regex ) ) <|endoftext|>
<|endoftext|> english: find all the files that have not been modified in the last 24 hours
bash: find Path -mtime +Timespan <|endoftext|>
<|endoftext|> english: Search the current user's home directory and its sub-directories for any files accessed after alldata.tar was last accessed and add them to that same tar archive.
bash: find Path -newer File -exec tar -u -v -f File {} \; <|endoftext|>
<|endoftext|> english: Copy all files in current directory that do not match */exlude-path/* in their paths to /destination/ preserving directory structure
bash: find Path -type f -not -path Regex -exec cp --parents {} File \; <|endoftext|>
<|endoftext|> english: when using vi-insert keymap bind command "\C-v{}\ei" to key "{"
bash: bind -m Regex Regex <|endoftext|>
<|endoftext|> english: ssh into "hostname" as user "buck"
bash: ssh -l Regex Regex <|endoftext|>
<|endoftext|> english: Getting a detailed list of files/dirs
bash: find Path -name Regex -ls <|endoftext|>
<|endoftext|> english: Find all files in the /myfiles directory tree following symbolic links
bash: find -L Path <|endoftext|>
<|endoftext|> english: Copy recursively "/source/backup" to "/destination" preserving symbolic links, modification times, and permissions
bash: rsync -r -t -v -p -l File File <|endoftext|>
<|endoftext|> english: get a PID of a process
bash: jobs -x Regex Regex <|endoftext|>
<|endoftext|> english: Remount the root file system with read and write permission
bash: mount -o rw,remount -t rootfs Regex <|endoftext|>
<|endoftext|> english: list all the directories in the folder httpdocs
bash: find Path -type d <|endoftext|>
<|endoftext|> english: Delete all contents form the files that contain the case insensitive regex 'stringtofind' in maximum 1 level down the / directory excluding other partitions
bash: find Path -maxdepth Quantity -xdev -type f -exec grep -i Regex -l {} \; -exec sed -i Program {} \; <|endoftext|>
<|endoftext|> english: SSH into "hostname" on port 22 as user "myName"
bash: ssh -p Regex Regex <|endoftext|>
<|endoftext|> english: Find files/directories named 'somename.txt' under current directory tree
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Calculate the md5 sum of the tar archive of "dir"
bash: tar -c File | md5sum <|endoftext|>
<|endoftext|> english: Find all regular files with name pattern $filename under $fileloc directory tree
bash: find Path -type f -prune -name Regex -print <|endoftext|>
<|endoftext|> english: Create a symbolic link in directory "new" for each file in "original" directory tree
bash: find Path -type f -exec ln -s {} Regex \; <|endoftext|>
<|endoftext|> english: Find all regular files that reside in the current directory tree and were last modified more than 7 days ago
bash: find Path -type f -mtime +Timespan <|endoftext|>
<|endoftext|> english: Removes all files from current folder but 5 newest ones.
bash: find Path -maxdepth Quantity -type f -printf '%T@ %p\0' | sort -r -z -n | awk Program | xargs -0 -I {} rm -f {} <|endoftext|>
<|endoftext|> english: Mount "proc" file system on "/var/snmp3/proc"
bash: mount -t proc Regex Regex <|endoftext|>
<|endoftext|> english: Print the icmp sequence number and ping time of each request to "127.0.0.1"
bash: ping -c Quantity -n Regex | awk -F Regex -v Program Program <|endoftext|>
<|endoftext|> english: Print the number of 'processors' (both physical and virtual/hypethereading cores) less 1.
bash: cat File | awk Program | tail - Quantity <|endoftext|>
<|endoftext|> english: Show system information: kernel name, hostname, kernel release and version, machine architecture, processor type, hardware platform, and operating system type.
bash: uname -a <|endoftext|>
<|endoftext|> english: Change string "searc" to "replace" in all files in directory hierarchy
bash: find Path -type f -exec sed -i Program {} \; <|endoftext|>
<|endoftext|> english: Dump "input_file" as a 2 byte hexadecimal, character, and octal value and view the contents in "less"
bash: od -x -c -b File | less <|endoftext|>
<|endoftext|> english: For each line of the sorted output of both file1 and file2, print lines whose first field of file2 does not appear as first field of file1.
bash: join -v Quantity <( sort File ) <( sort File ) <|endoftext|>
<|endoftext|> english: list all *.java files under the src directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Print crontabs of all users in system, skipping messages that some users don`t have crontab.
bash: cat File | sed Program | sh | grep -v Regex <|endoftext|>
<|endoftext|> english: Search directory trees /tmp and /var/tmp for "testfile.txt"
bash: find Path Path -iname Regex <|endoftext|>
<|endoftext|> english: Find all '*~' files under current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Print all file/directory names without white space safety under the /proc directory
bash: find Path | xargs <|endoftext|>
<|endoftext|> english: Search the current directory tree for files and directories whose names do not end in ".exe" and ".dll"
bash: find Path -not -name Regex -not -name Regex <|endoftext|>
<|endoftext|> english: display all the trace files (".trc") from the folder $DBA/$ORACLE_SID/bdump/ which have not been accessed in the last 7*24 hours
bash: find Path -mtime +Timespan <|endoftext|>
<|endoftext|> english: Recursively change ownership of "~/.npm" to the current user
bash: chown -R $( whoami ) File <|endoftext|>
<|endoftext|> english: Recursively change owner to "amzadm" and group to "root" of all files in "/usr/lib/python2.6/site-packages/awscli/"
bash: chown Regex -R File <|endoftext|>
<|endoftext|> english: Find all 777 permission directories and use chmod command to set permissions to 755
bash: find Path -type d -perm Permission -print -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: List all files under current directory that are greater than 10000000x512 bytes in size
bash: find Path -type f -size +Size -print | xargs -I {} ls -l -d {} | more <|endoftext|>
<|endoftext|> english: Find regular files in the current directory tree that have the user executable bit set
bash: find Path -type f -perm -Permission <|endoftext|>
<|endoftext|> english: Create a rsa key of 2048 bits with comment "michael" and store it in file "key".
bash: ssh-keygen -b Quantity -t rsa -f File -C Regex <|endoftext|>
<|endoftext|> english: Find all files in /home/user/ that were created or changed 10 minutes ago
bash: find Path -cmin Quantity -print <|endoftext|>
<|endoftext|> english: Recursively finds file some_file_name.xml file and prints strings with "PUT_YOUR_STRING_HERE" preceding each found string with file name.
bash: find Path -type f -name Regex -exec grep -H Regex {} \; <|endoftext|>
<|endoftext|> english: Print last four bytes of string '0a.00.1 usb controller some text device 4dc9'
bash: echo Regex Regex Regex Regex Regex Regex Regex | rev | cut -b Number | rev <|endoftext|>
<|endoftext|> english: Search all the regular files in the current directory tree for "example"
bash: find Path -type f -print0 | xargs -r -0 -I {} grep -F Regex {} <|endoftext|>
<|endoftext|> english: Find all files whose names end with "~" in the /home/peter directory tree, following symlinks, and delete them
bash: find -L Path -name Regex -exec rm {} + <|endoftext|>
<|endoftext|> english: display all the files in the current folder which are present in the path "./sr*sc"
bash: find Path -path Regex <|endoftext|>
<|endoftext|> english: List .log files from the current directory tree
bash: find Path -name Regex -exec echo {} \; <|endoftext|>
<|endoftext|> english: bind word "foobar" to key code "\e[24~"
bash: bind Regex <|endoftext|>
<|endoftext|> english: Write standard input to standard output and to "foobar.txt"
bash: tee File <|endoftext|>
<|endoftext|> english: Search the /storage/sdcard0/tencent/MicroMsg/ directory tree for JPG files
bash: find Path -type f -iname Regex -print0 <|endoftext|>
<|endoftext|> english: Copy a comlex directory tree from one machine o another while preserving copy permissions and ownership
bash: find Path -depth -print | cpio -o -O Regex <|endoftext|>
<|endoftext|> english: delete all the regular files in the temp folder which have not been changed in the last 15*24 hours
bash: find Path -ctime +Timespan -type f -exec rm {} \; <|endoftext|>
<|endoftext|> english: search for the word "methodNameHere" in all the python files in the folder "/mycool/project/" and display color on the matched lines in the output
bash: find Path -type f -name Regex -print0 | xargs -I {} -0 grep -H --color "methodNameHere" {} <|endoftext|>
<|endoftext|> english: Search the .java files from the current directory tree for TODO lines
bash: find Path -name Regex -exec grep -i -n Regex {} \; <|endoftext|>
<|endoftext|> english: Show directory sizes in KB and sort to give the largest at the end
bash: find Path -type d -exec du -s -k {} \; | sort -n -k Number <|endoftext|>
<|endoftext|> english: Format "$line" as a table
bash: echo Regex | column -t <|endoftext|>
<|endoftext|> english: Report file systems disk usage using POSIX output format.
bash: df -P <|endoftext|>
<|endoftext|> english: Copy a file xyz.c to all the .c files present in the C directory and below
bash: find Path -name Regex | xargs -n Quantity -I {} cp File {} <|endoftext|>
<|endoftext|> english: Find all *.txt files/directories under current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Removes files 'junk1', 'junk2', 'junk3'.
bash: rm File File File <|endoftext|>
<|endoftext|> english: find all the files starting with "config" in the folder Symfony ( case insensitive search)
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: extract /path/to/my_archive.tar.xz to /path/to/extract and preserve permissions.
bash: tar -x -p -v -f File -C Directory <|endoftext|>
<|endoftext|> english: Remove Mac OS X Desktop Services Store files
bash: find Path -name Regex -exec rm {} \; <|endoftext|>
<|endoftext|> english: display all the files in the folder /home which have the setuid bit enabled
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: Report file system containing the current directory disk usage
bash: df File <|endoftext|>
<|endoftext|> english: find the regular/normal file "myfile" in the folder /root
bash: find Path -name Regex -type f <|endoftext|>
<|endoftext|> english: Find all directories under and below directory "folder_name", and change their permissions to 775
bash: find Path -type d -exec chmod Permission File \; <|endoftext|>
<|endoftext|> english: display all the files in the directory modules
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all directories whose status were changed $FTIME days ago
bash: find Path -type d -ctime Timespan <|endoftext|>
<|endoftext|> english: Print each line that is found only once in "file1" and "file2" combined
bash: sort File File | uniq -u <|endoftext|>
<|endoftext|> english: Mount "cpuset" filesystem on "/cpuset/"
bash: mount -t cpuset Regex Regex <|endoftext|>
<|endoftext|> english: Print all non-hidden files in the current directory and its subdirectories
bash: find Path -not -path Regex <|endoftext|>
<|endoftext|> english: Find files in the current directory tree whose size is greater than 24000 bytes
bash: find Path -size +Size <|endoftext|>
<|endoftext|> english: Save the user name of the current user to variable "x"
bash: whoami <|endoftext|>
<|endoftext|> english: Find files larger than 50k
bash: find Path -size +Size <|endoftext|>
<|endoftext|> english: Find files with 777 permissions and change them to 755
bash: find Path -type f -perm Permission -print -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Counts all *.mod files in a /boot/grub/ folder.
bash: ls -l File | wc -l <|endoftext|>
<|endoftext|> english: display all the files in the home folder which are smaller than 500 bytes
bash: find Path -size -Size <|endoftext|>
<|endoftext|> english: Search all .java files residing in the current directory tree and modified at least 7 days ago for string "swt"
bash: find Path -name Regex -mtime +Timespan -print0 | xargs -0 -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: Find all *.mp3 files in entire file system greater than 10MB and delete them
bash: find Path -type f -name Regex -size +Size -exec rm {} \; <|endoftext|>
<|endoftext|> english: search for files which are writable by either their owner or their group
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: Read a single character from standard input into variable "key" without backslash escapes and using the prompt "Press any key to continue..."
bash: read -n Quantity -r -p Regex Regex <|endoftext|>
<|endoftext|> english: find all the jpg files in current folder and sort them
bash: find Path -type f | grep -i Regex | sort <|endoftext|>
<|endoftext|> english: Prints last modified file in a current folder with modification time.
bash: find Path -type f -printf '%TY-%Tm-%Td %TH:%TM: %Tz %p\n' | sort -n | tail -n Quantity <|endoftext|>
<|endoftext|> english: Read a single character from standard input into variable "doit" with prompt "Do that? [y,n]"
bash: read -n Quantity -p Regex Regex <|endoftext|>
<|endoftext|> english: Find all files that belong to group developer
bash: find Path -group Regex <|endoftext|>
<|endoftext|> english: Display all lines containing "IP_MROUTE" in the current kernel's compile-time config file.
bash: cat $( uname -r ) | grep Regex <|endoftext|>
<|endoftext|> english: find all the files in the current directory which have been modified in the  last 6 days.
bash: find Path -atime +Timespan <|endoftext|>
<|endoftext|> english: display all the regular/normal files in the current folder which are modified after a file
bash: find Path -type f -newer File <|endoftext|>
<|endoftext|> english: find  case-insensitive StringBuffer in all *.java files
bash: find Path -type f -name Regex -exec grep -i -l Regex {} \; <|endoftext|>
<|endoftext|> english: Delete all files/directories named 'sample' (case insensitive) under '/home/user/Series/' directory tree as super user
bash: find Path -iname Regex -print0 | xargs -0 -I {} rm -r {} <|endoftext|>
<|endoftext|> english: Verbosely compresses all files on fourth and fifth depth level keeping original files in place.
bash: bzip2 -k -v File <|endoftext|>
<|endoftext|> english: Search for 'sometext' in all the files with '.txt' extension under current directory tree and also print the filenames
bash: find Path -name Regex -exec grep Regex {} \; -print <|endoftext|>
<|endoftext|> english: Search for a pattern "can't" in all the files with the name "file-containing-can't" in the current directory tree
bash: find Path -name Regex -exec grep Regex {} \; -print <|endoftext|>
<|endoftext|> english: Display current system's kernel name, kernel release and version, and machine architecture
bash: uname -s -r -v -m <|endoftext|>
<|endoftext|> english: Creates temporary file in $appdir variable with name formatted like expression in variable ${template}, and saves path to it in 'launcherfile' variable.
bash: mktemp -p Directory Regex <|endoftext|>
<|endoftext|> english: Find all files beneath the current directory that end with the extension .java and contain the characters StringBuffer.  Print the name of the file where a match is found.
bash: find Path -type f -name Regex -exec grep -l Regex {} \; <|endoftext|>
<|endoftext|> english: Find all directories named essbase under /fss/fin
bash: find Path -type d -name Regex -print <|endoftext|>
<|endoftext|> english: Decompress 'file.gz' to standard output and execute the output in bash
bash: gzip -d --stdout Regex | bash <|endoftext|>
<|endoftext|> english: change owner and group of the file "/path/to/yourapp" to root
bash: chown -v Regex File <|endoftext|>
<|endoftext|> english: Find command will list of all files & directories from current directory , before listing echo command will display ' List of files & Directory '
bash: find Path -exec echo Regex {} \; <|endoftext|>
<|endoftext|> english: Save the date 222 days before today to the variable 'date_222days_before_TodayDay'
bash: $( date --date Regex +"%d" ) <|endoftext|>
<|endoftext|> english: Search the home directory tree for files modified less than 7 days ago
bash: find Path -mtime -Timespan <|endoftext|>
<|endoftext|> english: Display environment variable "_" of the current shell
bash: set | grep Regex <|endoftext|>
<|endoftext|> english: Create a symbolic link in the current directory for each .jpg file under "dir"
bash: ln -s $( find Path -name Regex ) Regex <|endoftext|>
<|endoftext|> english: display a list of all the files in the file system which do not belong to any user and search only in jfs and jfs2 file systems
bash: find Path -nouser \( -fstype jfs -or -fstype jfs2 \) -ls <|endoftext|>
<|endoftext|> english: Save the first line of "$j" into variable "k" in ksh
bash: echo Regex | read Regex <|endoftext|>
<|endoftext|> english: Get the directory with least access time under current directory
bash: find Path -type d -printf "%A@ %p\n" | sort -n | tail -n Quantity | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: Print the last mounted drive
bash: mount | tail - Quantity | sed Program <|endoftext|>
<|endoftext|> english: Find all files/directories starting with 'readme' (case insensitive) under '/usr/share/doc' directory tree
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Delete all .bam files in the current directory tree
bash: find Path -name Regex | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: Recursively change the owner to "ec2-user" and group to "apache" of all files in "/vol/html"
bash: chown -R Regex File <|endoftext|>
<|endoftext|> english: Treat references to unset variables as errors
bash: set -o nounset <|endoftext|>
<|endoftext|> english: find all files in etc which have been changed in the last 1 day
bash: find Path -daystart -ctime -Timespan <|endoftext|>
<|endoftext|> english: Find all files in directory tree "dirname"
bash: find Path -exec echo Regex {} \; <|endoftext|>
<|endoftext|> english: Set the 'verbose' shell option causing bash to print shell input lines as they are read
bash: set -v <|endoftext|>
<|endoftext|> english: Find all files that were last accessed less than7 days ago under /home
bash: find Path -mtime -Timespan <|endoftext|>
<|endoftext|> english: Find files in the /var/log folder which were modified an hour or more ago
bash: find Path -mmin +Quantity <|endoftext|>
<|endoftext|> english: Remount "/mnt/mountpoint" as read only
bash: mount Regex -o remount,ro <|endoftext|>
<|endoftext|> english: Search for all non-hidden files
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: display the name of all directories in the current folder and do not search in sub directories ( mindepth ensures that the current folder name is removed from the output)
bash: find Path -type d -maxdepth Quantity -mindepth Quantity -exec basename {} \; <|endoftext|>
<|endoftext|> english: Gets MAC address of en0 network interface.
bash: ifconfig Regex | grep -o -E Regex <|endoftext|>
<|endoftext|> english: Find files changed in the last 1 day
bash: find Path -mtime -Timespan -type f <|endoftext|>
<|endoftext|> english: Rename all regular files under current directory tree with inode number 31467125 to 'new_name.html'
bash: find Path -type f -inum Quantity -exec mv {} File \; <|endoftext|>
<|endoftext|> english: search for the files "foo.txt" in the current folder and rename it to foo.xml
bash: find Path -name Regex -execdir rename Regex {} \; <|endoftext|>
<|endoftext|> english: Find deb packages in the current directory recursively
bash: find Path -type f -and -iname Regex <|endoftext|>
<|endoftext|> english: Remove the files or directories 'bin/node', 'bin/node-waf', 'include/node', 'lib/node', 'lib/pkgconfig/nodejs.pc' and 'share/man/man1/node' with superuser privilege
bash: rm -r -f File File File File File File <|endoftext|>
<|endoftext|> english: Search the current directory tree for *.c and *.asm files, ignoring the case
bash: find Path -type f \( -iname Regex -or -iname Regex \) <|endoftext|>
<|endoftext|> english: Finds recursively all files in '/path/' excluding folders dir1, dir2 and all like *.dst, that contain 'pattern', and prints matched strings with string number and file name.
bash: grep --exclude-dir Directory -r -n -w Regex -e Regex <|endoftext|>
<|endoftext|> english: Copy "/path/to/source" to '/path/to/dest' in remote "username@computer"
bash: rsync -r File File <|endoftext|>
<|endoftext|> english: Display total apparent size of a file
bash: du -s -b <|endoftext|>
<|endoftext|> english: find all the files that have been changed exactly 24 hours ago
bash: find Path -ctime Timespan -type f <|endoftext|>
<|endoftext|> english: Print all unique strings in $1.tmp file.
bash: cat File | sort -u <|endoftext|>
<|endoftext|> english: Find all files/directories owned by the user 'bob' under '/home' directory tree
bash: find Path -user Regex <|endoftext|>
<|endoftext|> english: Find all the files that end with the extension “.java” in the current directoy tree
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Gets IP address of first network interface which name matches pattern "venet0:0\|eth0".
bash: ifconfig | grep -A Quantity Regex | grep Regex | sed -r Program | head - Quantity <|endoftext|>
<|endoftext|> english: find all directory list which have empty list in /tmp directory .
bash: find Path -type d -empty <|endoftext|>
<|endoftext|> english: find files which have all permissions to all the users in the current directory
bash: find Path -type f -perm Permission -print <|endoftext|>
<|endoftext|> english: find all files read less than 1 minute ago
bash: find Path -amin -Quantity <|endoftext|>
<|endoftext|> english: Find recursively all Python files in the current directory and search them for the word ‘import’
bash: find Path -name Regex | xargs -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: Print the newest *.txt file under current directory with timestamp and path
bash: find Path -name Regex -printf "%T@ %p\n" | sort | tail - Quantity <|endoftext|>
<|endoftext|> english: List all regular files in /var/www and below that have changed in the last 10 minutes
bash: find Path -cmin -Quantity -type f -printf "%c %pn" <|endoftext|>
<|endoftext|> english: Find all foo.mp4 files in the current directory tree and print the pathnames of their parent directories
bash: find Path -name Regex -exec dirname {} \; <|endoftext|>
<|endoftext|> english: Read a line from standard input into variable "PASSWORD"
bash: read Regex <|endoftext|>
<|endoftext|> english: Print the full path of executable "lshw"
bash: which Regex <|endoftext|>
<|endoftext|> english: Print all files/directories under ... directory by terminating their paths with a null character
bash: find Path -print0 <|endoftext|>
<|endoftext|> english: Save standard input to variable 'stdin' until the first character encoded as '\004' is read
bash: read -d $( echo -e Regex ) Regex <|endoftext|>
<|endoftext|> english: find regular/normal files in the current folder
bash: find Path -type f <|endoftext|>
<|endoftext|> english: Identify CMS version/releases accross all your Wordpress websites
bash: find Path -type f -iwholename Regex -exec grep -H Regex {} \; <|endoftext|>
<|endoftext|> english: Report only total size of file systems in 1T blocks.
bash: df --total -B Size | tail -n Quantity | sed Program File <|endoftext|>
<|endoftext|> english: change the permissions of all the regular/normal files in the current folder
bash: find Path -type f -exec chmod Permission {} + <|endoftext|>
<|endoftext|> english: find all the files in the folder "myfiles" which have not been accessed in the last 30 days
bash: find Path -atime +Timespan <|endoftext|>
<|endoftext|> english: display a long listing of all the files in the /var folder which are bigger than 10MB. print0 is used to handle the files which have new lines in their names
bash: find Path -size +Size -print0 | xargs -0 -I {} ls -l -S -h {} <|endoftext|>
<|endoftext|> english: Resolve symbolic link of file "/foo/bar/baz"
bash: readlink -e File <|endoftext|>
<|endoftext|> english: find all regular/normal files in current folder which have been modified in the last 60 minutes
bash: find Path -type f -mtime -Timespan <|endoftext|>
<|endoftext|> english: Show manual of the find utility
bash: man Regex <|endoftext|>
<|endoftext|> english: List all files under current directory matching the regex '.*\.\(c\|h\|cpp\)'
bash: find Path -type f -regex Regex -exec ls {} \; <|endoftext|>
<|endoftext|> english: bind word "pwd\n" to key code "\e[24~"
bash: bind Regex <|endoftext|>
<|endoftext|> english: Search the specified user for the given "filename"
bash: find Path -user Regex -iname Regex <|endoftext|>
<|endoftext|> english: Find all files whose names do not begin with "zsh" on ext3 file systems
bash: find Path -fstype ext3 -name Regex <|endoftext|>
<|endoftext|> english: Download "http://archive.ubuntu.com/ubuntu/pool/universe/s/splint/splint_3.1.2.dfsg1-2.diff.gz", unzip it, and view the output in "less"
bash: curl Regex Regex | gunzip Regex | less <|endoftext|>
<|endoftext|> english: Go to directory named "~" (not home directory)
bash: cd Directory <|endoftext|>
<|endoftext|> english: Search for first match of the case insensitive regex 're' in all *.coffee files under current directory
bash: find Path -name Regex -exec grep -m Quantity -i Regex {} \; <|endoftext|>
<|endoftext|> english: Count the number of times each person is logged in on the system
bash: who | awk Program | sort | uniq -c | sort -n <|endoftext|>
<|endoftext|> english: Find all the files in entire file system with the extensions txt or doc, as well as any file larger than 5MB in size
bash: find Path \( -name Regex -or -name Regex -or -size +Size \) <|endoftext|>
<|endoftext|> english: Set permissions for all regular files under /var/www to 755
bash: find Path -type f -print0 | xargs -0 -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: Find files owned by no group
bash: find Path -nogroup <|endoftext|>
<|endoftext|> english: Remove everything in a current folder without prompting.
bash: rm -r -f File <|endoftext|>
<|endoftext|> english: Read 10 bytes from $0 and print them by replacing the set '\000-\377' with '#'
bash: head -c Quantity File | tr Regex Regex <|endoftext|>
<|endoftext|> english: Counts all files in a DIR_NAME folder and subfolders.
bash: find Path -type f | wc -l <|endoftext|>
<|endoftext|> english: Allow all users to execute '$pathToShell"myShell.sh"'
bash: chmod Permission File <|endoftext|>
<|endoftext|> english: recursively delete, without prompting, directories under /data/bin/test, that are older than 10 days and where the name starts with a number
bash: find Path -type d -mtime +Timespan -name Regex -exec rm -r -f {} \; <|endoftext|>
<|endoftext|> english: Mount "device_name" on "mount_point"
bash: mount Regex Regex <|endoftext|>
<|endoftext|> english: Recursively compress every file in the current directory tree and keep the original file
bash: gzip -k -r Regex <|endoftext|>
<|endoftext|> english: display all the regular/normal files in the current folder which have been modified in the last 24 hours
bash: find Path -mtime Timespan -type f <|endoftext|>
<|endoftext|> english: Search for the extended grep regex 'expr' in all files with '.c' and '.h' extension under current directory tree
bash: find Path -name Regex | xargs -I {} grep -E Regex {} <|endoftext|>
<|endoftext|> english: Change the owner of all files in "/empty_dir/" to "root" using at most 10 files at a time
bash: ls File | xargs -n Quantity -I {} chown Regex {} <|endoftext|>
<|endoftext|> english: Isolate first comma-delimited field of each line in "file", discard consecutive duplicates, and search "file" for first matching occurrence of that field.
bash: cut -d Regex -f Number File | uniq | xargs -I {} grep -m Quantity {} File <|endoftext|>
<|endoftext|> english: Display differences between file1 and file2 side-by-side.
bash: diff -y File File <|endoftext|>
<|endoftext|> english: Searches the manual pages with descriptions in section 3, that name begins with lowercase letter.
bash: apropos Regex Regex Regex | grep Regex <|endoftext|>
<|endoftext|> english: Go into the first directory whose name contains 1670
bash: cd $( find Path -maxdepth Quantity -type d | grep Regex ) <|endoftext|>
<|endoftext|> english: Prints random line from file $FILE.
bash: sort --random-sort File | head -n Quantity <|endoftext|>
<|endoftext|> english: Removes trailing and starting newlines from file
bash: tac File | sed -e Program | tac | sed -e Program <|endoftext|>
<|endoftext|> english: Print the list of files in the home directory tree whose names begin with "Foto"
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Search the current directory recursively for MOV files, following symlinks
bash: find Path -iname Regex -follow <|endoftext|>
<|endoftext|> english: Print the number of lines for each *.txt file from the $DIR directory tree
bash: find Path -name Regex -exec wc -l {} \; <|endoftext|>
<|endoftext|> english: search for al cpp files in current folder and replace all expect the parent directory name of these files and display it them sorted order
bash: find Path -name Regex | sed -e Program | sort | uniq <|endoftext|>
<|endoftext|> english: Find all the files that are not named "MyCProgram.c" in the current directory only and without regards to case.
bash: find Path -maxdepth Quantity -not -iname Regex <|endoftext|>
<|endoftext|> english: Read the raw input of "/dev/input/mice" as hexadecimal bytes with 3 bytes per line
bash: cat File | od -t x1 -w Size <|endoftext|>
<|endoftext|> english: find all files ending with "js.compiled" in current folder (print0 is used to handle files with newlines in their names)
bash: find Path -name Regex -print0 <|endoftext|>
<|endoftext|> english: Traverse the filesystem just once, listing setuid files and directories into /root/suid.txt and large files into /root/big.txt.
bash: find Path \( -perm -Permission -fprintf File '%#m %u %p\n' \) -and Path \( -size +Size -fprintf File '%-10s %p\n' \) <|endoftext|>
<|endoftext|> english: Find all files/directories in level 2 down the current directory
bash: find Path -mindepth Quantity -maxdepth Quantity <|endoftext|>
<|endoftext|> english: Check if a drive with UUID "$UUID" is mounted
bash: mount | grep $( readlink -f File ) <|endoftext|>
<|endoftext|> english: Find all files/directories that start with 'a1a2' and end with 'txt' in their names and move their parent directories to '/home/spenx/dst/' directory
bash: find Path -name Regex | xargs -n Quantity -I {} dirname {} | xargs -I {} mv {} File <|endoftext|>
<|endoftext|> english: Count the number of times that a single "-----------\n" separated record contains both "A=2" and "dummy=2" and the number of records that do not have "dummy=2" in compressed file "file.gz"
bash: zcat Regex | awk -v Program Program <|endoftext|>
<|endoftext|> english: Copy all regular files whose names end in "~" from the /path directory tree to ~/backups/
bash: find Path -type f -name Regex -print0 | xargs -0 -I {} cp -a {} File <|endoftext|>
<|endoftext|> english: Delete all empty directories and directories that contain only empty directories under current directory
bash: find Path -type d -empty -exec rmdir -v -p --ignore-fail-on-non-empty {} + <|endoftext|>
<|endoftext|> english: find all php files in the folder  /var/www/
bash: find Path -type f -iname Regex -print <|endoftext|>
<|endoftext|> english: Find all files on the system that are world writeable
bash: find Path -perm -Permission <|endoftext|>
<|endoftext|> english: Search the current directory recursively for regular files, skipping hidden files in the current directory
bash: find Path -type f -print <|endoftext|>
<|endoftext|> english: Report file system containing path to /dir/inner_dir/ disk usage human-readable.
bash: df -h File <|endoftext|>
<|endoftext|> english: Search the current directory tree for files whose name is ".note", case insensitive
bash: find Path -iname Regex | sort -r <|endoftext|>
<|endoftext|> english: Search the current directory and all of its sub-directory for any PDF files.
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: locate large files (> 100 MB) in /home/ for 'cleaning'
bash: find Path -type f -size +Size -print0 | xargs -0 -I {} rm {} <|endoftext|>
<|endoftext|> english: Find all *.txt files/directories under current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all files that have either a .php or a .js extension
bash: find Path -regextype posix-egrep -regex Regex <|endoftext|>
<|endoftext|> english: Convert the first 16 characters in "/dev/random" to a single hexadecimal value
bash: head File -c Quantity | od -t x1 -w Size | head -n Quantity | cut -d Regex -f Number | tr -d Regex <|endoftext|>
<|endoftext|> english: Dump the character output of 'echo `echo "Ho ho ho"`'
bash: echo $( echo Regex ) | od -c <|endoftext|>
<|endoftext|> english: Find all *.axvw files/directories under current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: find all normal/regular files in the current directory
bash: find Path -type f -print <|endoftext|>
<|endoftext|> english: find  file which case-insensitive name is too in currect directory
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: search in the current folder for the file with the name "test" ( case insensitive search )
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: List all files with name "someFile" and their modification time under the current directory sorted by oldest modified to newest modified
bash: find Path -name Regex -printf "%p:%T@\n" | sort -t Regex -k Number <|endoftext|>
<|endoftext|> english: Print file system disk space usage in 1 KiB blocks of the current directory's file system
bash: df -k File <|endoftext|>
<|endoftext|> english: find all text files in user/directory/ and display the last line
bash: find Path -name Regex -mtime Timespan -type f -exec awk Program {} \; <|endoftext|>
<|endoftext|> english: Search for line number 111 in file "active_record.rb"
bash: nl -b a -n ln File | grep Regex <|endoftext|>
<|endoftext|> english: Search the current directory tree for regular files that contain "string"
bash: find Path -type f -print0 | xargs -0 -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: find all files under the /etc directory and display any IP address patterns in them
bash: find Path -exec grep Regex {} \; <|endoftext|>
<|endoftext|> english: Find all files/directories named '.todo' under $STORAGEFOLDER directory tree and print their parent paths
bash: find Path -name Regex -printf '%h\n' <|endoftext|>
<|endoftext|> english: show all the regular/normal files in the folder /home/user/demo
bash: find Path -type f -print <|endoftext|>
<|endoftext|> english: Find all .mp3 files with more then 10MB and delete them from root directory .
bash: find Path -type f -name Regex -size +Size -exec rm {} \; <|endoftext|>
<|endoftext|> english: Find all files/directories named 'game' under current directory tree
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory and print their paths
bash: find Path -exec echo {} \; <|endoftext|>
<|endoftext|> english: Change permissions of "mksdcard" to 755
bash: chmod Permission File <|endoftext|>
<|endoftext|> english: Remove all files and directories in the current directory by answering with "y" to all prompts
bash: yes | rm -i File <|endoftext|>
<|endoftext|> english: Counts lines in each *.php file.
bash: find Path -name Regex -type f | xargs -I {} wc -l {} <|endoftext|>
<|endoftext|> english: Execute /usr/bin/find with $* arguments where current directory is the first argument
bash: find Path Path <|endoftext|>
<|endoftext|> english: Find directories named `doc' in /usr and below
bash: find Path -name Regex -type d <|endoftext|>
<|endoftext|> english: Search for files that are at least 100MB
bash: find Path -size +Size <|endoftext|>
<|endoftext|> english: Delete files older than 31 days
bash: find Path -mtime +Timespan -delete <|endoftext|>
<|endoftext|> english: Write a random list of numbers to /tmp/lst and stdout.
bash: seq Number Number | sort -R | tee File | cat <( cat File ) <( echo Regex ) File <|endoftext|>
<|endoftext|> english: Copy file header.shtml to directories dir1, dir2, dir3, and dir4
bash: find Path Path Path Path -type d -exec cp File {} \; <|endoftext|>
<|endoftext|> english: display all files in the current folder ($@ contains the variables passed as argument to the function)
bash: find Path -iname Regex -or -iname Regex <|endoftext|>
<|endoftext|> english: find all the database files in the folder /var/named
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: Find all files/directories in entire file system that have  "write" bit set for either the owner, the group, or others
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: Find all files under /path/to/dir that were modified less than 7 days ago with null character as the delimiter
bash: find Path -type f -mtime -Timespan -print0 <|endoftext|>
<|endoftext|> english: delete all files in $DIR that have not been accessed in at least 5 days
bash: find Path -type f -atime +Timespan -exec rm {} \; <|endoftext|>
<|endoftext|> english: find all files in current folder which are less than 300MB
bash: find Path -size -Size <|endoftext|>
<|endoftext|> english: View history using "vim"
bash: history | vim File <|endoftext|>
<|endoftext|> english: create backup of all the text files  present in the current folder
bash: find -name Regex Path {} Path Path <|endoftext|>
<|endoftext|> english: find all normal/regular files in current folder which end with "~" or which begin and end with "#" and and and delete them
bash: find Path -maxdepth Quantity -type f -name Regex -delete -or -name Regex -delete <|endoftext|>
<|endoftext|> english: Search the entire file hierarchy for files larger than 100 megabytes and delete them.
bash: find Path -size +Size -exec rm {} \; <|endoftext|>
<|endoftext|> english: search for a shell script in the current folder and display the current folder path
bash: find Path -name Regex -exec pwd \; <|endoftext|>
<|endoftext|> english: find all the php files in the current folder
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: find all the foo.txt files in the current folder and move them to another directory
bash: find Path -name Regex | awk Program <|endoftext|>
<|endoftext|> english: Find all files in your home directory and below that are smaller than 100M.
bash: find Path -size -Size <|endoftext|>
<|endoftext|> english: Find all your text files and page through them
bash: find Path -name Regex -print | less <|endoftext|>
<|endoftext|> english: Search for the query "filename" in the current directory and any subdirectories
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: Print the names of all files in the home directory and its subdirectories recursively whose MIME type is video
bash: find Path -type f -exec file -i {} + | grep Regex <|endoftext|>
<|endoftext|> english: Copy all files in current directory that do not match */not-from-here/* in their names to /dest
bash: find Path -type f -not -iname Regex -exec cp {} File \; <|endoftext|>
<|endoftext|> english: Send 4 ping requests to host "google.comz", displaying only the summary info after the last request completed.
bash: ping -c Quantity -q Regex <|endoftext|>
<|endoftext|> english: Find all symlinks in the /myfiles directory tree
bash: find Path -type l <|endoftext|>
<|endoftext|> english: Identify CMS version/releases accross all your Wordpress websites
bash: find Path -type f -iwholename Regex -exec grep -H Regex {} \; <|endoftext|>
<|endoftext|> english: Recursively change the owner and group of all files in the current directory to "apache"
bash: ls | xargs -I {} chown -R Regex {} <|endoftext|>
<|endoftext|> english: Recursively finds all files and prints only names of files that contain "word" and suppressing error messages .
bash: find Path | xargs -I {} grep Regex -s -l {} <|endoftext|>
<|endoftext|> english: Find all regular files in the /path/to/base/dir tree
bash: find Path -type f <|endoftext|>
<|endoftext|> english: find all the regular/normal files in the /path folder and delete them
bash: find Path -type f -exec rm {} \; <|endoftext|>
<|endoftext|> english: Replace "firstWord" with "newFirstWord", "secondWord" with "newSecondWord", "thirdWord" with "newThirdWord" in all XML files in the current directory tree
bash: find Path -name Regex -exec sed -s --in-place Regex -e Program {} \; <|endoftext|>
<|endoftext|> english: Append all regular files modified in the last 24 hours to the "$archive.tar" tar archive
bash: find Path -mtime -Timespan -type f -exec tar -r -v -f File {} \; <|endoftext|>
<|endoftext|> english: Check all .txt files whose names may contain spaces whether they contain "needle"
bash: find Path -type f -iname Regex -print0 | xargs -0 -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: Remove filetype suffix (last dot and following characters if any) from filename
bash: echo Regex | rev | cut -f Number -d Regex | rev <|endoftext|>
<|endoftext|> english: Change permissions to 644 for all regular files under the /path/to/dir/ tree
bash: find Path -type f -print0 | xargs -0 -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: find all the files in the file system which have been modified in the last 60 minutes
bash: find Path -mmin -Quantity <|endoftext|>
<|endoftext|> english: Delete all '-' character from $1 and save the resultant string to variable 'COLUMN'
bash: echo Regex | tr -d Regex <|endoftext|>
<|endoftext|> english: Join colon-separated information in 3 files LN.txt PH.txt and AD.txt in a cascade fashion: join LN.txt and PH.txt, then join the result with AD.txt
bash: join -t Regex <( sort File ) <( sort File ) | join -t Regex File <( sort File ) <|endoftext|>
<|endoftext|> english: Adds %Pathname% to the dirs stack (Windows format).
bash: pushd Directory <|endoftext|>
<|endoftext|> english: Look for directory `Cookbook'
bash: find Path -name Regex -type d <|endoftext|>
<|endoftext|> english: Count the number of differing lines in "file1" and "file2"
bash: diff File File | grep Regex | wc -l <|endoftext|>
<|endoftext|> english: Make directories to "$TARGET_PATH" as needed without causing an error if it exists
bash: mkdir -p Directory <|endoftext|>
<|endoftext|> english: Display the output of "ls" for an 80 character wide display
bash: ls | column -c Quantity <|endoftext|>
<|endoftext|> english: Get the disk space used by all *.txt (case insensitive) files/directories under folder 1 and folder2
bash: find Path Path -iname Regex -print0 | du --files0-from File -c -s | tail - Quantity <|endoftext|>
<|endoftext|> english: prints the last non-empty line of a file
bash: tac File | grep -m Quantity Regex <|endoftext|>
<|endoftext|> english: Copies newest file under the current folder to the '/tmp/'
bash: cp $( ls -1 -t -r File | tail - Quantity ) File <|endoftext|>
<|endoftext|> english: remove all text files from the current folder
bash: find Path -name Regex | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: Search for files/directories with the case insensitive pattern anaconda.* in var/log directory and create an archive (file1.tar) of the last block of files sent to xargs
bash: find Path -iname Regex | xargs -I {} tar -c -v -f File {} <|endoftext|>
<|endoftext|> english: display a long listing of all fles in current folder which have been modified in the last 60 minutes
bash: find Path -mmin -Quantity -ls <|endoftext|>
<|endoftext|> english: Find all empty directories under /tmp and below
bash: find Path -type d -empty <|endoftext|>
<|endoftext|> english: search for a word in all the files in the current directory (case insensitive search)
bash: find Path -type f -exec grep Regex {} \; <|endoftext|>
<|endoftext|> english: Make directory "~/temp"
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: Go to /tmp directory.
bash: cd Directory <|endoftext|>
<|endoftext|> english: Find all files named "something" in the current folder and below and run them through the ls -l command in a one batch.
bash: find Path -name Regex | xargs -0 -I {} ls {} <|endoftext|>
<|endoftext|> english: List all files and sub directories including hidden files in the current directory tree
bash: tree -a -f <|endoftext|>
<|endoftext|> english: Make directory "/etc/cron.5minute"
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: Save the current working directory with resolved symbolic links to variable "real1"
bash: $( pwd -P ) <|endoftext|>
<|endoftext|> english: Print unique list of who is logged in and the time of login formatted in columns
bash: who -s -u | sort | uniq | column <|endoftext|>
<|endoftext|> english: Make directory "/tmp/foo"
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: find all regex  '\./[a-f0-9\-]\{36\}\.jpg' files
bash: find Path -regex Regex <|endoftext|>
<|endoftext|> english: returns a list of  files modification newer than poop
bash: find Path -mnewer File <|endoftext|>
<|endoftext|> english: find md5sum of content from "www.google.com"
bash: curl Regex Regex | md5 <|endoftext|>
<|endoftext|> english: Lists all subdirectories in the current directory
bash: ls -d -- File <|endoftext|>
<|endoftext|> english: display the file name and the file type of all the files in the current directory
bash: find Path -printf "%y %p\n" <|endoftext|>
<|endoftext|> english: Locate files whose status was changed less than 1 day ago
bash: find Path -ctime -Timespan -print <|endoftext|>
<|endoftext|> english: execute command "who" when key "\eW" is pressed
bash: bind -x Regex <|endoftext|>
<|endoftext|> english: Change to location of '$TARGET_FILE' file.
bash: cd $( dirname Regex ) <|endoftext|>
<|endoftext|> english: Find all SUID set files in the file system
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: Set variable PacketLoss to first digit of percentage of packet loss occurring when pinging host specified by TestIP
bash: ping Regex -c Quantity | grep -E -o Regex | grep -E -o Regex <|endoftext|>
<|endoftext|> english: Read one character from standard input into variable "REPLY"
bash: read -n Quantity -r <|endoftext|>
<|endoftext|> english: Find all directories under /path/to/base/dir and change their permission to 755
bash: find Path -type d -exec chmod Permission {} + <|endoftext|>
<|endoftext|> english: Delete all .svn files/directories under current directory
bash: find Path -name Regex -delete <|endoftext|>
<|endoftext|> english: Print the list of files changed within the last minute
bash: find Path -newerct Regex -print <|endoftext|>
<|endoftext|> english: Print file system disk space usage of the current directory's file system
bash: df File <|endoftext|>
<|endoftext|> english: Search the current directory tree for files named "somename", case insensitive
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: Search the current directory recursively for files whose size is between 10 and 50 MB
bash: find Path -size +Size -size -Size -print <|endoftext|>
<|endoftext|> english: locate large files (> 100 MB) in /home/ for 'cleaning'
bash: find Path -type f -size +Size -delete <|endoftext|>
<|endoftext|> english: Search for .zip files that are larger than 100M found anywhere in the file system and delete those files.
bash: find Path -type f -name Regex -size +Size -exec rm -i {} \; <|endoftext|>
<|endoftext|> english: find all the ".JPG" files in current folder and display their count
bash: find Path -name Regex -type f | wc -l <|endoftext|>
<|endoftext|> english: Find all $2 files in $1 path and search for the regex expanded by $3 in those files
bash: find Path -name Regex -exec grep -H -n Regex {} \; <|endoftext|>
<|endoftext|> english: Replace all newlines except the last with a comma in "test.txt"
bash: sed -i Program File <|endoftext|>
<|endoftext|> english: Compresses all files listed in array $*, executing in background.
bash: compress File <|endoftext|>
<|endoftext|> english: Find all files modified on the 7th of June, 2007, starting from the current directory
bash: find Path -type f -newermt Regex ! -newermt Regex <|endoftext|>
<|endoftext|> english: Find all *shp* directories under current directory and move all regular files inside those directories to ../shp_all/
bash: mv $( find Path $( find Path -name Regex -printf "%h\n" | uniq ) -type f ) File <|endoftext|>
<|endoftext|> english: Set the 'xtrace' shell variable
bash: set -x <|endoftext|>
<|endoftext|> english: Search directory /home/ABCD recursively, starting from one level below, for regular files
bash: find Path -mindepth Quantity -type f -print <|endoftext|>
<|endoftext|> english: Show the list of all files on the system whose names do not end in ".c"
bash: find Path ! -name Regex -print <|endoftext|>
<|endoftext|> english: List all broken symlinks excluding cyclic links under current directory
bash: find Path -type l -printf "%Y %p\n" | grep -w Regex <|endoftext|>
<|endoftext|> english: List all active cron jobs, displaying only the command.
bash: crontab -l | grep -v Regex | awk Program <|endoftext|>
<|endoftext|> english: find all files in the current folder that end with ",txt"
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Non-recursively finds all '*.pdf' files in a current folder and removes them.
bash: find Path -maxdepth Quantity -name Regex -print0 | xargs -0 -I {} rm {} <|endoftext|>
<|endoftext|> english: Find all directories under and below parent_directory
bash: find Path -type d <|endoftext|>
<|endoftext|> english: Display the sizes and filepaths of all files/directories sorted in descending order of size
bash: du -a -h --max-depth Quantity | sort -h -r <|endoftext|>
<|endoftext|> english: Compress and display the gzip compression ratio of every file on the system that is greater than 100000 bytes and ends in ".log"
bash: find Path -xdev -type f -size +Size -name Regex -exec gzip -v {} \; <|endoftext|>
<|endoftext|> english: Print the user name of the current user
bash: whoami <|endoftext|>
<|endoftext|> english: Print linux group names on multiple lines instead of single line output
bash: groups | tr Regex Regex <|endoftext|>
<|endoftext|> english: all .jpg or .png images modified in the past week
bash: find Path -mtime -Timespan \( Path -or -name Regex \) <|endoftext|>
<|endoftext|> english: Find all files that aren't owned by user www-data
bash: find Path -not -user Regex <|endoftext|>
<|endoftext|> english: Find all filenames ending with .c in the current directory tree, case insensitive
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: Find "*prefs copy" files in the /mnt/zip directory tree and remove them with prompting
bash: find Path -name Regex -print0 | xargs -p -I {} rm {} <|endoftext|>
<|endoftext|> english: Set prompt to the system host name and history number
bash: $( hostname ) <|endoftext|>
<|endoftext|> english: Archive file 'file' with bzip2 tool, store compressed data to a file 'logfile' and also print to screen
bash: bzip2 -c File | tee -a File <|endoftext|>
<|endoftext|> english: This will remove all files (type f) modified longer than 14 days ago under /root/Maildir/ recursively from there and deeper (mindepth 1
bash: find Path -mindepth Quantity -type f -mtime +Timespan | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: display all the files in the current folder and do not search in sub directories and move them to the directory /directory1/directory2.
bash: find Path -maxdepth Quantity -type f | xargs -I {} mv {} File <|endoftext|>
<|endoftext|> english: Rename uppercase file or folder name $1 to lower case name
bash: mv File $( echo Regex | tr Regex Regex ) <|endoftext|>
<|endoftext|> english: Recursively finds and compresses all files in a current folder with 4 parallel processes.
bash: find Path -type f -print0 | xargs -0 -n Quantity -P Quantity -I {} bzip2 {} <|endoftext|>
<|endoftext|> english: Force create a hard link in "/usr/local/bin" to "findpdftext"
bash: ln -f File Regex <|endoftext|>
<|endoftext|> english: Remove trailing white spaces from all files under current directory ignoring .git and .svn directories
bash: find Path -not \( -name Regex -prune -or -name Regex -prune \) -type f -print0 | xargs -0 -I {} sed -i Program File File {} <|endoftext|>
<|endoftext|> english: List subdirectories in the current directory
bash: find Path -maxdepth Quantity -type d -exec ls -l -d {} \; <|endoftext|>
<|endoftext|> english: Print the most recently modified file
bash: ls -1 -t -r File | tail - Quantity <|endoftext|>
<|endoftext|> english: Get the total size of all files under dir1 directory
bash: find Path ! -type d -printf "%s\n" | awk Program <|endoftext|>
<|endoftext|> english: find all the files with the name test in the current folder ( case insensitive )
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: display the filenames which do not have begin with dot (.)
bash: find Path -maxdepth Quantity -name Regex -printf 'Name: %16f Size: %6s\n' <|endoftext|>
<|endoftext|> english: Remove all files matching the pattern *[+{;"\\=?~()<>&*|$ ]* under current directory
bash: find Path -name Regex -exec rm -f {} \; <|endoftext|>
<|endoftext|> english: Write "deb blah ... blah" to standard output and append to "/etc/apt/sources.list" as root
bash: echo Regex | tee --append File <|endoftext|>
<|endoftext|> english: Read a line from standard input into variable "REPLY" with prompt "$*"
bash: read -p Regex <|endoftext|>
<|endoftext|> english: Print a colon-separated list of all directories from the ~/code directory tree, except hidden ones and those below them
bash: find Path -name Regex -prune -or -type f -and -perm Permission -printf ':%h\n' | sort | uniq | tr -d Regex <|endoftext|>
<|endoftext|> english: Counts lines in each *.php file, sorted by number of lines, descending.
bash: find Path -name Regex -type f | xargs -I {} wc -l {} | sort -n -r <|endoftext|>
<|endoftext|> english: Find files whose pathnames end in "f"
bash: find Path -path Regex <|endoftext|>
<|endoftext|> english: Find all directories under current directory and replace all null delimiters with : in the output then remove the last :
bash: find Path -type d -print0 | sed -e Program <|endoftext|>
<|endoftext|> english: Find all files/directories that belong to the group 'audio' under '/dev' directory tree
bash: find Path -group Regex <|endoftext|>
<|endoftext|> english: Counts lines in each *.php file.
bash: wc -l $( find Path -name Regex ) <|endoftext|>
<|endoftext|> english: find in $HOME files ending in "txt" and do nothing with them, or files ending in "html" and list them null separated.
bash: find Path -name Regex -or -name Regex -print0 <|endoftext|>
<|endoftext|> english: Count the number of files in the /usr/ports directory tree whose names begin with 'pkg-plist' and which contain 'unexec.rmdir%D'
bash: find Path -name Regex -exec grep Regex {} + | wc -l <|endoftext|>
<|endoftext|> english: Counts lines of /dir/file.txt file.
bash: cat File | wc -l <|endoftext|>
<|endoftext|> english: Find all files whose permission are 777
bash: find Path -type f -perm Permission <|endoftext|>
<|endoftext|> english: display all the files in the usr folder which have been modified after Feburary 1st
bash: find Path -newermt Regex <|endoftext|>
<|endoftext|> english: move all the files in the current folder  to temp folder and search atleast in one subfolder
bash: find Path -mindepth Quantity -exec mv -t Directory {} + <|endoftext|>
<|endoftext|> english: Find all files that contain the case insensitive regex 'stringtofind' in maximum 1 level down the / directory without descending into other partitions
bash: find Path -maxdepth Quantity -xdev -type f -print -exec grep -i Regex -q {} \; <|endoftext|>
<|endoftext|> english: display all the ip addresses in all the files that are present in /etc folder
bash: find Path -exec grep Regex {} \; <|endoftext|>
<|endoftext|> english: Show all files in /etc that are owned by root have been modified within the last minute
bash: find Path -user Regex -mtime Timespan <|endoftext|>
<|endoftext|> english: Output the last slash-separated component of specified path, in this case "data_report_PD_import_script_ABF1_6"
bash: basename Regex <|endoftext|>
<|endoftext|> english: Search the current directory tree for files containing "bash" in their names
bash: find Path -name Regex | xargs <|endoftext|>
<|endoftext|> english: search for *.log files starting from / (root) and only in the current file system
bash: find Path -xdev -name Regex <|endoftext|>
<|endoftext|> english: Unzip every ".gz" file in the current directory tree
bash: find Path -name Regex -exec gunzip {} \; <|endoftext|>
<|endoftext|> english: Find all files called "INPUT.txt" in the current directory tree and remove lines starting with # in them, saving backup copies as INPUT.txt.bak
bash: find Path -type f -name Regex -print0 | xargs -0 -I {} sed -i Regex Program {} <|endoftext|>
<|endoftext|> english: Change owner to "root" and group to "wheel" of "adbind.bash"
bash: chown Regex File <|endoftext|>
<|endoftext|> english: move all the html files from current folder to another folder and if a symbolic link is found copy the original referenced file and not the link
bash: find Path -follow -iname Regex -print0 | xargs -i -0 -I {} mv {} File {} <|endoftext|>
<|endoftext|> english: Create intermediate directories ~/foo/bar/ as required and directories baz, bif, bang
bash: mkdir -p Directory Directory Directory <|endoftext|>
<|endoftext|> english: Rotates the dirs stack so that the second directory (counting from the right of the list shown by `dirs', starting with zero) is at the top.
bash: pushd - Quantity <|endoftext|>
<|endoftext|> english: Display non-hidden files in the current directory with the given output format
bash: find Path -maxdepth Quantity -name Regex -printf 'Name: %16f Size: %6s\n' <|endoftext|>
<|endoftext|> english: Join comma-separated data in file1 and file2, including extra non-matching information in both files.
bash: join -t Regex -a Quantity -a Quantity <( sort File ) <( sort File ) <|endoftext|>
<|endoftext|> english: Report file systems disk usage in kilobytes.
bash: df -k <|endoftext|>
<|endoftext|> english: Locate all *.csv files under the current directory tree separating the file names with zeroes
bash: find Path -name Regex -print0 <|endoftext|>
<|endoftext|> english: Save the user name of the current user to variable "me"
bash: whoami <|endoftext|>
<|endoftext|> english: Silently read a line from standard input into variable "REPLY" without backslash escapes and using the prompt $'Press enter to continue...\n'
bash: read -r -s -p Regex <|endoftext|>
<|endoftext|> english: display a long list of all the jpg files in the home folder
bash: find Path -iname Regex -exec ls {} \; <|endoftext|>
<|endoftext|> english: Make directories for each unique file path in "file1"
bash: cat File | xargs -I {} dirname {} | sort -u | xargs -I {} mkdir -p {} <|endoftext|>
<|endoftext|> english: Creates temporary file and saves path to it in a 'tmpfile' variable.
bash: mktemp <|endoftext|>
<|endoftext|> english: Read a line from standard input into variable "message" with escaped prompt "\nPlease Enter\na Message: '"
bash: read -p $( echo -e Regex ) Regex <|endoftext|>
<|endoftext|> english: Find all files in the current directory recursively with "linkin park" in their names and copy them to /Users/tommye/Desktop/LP
bash: find Path -type f -iname Regex -exec cp -r {} File \; <|endoftext|>
<|endoftext|> english: find the file "filename.txt" in the usr folder
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: Exclude directory from find . command
bash: find Path -path Regex -prune -or -name Regex -print <|endoftext|>
<|endoftext|> english: reverse both words and lines in file
bash: tac File | awk Program <|endoftext|>
<|endoftext|> english: find all the directories in the current folder which have been modified in 24 hours and move them to the folder  /path/to/target-dir
bash: find Path -type d -mtime -Timespan -print0 | xargs -0 -I {} mv -t Directory {} <|endoftext|>
<|endoftext|> english: Clean up all zombie processes by sending SIGTERM signal to their parent process, which requests them to terminate.
bash: kill $( ps -A -o stat,ppid | awk Program ) <|endoftext|>
<|endoftext|> english: List .html files in the current directory tree that contain string "base\-maps" but do NOT contain string "base\-maps\-bot"
bash: find Path -name Regex -exec grep -l -R Regex {} \; | xargs -I {} grep -L Regex {} <|endoftext|>
<|endoftext|> english: Find all *.rpm files/directories under current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: display all the files in the current folder excluding the file states_to_csv.pl and those that are present in the directories whose name starts with ".git"
bash: find Path ! -path Regex -and ! -name Regex <|endoftext|>
<|endoftext|> english: find all the files in the current folder that have been accessed in today
bash: find Path -atime Timespan <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory tree that belong to the user 'tom'
bash: find Path -user Regex <|endoftext|>
<|endoftext|> english: Prints ten latest modified files within the current directory.
bash: find Path -type f -printf '%T@ %p\n' | sort -n -r | head - Quantity | cut -f Number -d Regex | sed -e Program | xargs -I {} ls -U -l {} <|endoftext|>
<|endoftext|> english: Find all files starting from the current directory which are larger than 100MB
bash: find Path -size +Size <|endoftext|>
<|endoftext|> english: find all the files which have the write permission to the group and remove the write permission.
bash: find Path -perm -Permission -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Find all files starting from / whose names end with ".rpm" and change their permissions to 755
bash: find Path -name Regex -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Copy "src" to "dest" if "src" is newer than "dest"
bash: rsync -u File File <|endoftext|>
<|endoftext|> english: search for the word foo in all the js files in the current folder
bash: find Path -name Regex -exec grep -i -H Regex {} \; <|endoftext|>
<|endoftext|> english: Find 10 largest files in the current directory and its subdirectories
bash: du -h -s -x File | sort -r -h | head - Quantity <|endoftext|>
<|endoftext|> english: Save the md5 sum hash of "$my_iso_file" to variable "md5"
bash: $( md5sum File | cut -d Regex -f Number ) <|endoftext|>
<|endoftext|> english: Search the *.cc files in the current directory tree for string "xxx"
bash: find Path -name Regex | xargs -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: Check all .txt files whether they contain "needle"
bash: find Path -type f -iname Regex -print | xargs -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: Search the `research' directory and one level below for directories that are not owned by group `ian'
bash: find -L Path -maxdepth Quantity -type d ! -group Regex <|endoftext|>
<|endoftext|> english: Pipe 3 newlines to sshe-keygen, answering prompts automatically.
bash: echo -e Regex | ssh-keygen -t rsa <|endoftext|>
<|endoftext|> english: create directories mnt and point
bash: mkdir Directory Directory <|endoftext|>
<|endoftext|> english: Print the list of all directories under the current directory and below
bash: find Path -type d -print <|endoftext|>
<|endoftext|> english: Execute zcat on every file matching "*20120805.gz" in the current directory and subdirectories
bash: find Path -name Regex -exec zcat {} \; <|endoftext|>
<|endoftext|> english: Create a variable CDATE in the current shell that contains the date in '%Y-%m-%d %H:%M:%S' format , and a variable EPOCH that contains the seconds since epoch
bash: source <( date +"CDATE='%Y-%m-%d %H:%M:%S' EPOCH='%s'" ) <|endoftext|>
<|endoftext|> english: Prints name of temporary file but doesn`t create nothing.
bash: mktemp -u <|endoftext|>
<|endoftext|> english: get the git user access
bash: su Regex <|endoftext|>
<|endoftext|> english: Find how many files are in a path
bash: find Path -type f -exec basename {} \; | wc -l <|endoftext|>
<|endoftext|> english: change the permissions of all the directories in the current folder
bash: find Path -type d | xargs -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: View line 500 to line 1000 in gzipped file "bigfile.z"
bash: zcat Regex | sed -n -e Program <|endoftext|>
<|endoftext|> english: SSH login in 'middle.example.org' via port 2222 as user 'deviceuser' using a private key file './device_id.pem'
bash: ssh -i File Regex <|endoftext|>
<|endoftext|> english: Display the file size of file '/data/sflow_log' in bytes
bash: du -s -b File | cut -f Number <|endoftext|>
<|endoftext|> english: Delete all files/directories older than 48 hours in /path/to/files* paths
bash: find Path -mtime +Timespan -delete <|endoftext|>
<|endoftext|> english: get second-to-last comma-separated field of each line in file.txt
bash: cat File | rev | cut -d Regex -f Number | rev <|endoftext|>
<|endoftext|> english: Print '-ok is an action so an implicit -print is not applied' with confirmation from the user for each file or directory found by the name 'file' under current directory tree
bash: find Path -name Regex -ok echo Regex \; <|endoftext|>
<|endoftext|> english: find all the xml files in the current folder which are present in the pattern text file
bash: find Path -name Regex -exec grep -H -F -f <( find Path -name Regex -printf "%f\n" ) {} \; <|endoftext|>
<|endoftext|> english: Calculate md5 sum of files $source_file and $dest_file
bash: md5sum File File <|endoftext|>
<|endoftext|> english: Find all files/directories named modules under current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Save IP addresses of the host name in variable "ip"
bash: hostname -I | awk Program <|endoftext|>
<|endoftext|> english: search in the current folder for the file "myletter.doc"
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: Kill all processes which were executed in background by the current shell.
bash: jobs -p | xargs -I {} kill - Regex {} <|endoftext|>
<|endoftext|> english: Search the entire file hierarchy for files ending with '~' and print all matches except for those with '/media' in their pathnames.
bash: find Path -name Regex | grep -v Regex <|endoftext|>
<|endoftext|> english: Change permissions of all directories from the current directory tree to 644
bash: find Path -type d -exec chmod Permission {} + <|endoftext|>
<|endoftext|> english: archive all the normal/regular files in the current directory which have been modified in the last 24 hours.
bash: find Path -mtime -Timespan -type f -exec tar -r -v -f File {} \; <|endoftext|>
<|endoftext|> english: Find all files/directories in maximum 1 level down the current directory which do not have only read permission for 'other'
bash: find Path -maxdepth Quantity ! -perm -Permission <|endoftext|>
<|endoftext|> english: Find all .php files in all directory trees matching pattern `/srv/www/*/htdocs/system/application/' and search those files for string "debug ("
bash: find Path -name Regex -print0 | xargs -0 -I {} grep -H Regex {} <|endoftext|>
<|endoftext|> english: Find all the files in the current directory
bash: find Path -type f -print -or -type d -prune <|endoftext|>
<|endoftext|> english: Recursively find the latest modified "zip" file in the current directory
bash: find Path -name Regex -type f | xargs -I {} ls -l -t -r {} | tail - Quantity <|endoftext|>
<|endoftext|> english: Gets MAC address of eth0 network interface.
bash: ifconfig Regex | grep Regex | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: Set the 'verbose' shell option causing bash to print shell input lines as they are read
bash: set -o verbose <|endoftext|>
<|endoftext|> english: change permission of all the files in the entire file system which have permissions 777.
bash: find Path -type f -perm Permission -print -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: display all the empty files in the entire file system
bash: find Path -size Size -print <|endoftext|>
<|endoftext|> english: Print the current user name associated with standard input
bash: who -m | awk Program <|endoftext|>
<|endoftext|> english: Search the Movies folder in the user's home directory for files larger than 1024 megabytes in size.
bash: find Path -size +Size <|endoftext|>
<|endoftext|> english: Find all files/directories under '/var/tmp' directory tree that belong to a user with user id 1000
bash: find Path -uid Regex <|endoftext|>
<|endoftext|> english: List current directory, waiting for user input at each page.
bash: ls | more <|endoftext|>
<|endoftext|> english: Find all 15MB files in entire file system
bash: find Path -size Size <|endoftext|>
<|endoftext|> english: Find all files that belong to user root
bash: find Path -user Regex <|endoftext|>
<|endoftext|> english: replace the word apple with orange in all the regular/normal files in the current folder
bash: find Path -type f -exec sed -i -e Program {} \; <|endoftext|>
<|endoftext|> english: From a script, output the name of the script itself, without containing directories.
bash: basename Regex <|endoftext|>
<|endoftext|> english: Find all *.txt files under current directory that contains the regex 'pattern' and list them with their filenames and matches
bash: find Path -type f -name Regex -exec grep -E Regex {} File \; <|endoftext|>
<|endoftext|> english: Search the current directory recursively for .m4a files
bash: find Path -type f -iname Regex -print <|endoftext|>
<|endoftext|> english: Create a symbolic link in directory "/path/to/dir" for each file and directory under the current directory starting with "."
bash: find Path -name Regex -exec ln -s {} Regex \; <|endoftext|>
<|endoftext|> english: find files having the extension "bam" in current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Extract all gzip-compressed files from tar archives beginning with 'myfiles_split.tgz_*'
bash: cat File | tar -x -z <|endoftext|>
<|endoftext|> english: Move all files from the `sourceDir' directory tree to the `destDir' directory
bash: find Path -mindepth Quantity -print0 | xargs -0 -I {} mv --target-directory Directory {} <|endoftext|>
<|endoftext|> english: Search for 'It took' in all $srch1* (case insensitive) files under current directory
bash: find Path -iname Regex -exec grep Regex {} \; -print <|endoftext|>
<|endoftext|> english: find all the files in the current folder which end with "ext1" or "ext2" or "ext3"
bash: find -E Path -regex Regex <|endoftext|>
<|endoftext|> english: Print 'This should print the filename twice if an implicit -print is applied: ' appended with file paths for all files named 'file' under current directory tree
bash: find Path -name Regex -exec echo Regex {} + <|endoftext|>
<|endoftext|> english: Copy all files in "/mail" to "/home/username" preserving the directory hierarchy and modification times
bash: find Path -type f | cpio -p -v -d -m -B Regex <|endoftext|>
<|endoftext|> english: For each line which has a common first field in file1.csv and file2.txt, output the first 4 fields of file1.csv
bash: join -o 1.1,1.2,1.3,1.4 -t Regex <( sort File ) <( sort File ) <|endoftext|>
<|endoftext|> english: force delete all the directories the folder "test folder"
bash: find Path -type d -print0 | xargs -0 -I {} rm -r -f {} <|endoftext|>
<|endoftext|> english: Find all files/directories in entire file system for which owner has at least read/write permissions, or the group has at least read permission, or others have at least read permission
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: Print short TXT record of domain o-o.myaddr.l.google.com from nameserver ns1.google.com
bash: dig Regex Regex o-o.myaddr.l.google.com @ns1.google.com <|endoftext|>
<|endoftext|> english: Find all files/directories in entire file system that have  "write" bit set for either the owner, the group, or others
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: Find an inode and remove
bash: find Path -inum Quantity -exec rm -i {} \; <|endoftext|>
<|endoftext|> english: See all pages in section 3.
bash: apropos Regex Regex Regex <|endoftext|>
<|endoftext|> english: search  in current directory downwards all files which were accessed exactly 7 days back
bash: find Path -atime Timespan -print <|endoftext|>
<|endoftext|> english: create a symbolic link named "/usr/bin/my-editor" to file "/usr/share/my-ditor/my-editor-executable"
bash: ln -s File Regex <|endoftext|>
<|endoftext|> english: Create compressed archive from "my_large_file_1" and "my_large_file_2" and split into files of size 1024 MiB with prefix "myfiles_split.tgz_"
bash: tar -c -z File File | split -b Size File Regex <|endoftext|>
<|endoftext|> english: Append the current date to variable 'LBUFFER'
bash: date <|endoftext|>
<|endoftext|> english: list all files in /home/bozo/projects directory tree that were modified within the last day
bash: find Path -mtime -Timespan <|endoftext|>
<|endoftext|> english: Save the number of bytes in "$file" after decompression into variable "size"
bash: zcat Regex | wc -c <|endoftext|>
<|endoftext|> english: Print a sorted list of all .jpg files in the current directory and below
bash: find Path -name Regex | sort -n <|endoftext|>
<|endoftext|> english: Remove empty folder, and skip error message if one is not empty.
bash: rmdir --ignore-fail-on-non-empty Directory <|endoftext|>
<|endoftext|> english: Calculate md5 sum of file $item and save it to variable 'md5'
bash: $( md5sum File | cut -f Number -d Regex ) <|endoftext|>
<|endoftext|> english: create archive "backup.tar.gz" from /path/to/catalog
bash: tar -c -z -f File File File <|endoftext|>
<|endoftext|> english: Source executable "virtualenvwrapper.sh" found in $PATH
bash: source $( which Regex ) <|endoftext|>
<|endoftext|> english: Take the last slash-separated section of variable "FILE" and copy it to variable "NAME".
bash: basename Regex <|endoftext|>
<|endoftext|> english: Identify CMS version/releases accross all your Drupal websites
bash: find Path -type f -iwholename Regex -exec grep -H Regex {} \; <|endoftext|>
<|endoftext|> english: Remove all files with names like "vmware-*.log" from the current directory tree
bash: find Path -name Regex | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: find all files in the file system with the permissions 777 and having the word "filename" in their name.
bash: find Path -perm Permission -iname Regex <|endoftext|>
<|endoftext|> english: Remove last two underscore-delimited fields and following characters in "t1_t2_t3_tn1_tn2.sh" keeping only "t1_t2_t3"
bash: echo Regex | rev | cut -d Regex -f Number | rev <|endoftext|>
<|endoftext|> english: Recursively finds strings with"text string to search” in any file within the 'directory-path', following symlinks, and prints found strings with file names.
bash: grep -r -H Regex File <|endoftext|>
<|endoftext|> english: Find all files in "/home/" which contain "string1", "string2" or the host name in its filename
bash: find Path -type f -regextype posix-extended -regex $( hostname ) <|endoftext|>
<|endoftext|> english: Print the list of directories residing in the current directory tree
bash: find Path -type d -exec ls -l -d {} \; <|endoftext|>
<|endoftext|> english: change the permission of all the normal/regular files to 644 in the current folder
bash: find Path -type f -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Copy all files in current directory that do not match */not-from-here/* in their paths to /dest
bash: find Path -type f -not -path Regex -exec cp {} File \; <|endoftext|>
<|endoftext|> english: Replace all occurrences of word "foo" with "bar" in *.c and *.h files from the current directory tree
bash: find Path -name Regex -exec sed -i Program {} + <|endoftext|>
<|endoftext|> english: Find all subdirectories of the current directory except hidden ones
bash: find Path -maxdepth Quantity -type d ! -name Regex <|endoftext|>
<|endoftext|> english: Find all files under current directory and replace the match of the regex '^.*/S' with 'S' in every line of the output
bash: find Path -type f -print | sed Program <|endoftext|>
<|endoftext|> english: find all the files under '/usr/local' directory tree which have been modified exactly 24 hours ago
bash: find Path -mtime Timespan <|endoftext|>
<|endoftext|> english: Sort "$file" and output the result to "$file"
bash: sort -o File File <|endoftext|>
<|endoftext|> english: Find recursively the latest modified file in the current directory
bash: find Path -type f | sed Program | xargs -I {} ls File {} | awk Program | sort | tail - Quantity <|endoftext|>
<|endoftext|> english: Search the current user's home directory and below for all .png files and copy those files in the directory imagesdir.
bash: find Path -name Regex -exec cp {} File \; <|endoftext|>
<|endoftext|> english: Recursively changes group ownership of everything in '/home/secondacc/public_html/community/' to 'fancyhomepage'.
bash: chgrp -R Regex File <|endoftext|>
<|endoftext|> english: Recursively finds all files containing text 'OPEN' and prints folder where they are placed.
bash: grep -r Regex File | awk Program | xargs -I {} dirname {} <|endoftext|>
<|endoftext|> english: Find files under current directory that are newer than $date_time in regards of modification time
bash: find Path -type f -newermt Regex <|endoftext|>
<|endoftext|> english: Find all directories under 'test' directory tree that match the regex '[course*]' in their paths
bash: find Path -regex Regex -type d <|endoftext|>
<|endoftext|> english: Search "file1" for lines matching regex patterns listed in "file2" and list the unique results (sorted alphabetically)
bash: grep -f File Regex | sort -u <|endoftext|>
<|endoftext|> english: search for all the files which have not been modified in the last 6 months (180 days) in current folder and display the total disk usage of them
bash: find Path -mtime +Timespan -exec du -k -s {} \; | cut -f Number | awk Program <|endoftext|>
<|endoftext|> english: display all the files along with their group name in the folder /home which do not belong to the group test
bash: find Path ! -group Regex -printf "%p:%g\n" <|endoftext|>
<|endoftext|> english: List all files in entire file system owned by the user wnj and are newer than the file ttt
bash: find Path -newer File -user Regex -print <|endoftext|>
<|endoftext|> english: Find files named "needle" ignoring the case
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: Find all files/directories named orm.properties in entire file system
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Print the last command in history
bash: history | tail - Quantity | awk Program <|endoftext|>
<|endoftext|> english: list all js files under currect directory exculde the directory which path contain "/path/to/search/exclude_me" or name isexclude_me_too_anywhere
bash: find Path Path -type d Path \( -path Regex Path -or Path -name Regex Path \) Path -prune Path -or Path -type f -name Regex -print <|endoftext|>
<|endoftext|> english: Display last 100 lines of file-with-line-too-long.txt, waiting for user input after each page.
bash: tail - Quantity File | more <|endoftext|>
<|endoftext|> english: Find all *.txt files/directories under your home directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Saves exit statuses of piped commands in a system variable PIPESTATUS='([0]="1" [1]="2")
bash: false | true <|endoftext|>
<|endoftext|> english: Create intermediate directories as required
bash: mkdir -p Directory <|endoftext|>
<|endoftext|> english: List all SGID and SUID files in entire file system
bash: find Path -type f \( -perm -Permission -or -perm -Permission \) -ls <|endoftext|>
<|endoftext|> english: Split "randn20M.csv" into files of at most 5000000 lines each with prefix "_tmp"
bash: split -l Quantity File Regex <|endoftext|>
<|endoftext|> english: Find links to any file that happens to be named `foo.txt'
bash: find Path -lname Regex <|endoftext|>
<|endoftext|> english: Print all unique directory paths under "dir1" compared to "dir2"
bash: comm -2 -3 <( find Path -type d | sed Program | sort ) <( find Path -type d | sed Program | sort ) | sed Program <|endoftext|>
<|endoftext|> english: Finds users with X session in system and puts the result in USERS variable.
bash: w | awk Program <|endoftext|>
<|endoftext|> english: List all *fink* files/directories under current directory
bash: find Path -name Regex | xargs -I {} ls -l {} <|endoftext|>
<|endoftext|> english: Find all directories under $path
bash: find Path -type d <|endoftext|>
<|endoftext|> english: Recursively change owner to "$1" and group to "httpd" of all files in the current directory
bash: chown -R Regex File <|endoftext|>
<|endoftext|> english: find all the text files in the current folder starting with "somefiles-"  and prepend the first line
bash: find Path -name Regex -type f -exec sed -i Program -- {} \; <|endoftext|>
<|endoftext|> english: Find all files/directories with '.txt' extension that are less than 100 KB in size under '/home' directory tree
bash: find Path -name Regex -size -Size <|endoftext|>
<|endoftext|> english: Prints top-ten biggest top-level folders within a 'var' folder.
bash: du -h -D -a -x -d Quantity File | sort -h | tail -n Quantity <|endoftext|>
<|endoftext|> english: search for a word in all the files in the current directory
bash: find Path | xargs -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: Prints shell option 'globstar' with indication of its status.
bash: shopt -p globstar <|endoftext|>
<|endoftext|> english: Print the first 10 files or directories found in the /tmp directory tree by `find'
bash: find Path | head <|endoftext|>
<|endoftext|> english: Compare "current.log" and "previous.log" line by line and print lines containing regex pattern ">\|<"
bash: diff File File | grep Regex <|endoftext|>
<|endoftext|> english: Find files in the current directory tree whose names begin with "file" and whose size is 0, and remove them
bash: find Path -name Regex -size Size -print0 | xargs -0 -I {} rm {} <|endoftext|>
<|endoftext|> english: Find files whose pathnames end in "config"
bash: find Path -path Regex <|endoftext|>
<|endoftext|> english: Sort numerically and compare files "ruby.test" and "sort.test"
bash: diff <( sort -n File ) <( sort -n File ) <|endoftext|>
<|endoftext|> english: Find all directories under dir whose names are 33 characters long
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all *.log files under path/ that do not contain "string that should not occur"
bash: find Path -name Regex -print0 | xargs -r -0 -I {} grep -L Regex {} <|endoftext|>
<|endoftext|> english: Find all files with '.txt' extension under '/home/my_dir' dirctory tree and display the number of lines in these files
bash: find Path -name Regex | xargs -I {} grep -c Regex {} <|endoftext|>
<|endoftext|> english: Show all files in user's home directory that have read, write and execute permissions set for user, group and others.
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: Print the file content of command "[whatever]"
bash: cat $( find Path ) <|endoftext|>
<|endoftext|> english: create a zip of log files in the current directory which have not been accessed in the last 3 days (-p is for parallel processing for a 4 cpu machine)
bash: find Path -name Regex -mtime +Timespan -print0 | xargs -0 -P Quantity -I {} bzip2 {} <|endoftext|>
<|endoftext|> english: Find files/directories in entire file system that have been modified in the last minute
bash: find Path -mmin -Quantity <|endoftext|>
<|endoftext|> english: set a crontab to create or update the timestamp of "washere2" in the current directory every 30 minutes.
bash: echo $( pwd ) | crontab <|endoftext|>
<|endoftext|> english: search for MP3 files in the current folder and subfolders except in dir1 subfolder.
bash: find Path ! -path Regex -iname Regex <|endoftext|>
<|endoftext|> english: Find all *.rb files/directories under current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Search for 'invalidTemplateName' in all regular files in directories/files taken from the glob pattern './online_admin/*/UTF-8/*' and show the matched lines with the filenames
bash: find Path -type f -exec grep -H Regex {} \; <|endoftext|>
<|endoftext|> english: Delete all files/directories taken by the glob pattern * except the ones with the name 'b'
bash: find Path -maxdepth Quantity -name Regex -prune -or -exec rm -r -f {} \; <|endoftext|>
<|endoftext|> english: Display the content of YourFile.txt, waiting for user input at each page.
bash: cat File | more <|endoftext|>
<|endoftext|> english: unsafed rm all file which name start with '#'
bash: find Path -name Regex -atime +Timespan -print | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: Find root's files in the current directory tree
bash: find Path -user Regex <|endoftext|>
<|endoftext|> english: Remove the regular files from the current directory tree that are newer than /tmp/date.start but not newer than /tmp/date.end
bash: find Path -type f -newer File ! -newer File -exec rm {} \; <|endoftext|>
<|endoftext|> english: download a file "http://download.oracle.com/otn-pub/java/jce/8/jce_policy-8.zip" using cookies "oraclelicense=accept-securebackup-cookie"
bash: curl Regex -C -Quantity -b Regex Regex Regex <|endoftext|>
<|endoftext|> english: Print newline, word and byte count for all .h, .c, .cpp, .php and .cc files under current directory tree and also show the total counts
bash: wc $( find Path -name Regex ) <|endoftext|>
<|endoftext|> english: Run an awk program on every TXT file found in the current directory tree
bash: find Path -name Regex -print -exec awk Program {} \; <|endoftext|>
<|endoftext|> english: Count md5sum of all '*.py' files in a current folder with subfolders.
bash: find Path -type f -name Regex -exec md5sum {} + | awk Program | sort | md5sum <|endoftext|>
<|endoftext|> english: View history using "more"
bash: history | more <|endoftext|>
<|endoftext|> english: Print extended file information for regular files found under the home directory whose names start with my
bash: find Path -name Regex -type f -ls <|endoftext|>
<|endoftext|> english: Prints full process tree with id number of each process.
bash: pstree -p <|endoftext|>
<|endoftext|> english: find all the header files in /usr/include which have been modified in the last 400 days
bash: find Path -type f -mtime -Timespan -name Regex <|endoftext|>
<|endoftext|> english: Find <fileName> files/directories under current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: delete all the mp4 files in the folder /home which are bigger than 10MB
bash: find Path -type f -name Regex -size +Size -exec rm {} \; <|endoftext|>
<|endoftext|> english: Search for 'some string' in all *.axvw files under current directory and show the matched lines with line numbers
bash: find Path -name Regex -print0 | xargs -0 -I {} grep -n Regex {} <|endoftext|>
<|endoftext|> english: Find the "param1" string in regular files under and below /var
bash: find Path -type f | xargs -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: Print login information of all users except the first two and replace all instances of " " with ", "
bash: who | awk Program | sed -e Program <|endoftext|>
<|endoftext|> english: Make directory "temp"
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: Find files in entire file system that are writable by group or other
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: Cuts off last part from the path $dir, and deletes resulted folder if empty.
bash: rmdir $( dirname Regex ) <|endoftext|>
<|endoftext|> english: Find the 5 largest regular files in the current directory and below.
bash: find Path -type f -exec du -S -h {} + | sort -r -h | head -n Quantity <|endoftext|>
<|endoftext|> english: Append all regular files modified in the last 24 hours to the "$archive.tar" tar archive
bash: find Path -mtime -Timespan -type f -print0 | xargs -0 -I {} tar -r -v -f File {} <|endoftext|>
<|endoftext|> english: display a long list of all the jpg files in the home folder(plus at the end is used to give bulk data as input)
bash: find Path -iname Regex -exec ls {} + <|endoftext|>
<|endoftext|> english: copy all files which do not have execute permission to another folder
bash: cp $( find Path -perm -Permission -type f ) File <|endoftext|>
<|endoftext|> english: delete all the log files which have not been modified in the last 5 days after user confirmation
bash: find Path -name Regex -mtime +Timespan -ok rm {} \; <|endoftext|>
<|endoftext|> english: Locate the httpd.conf file on the system
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find files modified in last 7 days
bash: find Path -mtime -Timespan -type f <|endoftext|>
<|endoftext|> english: Search for utility "foo" in PATH, display its file type description.
bash: file $( which Regex ) <|endoftext|>
<|endoftext|> english: Find all files/directories named 'articles.jpg' under '/home/username/public_html/images' directory tree
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Prints calendars of July, 2009 and July, 2010 side-by-side.
bash: paste <( cal DateTime DateTime ) <( cal DateTime DateTime ) <|endoftext|>
<|endoftext|> english: Read and execute file 'lib/B' that located in the same directory as the current script, will fail if currently running script is not in PATH.
bash: source $( dirname $( which Regex ) ) <|endoftext|>
<|endoftext|> english: Remove all files under current directory
bash: find Path -exec rm {} + <|endoftext|>
<|endoftext|> english: Sort file.txt ignoring the last 10 characters of each line.
bash: sort File | rev | uniq -f Quantity | rev <|endoftext|>
<|endoftext|> english: Find all regular files starting from level 3 of directory tree ~/container and move them one level up
bash: find Path -mindepth Quantity -type f -execdir mv {} $( dirname {} ) \; <|endoftext|>
<|endoftext|> english: Save absolute path of the script filename in variable "MY_PATH"
bash: readlink -f File <|endoftext|>
<|endoftext|> english: find all the files in the current folder which do not belong to any user
bash: find Path -nouser -ls <|endoftext|>
<|endoftext|> english: Set permissions for all direcotries under /var/www to 755
bash: find Path -type d -print0 | xargs -0 -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: display the file name and creation month of top 11 files in the entire file system
bash: find Path -type f -printf "\n%Ab %p" | head -n Quantity <|endoftext|>
<|endoftext|> english: Search my_folder recursively for text files containing "needle text"
bash: find Path -type f -exec grep -l Regex {} \; -exec file {} \; | grep Regex <|endoftext|>
<|endoftext|> english: search for a word in all the files in the current directory and display the file paths relative to the current directory
bash: find Path -exec grep -l Regex {} + <|endoftext|>
<|endoftext|> english: Find all SGID set files
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: Archive "/media/Incoming/music/" to "/media/10001/music/" on host "server" and skip files that are newer in the destination, delete any files in the destination not in the source, and compress data during transmission
bash: rsync -a -v -z -r -u --delete-excluded File File <|endoftext|>
<|endoftext|> english: Show ls's detailed output for all files named "something"
bash: find Path -name Regex -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: Find all files on the system whose names are 'autoload.php'
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: List all files in /home/bozo/projects directory tree that were modified exactly one day ago
bash: find Path -mtime Timespan <|endoftext|>
<|endoftext|> english: Send SIGHUP (hangup) signal to nginx master process, causing it to re-read its configuration and restart child processes if necessary.
bash: kill - Regex $( cat File ) <|endoftext|>
<|endoftext|> english: Find files/directories named 'file.txt' that belong to user 'tutonics' in the entire filesystem
bash: find Path -user Regex -name Regex <|endoftext|>
<|endoftext|> english: Check that the master SSH control socket "my-ctrl-socket" to "jm@sampledomain.com" is running
bash: ssh -S Path -O Regex Regex <|endoftext|>
<|endoftext|> english: Report file system disk space usage in human readable format
bash: df -h <|endoftext|>
<|endoftext|> english: Recursively removes all files like '*.pyc' in a current folder.
bash: find Path -name Regex -exec rm -r -f {} \; <|endoftext|>
<|endoftext|> english: Find files under /usr that are newer than the first file `FirstFile'
bash: find Path -newer File -print <|endoftext|>
<|endoftext|> english: Merge colon-separated information from file1 and file2 where first field of both files matches
bash: join -t Regex <( sort File ) <( sort File ) <|endoftext|>
<|endoftext|> english: find StringBuffer in all *.java files
bash: find Path -type f -name Regex -exec grep -l Regex {} \; <|endoftext|>
<|endoftext|> english: Find all files under current directory and make them read-only for owner, read & writable by group and remove read-write-execute permission
bash: find Path -type f -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Find all or single file called FindCommandExamples.txt under / directory of owner root
bash: find Path -user Regex -name Regex <|endoftext|>
<|endoftext|> english: Make a copy of file.txt in all directories in current directory - names may not contain spaces.
bash: ls -d File | xargs -i Regex -I {} cp File File {} <|endoftext|>
<|endoftext|> english: Search the "test1" directory recursively for regular files
bash: find Path -type f -print <|endoftext|>
<|endoftext|> english: Read a line from standard input into variable "SSHPASS" with prompt "Password: " and without echoing the input
bash: read -p Regex -s Regex <|endoftext|>
<|endoftext|> english: Find files in the current directory and its sub-directories that begin with 'f'.
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: Prints help on 'cp' utility.
bash: cp --help <|endoftext|>
<|endoftext|> english: Display only line numbers listed in 'file_of_line_numbers" from file 'source'.
bash: sed Program File | sed -n -f Program File <|endoftext|>
<|endoftext|> english: Remove trailing whitespaces from all regular non-hidden files in the current directory tree
bash: find Path -type f -name Regex -exec sed --in-place Regex {} + <|endoftext|>
<|endoftext|> english: find all text files in user/directory/ which have been modified today and display the last line of these files
bash: find Path -name Regex -mtime Timespan -type f -printf '%p: ' -exec tail - Quantity {} \; <|endoftext|>
<|endoftext|> english: Search the current directory recursively for files last modified within the past 24 hours ignoring paths ./es* and ./en*
bash: find Path -mtime Timespan | grep -v Regex | grep -v Regex <|endoftext|>
<|endoftext|> english: Search the directory given as variable $d for empty subdirectories
bash: find Path -mindepth Quantity -prune -empty <|endoftext|>
<|endoftext|> english: Lists '/tmp/hashmap.$1' file or folder '/tmp/hashmap.$1' content one file per line.
bash: ls -1 File <|endoftext|>
<|endoftext|> english: Find all files/directories that contain the string literal '`$VERSION`' in their names under current directory tree
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Copies '[MacVim_source_folder]/src/MacVim/mvim' to the  '/usr/local/bin', printing info message on each operation.
bash: cp -v File File <|endoftext|>
<|endoftext|> english: Search directory tree $DIR for *.txt files
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Add group write permission to all files and directories in the current directory including hidden files and excluding ".."
bash: chmod Permission $( ls -1 -a | grep -v Regex ) <|endoftext|>
<|endoftext|> english: search for php files  in current directory and search for a word in all these files
bash: find Path -name Regex -exec grep -i -q Regex {} \; -exec grep -i -q Regex {} \; -print <|endoftext|>
<|endoftext|> english: find all the empty directories in the current folder
bash: find Path -type d -empty <|endoftext|>
<|endoftext|> english: List all files/directories under current directory
bash: find Path -ls <|endoftext|>
<|endoftext|> english: find al the files that are modified exactly 2 days ago
bash: find Path -daystart -mtime Timespan <|endoftext|>
<|endoftext|> english: display a long listing of all the "Trash" files in the folder /home
bash: find Path -name Regex -exec ls -a -l {} \; <|endoftext|>
<|endoftext|> english: Creates temporary file, replacing XXXXXXXXXXXXXXXXXXXXXXX with equal length suffix.
bash: mktemp Regex <|endoftext|>
<|endoftext|> english: Find all *.c files under and below the current directory that contain "wait_event_interruptible"
bash: find Path -name Regex -exec grep Regex {} + <|endoftext|>
<|endoftext|> english: Go to /the/project/root//data, which in most filesystems/operating systems will be the same as cd /the/project/root/data
bash: cd Directory <|endoftext|>
<|endoftext|> english: print disk usage of files or folders in current directory
bash: du -s -h File <|endoftext|>
<|endoftext|> english: Locate all the hard links of file `passwd'
bash: find Path -samefile Regex <|endoftext|>
<|endoftext|> english: Print unique lines in "file_a" and "file_b"
bash: sort File File | uniq -u <|endoftext|>
<|endoftext|> english: Find all files/directories with '.pdf' extension excluding 'pdfs' directory and all of its contents
bash: find Path -name Regex -print | grep -v Regex <|endoftext|>
<|endoftext|> english: convert epoch second timestamp to date
bash: date -d Regex +'%Y-%m-%d %H:%M:%S' <|endoftext|>
<|endoftext|> english: Print unique lines of sorted file "A.txt" compared to sorted file "B.txt"
bash: comm -2 -3 <( sort File ) <( sort File ) <|endoftext|>
<|endoftext|> english: Change permissions of directory "/home/sshtunnel/" to 555
bash: chmod Permission File <|endoftext|>
<|endoftext|> english: Calculate md5 sum of the md5 sum of all the sorted files under $path
bash: find Path -type f -print0 | sort -z | xargs -r -0 -I {} md5sum {} | md5sum <|endoftext|>
<|endoftext|> english: Find all files/directories under /path/to/dir and set directory permission to 0755 and file permission to 0644
bash: find Path -type d -exec chmod Permission {} \; -or -type f -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Change the owner to "root" and group to "specialusers" of "dir1"
bash: chown Regex File <|endoftext|>
<|endoftext|> english: Print "a\nb\ncccccccccccc\nd" as two columns and neatly format into a table
bash: echo -e Regex | paste File File | column -t <|endoftext|>
<|endoftext|> english: display all the header files  and cpp files in the current folder
bash: find Path \( -name Regex -or -name Regex \) -print <|endoftext|>
<|endoftext|> english: Find all the files which were modified 50 days ago
bash: find Path -mtime Timespan <|endoftext|>
<|endoftext|> english: Compresses with compression level 9 all files under the current folder but already compressed '*.bz2' files, performing in background.
bash: find Path -type f | grep -E -v Regex | xargs -I {} bzip2 -9 {} <|endoftext|>
<|endoftext|> english: search for files in the current folder using name patterns
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Create a full path symbolic link "$newlink" from a relative path symbolic link "$origlink"
bash: ln -s $( readlink -f File ) Regex <|endoftext|>
<|endoftext|> english: list all java file that StringBuff in context.
bash: find Path -type f -name Regex -exec grep -l Regex {} \; <|endoftext|>
<|endoftext|> english: display all files in the current folder with the name test excluding those that are present folder test
bash: find Path -name Regex -prune -or -print <|endoftext|>
<|endoftext|> english: Search the regular files of the current directory tree for string "foo"
bash: find Path -type f -exec grep Regex {} \; <|endoftext|>
<|endoftext|> english: Archive all files (not directories) in "folder1" to "copy_of_folder1" specifying to include files info.txt and data.zip
bash: rsync -a -f Program -f Program -f Program File File <|endoftext|>
<|endoftext|> english: Find all files/directories with 777 permission under '/apps/audit' and strip write permission for 'other' from them
bash: find Path -perm -Permission -print | xargs -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: Search for files with "demo" in their names and "sitesearch" in their path names
bash: find Path -iname Regex | grep -i Regex <|endoftext|>
<|endoftext|> english: Find all CDC* files under current directory that were accessed less than 1 day ago and delete the first and last lines from those files and count the number of lines in the output
bash: find Path -type f -name Regex -ctime -Timespan -exec sed -i Regex -e Program -e Program {} File \; | wc -l <|endoftext|>
<|endoftext|> english: Find files/directories not changed in two weeks under /dev/shm
bash: find Path Path -type f -ctime +Timespan <|endoftext|>
<|endoftext|> english: Search the current directory tree for symbolic links to files matching pattern '*test*'
bash: find Path -lname Regex <|endoftext|>
<|endoftext|> english: Counts lines with all-cased word 'null' in file 'myfile.txt'.
bash: grep -n -i Regex File | wc -l <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory and print only 2nd field from output delimited by '/'
bash: find Path | awk -F Regex Program <|endoftext|>
<|endoftext|> english: find all javascript files under the current folder
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: split all files in directory "/dev/shm/split/" into pieces per 1000 lines
bash: find Path -type f -exec split -l Quantity {} {} \; <|endoftext|>
<|endoftext|> english: Find all files under /path and below writable by `group' or `other'
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: Delete all directories in the /myDir directory tree
bash: find Path -type d -delete <|endoftext|>
<|endoftext|> english: display all symbolic links in the folder "myfiles"
bash: find Path -type l <|endoftext|>
<|endoftext|> english: Search for first match of the case insensitive regex 'oyss' in all *.txt files under current directory and print the file paths along with the matches
bash: find Path -name Regex | xargs -I {} grep -m Quantity -r -i Regex {} <|endoftext|>
<|endoftext|> english: Search the bla directory recursively for *.so files
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Finds more than 5 days old files in two directories  and compresses them.
bash: find Path Path -type f -mtime +Timespan -exec compress {} \; <|endoftext|>
<|endoftext|> english: Change all cron jobs running "anm.sh" to be run every 10 minutes instead of 5 minutes.
bash: crontab -l | sed Program | crontab File <|endoftext|>
<|endoftext|> english: Recursively removes all files in a 'path' folder but 'EXPR' files.
bash: find Path -type f -not -name Regex | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: find all directories in the current directory which have the name foo and do not have the extension "bar"
bash: find Path -name Regex ! -name Regex -type d -print <|endoftext|>
<|endoftext|> english: Search for directories that contain the phrase "foo" but do not end in ".bar"
bash: find Path -name Regex ! -name Regex -type d -print <|endoftext|>
<|endoftext|> english: search in the current folder for the files that begin with "myletter"
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: Print each line in "file1" and file2" separated by tabs and "file3" separated by a space
bash: paste -d Regex File File | paste -d Regex File File | sed Program <|endoftext|>
<|endoftext|> english: Change permissions of "/dvtcolorconvert.rb" to 755
bash: chmod Permission File <|endoftext|>
<|endoftext|> english: Read a line from standard input into variable "response" without backslash escapes using the prompt "About to delete all items from history that match \"$param\". Are you sure? [y/N] "
bash: read -r -p Regex Regex <|endoftext|>
<|endoftext|> english: Find all files/directories that contain the string literal '$VERSION' in their names under current directory tree
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: find all regular file and create jw-htmlfiles.tar
bash: find Path -type f -name Regex | xargs -I {} tar -c -v -f File File {} <|endoftext|>
<|endoftext|> english: Search the current directory tree for files and directories with permissions 775
bash: find Path -perm Permission -print <|endoftext|>
<|endoftext|> english: Compress a file named '{}' in the current directory
bash: gzip {} <|endoftext|>
<|endoftext|> english: Remove the .jpg files from the current directory whose names match regular expression ".+-[0-9]+x[0-9]+\.jpg"
bash: find Path -type f -regex Regex -exec rm -r -f {} \; <|endoftext|>
<|endoftext|> english: Find files that are 0 bytes in size in the current directory and remove them
bash: find Path -maxdepth Quantity -size Size -exec rm {} \; <|endoftext|>
<|endoftext|> english: search for a word in all the shell scripts in the current folder and display the matched files.(case insensitive search in grep commad)
bash: find Path -type f -name Regex -exec grep -i -l Regex {} \; <|endoftext|>
<|endoftext|> english: Print lines 16225 to 16482 in file "file"
bash: cat File | head -n Quantity | tail -n Quantity <|endoftext|>
<|endoftext|> english: Prints directory where the executing script ($0) is located.
bash: $( dirname Regex ) <|endoftext|>
<|endoftext|> english: find all the directories in the current directory which dont have the execute permission.
bash: find Path -type d ! -perm -Permission <|endoftext|>
<|endoftext|> english: search for the file foo.txt in the entire file system
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Remove duplicate phrases and keep the original order of lines in "$infile"
bash: nl -w Quantity File | sort -k Number -u | sort -n | cut -f Number <|endoftext|>
<|endoftext|> english: Format bash array "${arr}" in columns
bash: echo Regex | sed Program | column <|endoftext|>
<|endoftext|> english: Search the current directory recursively for regular files modified 2 days ago
bash: find Path Path -f -mtime Timespan <|endoftext|>
<|endoftext|> english: Read a line from standard input with prompt "Are you alright? (y/n) " and save the response to variable "RESP"
bash: read -p Regex Regex <|endoftext|>
<|endoftext|> english: Search all files and   directories either of the directory /home/oracle and  /home/databse which  contain the "zip"  anywhere in the files or directory name .
bash: find Path Path -name Regex <|endoftext|>
<|endoftext|> english: Find all files/directories with case insensitive name pattern $TARGET that are located in minimum 10 level down the current directory
bash: find Path -mindepth Quantity -iname Regex <|endoftext|>
<|endoftext|> english: find all the files in the entire file system which have been modified in the last 48 hours
bash: find Path -mtime -Timespan -print <|endoftext|>
<|endoftext|> english: Find all the files called FindCommandExamples.txt of owner root
bash: find Path -user Regex -name Regex <|endoftext|>
<|endoftext|> english: search for the file filename in the entire file system
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: search for all the regular/normal files with the name "access.log" in the folder /var/www which are bigger than 100MB
bash: find Path -type f -name Regex -size +Size <|endoftext|>
<|endoftext|> english: Cut all remote paths from HTTP URLs received from standard input (one per line) keeping only the protocol identifier and host name, of the form http://example.com
bash: sed -n Program <|endoftext|>
<|endoftext|> english: Count the number of lines in "testfile" wrapped to fit in a width of "$COLUMNS" characters
bash: fold -w Quantity File | wc -l <|endoftext|>
<|endoftext|> english: List the commands in /usr/bin, pausing for user input after each page.
bash: more <( ls File ) <|endoftext|>
<|endoftext|> english: List current user's crontab.
bash: crontab -l <|endoftext|>
<|endoftext|> english: Follow symbolic links for the full path of "lshw"
bash: readlink -f $( which Regex ) <|endoftext|>
<|endoftext|> english: Recursively change owner to "tomcat6" of "webapps", "temp", "logs", "work", and "conf"
bash: chown -R Regex File File File File File <|endoftext|>
<|endoftext|> english: Print the files in the current directory as a list of comma separated values
bash: ls -1 | tr Regex Regex | sed Program <|endoftext|>
<|endoftext|> english: Search the /Path directory tree for files matching pattern "file_name*"
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Print directories in the the current directory as a list with no report information
bash: tree -d -L Number -i --noreport <|endoftext|>
<|endoftext|> english: Print the 6th field (delimited by '/') from the paths specified by ~/bin/FilesDvorak/.* files/directories
bash: find Path -maxdepth Quantity | awk -F Regex Program <|endoftext|>
<|endoftext|> english: Search for 'ireg' in all PHP files under 'project' directory tree and show only the files that match
bash: find Path -name Regex -type f -print0 | xargs -0 -I {} grep -l Regex {} <|endoftext|>
<|endoftext|> english: display the amount of disk space used by all the log files in the folder /usr/local/apache/logs/
bash: find Path -type f -name Regex | xargs -I {} du -c -s -h {} <|endoftext|>
<|endoftext|> english: Search three folders named foo, bar, and baz for all "*.rb" files
bash: find Path Path Path -name Regex <|endoftext|>
<|endoftext|> english: Find all symbolic links under the current folder and below
bash: find Path -L -xtype l <|endoftext|>
<|endoftext|> english: search for the file "process.txt" in the current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Split "filename" into files of at most 200000 lines each
bash: split -l Quantity File <|endoftext|>
<|endoftext|> english: Move all files listed in $i file to dir.$count directory
bash: cat File | xargs -I {} mv -t Directory {} <|endoftext|>
<|endoftext|> english: Save the numerically greater value of "$kf" and "$mp" into variable "gv"
bash: echo -e Regex | sort -t Regex -g | tail -n Quantity <|endoftext|>
<|endoftext|> english: Print the time of last boot
bash: who -b <|endoftext|>
<|endoftext|> english: Search for hidden files non-recursively
bash: find Path -name Regex -prune <|endoftext|>
<|endoftext|> english: Mount "/windows" using /etc/fstab entry
bash: mount Regex <|endoftext|>
<|endoftext|> english: Gets IP address of ${NET_IF} network interface.
bash: ifconfig Regex | grep -E -o Regex | grep -E -o Regex | grep -v Regex <|endoftext|>
<|endoftext|> english: List every symbolic link in every home directory's subdirectory owned by group `staff'
bash: find Path $( pwd ) -group Regex -exec find {} -type l -print \; <|endoftext|>
<|endoftext|> english: display all directories in current folder and do not search in sub directories
bash: find Path -maxdepth Quantity -mindepth Quantity -type d <|endoftext|>
<|endoftext|> english: Find all regular files on the system whose names are 'myfile'
bash: find Path -name Regex -type f -print <|endoftext|>
<|endoftext|> english: print bindings for "p" and "e" with no case sensitivity
bash: bind -p | grep -i Regex <|endoftext|>
<|endoftext|> english: Find all 777 permission files in entire file system and set permissions to 644
bash: find Path -type f -perm Permission -print -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Find all files/directories with '.log' extension that belong to the group 'adm' under '/var/log' directory tree
bash: find Path -group Regex -name Regex <|endoftext|>
<|endoftext|> english: find all the error, access, ssl_engine and rewrite logs which are bigger than 300MB and are less then 5GB in the folder /opt
bash: find Path \( -name Regex -or -name Regex -or -name Regex -or -name Regex -or -name Regex \) -size +Size -and -size -Size <|endoftext|>
<|endoftext|> english: Kills all child process and process itself having id 24901.
bash: kill $( pstree -p Regex | sed Program | grep Regex | sed Program | tr Regex Regex ) <|endoftext|>
<|endoftext|> english: Print pathnames of all files in the current directory and below skipping files under SCCS directories
bash: find Path -print -name Regex -prune <|endoftext|>
<|endoftext|> english: Search the current directory tree for the files with extension "trc" and remove them if they are more than three days old
bash: find Path -name Regex -ctime +Timespan -exec rm -f {} \; <|endoftext|>
<|endoftext|> english: Find all files under current directory
bash: find Path -type f -print <|endoftext|>
<|endoftext|> english: Move all directories in the current directory tree that have been modified in the last day to "/path/to/target-dir"
bash: find Path -type d -mtime -Timespan -exec mv -t Directory {} + <|endoftext|>
<|endoftext|> english: Find broken links using the file command on each symlinks in the system and searching for the keword 'broken' with grep
bash: find Path -type l -print0 | xargs -0 -I {} file {} | grep Regex <|endoftext|>
<|endoftext|> english: Find all files in the current directory and its sub-directories that have been modified sometime in the last 24 hours.
bash: find Path -mtime -Timespan -print <|endoftext|>
<|endoftext|> english: Change the permission of all regular files under current directory tree to 644
bash: find Path -type f -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Copies ${FILE} to COLLECT folder with unique name formatted like 'job_XXXXXXXXX'.
bash: cp File $( mktemp Regex ) <|endoftext|>
<|endoftext|> english: Show all values (without the names) of variables whose name or value contains "VARIABLE_NAME"
bash: set | grep Regex | sed Program <|endoftext|>
<|endoftext|> english: Print a list of regular files from directory tree sort_test/ sorted with LC_COLLATE=C
bash: find Path -type f | env -i Program Program <|endoftext|>
<|endoftext|> english: Find all files/directories with '.js' extension under current directory tree excluding paths that contain the directory './directory'
bash: find Path -name Regex -not -path Regex <|endoftext|>
<|endoftext|> english: Counts lines in each of *.php files in a current folder and subfolders and prints total count.
bash: find Path -name Regex | awk Program | xargs -I {} wc -l {} <|endoftext|>
<|endoftext|> english: Merge lines whose first comma-separated field in file 'in1' also appears as a first comma-separated in file 'in2' - both files must be sorted.
bash: join -t Regex File File <|endoftext|>
<|endoftext|> english: Print only unique lines in files 'set1' and 'set2'
bash: cat File File | sort -u <|endoftext|>
<|endoftext|> english: Find all files in the current directory tree whose path names match pattern './sr*sc'
bash: find Path -path Regex <|endoftext|>
<|endoftext|> english: Find a.out and object files in the current directory tree
bash: find Path \( -name Regex -or -name Regex \) -print <|endoftext|>
<|endoftext|> english: Print a randomly sorted list of numbers from 1 to 10 to file "/tmp/lst" and the screen followed by " -------"
bash: seq Number Number | sort -R | tee File | cat <( cat File ) <( echo Regex ) <|endoftext|>
<|endoftext|> english: show all the directories in the current folder
bash: find Path -type d <|endoftext|>
<|endoftext|> english: List files larger than 10MB under /var/log /tmp that haven't changed in a month
bash: find Path Path -size +Size -mtime Timespan -ls <|endoftext|>
<|endoftext|> english: Change folder to the one where $0 link target file is located.
bash: cd $( dirname $( readlink -f File ) ) <|endoftext|>
<|endoftext|> english: Find all lines matching "$USER" in "file" and number the output
bash: grep Regex File | nl <|endoftext|>
<|endoftext|> english: find files in the users home directory and for each one, ask the user to confirm to delete the file.
bash: find Path -name Regex -ok rm {} \; <|endoftext|>
<|endoftext|> english: Recursively changes group ownership of every file in '/var/tmp/jinfo' to 'www-data'.
bash: chgrp -R Regex File <|endoftext|>
<|endoftext|> english: Split "file.txt" into files of at most 1 MiB in size with a numeric suffix, prefix "file", and additional suffix ".txt"
bash: split -b Size -d File Regex --additional-suffix Regex <|endoftext|>
<|endoftext|> english: Calculate the md5 sum of "exampleString"
bash: echo -n Regex | md5sum <|endoftext|>
<|endoftext|> english: Search the current directory recursively for files containing "needle text"
bash: find Path -type f | xargs -I {} grep -I Regex {} <|endoftext|>
<|endoftext|> english: find all regex "./[a-f0-9\-]\{36\}\.jpg" files
bash: find Path -regex Regex <|endoftext|>
<|endoftext|> english: display all the files in the current folder which are bigger than 100MB and save the output list to the file /root/big.txt
bash: find Path \( -size +Size -fprintf File %-10s Path \) <|endoftext|>
<|endoftext|> english: Pass all the files from the current directory tree as arguments to a single 'echo' command
bash: find Path -exec echo {} + <|endoftext|>
<|endoftext|> english: remove all files that's older than 30 days in '/tmp'
bash: find Path -type f -mtime +Timespan -exec rm -f {} \; <|endoftext|>
<|endoftext|> english: Find all regular files residing in the current directory tree and search them for string "/bin/ksh"
bash: find Path -type f -print | xargs -I {} grep -i Regex {} <|endoftext|>
<|endoftext|> english: Search the entire file hierarchy for all regular files owned by olduser and change their ownership to newuser.
bash: find Path -user Regex -type f -exec chown Regex {} \; <|endoftext|>
<|endoftext|> english: Display long listing of all the files/directories owned by the user 'me' under '/tmp' directory tree
bash: find Path -user Regex -ls <|endoftext|>
<|endoftext|> english: Saves space separated content of $RAW_LOG_DIR in FILES variable
bash: cat File | xargs -r <|endoftext|>
<|endoftext|> english: Create a symbolic link named "$1/link" to the existing full and real path of "$2"
bash: ln -s $( readlink -e File ) Regex <|endoftext|>
<|endoftext|> english: Add "new." to the beginning of the name of "original.filename", renaming it to "new.original.filename".
bash: rename Regex Regex <|endoftext|>
<|endoftext|> english: Save 'foo' into variable 'bar' in ksh
bash: echo Regex | read Regex <|endoftext|>
<|endoftext|> english: get year-month-day hour:minute:second from date
bash: date +%Y-%m-%d:%H:%M:%S <|endoftext|>
<|endoftext|> english: Make directories to "x/p/q" as needed
bash: mkdir -p Directory <|endoftext|>
<|endoftext|> english: find all the files ending with .ini in the current directory.
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Prints long listing of a last modified file in a current folder.
bash: find Path -type f -printf '%T@ %p\n' | sort -n | tail - Quantity | cut -f Number -d Regex | sed Program | xargs -I {} ls -l {} <|endoftext|>
<|endoftext|> english: display all the directories in the folder /var and do not go beyond 2 levels during search
bash: find Path -maxdepth Quantity -type d <|endoftext|>
<|endoftext|> english: If variable "c" is a syntactically correct cron job, erase user's cron jobs and add "c" as the only cron job for user.
bash: echo Regex | crontab <|endoftext|>
<|endoftext|> english: Forward all connections to client localhost 3309 via the SSH tunnel to "mysql_access_server" and then connect to host "sqlmaster.example.com" on port 3306
bash: ssh -f Regex -L Regex -N <|endoftext|>
<|endoftext|> english: Archive all filepattern-*2009* files/directories under data/ into 2009.tar
bash: find Path -name Regex -exec tar -u -f File {} + <|endoftext|>
<|endoftext|> english: Prints file.txt without the last N bytes
bash: head -c -Quantity File <|endoftext|>
<|endoftext|> english: Calculate the total size of all *.jpg files in the directory tree
bash: find Path -name Regex -exec du -k {} \; | awk Program <|endoftext|>
<|endoftext|> english: SSH into $1 with login name 'pete'
bash: ssh Regex -l Regex <|endoftext|>
<|endoftext|> english: Make directory and parents as needed for each unique mime type in the current directory
bash: mkdir -p $( file -b --mime-type File | uniq ) <|endoftext|>
<|endoftext|> english: display all files in the current folder
bash: find Path -print <|endoftext|>
<|endoftext|> english: find all files in current folder which are bigger than 1MB
bash: find Path -size +Size <|endoftext|>
<|endoftext|> english: Change directory to "/lib/modules/" of the current kernel release
bash: cd $( uname -r ) <|endoftext|>
<|endoftext|> english: search for the directory with the name aa in the current folder
bash: find Path -type d -name Regex <|endoftext|>
<|endoftext|> english: find all the files in the file system which have been changed 1 minute ago.
bash: find Path -newerct Regex -print <|endoftext|>
<|endoftext|> english: Set 444 permission to all regular files under current directory
bash: find Path -type f -print | xargs -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: Remove all vmware-*.log files under current directory ensuring white space safety in filename
bash: find Path -name Regex -print0 | xargs -0 -I {} rm {} <|endoftext|>
<|endoftext|> english: Return the list of files named "filename" that are 50 megabytes or larger
bash: find Path -size +Size -iname Regex <|endoftext|>
<|endoftext|> english: Remove trailing white spaces from all files under dir directory ensuring white space safety in the filename
bash: find Path -type f -print0 | xargs -r -0 -I {} sed -i Program {} <|endoftext|>
<|endoftext|> english: Get only the latest version of the file 'filename' under current directory
bash: find Path -name Regex | xargs -r -I {} ls -t -c {} | head -n Quantity <|endoftext|>
<|endoftext|> english: Search through the /usr/local directory for files that end with the extension .html, and print the file locations.
bash: find Path -name Regex -type f <|endoftext|>
<|endoftext|> english: Search all files from the /tmp directory tree for the string "search string"
bash: find Path -type f -exec grep Regex {} File + <|endoftext|>
<|endoftext|> english: Print the list of files in the current directory tree with "xx" preceding and following each filename
bash: find Path -exec echo Regex \; <|endoftext|>
<|endoftext|> english: Find all directories under media/ directory and change their permission to 700
bash: find Path -type d -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: delete all the normal files in the current directory whcih have the word "gui" in their content.
bash: find Path -type f -print0 | xargs -0 -I {} grep -l -i -w -Z Regex {} | xargs -0 -I {} rm -f {} <|endoftext|>
<|endoftext|> english: search for a regular/normal file myfile in the folder "/home/weedly"
bash: find Path -name Regex -type f -print <|endoftext|>
<|endoftext|> english: Display difference between one.txt and two.txt side-by-side.
bash: diff -y File File <|endoftext|>
<|endoftext|> english: Print unique lines in sorted "file1" compared to sorted file "file2"
bash: comm -2 -3 File File <|endoftext|>
<|endoftext|> english: remove all the files in the current working directory which have a specifc inode number
bash: find Path -inum Quantity -exec rm {} \; <|endoftext|>
<|endoftext|> english: Recursively removes all empty folders from the X folder.
bash: find Path -depth -type d -exec rmdir {} \; <|endoftext|>
<|endoftext|> english: Finds matched text in defined path recursively, but not follows symlinks.
bash: grep -r Regex File <|endoftext|>
<|endoftext|> english: For every cron job with a comment "change-enabled" at the end of its crontab entry, change the scheduled hour to 7.
bash: crontab -l | sed -r -e Program | crontab File <|endoftext|>
<|endoftext|> english: Request A record from nameserver $ns for domain name $d, filter strings with domain name and exclude lines matching 'DIG'
bash: dig Regex Regex A | grep Regex | grep -v Regex <|endoftext|>
<|endoftext|> english: Go to first directory specified in PATH which contains the command 'oracle'
bash: cd $( which Regex | xargs -I {} dirname {} ) <|endoftext|>
<|endoftext|> english: Find all files and directories in the current directory tree except those whose name is "dirname", case insensitive
bash: find Path -iname Regex -iname Regex <|endoftext|>
<|endoftext|> english: Prints last modified file in a current folder with modification time.
bash: find Path -type f | sed Program | xargs -I {} ls File {} | awk Program | sort | tail - Quantity <|endoftext|>
<|endoftext|> english: Display the last 3 characters of variable foo.
bash: echo Regex | rev | cut -c Number | rev <|endoftext|>
<|endoftext|> english: Print second field from semicolon-seprated line $string.
bash: echo Regex | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: Find files in the current directory tree whose size is 24000 bytes
bash: find Path -size Size <|endoftext|>
<|endoftext|> english: print the last word in a.txt
bash: tac File | awk Program <|endoftext|>
<|endoftext|> english: Find all the files whose permissions are 777
bash: find Path -type f -perm Permission -print <|endoftext|>
<|endoftext|> english: Sort the lines of the file 'inputfile', keep only the uniq lines and change it in-place
bash: sort File | uniq | sort -o File <|endoftext|>
<|endoftext|> english: find all regular/normal files in the current folder that have been modified in the last 120 hours
bash: find Path -mtime -Timespan -type f -print <|endoftext|>
<|endoftext|> english: search for the file "file" in the current folder excluding those in the sub directory ".git"
bash: find Path -path Regex -prune -or -name Regex -print <|endoftext|>
<|endoftext|> english: Enables shell option 'cdable_vars'.
bash: shopt -s cdable_vars <|endoftext|>
<|endoftext|> english: Open a ssh connection to "user@host" with a control socket "/tmp/%r@%h:%p"
bash: ssh Regex -S Path <|endoftext|>
<|endoftext|> english: Find files under current directory without descending into other file systems and append a null character at the end of each paths
bash: find -x Path -type f -print0 <|endoftext|>
<|endoftext|> english: Display mime type of file specified by variable "file"
bash: file -i -b File <|endoftext|>
<|endoftext|> english: Make directories "~/foo/bar/baz", "~/foo/bar/bif", and "~/foo/boo/bang" as needed
bash: mkdir -p Directory Directory Directory <|endoftext|>
<|endoftext|> english: Find all SUID files in entire file system
bash: find Path -perm +Permission <|endoftext|>
<|endoftext|> english: Find all *.txt files/directories under current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: List files larger than 10MB in the /var directory recursively
bash: find Path -size +Size -exec ls -l -h {} \; <|endoftext|>
<|endoftext|> english: Find all *.m4a files/directories under /home/family/Music directory
bash: find Path -name Regex -print0 <|endoftext|>
<|endoftext|> english: Search  in current directory downwards all files whose size is 10 blocks .
bash: find Path -size Size Path <|endoftext|>
<|endoftext|> english: Lists all files that matches path pattern with wildcards.
bash: ls -l File <|endoftext|>
<|endoftext|> english: display long listing of all the text files in the current folder
bash: find Path -name Regex -exec ls -l -a {} \; <|endoftext|>
<|endoftext|> english: Search for non-empty files
bash: find Path ! -size Size <|endoftext|>
<|endoftext|> english: Find all files/directories under /var/www/some/subset and change their owner and group to www-data
bash: find Path -print0 | xargs -0 -I {} chown Regex {} <|endoftext|>
<|endoftext|> english: display all the files in the file system excluding all the ".c" files
bash: find Path ! -name Regex -print <|endoftext|>
<|endoftext|> english: Print the last space separated word from "a b c d e"
bash: echo Regex | tr Regex Regex | tail - Quantity <|endoftext|>
<|endoftext|> english: Find things changed today
bash: find Path -daystart -ctime -Timespan <|endoftext|>
<|endoftext|> english: Copies all files under current directory like '*FooBar*' to the '~/foo/bar' directory.
bash: find Path -name Regex -print0 | xargs -0 -I {} cp -t Directory {} <|endoftext|>
<|endoftext|> english: Find all files/directories under '/usr/share/doc' directory tree whose name start with 'README'
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Identify files that do not have a listing in the /etc/passwd or /etc/group file
bash: find Path -nouser -or -nogroup <|endoftext|>
<|endoftext|> english: Find every vim undo file under current directory
bash: find Path -type f -iname Regex <|endoftext|>
<|endoftext|> english: Find all *shp* directories under current directory and move '*' (literal) file/directory inside those directories to shp_all
bash: find Path -name Regex -execdir mv File File \; <|endoftext|>
<|endoftext|> english: Make regular files from debian/fglrx-amdcccle/usr/lib/fglrx/bin/ executable for all
bash: find Path -type f | xargs -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: Archive all *.xml files under current directory tree to xml.tar excluding the files that match '/workspace/' in their paths
bash: find Path -name Regex | grep -v Regex | tr Regex Regex | xargs -0 -I {} tar -c -f File {} <|endoftext|>
<|endoftext|> english: Find all regular files in the the user's home/mail directory and search for the word "Linux".
bash: find Path -type f | xargs -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: Set variable GZIP to the full path of command "gzip"
bash: which Regex <|endoftext|>
<|endoftext|> english: Remove the regular files from the current directory that were last modified on November, 22
bash: find Path -maxdepth Quantity -type f -newermt Regex ! -newermt Regex -delete <|endoftext|>
<|endoftext|> english: Delete all empty directories under root
bash: find Path -type -d -empty -delete <|endoftext|>
<|endoftext|> english: Search for files bigger than 10M
bash: find Path -size +Size <|endoftext|>
<|endoftext|> english: Display the current directory tree except files or directories starting with "3rd"
bash: tree -I Regex <|endoftext|>
<|endoftext|> english: Search $MYGROUP in /etc/group, take the 4th colon (':') separated field, replace comma (',') with newline and save the result to variable 'MYUSERS'
bash: grep Regex File | cut -d Regex -f Number | tr Regex Regex <|endoftext|>
<|endoftext|> english: Recursively finds all folders in a current folder that contain files like '.git'.
bash: find Path -name Regex | xargs -I {} dirname {} <|endoftext|>
<|endoftext|> english: Create tar.gz files older than one day logs
bash: find Path -mtime +Timespan | xargs -I {} tar -c -z -v -P -f $( date +%F ) {} <|endoftext|>
<|endoftext|> english: Join lines in file "aa" with lines in file "bb" if the lines share a common first word
bash: join <( sort File ) <( sort File ) <|endoftext|>
<|endoftext|> english: Print only group names from /etc/group.
bash: cut -d Regex -f Number File <|endoftext|>
<|endoftext|> english: List and remove all regular files named "core" that are larger than 500KB
bash: find Path -type f -size +Size -print -name Regex -exec rm {} \; <|endoftext|>
<|endoftext|> english: Prefix each non-blank line in "filename" with a line number
bash: nl File <|endoftext|>
<|endoftext|> english: search for the file foo in  the current folder and display a long listing of it in sorted order of modification date
bash: find Path -name Regex | xargs -I {} ls -t -l {} <|endoftext|>
<|endoftext|> english: display all regular files in current folder which have spaces in their name
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: Find all directories whose name is root in / directory
bash: find Path -type d -name Regex <|endoftext|>
<|endoftext|> english: Set shell option 'dotglob'.
bash: shopt -s dotglob <|endoftext|>
<|endoftext|> english: Find PHP files containing 2 or more classes
bash: find Path -type f -name Regex -exec grep --with-filename -c Regex {} \; | grep Regex | sort -t Regex -k Number -n -r <|endoftext|>
<|endoftext|> english: Read a line from standard input and save each word in the bash array variable "arr"
bash: read -a Regex <|endoftext|>
<|endoftext|> english: search for files that are readable for everybody, have at least on write bit set but are not executable for anybody
bash: find Path -perm -Permission -perm Permission ! -perm Permission <|endoftext|>
<|endoftext|> english: Find files in the current directory tree that were accessed within the last 60 minutes
bash: find Path -amin -Quantity <|endoftext|>
<|endoftext|> english: print all filenames of files under current dir containing 'foo', case-insensitive
bash: find Path -type f -exec grep -i -l Regex {} \; <|endoftext|>
<|endoftext|> english: Display detailed usage help of the 'cp' (copy) command.
bash: cp --help <|endoftext|>
<|endoftext|> english: Find all files under ~/code that are executable by owner without descending into hidden directories and print their parent directories appended with : at the beginning and remove all newlines and the last : (colon)
bash: find Path -name Regex -prune -or -type f -and -perm Permission -print | sed Program | sort | uniq | tr -d Regex | sed Program <|endoftext|>
<|endoftext|> english: Search all files in the current directory tree for "SearchString", ignoring .html files and skipping .svn directories
bash: find Path \( -name Regex -prune -or ! -name Regex \) | xargs -d Regex -I {} grep -H -d Regex File {} <|endoftext|>
<|endoftext|> english: Print the current date followed by ' doing stuff'
bash: echo $( date ) Regex Regex <|endoftext|>
<|endoftext|> english: Removes all files from current folder but 5 newest ones.
bash: ls -t -r | head -n -Quantity | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: Split "t.txt" into files with at most 30000000 lines each and use a prefix "t" and numeric suffixes of length 2
bash: split --lines Quantity --numeric-suffixes --suffix-length Quantity File Regex <|endoftext|>
<|endoftext|> english: Print "RDBMS exit code : $RC  " to the console and append to "${LOG_FILE}"
bash: echo Regex | tee -a File <|endoftext|>
<|endoftext|> english: Display system information: kernel name, hostname, kernel release and version, machine architecture, processor type, hardware platform, and operating system type.
bash: uname -a <|endoftext|>
<|endoftext|> english: find out what group a given user has
bash: groups Regex <|endoftext|>
<|endoftext|> english: Find all test.txt files/directories under current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Search the files from the current directory tree for "foo"
bash: find Path -exec grep Regex {} + <|endoftext|>
<|endoftext|> english: display all the ".c" files in the current folder excluding those that are present in the .svn sub folder
bash: find Path -name Regex -prune -or -name Regex -print <|endoftext|>
<|endoftext|> english: List each file or directory in the current directory prefixed with its filesize in bytes and sorted from smallest to largest
bash: du -s File | sort -n <|endoftext|>
<|endoftext|> english: Find all the Sticky Bit set files whose permission are 551 in the file system
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: kill all background jobs
bash: jobs -p | xargs -I {} kill {} <|endoftext|>
<|endoftext|> english: Recursively removes all files like '*.pyc' in a current folder.
bash: rm $( find Path -name Regex ) <|endoftext|>
<|endoftext|> english: Prints long listing of directories '/tmp', '/tnt' themselves.
bash: ls -l -d File File <|endoftext|>
<|endoftext|> english: Find and remove the .rhosts file in the /home directory tree
bash: find Path -name Regex -print0 | xargs -0 -I {} rm {} <|endoftext|>
<|endoftext|> english: Print a count of each unique line from standard input sorted from least frequent to most frequent
bash: sort | uniq -c | sort -n <|endoftext|>
<|endoftext|> english: search for the file "myletter.doc" in the home folder
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: Replace "foo" with "bar" in all PHP files in the current directory tree
bash: find Path -name Regex -print | xargs -I {} sed -i Program {} <|endoftext|>
<|endoftext|> english: Change file permissions on all regular files within a directory
bash: find Path -type f -exec chmod Permission {} + <|endoftext|>
<|endoftext|> english: Remove all directories in and below the current directory
bash: find Path ! -name Regex -type d -print0 | xargs -0 -I {} rmdir {} <|endoftext|>
<|endoftext|> english: display all the directories in the current folder
bash: find Path -type d -print <|endoftext|>
<|endoftext|> english: Remove all *.log files from the current directory tree
bash: find Path -name Regex | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: Find all files under current directory and set their permission to 775
bash: find Path -type f -exec chmod Permission {} + <|endoftext|>
<|endoftext|> english: Calculate the md5 sum of the contents of all files sorted in directory tree "/path"
bash: find Path -type f | sort -u | xargs -I {} cat {} | md5sum <|endoftext|>
<|endoftext|> english: Change permissions to 644 for all files in the current directory tree
bash: find Path -type f | xargs -I {} chmod -v Permission {} <|endoftext|>
<|endoftext|> english: Create a symbolc link named "latest" to the last modified file or directory in "target-directory"
bash: ln -s $( ls -r -t File | tail -n Quantity ) Regex <|endoftext|>
<|endoftext|> english: Make directory "mybuild"
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: Copy file 'src' to 'dest', except if 'dest' already exists.
bash: cp -n File File <|endoftext|>
<|endoftext|> english: Find all regular files in the home directory tree that were modified in the last 24 hours
bash: find Path -type f -mtime Timespan <|endoftext|>
<|endoftext|> english: Report all files starting in the directories /mydir1 and /mydir2 larger than 2,000 blocks that have not been accessed in over 30 days
bash: find Path Path -size +Size -atime +Timespan -print <|endoftext|>
<|endoftext|> english: Make sure the file ".bash_profile" exists in current directory, update its timestamp to current date/time.
bash: touch File <|endoftext|>
<|endoftext|> english: list files that the user does not have permissions to read, do not try to descend into directories that cannot be read.
bash: find Path ! -perm -Permission -prune <|endoftext|>
<|endoftext|> english: find all the files in the entire filesystem which belong to the user root and display the ten files.
bash: find Path -user Regex | head <|endoftext|>
<|endoftext|> english: Find all .svn directories under current directory and delete them
bash: find Path -type d -name Regex -print | xargs -I {} rm -r -f {} <|endoftext|>
<|endoftext|> english: Find all empty directories in minimum 2 levels down the root directory
bash: find Path -mindepth Quantity -type d -empty <|endoftext|>
<|endoftext|> english: Find all files/directories named 'photo.jpg' (case insensitive) under current directory tree
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: display the type of all the regular/normal files in the entire file system
bash: find Path -type f -print | xargs -I {} file {} <|endoftext|>
<|endoftext|> english: Search the current directory tree for the files with extension "trc" and remove them if they are more than three days old
bash: find Path -name Regex -ctime +Timespan -exec rm {} \; <|endoftext|>
<|endoftext|> english: find files which modification time is  7 days ago
bash: find Path -mtime -Timespan <|endoftext|>
<|endoftext|> english: Changes group ownership of 'shared' to 'Workers'.
bash: chgrp Regex File <|endoftext|>
<|endoftext|> english: find all the files that have been modified in exactly 7*24 hours ago
bash: find Path -mtime Timespan <|endoftext|>
<|endoftext|> english: Print the characters in $b that match with any character in $a without printing any whitespace in-between
bash: echo Regex | grep --only-matching Regex | xargs | tr --delete Regex <|endoftext|>
<|endoftext|> english: Search regular files from the /path/to/dir directory tree for lines that contain "_START" and are enclosed in lines "@GROUP" and "@END_GROUP"
bash: find Path -type f -exec sed Program {} + | grep Regex <|endoftext|>
<|endoftext|> english: Search the system for the file 'myfile' ignoring permission denied errors
bash: find Path -name Regex | grep -v Regex <|endoftext|>
<|endoftext|> english: Write contents of "/sys/kernel/debug/tracing/trace_pipe" to standard output and to "tracelog.txt" executing as a root user
bash: cat File | tee File <|endoftext|>
<|endoftext|> english: Find all regular files whose names contain "@" in directory tree ~/$folder
bash: find Path -name Regex -type f -print0 <|endoftext|>
<|endoftext|> english: create directory practice into home directory
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: List files smaller than 9kB residing in the current directory and below
bash: find Path -size -Size <|endoftext|>
<|endoftext|> english: Report file system containing path-to-file disk usage human-readable.
bash: df -h File <|endoftext|>
<|endoftext|> english: Find all files/directories under ./var/log directory
bash: find Path <|endoftext|>
<|endoftext|> english: Find regular non-hidden files containing `some text' in their names with hidden directories optimization
bash: find Path -type d -path Regex -prune -or -not -name Regex -type f -name Regex -print <|endoftext|>
<|endoftext|> english: find all files in the file system which belong to the group users and having the word "filename" in their name.
bash: find Path -group Regex -iname Regex <|endoftext|>
<|endoftext|> english: Find all empty files (zero byte files) in your home directory and its sub-directories.
bash: find Path -empty <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory that match the case insensitive regex ./\(EA\|FS\)_.*
bash: find Path -iregex Regex <|endoftext|>
<|endoftext|> english: Search the /home/pankaj directory for regular files whose status has changed within the last 5 minutes
bash: find Path -maxdepth Quantity -cmin -Quantity -type f <|endoftext|>
<|endoftext|> english: Copy "src/prog.js" and "images/icon.jpg" to "/tmp/package" keeping relative path names
bash: rsync -R File File File <|endoftext|>
<|endoftext|> english: Delete all 'restore.php' files in /var/www and 3 levels below
bash: find Path -maxdepth Quantity -name Regex -exec rm -r {} \; <|endoftext|>
<|endoftext|> english: Find all read-only files
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: Search for the pattern 'search string' in all the files in the ''/tmp folder and display the matched lines along with the file names
bash: find Path -type f -exec grep Regex {} File + <|endoftext|>
<|endoftext|> english: Search for 'keyword' in all javascript files under current directory tree excluding all paths that includes the directory 'node_modules'
bash: find Path -not -path Regex -name Regex | xargs -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: Prints date of first Tuesday in January, 2015
bash: cal DateTime DateTime | sed -n Program <|endoftext|>
<|endoftext|> english: Print continuous characters '/' and '\' randomly from /dev/urandom
bash: grep -a -o Regex File | tr -d Regex <|endoftext|>
<|endoftext|> english: Print file system disk space usage with sizes in powers of 1000
bash: df -H <|endoftext|>
<|endoftext|> english: Check the environment variables generated by switching to the root account.
bash: env <|endoftext|>
<|endoftext|> english: Report all C language source code files under the current directory
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: List the directory paths of all *.ext (case insensitive) files under /path directory
bash: find Path -type f -iname Regex -printf "%h\n" <|endoftext|>
<|endoftext|> english: Prints long recursive listing of all content of a root folder, appending output to 'output.file'.
bash: ls -l -R File | tee -a File <|endoftext|>
<|endoftext|> english: find the biggest files only (but not directories)
bash: find Path -type f -exec du -S -h {} + | sort -r -h | head -n Quantity <|endoftext|>
<|endoftext|> english: Remove all files and directories under '/home/foo' directory tree that match with one of the name patterns '.DS_Store', '._.DS_Store' , '._*', '.TemporaryItems' or '.apdisk'
bash: find Path \( -name Regex -or -name Regex -or -name Regex -or -name Regex -or -name Regex \) -exec rm -r -f {} \; <|endoftext|>
<|endoftext|> english: Creates temporary folder in /tmp/ (by default) with 10-letter suffux.
bash: mktemp -d -t <|endoftext|>
<|endoftext|> english: split file data.csv into pieces per 100 lines
bash: split -l Quantity File <|endoftext|>
<|endoftext|> english: Find all empty directories under $somedir and copy /my/configfile into those directories
bash: find Path -type d -empty -exec cp File {} \; <|endoftext|>
<|endoftext|> english: find all the xml files in current folder and which are present in the pattern list file "/tmp/a"
bash: find Path -name Regex -exec grep -H -F -f Regex {} \; <|endoftext|>
<|endoftext|> english: Force create a symbolic link named "currentDir" to "newDir" without dereferencing "currentDir"
bash: ln -s -f -n File Regex <|endoftext|>
<|endoftext|> english: find all files named `linux' on the system
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: delete all the core files in the folder /prog which are bigger than 1KB
bash: find Path -type f -size +Size -print -name Regex -exec rm {} \; <|endoftext|>
<|endoftext|> english: Make directories in "/TARGET_FOLDER_ROOT/" for each ".mov" file in the current directory tree
bash: find Path -type f -iname Regex -printf '%h\n' | sort | uniq | xargs -n Quantity -d Regex -I {} mkdir -v -p Directory <|endoftext|>
<|endoftext|> english: Give all directories in the /path/to/base/dir tree read and execute privileges
bash: find Path -type d -print0 | xargs -0 -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: Find all files/directories named 'foo.bar' under './dir1' and './dir2' directory trees
bash: find Path Path -name Regex -print <|endoftext|>
<|endoftext|> english: Save the UTC date represented by time string $sting2 as the seconds since epoch to variable 'FinalDate'
bash: date -u -d Regex +"%s" <|endoftext|>
<|endoftext|> english: change owner of the files into directory "/mydir" with ".txt" extension to user root
bash: find Path -type f -name Regex -print0 | xargs -0 -I {} chown Regex $( mktemp ) {} <|endoftext|>
<|endoftext|> english: Make $WEEKS_TO_SAVE+1 directories named "weekly.N" where N ranges from 0 to "$WEEKS_TO_SAVE"
bash: mkdir -p $( seq -f "weekly.%.0f" Number Number ) <|endoftext|>
<|endoftext|> english: Create 1000 files each file having a number from 1 to 1000 named "file000" to "file999"
bash: seq Number Number | split -l Quantity -a Quantity -d File Regex <|endoftext|>
<|endoftext|> english: find all the files in the current folder that are modified after the modification date of a file
bash: find Path -newer File -print <|endoftext|>
<|endoftext|> english: Find all *.plist files/directories under current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find file `Chapter1' on the system
bash: find Path -name Regex -type f -print <|endoftext|>
<|endoftext|> english: find all regular/normal files which have cpp folder in their path
bash: find Path -type f -path Regex <|endoftext|>
<|endoftext|> english: Extract five digits sequence from a filename with x number of alphanumeric characters followed by the five digit sequence surrounded by a single underscore on either side then another set of x number of alphanumeric characters.
bash: echo Regex | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: Output "testFile.txt.1" without the ".1" suffix.
bash: basename Regex Regex <|endoftext|>
<|endoftext|> english: Print summary of new/missing files, and which files differ between /path/to/folder1 and /path/to/folder2, sorted alphabetically.
bash: diff -r -q File File <|endoftext|>
<|endoftext|> english: Replace all ocurrences of '<title>' with 'sblmtitle\n<title>' in all the regular files with '.html' extension under current directory tree
bash: find Path -type f -name Regex | xargs -I {} sed -i Program {} <|endoftext|>
<|endoftext|> english: find all regular files which have been modified in the last 48 hours in home folder
bash: find Path -type f -mtime -Timespan <|endoftext|>
<|endoftext|> english: Search the current directory tree for files and directories called "test"
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: Page through the contents of 'input_file_name' hexdumped with space-separated 2-byte units.
bash: od -x -c -b File | less <|endoftext|>
<|endoftext|> english: Print the average time of 4 ping requests to "www.stackoverflow.com"
bash: ping -c Quantity Regex | sed Program <|endoftext|>
<|endoftext|> english: display all jpg files in the current folder
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: Find all files/directories in entire file system more than 700 Megabytes
bash: find Path -size +Size <|endoftext|>
<|endoftext|> english: Format bash array "${arr}" in columns
bash: echo Regex | column <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory tree whose names start with 'test' followed by two digits and end with '.txt' extension
bash: find Path -regextype sed -regex Regex <|endoftext|>
<|endoftext|> english: create an archive using pbzip2 as a compress program
bash: tar -I File -c -f File File <|endoftext|>
<|endoftext|> english: Find all files in the /usr directory tree that are owned by group `staff'
bash: find Path -group Regex <|endoftext|>
<|endoftext|> english: Print NS record for domain 'domain.' from 'some.other.ip.address' nameserver
bash: dig Regex Regex ns <|endoftext|>
<|endoftext|> english: Print each unique entry in "ip_addresses" followed by a count
bash: cat File | sort | uniq -c | sort -n -r | awk Program <|endoftext|>
<|endoftext|> english: Find all files that have been modified in the last seven days.
bash: find Path -mtime -Timespan -type f <|endoftext|>
<|endoftext|> english: Find all files with extension .aac in the /home directory tree
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: Opens gcc info manual and selects "option index" menu entry.
bash: info Regex Regex <|endoftext|>
<|endoftext|> english: Finds strings with dot-separated sequence of numbers, and prints part of that sequence before the second and third dot.
bash: echo Regex | grep -E -o Regex | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: Print 'Since -printf is an action the implicit -print is not applied\n' for every file named 'file' found under current directory tree
bash: find Path -name Regex -printf 'Since -printf is an action the implicit -print is not applied\n' <|endoftext|>
<|endoftext|> english: Find all symbolic links under '/some/directory' tree
bash: find Path -type l -print <|endoftext|>
<|endoftext|> english: Recursively removes all files with name like "*.war" in  /home/ubuntu/wars folder.
bash: find Path -type f -name Regex -exec rm {} File \; <|endoftext|>
<|endoftext|> english: Gets list of IP addresses of all network interfaces.
bash: ifconfig | sed Program File <|endoftext|>
<|endoftext|> english: Find the first file/directory named 'something' under current directory and quit
bash: find Path -name Regex -print Path <|endoftext|>
<|endoftext|> english: find not case sensitive all directories that names are 'project.images'
bash: find Path -type d -iname Regex -ls <|endoftext|>
<|endoftext|> english: Print the name of "file1" if this file is newer than "file2"
bash: find Path -prune -newer File <|endoftext|>
<|endoftext|> english: Keep only the last two hyphen-separated sections of "abc-def-ghi-jkl"
bash: echo Regex | rev | cut -d Regex -f -Number | rev <|endoftext|>
<|endoftext|> english: Measure the disk space taken up by all *.txt files in directory tree /home/d
bash: find Path -type f -name Regex -printf "%s\n" | awk Program <|endoftext|>
<|endoftext|> english: display all the files in the home folder which begin with "arrow"
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: display all regular/normal files which have been modified in the last 30 minutes
bash: find Path -type f -and -mmin -Quantity <|endoftext|>
<|endoftext|> english: Delete line 2 in numbered file "file" and renumber
bash: grep -v Regex File | cut -d Regex -f Number | nl -w Quantity -s Regex <|endoftext|>
<|endoftext|> english: List recursively all files and directories in /var/www and pass the result to the `more' pager
bash: find Path | more <|endoftext|>
<|endoftext|> english: Find recursively all files under current directory tree that contain a colon in the filename
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all *.swp files/directories under current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Split "INPUT_FILE_NAME" into files of at most 500 MiB each with a numeric suffix of length 4 and prefix "input.part."
bash: split -b Size -d -a Quantity File Regex <|endoftext|>
<|endoftext|> english: Prints the Nth line of output from 'ls -1'
bash: ls -1 | tail -n +Quantity | head -n Quantity <|endoftext|>
<|endoftext|> english: Remove trailing white spaces from all files under current directory ignoring .git and .svn directories
bash: find Path -not \( -name Regex -prune -or -name Regex -prune \) -type f -exec sed -i Program {} \; <|endoftext|>
<|endoftext|> english: Find all the files/directories under '/usr/local' directory tree which have been modified within the last day
bash: find Path -mtime -Timespan <|endoftext|>
<|endoftext|> english: Recursively finds all "*.pas" and "*.dfm" files and prints strings with "searchtext" ignoring text distinctions, suppressing error messages, highlighting found patterns and preceding each found string with file name and string number.
bash: find Path -type f \( -name Regex -or -name Regex \) -print0 | xargs --null -I {} grep --with-filename --line-number --no-messages --color --ignore-case Regex {} <|endoftext|>
<|endoftext|> english: Find all files in the current directory tree ignoring the ".git" directory
bash: find Path -type d -name Regex -prune -or -type f -print <|endoftext|>
<|endoftext|> english: Search for $SEARCH in all regular files under $DIR directory tree and display the number of bytes of the matched output
bash: find Path -type f -exec grep Regex File {} \; | wc --bytes <|endoftext|>
<|endoftext|> english: Decompress and extract 'archive.tar.gz' into '/destination'
bash: gzip -d -c Regex | tar -x -f File -C Directory <|endoftext|>
<|endoftext|> english: Find all files called "INPUT.txt" in the current directory tree and remove lines starting with # in them, saving backup copies as INPUT.txt.bak
bash: find Path -type f -name Regex -print0 | xargs -0 -I {} sed -i Regex Program {} <|endoftext|>
<|endoftext|> english: Find all *.txt files/directories under current directory terminating their names/paths with null character
bash: find Path -name Regex -print0 <|endoftext|>
<|endoftext|> english: Replace commas (',') with newlines in $MOUNT_OPTS and search for the regex '^acl$'
bash: echo Regex | tr Regex Regex | grep Regex -q <|endoftext|>
<|endoftext|> english: List all *.c, *.h and *.cpp files under current directory
bash: find Path -type f \( -name Regex -or -name Regex -or -name Regex \) -exec ls {} \; <|endoftext|>
<|endoftext|> english: find all the html files in the current folder which have not been modified in the last 7 days
bash: find Path -mtime +Timespan -name Regex -print <|endoftext|>
<|endoftext|> english: Delete history entry at offset, defined in first argument of executed script
bash: history -d Quantity <|endoftext|>
<|endoftext|> english: Get the number of "use" statements in all PHP files, ordered
bash: find Path -type f -name Regex -exec grep --with-filename -c Regex {} \; | sort -t Regex -k Number -n -r <|endoftext|>
<|endoftext|> english: Saves bytes count of the value of '$each' variable.
bash: echo Regex | wc -c <|endoftext|>
<|endoftext|> english: Show the list of files larger than 100 MB
bash: find Path -size +Size -print <|endoftext|>
<|endoftext|> english: Shows strings that NOT match regex '^($|\s*#|\s*[[:alnum:]_]+=)'
bash: echo Regex | grep -E --invert-match Regex <|endoftext|>
<|endoftext|> english: Returns unsuccessful exit code on each found file like '*tests*' within current directory.
bash: find Path -name Regex -print -exec false \; <|endoftext|>
<|endoftext|> english: Find all regular files that were modified more than 60 days ago under '/path-to-directory' directory tree, sort them according to timestamp and print the filenames preceded with the timestamps
bash: find Path -type f -mtime +Timespan -printf "%T@ %p\n" | sort <|endoftext|>
<|endoftext|> english: Set 644 permission to all regular files under current directory
bash: find Path -type f -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Find all *.txt files/directories in entire file system
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all the files in file system which are accessed in last 1 hour
bash: find Path -amin -Quantity <|endoftext|>
<|endoftext|> english: change owner of the file destination_dir to user "user:
bash: chown Regex File <|endoftext|>
<|endoftext|> english: find foo, Foo, FOo, FOO, etc., but only dirs
bash: find Path -iname Regex -type d <|endoftext|>
<|endoftext|> english: Print canonical filename of "/path/here/.."
bash: readlink -f File <|endoftext|>
<|endoftext|> english: Remove all empty sub-directories under current directory
bash: find Path -depth -type d -empty -exec rmdir {} \; <|endoftext|>
<|endoftext|> english: Print absolute path of "PATH"
bash: readlink -f File <|endoftext|>
<|endoftext|> english: search for files in the current folder which start with "myfile" ( case insensitive search )
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: change the permissions of all the directories in the current folder, print0 is used for handling files with newlines in their file name
bash: find Path -type d -print0 | xargs -0 -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: sleep for 10 seconds
bash: sleep Timespan <|endoftext|>
<|endoftext|> english: Write "deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen" to standard output and append to "/etc/apt/sources.list.d/10gen.list" as root
bash: echo Regex | tee -a File <|endoftext|>
<|endoftext|> english: Update the timestamp of 'filename', or create an empty file if it doesn't exist.
bash: touch File <|endoftext|>
<|endoftext|> english: Compare the files in 'FOLDER1' and 'FOLDER2' and show which ones are indentical and which ones differ
bash: find Path -type f -print0 | xargs -0 -I {} find Path -type f -exec diff -q -s --from-file File {} + <|endoftext|>
<|endoftext|> english: search files in current folder using name patterns
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all regular files under  $somedir directory and print each of their paths after a string literal 'Found unexpected file '
bash: find Path -type f -exec echo Regex Regex Regex {} \; <|endoftext|>
<|endoftext|> english: Recursively finds all '*.pdf' files in a current folder and removes them.
bash: find Path -name Regex -print0 | xargs -0 -I {} rm {} <|endoftext|>
<|endoftext|> english: Print linker search path using gcc formatted on new lines
bash: gcc File | sed Program | tr Regex Regex <|endoftext|>
<|endoftext|> english: change the permissions of all the directories in the folder root_dir to 555
bash: find Path -type d -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: find all the files in the folder Musica and display them in a single line null separated
bash: find Path | grep -E -Z Regex | xargs -0 -I {} echo {} <|endoftext|>
<|endoftext|> english: Print content of 'a' file, showing all non-printing characters including TAB characters, and displaying $ at the end of each line.
bash: cat -v -e -t File <|endoftext|>
<|endoftext|> english: Find all directories under /home/mywebsite/public_html/sites/all/modules and set their permission to 750
bash: find Path -type d -exec chmod Permission {} + <|endoftext|>
<|endoftext|> english: Search the system for files and directories owned by group `managers'
bash: find Path -group Regex -print <|endoftext|>
<|endoftext|> english: Save the user name of the current user to variable "whoami"
bash: whoami <|endoftext|>
<|endoftext|> english: Find all files with '.conf' extension under '/etc' directory tree that have been modified in the last 30 minutes
bash: find Path -name Regex -mmin -Quantity <|endoftext|>
<|endoftext|> english: Report file systems disk usage human-readable using POSIX output format.
bash: df -P -h <|endoftext|>
<|endoftext|> english: Remove all .txt files in and below the current directory
bash: find Path -name Regex | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: Recursively from current folder searches only files that names match ".*xxx" pattern, ignores binary files and prints file name before every string that contains "my Text to grep".
bash: grep --include Regex -n -R -H -I Regex File <|endoftext|>
<|endoftext|> english: Create a symbolic link in target directory "$tmpdir" for each file under the current directory
bash: find Path -type f -exec ln -s -t File {} + <|endoftext|>
<|endoftext|> english: Remount "/media/Working/" with a umask of 000
bash: mount Regex -o remount,umask=000 <|endoftext|>
<|endoftext|> english: Move all files matching patterns "*.old", ".old", ".*.old" from the current directory to directory "../old/"
bash: find Path ! -name Regex -prune -name Regex -exec mv {} File \; <|endoftext|>
<|endoftext|> english: Create intermediate directories as required and directory  /my/other/path/here
bash: mkdir -p Directory <|endoftext|>
<|endoftext|> english: prevents curl from returning error (23) Failed writing body when grepping for foo
bash: curl Regex | tac | tac | grep -q -s Regex <|endoftext|>
<|endoftext|> english: Find all CDC* files under current directory that were accessed less than 1 day ago and delete the first and last lines from those files
bash: find Path -type f -name Regex -ctime -Timespan -exec sed -i Regex -e Program -e Program {} \; <|endoftext|>
<|endoftext|> english: Execute awk command '{ ...}' on compressed file "FILE"
bash: zcat Regex | awk Program <|endoftext|>
<|endoftext|> english: Read a single character from standard input with prompt "Is this a good question (y/n)?" and save the response to variable "answer"
bash: read -n Quantity -p Regex Regex <|endoftext|>
<|endoftext|> english: Determine DISPLAY variable for the session when logged in via SSH
bash: who File Regex | awk Program | sed Program | cut -f Number -d Regex | sed Program <|endoftext|>
<|endoftext|> english: Find all the .mp3 files in the music folder recursively and pass them to the ls command
bash: find Path -name Regex -print0 | xargs -0 -I {} ls {} <|endoftext|>
<|endoftext|> english: Print file information of the executable file of command "gcc"
bash: ls $( which Regex ) -a -l <|endoftext|>
<|endoftext|> english: search for text files in the folders /home/hobbes/ /home/calvin/
bash: find Path Path -name Regex <|endoftext|>
<|endoftext|> english: remove all the log files which have not been modified in the last 5 days
bash: find Path -type f -mtime +Timespan -exec rm {} \; <|endoftext|>
<|endoftext|> english: Print the sorted unique column of usernames of users who are currently logged in without the header
bash: finger | cut -d Regex -f Number | sort -u | grep -i -v Regex <|endoftext|>
<|endoftext|> english: login as user root
bash: su -l <|endoftext|>
<|endoftext|> english: Find all files/directories under $1 which have at least execute permission for their owner and set execute permission for group for these files/directories
bash: find Path -perm -Permission -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Make directories to "/tmp/test/blah/oops/something" as needed
bash: mkdir -p Directory <|endoftext|>
<|endoftext|> english: display all directories in the folder "/myfiles"
bash: find Path -type d <|endoftext|>
<|endoftext|> english: Search for files "file1" or "file9"
bash: find Path -name Regex -or -name Regex <|endoftext|>
<|endoftext|> english: List each subdirectory name composing the current working directory
bash: pwd | cut -f Number -d Regex --output-delimiter Regex <|endoftext|>
<|endoftext|> english: Archive "path/to/working/copy" to "path/to/export" excluding files or directories named ".svn"
bash: rsync -a --exclude Regex File File <|endoftext|>
<|endoftext|> english: Find all files/directories named 'testfile.txt' under current directory tree
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Removes all files from current folder but 5 newest ones, ignoring folders in a files list.
bash: find Path -maxdepth Quantity -type f | xargs -x -I {} ls -t {} | awk Program | xargs -L Quantity -I {} rm {} <|endoftext|>
<|endoftext|> english: create directory dirname with permissions 777
bash: mkdir -m 777 Directory <|endoftext|>
<|endoftext|> english: Archive all files beginning with .env or .bash in current directory to user's home directory on host "app1", preserving timestamps and skipping files that are newer on "app1"
bash: rsync -v -a -u -t File File File <|endoftext|>
<|endoftext|> english: Recursively removes all folders named '.svn' in a current folder.
bash: find Path -type d -name Regex -print0 | xargs -0 -I {} rm -r -f {} <|endoftext|>
<|endoftext|> english: Recursively findsfiles with text pattern in current folder, ingnoring case differences, prefixes each matched line with number in file and suppresses error messages about nonexistent or unreadable files.
bash: grep -i -n -s -r Regex File <|endoftext|>
<|endoftext|> english: copy all the regular files in the current directory to the temporary diectory.
bash: find Path -type f -exec cp {} File + <|endoftext|>
<|endoftext|> english: Print a sorted list of the extensions of the regular files from the current directory tree
bash: find Path -type f -name Regex | awk -F Regex Program | sort -u <|endoftext|>
<|endoftext|> english: display all the regular files in the current folder that are modified after the file "file.log"
bash: find Path -type f -newer File <|endoftext|>
<|endoftext|> english: Replace all instances of "STRING_TO_REPLACE" with "REPLACE_WITH" in file "index.html" and make a backup with suffix "bak"
bash: sed -i Regex -e Program Program <|endoftext|>
<|endoftext|> english: Calculate md5 sum of empty string
bash: echo -n Regex | md5sum <|endoftext|>
<|endoftext|> english: find all the files that have been modified in the last 2 day
bash: find Path -daystart -mtime -Timespan <|endoftext|>
<|endoftext|> english: find all png files in the current folder
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory and put the output into full_backup_dir variable
bash: find Path -depth -print0 <|endoftext|>
<|endoftext|> english: display all files in the file system which are bigger than 50MB and having size "filename" in them
bash: find Path -size +Size -iname Regex <|endoftext|>
<|endoftext|> english: Find all hidden files in the current directory
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: search for the files "foo.txt" in the current folder
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Archive "/top/a/b/c/d" to host "remote" using relative path names
bash: rsync -a --relative File File <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory with null character as the delimiter and then replace the null characters with :
bash: find Path -print0 | tr Regex Regex <|endoftext|>
<|endoftext|> english: Finds file 'Subscription.java' and changes to containing folder.
bash: cd $( find Path -name Regex | xargs -I {} dirname {} ) <|endoftext|>
<|endoftext|> english: Add "Line of text here" on top of each *.py files under current directory
bash: find Path -name Regex -print0 | xargs -0 -I {} sed -i Program {} <|endoftext|>
<|endoftext|> english: Find all IP addresses in /etc directory files
bash: find Path -exec grep Regex {} \; <|endoftext|>
<|endoftext|> english: Find strings with 'Features' in /var/run/dmesg.boot' file
bash: cat File | grep Regex <|endoftext|>
<|endoftext|> english: Find the largest original ".gz" file in the current directory tree
bash: find Path -name Regex -print | xargs -I {} gzip -l {} | awk Program | grep -v Regex | sort -n | tail - Quantity <|endoftext|>
<|endoftext|> english: find all jpg,png,jpeg,pdf,tif,tiff,bmp and other image formats using regular expressions excluding those ending with "_ocr.pdf"
bash: find Path -type f -iregex Regex ! -name Regex -print0 <|endoftext|>
<|endoftext|> english: Search the current directory and all of its sub-directory for any PDF files being careful to prevent the shell from expanding "*"  before it's passed to find.
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: Read a line from standard input in an interactive shell into variable "input" with prompt "Do that? [Y,n]" and suggestion "Y"
bash: read -e -p Regex -i Regex Regex <|endoftext|>
<|endoftext|> english: display all the files in the current folder which do not belong to any user
bash: find Path -nouser <|endoftext|>
<|endoftext|> english: show the disk use of all the regular/normal files in the current folder which are bigger than 50MB
bash: find Path -type f -size +Size | xargs -I {} du -s -h {} <|endoftext|>
<|endoftext|> english: Perform a default cPanel configuration
bash: find Path -type f -iwholename Regex -exec grep -H Regex {} \; <|endoftext|>
<|endoftext|> english: List all files/directories under current directory by replacing all spaces with commas (,)
bash: find Path -ls | tr -s Regex Regex <|endoftext|>
<|endoftext|> english: Find recursively all files in the "." directory tree whose names end with ".class" and delete them
bash: find Path -type f -name Regex -exec rm -v -f {} \; <|endoftext|>
<|endoftext|> english: Filters only directories from long file listing of the current directory.
bash: ls -l | grep Regex <|endoftext|>
<|endoftext|> english: Find all MP3 files in the home directory tree that were modified in the last 24 hours
bash: find Path -type f -mtime Timespan -iname Regex <|endoftext|>
<|endoftext|> english: finda ll the files in the current folder that are modified today.
bash: find Path -type f -mtime Timespan -ls <|endoftext|>
<|endoftext|> english: change the permissions of all the regular/normal files to 664 in the current folder
bash: find Path -type f -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Print lines in "file1.txt" that do not exist in "file2.txt"
bash: sort <( sort -u File ) File File | uniq -u <|endoftext|>
<|endoftext|> english: Enables shell options 'expand_aliases', 'extglob', 'xpg_echo'.
bash: shopt -s expand_aliases extglob xpg_echo <|endoftext|>
<|endoftext|> english: tar all files in the current folder and ask for user confirmation before creating the tar ball
bash: find Path -ok tar -r -v -f File {} \; <|endoftext|>
<|endoftext|> english: Search for files/directories that are readable for everybody, have at least one write bit set but are not executable for anybody
bash: find Path -perm -Permission -perm Permission ! -perm Permission <|endoftext|>
<|endoftext|> english: Make directory "dirname" with permissions set to 777
bash: mkdir -m 777 Directory <|endoftext|>
<|endoftext|> english: Execute "wget -qO-  http://fake.link/file.txt" every 5 seconds
bash: watch -n Quantity wget -q -O File Regex <|endoftext|>
<|endoftext|> english: Rename file with inode number 31467125 to new_name.html
bash: find Path -type f -inum Quantity -exec mv {} File \; <|endoftext|>
<|endoftext|> english: Find all files named 'foo' under current directory tree without descending into directories named 'foo'
bash: find Path -name Regex -type d -prune -or -name Regex -print <|endoftext|>
<|endoftext|> english: List all zero-length files
bash: find Path -empty -exec ls {} \; <|endoftext|>
<|endoftext|> english: Print the $N'th line from file by replacing commas (',') with newlines
bash: head - Quantity File | tail - Quantity | tr Regex Regex <|endoftext|>
<|endoftext|> english: search for files which are writable by both their owner and their group
bash: find Path -perm -Permission <|endoftext|>
<|endoftext|> english: display all normal/regular files or directories in the folder "$ORIG_DIR"
bash: find Path -name Regex -type d -or -name Regex -type f <|endoftext|>
<|endoftext|> english: Print the contents of "xx.sh"
bash: cat File <|endoftext|>
<|endoftext|> english: display all the ".c" files in the folder "/home/david" which have been accessed in the last 48 hours
bash: find Path -atime -Timespan -name Regex <|endoftext|>
<|endoftext|> english: Find all files/directories named file1 under current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: create a link to all the html or htm files in the current folder which have been changed in the last 30*24 hours
bash: find Path \( -name Regex -or -name Regex \) -and -ctime -Timespan -exec ln {} Regex \; <|endoftext|>
<|endoftext|> english: Find all SGID set files under current directory and show a few lines of output from the beginning
bash: find Path -perm Permission | head <|endoftext|>
<|endoftext|> english: Find files in the current directory tree whose content was changed within the last 60 minutes
bash: find Path -mmin -Quantity <|endoftext|>
<|endoftext|> english: Print file information of command "studio"
bash: which Regex | xargs -I {} ls -l {} <|endoftext|>
<|endoftext|> english: list all the files in the current directory which are of size 0 bytes.
bash: find Path -empty <|endoftext|>
<|endoftext|> english: display all files in current folder which have been modified in the last 60 minutes
bash: find Path -mmin Quantity <|endoftext|>
<|endoftext|> english: search for regular/normal file with the name "myfile" in the entire file system
bash: find Path -name Regex -type f -print <|endoftext|>
<|endoftext|> english: Find all regular files in the current directory tree and count them
bash: find Path -type f -printf '.' | wc -c <|endoftext|>
<|endoftext|> english: Find all 777 permission files and use chmod command to set permissions to 644
bash: find Path -type f -perm Permission -print -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Recursively finds all files not like *.itp, *ane.gro, *.top in a current folder and removes them.
bash: find Path -depth -type f -not -name Regex -and -not -name Regex -and -not -name Regex -exec rm {} + <|endoftext|>
<|endoftext|> english: Find all *.c files under /home
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Recursively removes all files like '*.pyc' in a current folder, printing info message about each action.
bash: find Path -name Regex | xargs -I {} rm -v {} <|endoftext|>
<|endoftext|> english: Print summary of new/missing files, and which files differ between dir1 and dir2.
bash: diff -q File File <|endoftext|>
<|endoftext|> english: Write the lines appended to "xxxx" as it appears to the console and append to "yyyy" in the background
bash: tail -F File | tee -a File <|endoftext|>
<|endoftext|> english: change the permission of all the normal/regular files from 777 to 755 in the folder "/home/user/demo"
bash: find Path -type f -perm Permission -print -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Find all directories under ~/code and replace all newlines with : in the output then remove the last :
bash: find Path -type d | tr Regex Regex | sed Program <|endoftext|>
<|endoftext|> english: Find all files on the system whose names are 'drush'
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Read two bytes from "/dev/urandom" and print them as an unsigned integer
bash: od -A n -N File -t u2 File <|endoftext|>
<|endoftext|> english: Find all *.cpp files in the current directory tree that contain "sub" in their names
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Remove files from the file system that are owned by nobody, asking the user before each removal
bash: find Path -nouser -ok rm {} \; <|endoftext|>
<|endoftext|> english: Locate and rename unprintable directories using inode numbers
bash: find Path -inum Quantity -exec mv {} File \; <|endoftext|>
<|endoftext|> english: Exclude directory from find . command
bash: find Path -name Regex -and -not -path Regex <|endoftext|>
<|endoftext|> english: Search for the system host name in "/etc/hosts" and print the IP address in the first awk field
bash: more File | grep $( hostname ) | awk Program <|endoftext|>
<|endoftext|> english: searches through the root filesystem ("/") for the file named Chapter1.
bash: find Path -name Regex -type f -print <|endoftext|>
<|endoftext|> english: Print input "your, text, here" formatted to fit 70 characters per line breaking at spaces
bash: echo Regex | fold -s -w File <|endoftext|>
<|endoftext|> english: Remove all regular files under '/var/log/remote' directory tree that have not been modified in the last 14 days where day count starts from today
bash: find Path -daystart -mtime +Timespan -type f -exec rm {} \; <|endoftext|>
<|endoftext|> english: Find all directories under current directory excluding those which match the regex /\. in their names
bash: find Path -type d | grep -v Regex <|endoftext|>
<|endoftext|> english: replace a word in all the regular/normal files in the current folder(doesn't actually modify the original file just displays the replaced text)
bash: find Path -type f -print0 | xargs -0 -I {} sed -i Program {} <|endoftext|>
<|endoftext|> english: Get a detailed list of all files on the system larger than 10MB
bash: find Path -size +Size -printf "%12s %t %h/%fn" <|endoftext|>
<|endoftext|> english: Find all files/directories that start with 'onlyme' in their names under maximum 2 levels down the current directory
bash: find Path -maxdepth Quantity -name Regex <|endoftext|>
<|endoftext|> english: Make directories to "/my/other/path/here" as needed
bash: mkdir -p Directory <|endoftext|>
<|endoftext|> english: search for all the regular files in the current folder and display the contents
bash: find Path -type f -exec cat {} \; <|endoftext|>
<|endoftext|> english: Prints a process tree for each process of user 'username'.
bash: ps -a -u Regex | grep Regex | awk Program | xargs -I {} pstree {} <|endoftext|>
<|endoftext|> english: Move all files and directories in the current directory to "somewhere/"
bash: mv $( ls ) File <|endoftext|>
<|endoftext|> english: display all the php files in the entire file system
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Give a long listing of all the  *.pl files (Perl files) beneath the current directory.
bash: find Path -name Regex -exec ls -l -d {} \; <|endoftext|>
<|endoftext|> english: Send two ping requests to "www.google.com"
bash: ping -c Quantity Regex <|endoftext|>
<|endoftext|> english: Find all files under /home/username/public_html/themes and set their permission to 640
bash: find Path -type f -exec chmod Permission {} + <|endoftext|>
<|endoftext|> english: split result of the command "tar [your params]" into pieces per 500 mb named as "output_prefixNNN"
bash: tar File File | split -b Size File Regex <|endoftext|>
<|endoftext|> english: Find and uncompress all files in the current directory tree ending in ".csv.gz"
bash: find Path -name Regex -exec gzip -d {} \; <|endoftext|>
<|endoftext|> english: Find regular files named "regex" under and below /dir/to/search/
bash: find Path -type f -name Regex -print <|endoftext|>
<|endoftext|> english: display a long listing of all the regular/normal files in the file system which have set uid bit or set gid bit enabled.
bash: find Path -type f \( -perm -Permission -or -perm -Permission \) -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: find all the files ending with ".coffee" in the current folder and search for the first occurence of the word "re" in each line
bash: find Path -name Regex -exec awk Program {} \; <|endoftext|>
<|endoftext|> english: Find all directories under current directory
bash: find Path -type d <|endoftext|>
<|endoftext|> english: find all the configuration or text files in current directory
bash: find Path -type f \( -name Regex -or -name Regex \) -print <|endoftext|>
<|endoftext|> english: SSH into "$NAME" as user "${USERNAME}" using key file "${KEYDIR}/${KEY}.pem", automatically add the host to list of known hosts and execute "${COMMANDS}"
bash: ssh -o "StrictHostKeyChecking no" -i File Regex command <|endoftext|>
<|endoftext|> english: find all the files in the current directory ending with ".i"
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Grab the output of "basename" (the last slash-separated section of variable "filename") and echo it to stdout, which basename would do by default anyway.
bash: echo $( basename Regex ) <|endoftext|>
<|endoftext|> english: Prints calendar for a current month without first day of a week.
bash: cal | sed -e Program -e Program <|endoftext|>
<|endoftext|> english: Sort file "foo.txt" by line to standard output
bash: sort File <|endoftext|>
<|endoftext|> english: Search the /home/user1 directory tree for files whose names end in ".bin"
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all files whose names begin with 'Makefile' in the /usr/ports directory tree and count how many of them contain 'QMAKESPEC'
bash: find Path -name Regex -exec grep -l Regex {} + | wc -l <|endoftext|>
<|endoftext|> english: create an archive using pbzip2 as a compress program
bash: tar -I File -c -f File File <|endoftext|>
<|endoftext|> english: Find all *.csv files under /foot/bar/ and move them to some_dir
bash: find Path -name Regex -print0 | xargs -0 -I {} mv -t Directory {} <|endoftext|>
<|endoftext|> english: Gets IP address of 'eth0' network interface.
bash: ifconfig Regex | awk Program <|endoftext|>
<|endoftext|> english: Mount remote "cifs" filesystem "//server/source/" on "/mnt/source-tmp" with username "Username" and password "password"
bash: mount -t cifs Regex Regex -o username=Username,password=password <|endoftext|>
<|endoftext|> english: Find all files under and below the current working directory with the word California in the file
bash: find Path -type f -exec grep Regex {} \; -print <|endoftext|>
<|endoftext|> english: Replace all occurrences of edx (case insensitive) with gurukul in all *.css (case insensitive) files under ./cms/djangoapps/contentstore/management/commands/tests directory
bash: find Path -iname Regex | xargs -I {} sed -i Program {} <|endoftext|>
<|endoftext|> english: Find all files under the current directory and copy their permissions to the same file in "../version1"
bash: find Path -type f | xargs -I {} chmod --reference {} Permission <|endoftext|>
<|endoftext|> english: Find the largest original ".gz" file in the current directory tree
bash: find Path -name Regex | xargs -I {} gzip -l {} | tail -n +Quantity | head -n -Quantity | sort -k Number | tail -n Quantity | awk Program <|endoftext|>
<|endoftext|> english: find all the files in the current directory and display them
bash: find Path -exec echo {} \; <|endoftext|>
<|endoftext|> english: Find recursively all files whose names ends with "foo"
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find files under /etc/apache-perl that are modified more recently than /etc/apache-perl/httpd.conf
bash: find Path -newer File <|endoftext|>
<|endoftext|> english: find all text files in current folder and delete them
bash: find Path -name Regex -exec rm {} \; <|endoftext|>
<|endoftext|> english: Print the calendar for February 1956
bash: cal DateTime DateTime <|endoftext|>
<|endoftext|> english: Remove all empty regular files under the current directory and below
bash: find Path -type f -empty -print0 | xargs -0 -I {} rm {} <|endoftext|>
<|endoftext|> english: display all the files in current folder which have been changed in the last 24 hours
bash: find Path -ctime -Timespan -print <|endoftext|>
<|endoftext|> english: Prefix all files and folders in the current directory with "PRE_"
bash: find Path -maxdepth Quantity ! -path Regex -exec mv {} File \; <|endoftext|>
<|endoftext|> english: Move all *.emlx files/directories under /path/to/folders/ to ./Messages/ directory
bash: find Path -name Regex -print0 | xargs -0 -I {} mv {} File <|endoftext|>
<|endoftext|> english: Remove the last file extension from "filename.gz"
bash: echo Regex | sed Program | rev | cut -d Regex -f Number | rev | cut -c Number <|endoftext|>
<|endoftext|> english: Interpret in the current shell all lines in config.sh which contain the word "marker"
bash: source <( grep Regex File ) <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory tree
bash: find | xargs <|endoftext|>
<|endoftext|> english: find all the files in the current folder that have been modified in the last 7 days
bash: find Path -mtime -Timespan -daystart <|endoftext|>
<|endoftext|> english: Find all empty files in /tmp
bash: find Path -type f -empty <|endoftext|>
<|endoftext|> english: Print "/tmp/myfile" starting at line 11
bash: tail -n +Quantity File <|endoftext|>
<|endoftext|> english: Find all build* directories under current directory and reverse sort them
bash: find Path -type d -name Regex | sort -r <|endoftext|>
<|endoftext|> english: Print lines in the sorted contents of "second.txt" that are not in the sorted contents of "first.txt"
bash: comm -1 -3 <( sort File ) <( sort File ) <|endoftext|>
<|endoftext|> english: Search the current working directory tree for files whose names start with "fileA_" or "fileB_"
bash: find Path -name Regex -or -name Regex <|endoftext|>
<|endoftext|> english: search for all Scala files under the current directory that contain the string null
bash: find Path -type f -name Regex -exec grep -B Quantity -A Quantity Regex {} \; <|endoftext|>
<|endoftext|> english: List all files with their paths that have identical content.
bash: find Path -type f | xargs -I {} md5sum {} | sort | uniq -D w32 <|endoftext|>
<|endoftext|> english: Modify and rewrite 'file' replacing the first instance of "foo" on each line with "bar"
bash: sed -i Program File <|endoftext|>
<|endoftext|> english: Create symlinks to all  /home/folder1/*.txt files and 'folder2_' directory with the same name in a target directory named '+'
bash: find Path -type f -exec ln -s {} Regex + Path <|endoftext|>
<|endoftext|> english: Prints week day of a 31 day in a current month.
bash: cal | awk -v Program -v Program Program <|endoftext|>
<|endoftext|> english: Delete all files in the current directory tree whose names end with ~
bash: find Path -name Regex -exec rm {} \; <|endoftext|>
<|endoftext|> english: List all files in the "test" directory tree except those with '/invalid_dir/' in the pathnames
bash: find Path -print | grep -v Regex <|endoftext|>
<|endoftext|> english: Print yesterday's date as yyy:mm:dd
bash: date +%Y:%m:%d -d Regex <|endoftext|>
<|endoftext|> english: find the top 25 files in the current directory and its subdirectories
bash: find Path -type f -exec ls -a -l {} \; | sort -n -r -k Number | head -n Quantity <|endoftext|>
<|endoftext|> english: Compress all files under current directory tree with gzip
bash: find Path -type f -print0 | xargs -0 -r -I {} gzip {} <|endoftext|>
<|endoftext|> english: Find all catalina* files/directories under /path/to/search/in
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Print calendar for February, March and April of year 2009 side-by-side
bash: paste <( cal DateTime DateTime ) <( cal DateTime DateTime ) <( cal DateTime DateTime ) <|endoftext|>
<|endoftext|> english: create a gzip of all the files in the current folder excluding the already gzipped files.
bash: find Path ! -name Regex -exec gzip {} \; <|endoftext|>
<|endoftext|> english: Find all .php files in all directory trees matching pattern `/srv/www/*/htdocs/system/application/' and search those files for string "debug ("
bash: find Path -name Regex -exec grep Regex {} \; -print <|endoftext|>
<|endoftext|> english: Print the day 1 day ago
bash: date --date Regex '+%a' <|endoftext|>
<|endoftext|> english: Find all the files on the system that have been modified within the last hour
bash: find Path -mmin -Quantity <|endoftext|>
<|endoftext|> english: Delete every second line from output of "seq 10"
bash: seq Number | sed Program <|endoftext|>
<|endoftext|> english: Set variable "MAVEN_DEBUG_OPTS" to "-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000" on Windows machines
bash: set Regex Regex Regex Regex <|endoftext|>
<|endoftext|> english: Delete in the background all files in /var/tmp/stuff1 and below that have not been modified in over 90 days
bash: find Path -mtime +Timespan -delete <|endoftext|>
<|endoftext|> english: Duplicate directory tree under /mnt/usr/lib to /usr but creating symlinks to files instead of copying them.
bash: cp -r -s File File <|endoftext|>
<|endoftext|> english: search for the file "name_to_find" in the home folder
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Copy '/path/to/source' from remote "username@computer" to local "/path/to/dest"
bash: rsync -r File File <|endoftext|>
<|endoftext|> english: Search the current directory recursively for text files containing at least one character
bash: find Path -type f -exec grep -I -q Regex {} \; -and -print <|endoftext|>
<|endoftext|> english: find all files in current folder and display the total lines in them
bash: find Path | xargs -I {} wc -l {} <|endoftext|>
<|endoftext|> english: Search the current directory tree for files whose names begin with "my" and end with "p" followed by any character, ignoring path names containing "test"
bash: find Path -regex Regex -and -not -regex Regex <|endoftext|>
<|endoftext|> english: Run an awk program on every TXT file found in the current directory tree
bash: find Path -name Regex -print -exec awk Program {} \; <|endoftext|>
<|endoftext|> english: Find all directories with 755 permission and change the permission to 700
bash: find Path -type d -perm Permission -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Return 0 if file system is mounted on '/full/path'
bash: df File | grep -q Regex <|endoftext|>
<|endoftext|> english: Print source of the file system containing current working directory.
bash: df File | tail - Quantity | awk Program <|endoftext|>
<|endoftext|> english: Find files in the /travelphotos that are greater than 200k in size but do not have "2015" anywhere in the file name
bash: find Path -type f -size +Size -not -iname Regex <|endoftext|>
<|endoftext|> english: Print either "one" or "two" randomly three times
bash: yes Regex | head - Quantity | nl | sort -R | cut -f Number | head - Quantity <|endoftext|>
<|endoftext|> english: Find all files excluding files ending with 'gz', 'tmp' and 'xftp' in their names in the current directory tree and compress them with gzip not preserving timestamp and original name
bash: find Path -type f ! \( -name Regex -or -name Regex -or -name Regex \) -exec gzip -n {} \; <|endoftext|>
<|endoftext|> english: list regular file which file name end with '*.c' or '*.sh' in current directory
bash: find Path -type f \( -name Regex -or -name Regex \) <|endoftext|>
<|endoftext|> english: display all normal/regular files in current folder
bash: find Path -type f -print0 <|endoftext|>
<|endoftext|> english: Add '.avi' extension to all files/directories with '.mkv' extension under '/volume1/uploads' directory tree
bash: find Path -name Regex -exec mv File File \; <|endoftext|>
<|endoftext|> english: Write '"myname="Test"' to the console and append to "$CONFIG" as root
bash: echo Regex | tee --append File <|endoftext|>
<|endoftext|> english: Search the current directory tree for regular files whose names match regular expression ".+-[0-9]+x[0-9]+\.jpg"
bash: find Path -type f -regex Regex <|endoftext|>
<|endoftext|> english: Find files that end in ".gz" and execute "awk -F, '$1 ~ /F$/'" on their unzipped contents
bash: find Path -maxdepth Quantity -name Regex -print0 | xargs -0 -I {} zcat {} | awk -F Regex Program <|endoftext|>
<|endoftext|> english: Find all fglrx-libglx* files under and below debian/fglrx/
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: List environment variables whose name contains "X"
bash: set | grep -o -P Regex | grep Regex <|endoftext|>
<|endoftext|> english: Find all regular files starting from the current directory
bash: find Path -type f <|endoftext|>
<|endoftext|> english: display all the directories in the current folder excluding those that are present in the folder secret
bash: find Path -name Regex -type d -prune -or -print <|endoftext|>
<|endoftext|> english: forcibly and verbosely create a symbolic link named "target" to file "source"
bash: ln -s -f -v -n File Regex <|endoftext|>
<|endoftext|> english: Find all regular files under ${path} without following symlinks
bash: find Path -P -type f <|endoftext|>
<|endoftext|> english: Create a local SSH tunnel from "localhost" port 16379 to "localhost" port 6379 using key "keyfile.rsa" and disables the interactive shell
bash: ssh -i File -T -N -L Regex Regex <|endoftext|>
<|endoftext|> english: Find in the current direcoty whose suffix is .tmp , find will not serach recursively limit of find is 2 subdirectory .
bash: find Path -maxdepth Quantity -name Regex <|endoftext|>
<|endoftext|> english: Find *.java files in the current directory and replace foo with bar in those files
bash: find Path -name Regex -exec sed -i Program File \; <|endoftext|>
<|endoftext|> english: force remove all the c files in the current folder, print0 is used to handle all files with new lines in their names or files with only spaces in their name
bash: find Path -name Regex -print0 | xargs -0 -I {} rm -r -f {} <|endoftext|>
<|endoftext|> english: find all the config(.conf files) files in the folder /home/pat
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: Find all regular files starting from level 3 of directory tree ~/container and move them to the current directory's parent
bash: find Path -mindepth Quantity -type f -exec mv {} File \; <|endoftext|>
<|endoftext|> english: search for all the jpg files in the folder "/mnt/hda1/zdjecia/test1/" and copy these files to the folder  /mnt/hda1/test/<same name as the found file>
bash: find Path -iname Regex -type f -exec cp {} -r -v File \; <|endoftext|>
<|endoftext|> english: Search the .py files residing in the current directory tree for "something"
bash: find Path -name Regex -type f -exec grep Regex {} \; <|endoftext|>
<|endoftext|> english: Set variable 'file' to the base name of first argument to script or function, that is the part following the last slash.
bash: basename Regex <|endoftext|>
<|endoftext|> english: find directory which case-insensitive name is foo in current directory.
bash: find Path -iname Regex -type d <|endoftext|>
<|endoftext|> english: Print the first 10 files or directories found in the current directory tree by `find'
bash: find | head <|endoftext|>
<|endoftext|> english: Recursively copy "dir_a" to "dir_b" and delete any new files in "dir_b"
bash: rsync -u -r --delete File File <|endoftext|>
<|endoftext|> english: Print the unique lines from standard input preserving the order they appear
bash: nl -n ln | sort -u -k Number | sort -k Number | cut -f Number <|endoftext|>
<|endoftext|> english: Count the number of all directories under current directory non-recursively
bash: find Path -mindepth Quantity -maxdepth Quantity -type d | wc -l <|endoftext|>
<|endoftext|> english: Search for first match of the regex 're' in all *.coffee files under current directory
bash: find Path -name Regex -exec awk Program {} \; <|endoftext|>
<|endoftext|> english: Remove trailing whitespaces in .txt files from the current directory tree
bash: find Path -type f -name Regex -exec sed --in-place Regex {} + <|endoftext|>
<|endoftext|> english: Make directory "/path/to/destination"
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: find all the pdf files in the current directory and display only the directory name in which the pdf file is present
bash: find Path -type f -name Regex | sed Program | sort -u <|endoftext|>
<|endoftext|> english: Find suspicious PHP files
bash: find Path -type f -name Regex -exec grep --with-filename Regex {} \; <|endoftext|>
<|endoftext|> english: Display kernel name, release, and version.
bash: uname -s -r -v <|endoftext|>
<|endoftext|> english: Report file systems inode usage.
bash: df -i <|endoftext|>
<|endoftext|> english: Find all file1 and file9 files/directories under current directory
bash: find Path -name Regex -or -name Regex <|endoftext|>
<|endoftext|> english: find all the normal files in the home directory which have been accesed in the last 30 days with the size greater than or equal to 100k.
bash: find Path -type f -atime +Timespan -size Size <|endoftext|>
<|endoftext|> english: Find all files/directories in entire file system that have  "write" bit set for either the owner, the group, or others
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: find all files in the folder "myfiles" which are exactly 5 bytes
bash: find Path -size Size <|endoftext|>
<|endoftext|> english: search for all the files in the current directory which have the group staff and have write permission enabled to the user and display them.
bash: find Path -group Regex -perm -Permission -print <|endoftext|>
<|endoftext|> english: Print sorted list of unique users logged in followed by a total count
bash: who | awk Program | sort -u | awk Program <|endoftext|>
<|endoftext|> english: Prints full path to files with dot in name in a current folder.
bash: ls -d -1 File <|endoftext|>
<|endoftext|> english: Collapse double slashes in variable "dir" into a single one.
bash: echo Regex | sed Program <|endoftext|>
<|endoftext|> english: Print each character of "abcdefg" on a line
bash: echo Regex | fold -w Quantity <|endoftext|>
<|endoftext|> english: find Texinfo source files in /usr/local/doc
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all files/directories named 'vimrc' in the entire filesystem
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Creae a tarball 'files.tar.gz' containing all regular files under current directory tree that are newer than 2013-12-04 and older than 2013-12-05
bash: find Path -type f -name Regex -newermt Regex ! -newermt Regex | xargs -I {} tar -c -z -v -f File {} <|endoftext|>
<|endoftext|> english: List files in the current directory
bash: find Path \( -path Regex -prune \) <|endoftext|>
<|endoftext|> english: Search for files containing string "PENDWIDTH" and view the result using the more command
bash: find Path -exec grep Regex {} \; | more <|endoftext|>
<|endoftext|> english: Go to directory pointed by last element of array "dirs" in bash version 4.2
bash: cd Directory <|endoftext|>
<|endoftext|> english: List environment variables and their values, escaping all semicolons with a backslash.
bash: env | sed Program <|endoftext|>
<|endoftext|> english: find files in the current directory with pattern` '*.[ch]' which are contain ‘thing’ string and print file names which can contain spaces
bash: find Path -name Regex -print0 | xargs -r -0 -I {} grep -l Regex {} <|endoftext|>
<|endoftext|> english: display all the hidden files in the folder /home
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Display differences between directories repos1 and repos2, ignoring changes due to tab expansion, white spaces and treating absent files as empty.
bash: diff -E -N -w -b -u Quantity File File <|endoftext|>
<|endoftext|> english: find all the html files which are modified in the last 7 days
bash: find Path -mtime -Timespan -name Regex <|endoftext|>
<|endoftext|> english: Find all hidden regular files under /tmp and below
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: search for the file test2 in the current folder
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Create a new RSA key for ssh with no passphrase, store it in ~/.ssh/id_rsa without prompting to overwrite if this file exists, and minimize output from ssh-keygen.
bash: echo -e Regex | ssh-keygen -q -t rsa -N Regex -f File <|endoftext|>
<|endoftext|> english: Find all the *.c files at any level of directory Programming under any 'src' directory
bash: find Path -path Regex <|endoftext|>
<|endoftext|> english: display all the text files in current folder
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Send reverse requests to get domain name for each address in 'my_ips' list
bash: cat File | xargs -i -I {} dig -x {} Regex {} <|endoftext|>
<|endoftext|> english: Find all files under /mountpoint and below which have hard links
bash: find Path -type f -links +Quantity <|endoftext|>
<|endoftext|> english: Find all .js files in the $d directory tree whose pathnames do not contain whitespaces
bash: find Path -name Regex | grep -v Regex <|endoftext|>
<|endoftext|> english: create symbolic links in current directory to all files located in directory "/original" and have filename extension ".processname"
bash: ln -s $( echo Regex ) Regex <|endoftext|>
<|endoftext|> english: Print a 2 byte hexadecimal value, printable character, and octal value of "$1"
bash: echo Regex | od -x -c -b <|endoftext|>
<|endoftext|> english: Find all 777 permission directories under current directory and  set permissions to 755
bash: find Path -type d -perm Permission -print -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Find all files under /path/to/base/dir and change their permission to 644
bash: find Path -type f -exec chmod Permission {} + <|endoftext|>
<|endoftext|> english: display all normal / regular files in current folder in reverse order
bash: find Path -type f | tac <|endoftext|>
<|endoftext|> english: Find all files in the current directory tree with extension .html and replace all occurences of "php" with "html" inside them
bash: find Path -type f -name Regex | xargs -I {} sed -i Program {} <|endoftext|>
<|endoftext|> english: Gets MAC addresses of all IP4 network interfaces.
bash: ifconfig -a | awk Program | grep -o -E Regex <|endoftext|>
<|endoftext|> english: Go to last directory with name starting with a number, useful for timestamped directory names.
bash: cd $( ls -r -d File | tail --lines Quantity ) <|endoftext|>
<|endoftext|> english: Find all files in the current directory tree and replace string $1 with string $2 in them
bash: find Path -type f -exec sed -i Program {} \; <|endoftext|>
<|endoftext|> english: Disables shell option 'nocasematch'.
bash: shopt -u nocasematch <|endoftext|>
<|endoftext|> english: List all *.jar files/directories under /usr, /home and /tmp directory
bash: find Path Path Path -name Regex <|endoftext|>
<|endoftext|> english: display all the log files in the folder /var/log, print0 is used to handle files with only spaces in their names or which have newlines in their names
bash: find Path -name Regex -print0 <|endoftext|>
<|endoftext|> english: Execute "ls" every second
bash: watch -n Quantity ls <|endoftext|>
<|endoftext|> english: Recursively set all permissions under "/whatever/your/directory/is" to 755
bash: chmod Permission -R File <|endoftext|>
<|endoftext|> english: Count all the lines of all php files in current directory recursively
bash: find Path -name Regex | xargs -I {} cat {} | wc -l <|endoftext|>
<|endoftext|> english: Find files/directories that are newer than 'foo.txt' under current directory tree
bash: find Path -newer File <|endoftext|>
<|endoftext|> english: find all the files  in the folder /opt which have been changed in the last 120 minutes
bash: find Path -cmin -Quantity <|endoftext|>
<|endoftext|> english: Search directory foo for files containing "/tmp/foo/bar" in their full names
bash: find Path -path Regex -print <|endoftext|>
<|endoftext|> english: Find all files named 'foo' under your home directory and list them with confirmation prompt
bash: find Path -type f -name Regex -ok ls -l {} \; <|endoftext|>
<|endoftext|> english: Replace all spaces with underscores in directory names under current directory.
bash: find Path -depth -name Regex -execdir rename Regex {} \; <|endoftext|>
<|endoftext|> english: List all regular file owned by root with permissions 4000
bash: find Path -type f -user Regex -perm -Permission -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: find all the files in the folder "/usr/app/etl/01/OTH/log/tra" which have been modified  in the last 240 hours  excluding hidden files and those with the name "/usr/app/etl/01/CLE/par/files_to_skip.par"
bash: find Path -type f ! -name Regex -mtime -Timespan | grep -E -v -f Regex <|endoftext|>
<|endoftext|> english: List all .jpg files in the home directory tree
bash: find Path -name Regex -exec ls {} \; <|endoftext|>
<|endoftext|> english: See what files are executable by the file's owner and group
bash: find Path -type f -perm -Permission <|endoftext|>
<|endoftext|> english: Replace all URLs in "MyHTMLFile.html" with "$pub_url" and create a backup with suffix ".bak"
bash: sed -i Regex Program File <|endoftext|>
<|endoftext|> english: Request that the master ssh connection "otherHosttunnel" exits
bash: ssh -O Regex Regex <|endoftext|>
<|endoftext|> english: Print a list of all files and directories in the /var/log directory tree
bash: find Path <|endoftext|>
<|endoftext|> english: List all paths to files or directories under "/data/" that start with "command-" and end with "-setup", sort the result by the version number specified between "command-" and "-setup" (least to greatest)
bash: find Path -name Regex | sort -t Regex -V -k Number <|endoftext|>
<|endoftext|> english: Find all files named "something" in the current folder and below and run them through the ls -l command, one by one.
bash: find Path -name Regex -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: Remove all regular files from the current directory tree whose names do not end with "txt"
bash: find Path -type f -not -name Regex -print0 | xargs -0 -I {} rm -- {} <|endoftext|>
<|endoftext|> english: Take first text field from file 'file.txt' as a domain name and get short A record for this one.
bash: cut -d Regex -f Number File | xargs -I {} dig Regex {} <|endoftext|>
<|endoftext|> english: Search for files/directories with the case insensitive pattern anaconda.* in var/log directory
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: Find all files matching shell pattern "foo/bar" in the foo directory tree
bash: find Path -path Regex -print <|endoftext|>
<|endoftext|> english: Print the user name of the current user
bash: echo $( whoami ) <|endoftext|>
<|endoftext|> english: Search for files/directories named 'fileName.txt' under '/path/to/folder' directory tree without traversing into directories that contain the string 'ignored_directory' in their paths
bash: find Path -path Regex -prune -or -name Regex -print <|endoftext|>
<|endoftext|> english: Find all the .c files in the current directory tree that contain the string ‘stdlib.h’
bash: find Path -name Regex | xargs -I {} grep -E Regex {} <|endoftext|>
<|endoftext|> english: find files in home directory that accessed more than 100 days ago
bash: find Path -atime Timespan <|endoftext|>
<|endoftext|> english: Copies all files under the current directory but ones with '*/not-from-here/*' in path to the '/dest/' directory.
bash: find Path -type f -not -iname Regex -exec cp {} File \; <|endoftext|>
<|endoftext|> english: search for the file centos in /usr folder ( case insenstive search )
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: find the file "httpd.log" in the folder /home/web-server/ ( case insensitive search )
bash: find Path -type f -iname Regex <|endoftext|>
<|endoftext|> english: Numerically sort each line in file "bb" and output the result to console from greatest value to least value
bash: sort -n -r File <|endoftext|>
<|endoftext|> english: Write "Some console and log file message" to standard output and "/dev/fd/3"
bash: echo Regex | tee File <|endoftext|>
<|endoftext|> english: find all the files ending with ".coffee" in the current folder and search for the words "re" in each line
bash: find Path -name Regex -exec grep -m Quantity -i Regex {} \; <|endoftext|>
<|endoftext|> english: Find all files/directories with inode number 16187430 and move them to 'new-test-file-name'
bash: find Path -inum Quantity -exec mv {} File \; <|endoftext|>
<|endoftext|> english: Search /tmp/ for files smaller than 100 bytes
bash: find Path -size -Size <|endoftext|>
<|endoftext|> english: Gets IP address of 'eth0' network interface.
bash: ifconfig Regex | grep -o -P Regex <|endoftext|>
<|endoftext|> english: Make directories "foo/bar/baz" as needed and do not cause an error if it exists
bash: mkdir -p Directory <|endoftext|>
<|endoftext|> english: Creates temporary directory in '/tmp/' folder and saves path to it in 'my_tmp_dir' variable.
bash: mktemp -d --tmpdir Directory <|endoftext|>
<|endoftext|> english: Remove all files and directories in the /home directory tree whose names are "Trash"
bash: find Path -name Regex -exec rm {} \; <|endoftext|>
<|endoftext|> english: Replace the leading spaces in the output of "history" with periods
bash: history | sed Program <|endoftext|>
<|endoftext|> english: Delete all regular files named 'IMAGE1806.jpg' under current directory tree
bash: find Path -type f -name Regex -delete <|endoftext|>
<|endoftext|> english: Find all directories under /path/to/dir and change their permission to 755
bash: find Path -type d -exec chmod Permission {} + <|endoftext|>
<|endoftext|> english: Display "/tmp/file" as a table of width 30 with columns filled before rows
bash: column -x -c Quantity File <|endoftext|>
<|endoftext|> english: Print appended data in "file" that match "my_pattern"
bash: tail -f Regex | grep --line-buffered Regex <|endoftext|>
<|endoftext|> english: Finds all folders that contain 'ssh' file and have 'bin' in path.
bash: dirname $( find Path -name Regex | grep Regex ) <|endoftext|>
<|endoftext|> english: extract 'archive.tar.gz' to /destination
bash: tar -x -z -f File -C Directory <|endoftext|>
<|endoftext|> english: Find all regular files under current directory tree whose names end with 'cache' or 'xml' or 'html'
bash: find Path -type f \( -name Regex -or -name Regex -or -name Regex \) <|endoftext|>
<|endoftext|> english: Search for files/directories named 'fileName.txt' under current directory tree without traversing into './ignored_directory'
bash: find Path -path Regex -prune -or -name Regex -print <|endoftext|>
<|endoftext|> english: find all class files or sh script files  in the current folder
bash: find Path -type f \( -name Regex -or -name Regex \) <|endoftext|>
<|endoftext|> english: Print joined strings from 'file', using space symbol as separator.
bash: cat File | xargs <|endoftext|>
<|endoftext|> english: Search the current directory tree for files containing "sh" in their names
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all *.css files under $DIR and print the lines matching the regex '\.ExampleClass.{/,/}' from those files
bash: find Path -type f -name Regex -exec sed -n Program File + <|endoftext|>
<|endoftext|> english: Greps domain $domain IP name from long dig listing.
bash: dig Regex | grep Regex | grep -v Regex | awk Program <|endoftext|>
<|endoftext|> english: search for the file foo.txt in the current folder and open it in vi editor
bash: find Path -name Regex -execdir vim {} \; <|endoftext|>
<|endoftext|> english: Find all .txt files in the current directory tree and edit them with `vim'
bash: find Path -name Regex | xargs -I {} vim {} <|endoftext|>
<|endoftext|> english: find all the files that were modified two days ago
bash: find Path -daystart -ctime Timespan -type f <|endoftext|>
<|endoftext|> english: Force delete all jpg files in current directory which are less than 50KB and do not search in the sub directories
bash: find Path -maxdepth Quantity -name Regex -size -Size -exec rm {} \; <|endoftext|>
<|endoftext|> english: List all empty files in the current directory tree
bash: find Path -empty -exec ls {} \; <|endoftext|>
<|endoftext|> english: Find all directories whose name is Tecmint in / directory
bash: find Path -type d -name Regex <|endoftext|>
<|endoftext|> english: Print which files differ in "/tmp/dir1" and "/tmp/dir2" recursively
bash: diff -q -r File File <|endoftext|>
<|endoftext|> english: display all directories which have not been accessed in the last 24*3 hours
bash: find Path -type d -and -atime +Timespan <|endoftext|>
<|endoftext|> english: Replace "  " with " $UID " in the output of "history"
bash: history | sed Program <|endoftext|>
<|endoftext|> english: Archive "/path/to/copy" on host "remote.host" as user "user" to "/path/to/local/storage" updating files with different checksums, showing human readable progress and statistics, and compressing data during transmission
bash: rsync -c -h -a -v -z -P --stats File File <|endoftext|>
<|endoftext|> english: Enables 'globstar' (recursive globbing) shell option.
bash: shopt -s globstar <|endoftext|>
<|endoftext|> english: Find all readme.txt files/directories under your home directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Search for 'string' case insensitively in all files under current directory tree and show the matched lines with their filenames
bash: find Path -name Regex | xargs -I {} grep -i -H Regex {} <|endoftext|>
<|endoftext|> english: search for the files in the current folder which begin with the word "kt" followed by a digit
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Exclude directory from find . command
bash: find Path -name Regex -not -path Regex <|endoftext|>
<|endoftext|> english: find all the normal/regular files in the current directory
bash: find Path -type f <|endoftext|>
<|endoftext|> english: Print count of unique lines in all files like 'list_part*'
bash: cat File | sort --unique | wc -l <|endoftext|>
<|endoftext|> english: add read permission to others for the files in the current folder having the name "rc.conf" in their name.
bash: find Path -name Regex -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: find all the regular/normal files in the folder /travelphotos which are bigger than 200KB and which do not have the word "2015" in their name
bash: find Path -type f -size +Size -not -iname Regex <|endoftext|>
<|endoftext|> english: Make directory "dir1"
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: Reread user's .profile configuration file.
bash: source File <|endoftext|>
<|endoftext|> english: Find any hidden regular files in the current directory and its sub-directories that were modified after .cshrc was last modified.
bash: find Path -type f -name Regex -newer File -print <|endoftext|>
<|endoftext|> english: Print line, word and byte count for each file recursively and also show the total counts
bash: wc $( find ) <|endoftext|>
<|endoftext|> english: Pipe output of "yes" to "more" and append the first 3 lines to "file"
bash: yes | awk Program | more <|endoftext|>
<|endoftext|> english: display all the c files and the header files in the path /some/dir and do not search in sub directories
bash: find Path -maxdepth Quantity \( -name Regex -or -name Regex \) -print <|endoftext|>
<|endoftext|> english: Print the contents of "my_script.py"
bash: cat File <|endoftext|>
<|endoftext|> english: Calculate the md5 sum of "logdir" and print only the hash
bash: echo -n Regex | md5sum File | awk Program <|endoftext|>
<|endoftext|> english: Search for the case insensitive regex expanded by $2 in all files named $1 (to be expanded) under current directory
bash: find Path -name Regex -type f -exec grep -i Regex {} \; <|endoftext|>
<|endoftext|> english: Find all files/directories with user id 120 under current directory tree
bash: find Path -uid Regex -print <|endoftext|>
<|endoftext|> english: search the pattern ^PyErr in all the ".c" files in the folder Lib/
bash: find Path -name Regex -print0 | xargs -0 -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: Search the .java files from the /Applications/ directory tree for TODO lines
bash: find Path -name Regex -exec grep -i Regex {} + <|endoftext|>
<|endoftext|> english: find directories under the $LOGDIR directory where there have been no modifications for 5 days and deletes them.
bash: find Path -type d -mtime +Timespan -exec rm -f {} \; <|endoftext|>
<|endoftext|> english: Display the content of file "f" in home directory if it exists and is executable
bash: cat $( which Regex ) <|endoftext|>
<|endoftext|> english: Find all files/directories in 1 level down the current directory
bash: find Path -mindepth Quantity -maxdepth Quantity <|endoftext|>
<|endoftext|> english: Print unique lines of sorted file "b" compared with sorted file "a"
bash: comm -1 -3 File File <|endoftext|>
<|endoftext|> english: find all the files in the home folder which have been modified in the last 7 days
bash: find Path -mtime -Timespan <|endoftext|>
<|endoftext|> english: List all *.txt files/directories under /etc
bash: find Path -name Regex | xargs -I {} ls -l {} <|endoftext|>
<|endoftext|> english: Print each character in "Hello" as a hexadecimal value
bash: echo -n Regex | od -A n -t x1 <|endoftext|>
<|endoftext|> english: Recursively finds all 'STATUS.txt' files containing text 'OPEN' and prints containing folder of them.
bash: grep -F --include Regex -r -l Regex | xargs -L Quantity -I {} dirname {} <|endoftext|>
<|endoftext|> english: file1.txt and file2.txt both contain a name and a number on each line. For each name whose corresponding number does not match in both files, display the "Age of ... is different" message.
bash: join File | awk Program <|endoftext|>
<|endoftext|> english: Removes all top-level *.pdf files in a current folder.
bash: rm -f File <|endoftext|>
<|endoftext|> english: Find all files under the current directory that are not the same file as "/home/nez/file.txt"
bash: find Path -maxdepth Quantity -not -samefile Regex <|endoftext|>
<|endoftext|> english: display all the files having spaces in the current folder
bash: find Path -name Regex -print0 <|endoftext|>
<|endoftext|> english: Gets the groups these users belong to.
bash: groups Regex Regex Regex Regex <|endoftext|>
<|endoftext|> english: Search for 'pattern_to_search' in all regular files with '.txt' extension under '/directory/containing/files' and show the matched lines along with filenames
bash: find Path -type f -name Regex -exec grep -H Regex {} + <|endoftext|>
<|endoftext|> english: Append the last modification time of file $arg as the seconds since epoch with a preceding space to the variable 'KEY'
bash: date -r File +\ %s <|endoftext|>
<|endoftext|> english: display the html, javascript and text files in the current folder (print0 is used to preserve the filenames of all the files which have newlines in their names)
bash: find Path -type f \( -name Regex -or -name Regex -or -name Regex \) -print0 | xargs -0 -n Quantity -I {} echo {} <|endoftext|>
<|endoftext|> english: Compress files excluding *.Z files
bash: find Path ! -name Regex -exec compress -f {} \; <|endoftext|>
<|endoftext|> english: find all the files in the file system which have been modified in the last 30*24 hours
bash: find Path -mtime -Timespan -print <|endoftext|>
<|endoftext|> english: Print epoch seconds for given time string "Oct 21 1973"
bash: date -d Regex +%s <|endoftext|>
<|endoftext|> english: Find broken symlinks in current directory
bash: find Path -type l -xtype l <|endoftext|>
<|endoftext|> english: find all the files in the file system which hae set uid enabled and save them to /root/suid.txt and those which have size greater than 100MB save them to /root/big.txt
bash: find Path \( -perm -Permission -fprintf File '%#m %u %p\n' \) -and \( -size +Size -fprintf File '%-10s %p\n' \) <|endoftext|>
<|endoftext|> english: Find all empty directories under a certain path
bash: find Path -type d -empty <|endoftext|>
<|endoftext|> english: Output "file.txt", omitting all containing directories "some/unknown/amoutn/of/sub/folder/"
bash: basename Regex <|endoftext|>
<|endoftext|> english: display a long listing of all the xls or csv files in the entire file system
bash: find Path -regex Regex <|endoftext|>
<|endoftext|> english: find all the directories in the current folder which have been modified in 24 hours and move them to the folder  /path/to/target-dir
bash: find Path -type d -mtime -Timespan -exec mv -t Directory {} + <|endoftext|>
<|endoftext|> english: Find all files named "file.ext" within the current folder and print the path where each one is located
bash: find Path $( pwd ) -name Regex -exec echo $( dirname {} ) \; <|endoftext|>
<|endoftext|> english: recursively change owner and group of the directory and all files into it to user root and group root
bash: chown -R Regex File <|endoftext|>
<|endoftext|> english: find all *.java files/directories under current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all .rpm files and change their permissions to 755
bash: find Path -name Regex -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Find all files under current directory that were modified in the last 24 hours and also include the files that were modified in less than 1 day ago
bash: find Path -mtime +Timespan <|endoftext|>
<|endoftext|> english: Copy all files with '.png' (case insensitive) extension under '/home/mine' directory tree to '/home/mine/pngcoppies/copy.' directory
bash: find Path -iname Regex -execdir cp {} File \; <|endoftext|>
<|endoftext|> english: Archive "/path/to/files" to "user@targethost:/path"
bash: rsync -a -v File File <|endoftext|>
<|endoftext|> english: Remove all files under /myfiles that were accessed more than 30 days ago
bash: find Path -atime +Timespan -exec rm {} \; <|endoftext|>
<|endoftext|> english: search for all files ending with ".mkv" in current folder
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Display a count of regular files in each directory at the current level.
bash: find -P Path -type f | rev | cut -d Regex -f Number | rev | cut -d Regex -f Number | cut -d Regex -f Number | sort | uniq -c <|endoftext|>
<|endoftext|> english: Overwrites file 'filename' with random content 35 times, finally writes it with zeros, truncates and deletes.
bash: shred -u -z -n File File <|endoftext|>
<|endoftext|> english: Search directory /tmp/foo for files containing "/tmp/foo/bar" in their full names
bash: find Path -path Regex -print <|endoftext|>
<|endoftext|> english: Search the current user's home directory and its sub-directories for any file that was modified less than 2 days ago or was modified after filename was last modified.
bash: find Path -mtime -Timespan -or -newer File <|endoftext|>
<|endoftext|> english: Find all directories containing 'linux' in their names under '/root' directory tree
bash: find Path -type d -iname Regex <|endoftext|>
<|endoftext|> english: find file named foo.txt under root / directory.
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Print the pathnames of all files from the /tmp/dir1 directory tree
bash: find Path -exec echo {} \; <|endoftext|>
<|endoftext|> english: Find file `foo.bar' and delete it
bash: find Path -name Regex -type f -exec rm -f {} \; <|endoftext|>
<|endoftext|> english: List all IP addresses assigned to current hostname, pausing for user interaction after each page.
bash: more File | grep Regex | awk Program <|endoftext|>
<|endoftext|> english: Prints process tree of the current process with parent processes.
bash: pstree -s Regex <|endoftext|>
<|endoftext|> english: change the ownership of all regular/normal files in the current directory(print0 is used to handle all the files which have spaces or new lines in their names)
bash: find Path -type f -print0 | xargs -0 -I {} chown Regex {} <|endoftext|>
<|endoftext|> english: Count total number of lines in all files below current directory.
bash: find Path -type f -exec wc -l {} \; | awk Program <|endoftext|>
<|endoftext|> english: Read a line from standard input into variable "message" with prompt "Please Enter a Message: " followed by a newline
bash: read -p $( echo Regex ) Regex <|endoftext|>
<|endoftext|> english: Compress all ".txt" files in all sub directories with gzip
bash: gzip Regex <|endoftext|>
<|endoftext|> english: search for all regular/normal files in the current folder and display the number of lines in the file
bash: find Path -type f -print0 | xargs -0 -L Quantity -I {} wc -l {} <|endoftext|>
<|endoftext|> english: Find all .rb and .yml files in the /some/path directory tree and replace "some_phrase" with "replacement_phrase" in them
bash: find Path -name Regex -or -name Regex | xargs -I {} grep -s -l Regex {} | xargs -I {} sed -i -e Program {} <|endoftext|>
<|endoftext|> english: Find all files with space in their names under current directory
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: Change permissions to 644 for *.html files under /usr/local
bash: find Path -name Regex -type f -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Counts lines of all *.txt files in a current folder.
bash: cat File | wc -l <|endoftext|>
<|endoftext|> english: Finds files in 'directory' folder with the same name and location but different content than files in 'directory.original' folder and saves location of such files to 'directories' variable.
bash: diff -q -r File File | cut -d Regex -f Number | xargs -I {} dirname {} | uniq <|endoftext|>
<|endoftext|> english: Search the current directory recursively for regular files last accessed more than 2 minutes ago
bash: find Path Path -f -amin +Quantity <|endoftext|>
<|endoftext|> english: Find all files that were modified later than ordinary_file in the current directory and its sub-directories.
bash: find Path -newer File <|endoftext|>
<|endoftext|> english: Print a sorted list of the extensions of the regular files from the current directory tree
bash: find Path -type f | grep -o -E Regex | sort -u <|endoftext|>
<|endoftext|> english: Remove all *.mp3 files in tmp directory but not in it's subdirectories
bash: find Path -maxdepth Quantity -name Regex -print0 | xargs -0 -I {} rm {} <|endoftext|>
<|endoftext|> english: Change permissions of all files ending ".php" under the current directory to 755 and print a count of modified files
bash: find Path -name Regex -exec chmod Permission {} + -printf '.' | wc -c <|endoftext|>
<|endoftext|> english: Find all directories under /home/username/public_html/modules  and set their permission to 750
bash: find Path -type d -exec chmod Permission {} + <|endoftext|>
<|endoftext|> english: Extracts a bz2 file.
bash: bunzip2 File <|endoftext|>
<|endoftext|> english: Start program 'scriptname' with an empty environment.
bash: env Program Program <|endoftext|>
<|endoftext|> english: display all the regular files in the current folder that are less than 10KB
bash: find Path -type f -size -Size <|endoftext|>
<|endoftext|> english: Recursively copy everything in /source/path whose name doesn't begin with a period, to /destination/path, without overwriting existing files, and outputting a line for each file copied or skipped.
bash: cp -R -v -n File File <|endoftext|>
<|endoftext|> english: delete all the files ending with "~" in current folder
bash: find Path -name Regex -print | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: Finds name of a current month and saves it in a 'month' variable.
bash: cal | head - Quantity | grep -o -P Regex <|endoftext|>
<|endoftext|> english: Change directory to the user's home directory
bash: cd <|endoftext|>
<|endoftext|> english: Copy all ".xml" files in the current directory tree to "/new/parent/dir" preserving the directory hierarchy
bash: find Path -name Regex -print0 | cpio -p -a -m -v -d -0 Regex <|endoftext|>
<|endoftext|> english: Search the entire file system for any file that is writable by other.
bash: find Path -perm -Permission <|endoftext|>
<|endoftext|> english: remove all the DS_Store files in the current directory
bash: find Path -name Regex -exec rm {} \; <|endoftext|>
<|endoftext|> english: Print the full path of command "rails"
bash: which Regex <|endoftext|>
<|endoftext|> english: List the unique tab delimited field number "$FIELD" in all files, prefix with the number of occurrences, sort from most frequent to least frequent
bash: cut -f Number File | sort | uniq -c | sort -n -r <|endoftext|>
<|endoftext|> english: Print the first line and lines with "f" as the third "," separated field in "input" and format the result as a "," delimited table
bash: awk -F Regex Program Program | column -t -s Regex <|endoftext|>
<|endoftext|> english: Look for *.jpg files on the system
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Sort "file1.txt" and output the result to "file1.txt"
bash: sort -o File File <|endoftext|>
<|endoftext|> english: Get the total size of all files under dir1 directory
bash: find Path ! -type d -printf "%s\n" | awk Program <|endoftext|>
<|endoftext|> english: Find "*prefs copy" files in the /mnt/zip directory tree and remove them
bash: find Path -name Regex -print0 | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: Find all *.php files under current directory and change their permission to 640
bash: chmod Permission $( find Path -name Regex ) <|endoftext|>
<|endoftext|> english: Set variable 'path' to name of current directory (without the containing directories) converted to lowercase.
bash: basename $( pwd ) | awk Program <|endoftext|>
<|endoftext|> english: search in the current folder for the file with the name "test"
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Compress "archive.tar"
bash: gzip Regex <|endoftext|>
<|endoftext|> english: display all files in the folder bar only in the path /foo/bar/myfile (no output is generated)
bash: find Path -path Regex -print <|endoftext|>
<|endoftext|> english: Find all the files in entire file system which are greater than 50MB and less than 100MB.
bash: find Path -size +Size -size -Size <|endoftext|>
<|endoftext|> english: search for all regular/normal files in current folder and display all the files which contain 16 lines
bash: find Path -type f -print0 | xargs -0 -I {} grep -c -H Regex {} | awk -F Regex Program <|endoftext|>
<|endoftext|> english: find all the files in the /usr folder which have modification date less than or equal to the file "/FirstFile"
bash: find Path ! -newer File -print <|endoftext|>
<|endoftext|> english: Run a shell with all environment variables specified in the file 'cronenv' in the user's home directory.
bash: env Program $( cat File ) Program <|endoftext|>
<|endoftext|> english: Find and list all files on your current directory and show a few lines of output from the beginning
bash: find | head <|endoftext|>
<|endoftext|> english: Cut all remote paths from HTTP URLs received from standard input (one per line) keeping only the protocol identifier, host name, and trailing slash, of the form http://example.com/
bash: sed -n Program <|endoftext|>
<|endoftext|> english: Find all regular files in the current directory tree and print a command to move them to the current directory
bash: find Path -type f -exec echo Regex Regex Regex {} + <|endoftext|>
<|endoftext|> english: find files in $HOME ending in "txt" or "html" and case insensitive search for the word "vpn"
bash: find Path \( -name Regex -or -name Regex \) -print0 | xargs -0 -I {} grep -l -i Regex {} <|endoftext|>
<|endoftext|> english: Print the first 5 characters followed by the next 5 characters on a new line for each line in "input_file" and split the result into files of at most 2000000 lines each with a filename prefix "out-prefix-"
bash: sed Program File | split -l Quantity File Regex <|endoftext|>
<|endoftext|> english: Show the explanation of find's debugging options
bash: find Path Path <|endoftext|>
<|endoftext|> english: Search the current directory for files whose names start with "messages." ignoring SVN, GIT, and .anythingElseIwannaIgnore files
bash: find Path -type f -print0 | xargs -0 -I {} grep -E Regex {} | grep -E -v Regex <|endoftext|>
<|endoftext|> english: Read a line from standard input into variable "response" ignoring backslash escapes and using the prompt "Are you sure? [y/N] "
bash: read -r -p Regex Regex <|endoftext|>
<|endoftext|> english: Search the .java files from the /Applications/ directory tree for TODO lines
bash: find Path -name Regex -print0 | xargs -0 -I {} grep -i Regex {} <|endoftext|>
<|endoftext|> english: Find all files under /somefolder matching the extended regex '\./(.*\.error.*|second.*log|.*FFPC\.log)$' in their paths
bash: find -E Path -type f -regex Regex <|endoftext|>
<|endoftext|> english: Find all the regular files under $DIR directory tree which have been modified before the file $a excluding the file $a and delete them
bash: find Path -type f ! -newer File ! -samefile Regex -delete <|endoftext|>
<|endoftext|> english: List all empty files under the current directory
bash: find Path -maxdepth Quantity -empty <|endoftext|>
<|endoftext|> english: Extract the second-to-last slash-separated path component, ie. "90_2a5" in this case.
bash: echo Regex | xargs -I {} dirname {} | xargs -I {} basename {} <|endoftext|>
<|endoftext|> english: Show the date in default format for tomorrow + 2 days + 10 minutes
bash: date -d Regex <|endoftext|>
<|endoftext|> english: Extract 8 bytes as an unsigned integer that is "$o" offset into "$pkg"
bash: set $( od -j Size -N File -t u1 File ) <|endoftext|>
<|endoftext|> english: Go into the first directory whose name contains 1670
bash: cd $( ls -d File | grep Regex ) <|endoftext|>
<|endoftext|> english: change the extension of all the ".lst" files in the current folder to "a.lst"
bash: find Path -name Regex -exec rename Regex Regex {} \; <|endoftext|>
<|endoftext|> english: Archive any files changed in the last day from "remote_host" to "local_dir"
bash: rsync -a -v $( find Path -type f -ctime -Timespan ) File <|endoftext|>
<|endoftext|> english: find all the directories with the name "DIRNAME" in the current folder and force delete them
bash: find Path -type d -name Regex -exec rm -r -f {} \; <|endoftext|>
<|endoftext|> english: Set the executable bit for all users on all regular files from directories arch/x86/usr/sbin, arch/x86/usr/X11R6/bin, usr/sbin/
bash: find Path Path Path -type f | xargs -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: ssh into "hostname" as user "buck"
bash: ssh Regex <|endoftext|>
<|endoftext|> english: Delete all __temp__* files/directories under current directory tree
bash: find Path -depth -name Regex -exec rm -r -f {} \; <|endoftext|>
<|endoftext|> english: List all regular files in the current directory tree
bash: find Path -type f -print0 | xargs -0 -I {} ls -l {} <|endoftext|>
<|endoftext|> english: search for files named "WSFY321.c" in a case-insensitive manner
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: find all the empty in the current folder do not search in sub directories
bash: find Path -maxdepth Quantity -type d -empty <|endoftext|>
<|endoftext|> english: find all hidden files in the current folder which have been modified after profile file
bash: find Path -type f -name Regex -newer File -print <|endoftext|>
<|endoftext|> english: Copy the standard output of a "bash" session to "/var/log/bash.out.log"
bash: bash | tee File <|endoftext|>
<|endoftext|> english: Search for "whatever" in all files under /dir directory ensuring white space safety in filenames
bash: find Path -type f -print0 | xargs -0 -i -I {} cat {} {} | grep Regex <|endoftext|>
<|endoftext|> english: Prepend the reverse history number as negative values to the output of the history command with arguments "$@"
bash: history Quantity | tac | nl | tac | sed Program <|endoftext|>
<|endoftext|> english: Search the current directory tree for .aux files
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all files/directories under /home/feeds/data directory
bash: find Path <|endoftext|>
<|endoftext|> english: Find all files/directories named 'document' in the entire filesystem
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: Replace ",," with ", ," twice in "data.csv" and display the "," delimited result as a table
bash: sed Program File | column -s Regex -t <|endoftext|>
<|endoftext|> english: Search /var for files matching regular expression '.*/tmp/.*[0-9]*.file'
bash: find Path -regex Regex <|endoftext|>
<|endoftext|> english: List all files and directories (including hidden) in the current working directory in a long list format sorted by the oldest modification time
bash: ls -a -l -r -t $( pwd ) <|endoftext|>
<|endoftext|> english: display all the text files in the home folder ( case insensitive search )
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: Make "file.sh" executable
bash: chmod +Permission File <|endoftext|>
<|endoftext|> english: Delete all files in the $DIR directory that have not been accessed in 5 or more days.
bash: find Path -type f -atime +Timespan -exec rm {} \; <|endoftext|>
<|endoftext|> english: Find all directories under current directory and set read-write-execute permission for owner, read-execute permission for group and other for those directories
bash: find Path -type d -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Print a colon-separated list of all directories from the ~/code directory tree, except hidden ones and those below them
bash: find Path -type d | sed Program | tr Regex Regex | sed Program <|endoftext|>
<|endoftext|> english: find all the text files present in the current directory excluding the search in certain paths.
bash: find Path -type f -name Regex ! -path Regex ! -path Regex ! -path Regex <|endoftext|>
<|endoftext|> english: Read a single character from standard input and do not allow backslash to escape characters
bash: read -r -n Quantity <|endoftext|>
<|endoftext|> english: Find all executable files
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: List all the .c files under the current directory and below in a 3 column format
bash: find Path -name Regex | xargs -n Quantity -I {} echo {} <|endoftext|>
<|endoftext|> english: Print common files of directory "1" and "2"
bash: comm -1 -2 <( ls File ) <( ls File ) <|endoftext|>
<|endoftext|> english: Find regular files in the current directory tree that are called FindCommandExamples.txt and remove them
bash: find Path -type f -name Regex -exec rm -f {} \; <|endoftext|>
<|endoftext|> english: remove all the "core" files in the current folder which have not been changed in the last 4 days.
bash: find Path -name Regex -ctime +Timespan -exec rm -f {} \; <|endoftext|>
<|endoftext|> english: Find all files/directories named $something under current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Compare the contents of gzip-ompressed files "file1" and "file2"
bash: diff <( zcat Regex ) <( zcat Regex ) <|endoftext|>
<|endoftext|> english: Search the /myfiles directory tree for files that are 5 512 byte blocks in size
bash: find Path -size Size <|endoftext|>
<|endoftext|> english: Force create a symbolic link named "mylink" with target "/apps/myapps/new/link/target"
bash: ln -f -s File Regex <|endoftext|>
<|endoftext|> english: Find all syslog directories under /var/log directory
bash: find Path -name Regex -type d <|endoftext|>
<|endoftext|> english: Search the current directory tree for regular files owned by user "www"
bash: find Path -type f -user Regex <|endoftext|>
<|endoftext|> english: Move "phantomjs-1.8.1-linux-x86_64.tar.bz2" to "/usr/local/share/" directory
bash: mv File File <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory that were modified later than /reference/file
bash: find Path -newer File <|endoftext|>
<|endoftext|> english: simulate a full login of user builder
bash: su -l Regex <|endoftext|>
<|endoftext|> english: search for the directory "mysql" in the entire file system
bash: find Path -name Regex -type d <|endoftext|>
<|endoftext|> english: Find all the regular files under $DIR directory tree which have been modified before the file $a excluding the file $a and delete them
bash: find Path -type f ! -newer File ! -samefile Regex -exec rm {} + <|endoftext|>
<|endoftext|> english: search for word linux in all the regular/normal files in the folder mail.
bash: find Path -type f | xargs -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: Go to directory /some/where/long
bash: cd Directory <|endoftext|>
<|endoftext|> english: Report file system containing path to the current working directory inodes usage.
bash: df -i File <|endoftext|>
<|endoftext|> english: Find all ES* and FS_* files under current directory
bash: find Path -type f \( -iname Regex -or -iname Regex \) <|endoftext|>
<|endoftext|> english: Find all files/directories in level 1 down the $queue directory with all positional parameters appended with the find command
bash: echo Regex | xargs -I {} find {} -mindepth Quantity -maxdepth Quantity Path <|endoftext|>
<|endoftext|> english: Read a line of standard input with prompt "Enter the path to the file: " and suggestion "/usr/local/etc/" and save the response to variable "FILEPATH"
bash: read -e -p Regex -i Regex Regex <|endoftext|>
<|endoftext|> english: Find files and directories that are at least seven levels of nesting in the directory /usr/src excluding CVS directory
bash: find Path -name Regex -prune -or -depth Path -print <|endoftext|>
<|endoftext|> english: Merge each non-blank line of standard input into a single comma separated line
bash: grep -v Regex | paste -s -d Regex File <|endoftext|>
<|endoftext|> english: Will run checksums recursively from the current directory, and give back grouped filenames of all identical checksum results.
bash: find Path -type f -print0 | xargs -0 -n Quantity -I {} md5sum {} | sort -k Number | uniq -w Quantity -d --all-repeated separate | sed -e Program <|endoftext|>
<|endoftext|> english: find all the regular/normal files in the current folder
bash: find Path -type f <|endoftext|>
<|endoftext|> english: Move all *.php~ (case insensitive) files under current directory to /mydir
bash: find Path -iname Regex -exec mv {} File \; <|endoftext|>
<|endoftext|> english: Show filename and filetype description of all PHP files in current directory whose name or filetype description includes "UTF"
bash: file File | grep Regex <|endoftext|>
<|endoftext|> english: List each unique character in "file" prefixed by number of occurrences
bash: grep -o Regex File | sort | uniq -c <|endoftext|>
<|endoftext|> english: Prints dates of $m month in $y year, preceded by month number and slash like ' 10/1'.
bash: cal DateTime DateTime | sed -e Program -e Program -e Program <|endoftext|>
<|endoftext|> english: show all directories in the current folder excluding those that are present in the sub directories of media, images and backups
bash: find Path -type d \( -name Regex -or -name Regex -or -name Regex \) -prune -or -print <|endoftext|>
<|endoftext|> english: Move all files from the `sourceDir' directory tree to the `destDir' directory
bash: find Path -mindepth Quantity -exec mv {} --target-directory Directory \; <|endoftext|>
<|endoftext|> english: Lookup information for user "vivek"
bash: finger Regex <|endoftext|>
<|endoftext|> english: Show the list of user wnj's files that are newer than file `ttt'
bash: find Path -newer File -user Regex -print <|endoftext|>
<|endoftext|> english: Search /usr/src for filenames not ending in "*,v"
bash: find Path ! \( -name Regex -or -name Regex \) {} Path -print <|endoftext|>
<|endoftext|> english: find all files in current folder having the name pattern "some_pattern" and move them to folder target_location (GNU VERSION)
bash: find Path -name Regex -print0 | xargs -0 -I {} mv {} File <|endoftext|>
<|endoftext|> english: Move all directories in the current directory tree that have been modified in the last day to "/path/to/target-dir"
bash: find Path -depth -type d -mtime Timespan -exec mv -t Directory {} + <|endoftext|>
<|endoftext|> english: Find all files which  begin with 'a' or 'b' from current directory downwards and print them.
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: find all the normal/regular files in the current folder which have been modified two days ago and display a long listing of them
bash: find Path -type f -mtime Timespan -mtime -Timespan -daystart -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: Find files that are 100k
bash: find Path -size Size <|endoftext|>
<|endoftext|> english: kill all jobs
bash: kill $( jobs -p ) <|endoftext|>
<|endoftext|> english: This command find displays the files which are modified in the last 15 minutes. And it lists only the unhidden files. i.e hidden files that starts with a . (period) are not displayed in the find output.
bash: find Path -mmin -Quantity \( ! -regex Regex \) <|endoftext|>
<|endoftext|> english: Print the files to which symbolic links in the current directory point
bash: find Path -type l -print | xargs -I {} ls -l -d {} | awk Program <|endoftext|>
<|endoftext|> english: Prints line count of each file within current directory.
bash: find Path -type f -print | xargs -L Quantity -I {} wc -l {} <|endoftext|>
<|endoftext|> english: List all hidden regular files from the current directory separating them with zeroes
bash: find Path -maxdepth Quantity -type f -name Regex -printf '%f\0' <|endoftext|>
<|endoftext|> english: Archive "/local/path/some_file" to "/some/path" on host "server.com" authenticating as user "usr", compress data during transmission, show progress details.
bash: rsync -a -v -z --progress File File <|endoftext|>
<|endoftext|> english: Find all the files which were modified more than 50 days but less than 100 days ago
bash: find Path -mtime +Timespan -mtime -Timespan <|endoftext|>
<|endoftext|> english: Search for files in your home directory which have been modified in the last twenty-four hours.
bash: find Path -mtime Timespan <|endoftext|>
<|endoftext|> english: List all files matching regular expression '*foo*' in a human-readable form
bash: find Path -name Regex -exec ls -l -a -h {} \; <|endoftext|>
<|endoftext|> english: Search the regular files of the current directory tree for string "stuff"
bash: find Path -type f -exec grep -n Regex {} \; -print <|endoftext|>
<|endoftext|> english: Find all file.ext files/directories under present working directory and print . for each of them
bash: find Path $( pwd ) -name Regex -exec echo $( dirname {} ) \; <|endoftext|>
<|endoftext|> english: Find all executables under /path directory
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: Find all directories under current directory and change their permission to 700
bash: find Path -type d -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Find all files under current directory with their size and paths, reverse sort them numerically, then print first 4 entries
bash: find Path -type f -printf "%s %p\n" | sort -n -r | head -n Quantity <|endoftext|>
<|endoftext|> english: Find the files in the current directory that match pattern '*.ISOLATE.quantifier.txt' and move them to folder ISOLATE/
bash: find Path -name Regex -maxdepth Quantity -exec mv {} File + <|endoftext|>
<|endoftext|> english: Find and remove all .txt regular files under the current directory and below
bash: find Path -type f -name Regex -exec rm -f {} \; <|endoftext|>
<|endoftext|> english: Print IP addresses of the host name
bash: hostname -I | awk Program <|endoftext|>
<|endoftext|> english: Print the names and sizes of regular files residing in the "tmp" directory tree
bash: find Path -type f -printf "f %s %p\n" | awk Program <|endoftext|>
<|endoftext|> english: Search "file1" for lines matching regex patterns listed in "file2" and list the unique results (sorted alphabetically)
bash: grep -f File Regex | sort | uniq <|endoftext|>
<|endoftext|> english: Strips two last sections from the path $pathname, and prints basename of the rest part.
bash: echo $( basename $( dirname $( dirname Regex ) ) ) <|endoftext|>
<|endoftext|> english: Print the top 10 commands with their use count
bash: history | awk Program | sort | uniq -c | sort -r -n | head <|endoftext|>
<|endoftext|> english: create the compressed tar archive images.tar.gz containing all jpg files found under /
bash: find Path -name Regex -type f -print | xargs -I {} tar -c -v -z -f File {} <|endoftext|>
<|endoftext|> english: Send SIGKILL signal to process ID 16085, killing it instantly.
bash: kill - Regex Regex <|endoftext|>
<|endoftext|> english: Find all dir* files/directories under parent
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Calculate the md5 sum of hex byte 61
bash: echo -n -e Regex | md5sum <|endoftext|>
<|endoftext|> english: Search for files/directories with the case insensitive pattern anaconda.* in /var/log
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: Split "system.log" into files of at most 10 MiB in size with a numeric suffix and prefix "system_split.log"
bash: split -b Size -d File Regex <|endoftext|>
<|endoftext|> english: Save the user name in all capitals of the current user to variable "v"
bash: whoami | awk Program <|endoftext|>
<|endoftext|> english: Find files/directories greater than 10MB in your home directory
bash: find Path -size +Size <|endoftext|>
<|endoftext|> english: Change directory to the directory containing the "oracle" executable
bash: cd $( dirname $( which Regex ) ) <|endoftext|>
<|endoftext|> english: Prepend the reverse history number to the output of the history command with arguments "$@"
bash: history Quantity | tac | nl | tac <|endoftext|>
<|endoftext|> english: Find all directories in /var/www/html/zip/data/*/*/*/*/* that are older than 90 days and print only unique paths
bash: find Path -type d -mtime +Timespan | uniq <|endoftext|>
<|endoftext|> english: Print number of bytes in $file.
bash: cat File | wc -c <|endoftext|>
<|endoftext|> english: Find all files under current directory that were modified more than 7 days ago and delete them
bash: find Path -type f -mtime +Timespan -print0 | xargs -0 -I {} rm {} <|endoftext|>
<|endoftext|> english: Find all xml files under current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Get domain name with 'google' from address $1
bash: dig -x Regex | grep Regex | cut -d Regex -f Number | grep Regex | cut -f Number <|endoftext|>
<|endoftext|> english: List all files/directories under current directory
bash: find Path -print <|endoftext|>
<|endoftext|> english: Print 'file' file, splitting lines into pieces with no more that 3 words in each one.
bash: cat File | xargs -n Quantity <|endoftext|>
<|endoftext|> english: display long listing of all the files that have been changed in the last 4 days, daystart is used to compare from the starting of day i.e, at 00:00
bash: find Path -daystart -ctime Timespan -ls -type f <|endoftext|>
<|endoftext|> english: Lists file descriptors of a current process.
bash: ls -l File <|endoftext|>
<|endoftext|> english: Set variable PING to 1 if it's possible to ping host ADDRESS, to 0 otherwise.
bash: ping Regex -c Quantity | grep -E -o Regex | cut -f Number -d Regex <|endoftext|>
<|endoftext|> english: Remove regular files whose names match Perl regular expression '\w+-\d+x\d+\.\w+$' from the current directory tree
bash: find Path -type f | grep -P Regex | sed -r -e Program | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: Search the current directory tree for symbolic links to files matching pattern '*/test*'
bash: find -P Path -lname Regex <|endoftext|>
<|endoftext|> english: List all regular files matching the name pattern "$1*" (where $1 is a positional parameter) under '/usr', '/bin', '/sbin' and '/opt' directory tree
bash: find Path Path Path Path -name Regex -type f -ls <|endoftext|>
<|endoftext|> english: find all the findme.txt files in the file system
bash: find Path -name Regex -type f -print <|endoftext|>
<|endoftext|> english: Remove all .sh files in the current directory tree whose names begin with "t"
bash: find Path -name Regex -exec rm -v -f {} \; <|endoftext|>
<|endoftext|> english: Find files modified within the past 24 hours
bash: find Path -mtime Timespan <|endoftext|>
<|endoftext|> english: Calculate the md5 sum of the sorted list of md5 sums of all ".py" files under "/path/to/dir/"
bash: find Path -type f -name Regex -exec md5sum {} + | awk Program | sort | md5sum <|endoftext|>
<|endoftext|> english: Archive preserving permissions and ownership files in "/var/www/" on host "user@10.1.1.2" to local "/var/www/"
bash: rsync -a -z File File <|endoftext|>
<|endoftext|> english: Find all files under current directory tree named 'filename_regex' excluding '.svn' and '.pdv' directories and files then search for the case insensitive pattern 'your search string' in those files
bash: find Path -name Regex | grep -v Regex -v File | xargs -I {} grep -i Regex {} <|endoftext|>
<|endoftext|> english: Display a long listing of all files/directories that are bigger than 10MB under '/var/' directory tree
bash: find Path -size +Size -ls <|endoftext|>
<|endoftext|> english: Search the current directory tree for files whose names contain "TextForRename"
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find files in the current directory tree whose names are of the form "cxx_data.txt" where xx is a number from 30 to 70
bash: find Path -regextype posix-egrep -regex Regex <|endoftext|>
<|endoftext|> english: Force delete all jpg files in current directory which are less than 50KB and do not search in the sub directories
bash: find Path -maxdepth Quantity -name Regex -size -Size | xargs -I {} rm -f {} <|endoftext|>
<|endoftext|> english: search for a word in all the php files in the current folder and display the matching lines
bash: find Path -name Regex -type f -exec grep -H -n Regex {} \; <|endoftext|>
<|endoftext|> english: Gunzip all files matching "file*.gz" and answer "n" to any prompts
bash: yes Regex | gunzip Regex <|endoftext|>
<|endoftext|> english: Search the ./bin directory recursively for files called "cp"
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Recursively removes all files and folders like 'FILE-TO-FIND' from current folder.
bash: find Path -name Regex -exec rm -r -f {} + <|endoftext|>
<|endoftext|> english: Search the current directory tree for regular files changed less than 1 day ago
bash: find Path -type f -ctime -Timespan <|endoftext|>
<|endoftext|> english: Find all regular *.css files
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: Recursively unzip files to stdout in "/some/dir/here" and search for "blah"
bash: zcat Regex Regex | grep Regex <|endoftext|>
<|endoftext|> english: Save count of lines from file $file matching with pattern $filter and not matching with pattern $nfilter in variable 'totalLineCnt'
bash: cat File | grep Regex | grep -v Regex | wc -l | grep -o Regex <|endoftext|>
<|endoftext|> english: Run "./configure" with a new environment variable CC set to the full path of the command 'gcc'
bash: which Regex <|endoftext|>
<|endoftext|> english: Find all regular files under current directory tree without descending into './dir1' (except './dir1/subdir1*' pattern) and './dir2' directories
bash: find Path \( -path Regex -and -not -path Regex -or -path Regex \) -prune -or -type f -print <|endoftext|>
<|endoftext|> english: Delete all filename* files under /dir directory
bash: find Path -name Regex -type f -exec rm {} \; <|endoftext|>
<|endoftext|> english: Find all TXT files in the current directory and copy them to directory "$HOME/newdir"
bash: find Path -name Regex -type f -print0 | xargs -0 -I {} cp -u -t File {} <|endoftext|>
<|endoftext|> english: Delete all files/directories in minimum 2 levels down the root directory
bash: find Path -mindepth Quantity -delete <|endoftext|>
<|endoftext|> english: Find all *.txt file (case insensitive) in the entire system and copy them to /tmp/txt
bash: find Path -iname Regex | xargs --replace Regex -I {} cp File File {} <|endoftext|>
<|endoftext|> english: Counts total number of only lines with alphanumeric symbols in all *.php files in a current folder and subfolders.
bash: find Path -name Regex | xargs -I {} cat {} | awk Program <|endoftext|>
<|endoftext|> english: Print content of all files found regarding seach options '[whatever]'
bash: find Path | xargs -I {} cat {} <|endoftext|>
<|endoftext|> english: Remove all *.sql files in the $backup_path directory tree that were last modified more than 30 days ago
bash: find Path -name Regex -mtime +Timespan -exec rm {} \; <|endoftext|>
<|endoftext|> english: Find files with group write permission and remove the permission
bash: find Path -perm -Permission -print | xargs -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: Compress all files under /source directory tree using gzip with best compression method
bash: find Path -type f -print0 | xargs -0 -n Quantity -P Quantity -I {} gzip -9 {} <|endoftext|>
<|endoftext|> english: Source "lib/B" relative to the directory of the executing shell script, will fail if currently running script is not in PATH.
bash: source $( dirname $( which Regex ) ) <|endoftext|>
<|endoftext|> english: verbosely create intermediate directoriy tmp as required and directory boostinst
bash: mkdir -p -v Directory <|endoftext|>
<|endoftext|> english: Delete all files named 'Waldo' under ~/Books directory tree where '~' expands to user's home directory
bash: find Path -type f -name Regex -exec rm {} \; <|endoftext|>
<|endoftext|> english: Recursively copy all files and folders in the current directory excluding "exclude_pattern" to "/to/where/"
bash: rsync -r --verbose --exclude Regex File File <|endoftext|>
<|endoftext|> english: Split "date.csv" into files with at most 100 lines each
bash: split -l Quantity File <|endoftext|>
<|endoftext|> english: display all the files in the current folder excluding those that are present in the folder "secret"
bash: find Path \( -name Regex -and -prune \) -or -print <|endoftext|>
<|endoftext|> english: Display an infinite number of lines consisting of "y", until the user presses the Q key.
bash: yes | cat | more <|endoftext|>
<|endoftext|> english: change the ownership of all regular/normal files in the current directory
bash: find Path -type f -exec chown Regex {} \; <|endoftext|>
<|endoftext|> english: List all entry names contained directly by directory in_save in the current directory, pausing for user input at each page.
bash: find Path -type f -maxdepth Quantity | more <|endoftext|>
<|endoftext|> english: display a long listing of all the files in the current directory
bash: find Path -name Regex -exec ls -a {} \; <|endoftext|>
<|endoftext|> english: Gets list of IP addresses of all network interfaces.
bash: ifconfig | grep -E -o Regex | grep -E -o Regex | grep -v Regex <|endoftext|>
<|endoftext|> english: Report total file systems disk usage.
bash: df --total | tail -n Quantity <|endoftext|>
<|endoftext|> english: Locate all passwd files on the system
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: display all files in current folder which are bigger than 1 MB
bash: find Path -size +Size <|endoftext|>
<|endoftext|> english: find file named foo.txt under current directory.
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all files/directories under .. directory and copy them to ~/foo/bar
bash: find Path -exec cp -t Directory -- {} + <|endoftext|>
<|endoftext|> english: Replace all spaces with underscores in file paths under current directory.
bash: find Path -name Regex -type f | rename Regex <|endoftext|>
<|endoftext|> english: Rename "blah1" to "blah1-new"
bash: mv File File <|endoftext|>
<|endoftext|> english: Print the file paths and their sizes for all files under full_path_to_your_directory
bash: find Path -type f -printf '%p %s\n' <|endoftext|>
<|endoftext|> english: Make directorie(s) 'es/LC_MESSAGES' as needed in the current directory
bash: mkdir -p Directory <|endoftext|>
<|endoftext|> english: Recursively lists all files in a current folder in long format, sorting by modification time.
bash: ls -l -d -t $( find Path ) <|endoftext|>
<|endoftext|> english: change owner and group of the file "file" to user "user" and group "group"
bash: chown Regex File File <|endoftext|>
<|endoftext|> english: Replace spaces in file names with underscores for all files in the current directory tree
bash: find Path -name Regex -type f | rename Regex <|endoftext|>
<|endoftext|> english: Find all *.ini files
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: find all files in the current folder which have been modified in the last 24 hours and whose file name is of length 1
bash: find Path -name Regex -mtime -Timespan <|endoftext|>
<|endoftext|> english: Find all files under current directory that were modified in the last 24 hours
bash: find Path -mtime Timespan <|endoftext|>
<|endoftext|> english: Find all Read Only files in entire file system and show a few lines of output from the beginning
bash: find Path -perm Permission | head <|endoftext|>
<|endoftext|> english: Compress regular files in the current directory tree that were last modified more than 7 days ago
bash: find Path -type f -mtime +Timespan | tee File | xargs -I {} compress {} <|endoftext|>
<|endoftext|> english: change the owner of the files which belong to the group 1000 to username and modify only the symbolic link not the originally pointed file
bash: find Path -gid Regex -exec chown -h Regex {} \; <|endoftext|>
<|endoftext|> english: Display "infile" as printable characters or backslash escapes
bash: cat File | od -c <|endoftext|>
<|endoftext|> english: Find all files under $musicdir directory
bash: find Path -type f -print <|endoftext|>
<|endoftext|> english: Display inputfile all on one line (replace newlines by spaces)
bash: awk Program Program Program <|endoftext|>
<|endoftext|> english: Search for "ifconfig" in the output of "history" and print 5 lines that precede and follow
bash: history | grep Regex -A Quantity -B Quantity <|endoftext|>
<|endoftext|> english: ERROR - need to add -a or -r for recursive copy
bash: rsync --exclude Regex --exclude Regex File File <|endoftext|>
<|endoftext|> english: Find all *.html files under current directory and for each file replace the first occurrence of STRING and previous lines with the content of common_header file
bash: find Path -type f -name Regex -exec sed -i -e Program -e Program {} \; <|endoftext|>
<|endoftext|> english: display all the files in the current folder in a single line separated by null command
bash: find Path -print0 <|endoftext|>
<|endoftext|> english: Delete all hidden files under $some_directory
bash: find Path -type f -name Regex -exec rm {} \; <|endoftext|>
<|endoftext|> english: Merge lines whose first comma-separated field in file 'in1' also appears as a first comma-separated in file 'in2' - both files must be sorted, and the output format of each line will be: first field of in1, second field of in2, and third field of in2.
bash: join -t Regex -o 1.1,1.2,2.3 File File <|endoftext|>
<|endoftext|> english: find the count of all the regular files in a directory
bash: find Path -type f | wc -l <|endoftext|>
<|endoftext|> english: Save the day of the year from the time string "20131220" to variable 'DATECOMING'
bash: echo $( date -d Regex +%j ) <|endoftext|>
<|endoftext|> english: delete all instances of the file "bad" if its size is 0 bytes
bash: find Path -name Regex -empty -delete <|endoftext|>
<|endoftext|> english: Find all regular files in /usr/bin modified less than within the last 10 days
bash: find Path -type f -mtime -Timespan <|endoftext|>
<|endoftext|> english: Log into "ubuntu@ec2-XX-XXX-XXX-XXX.us-west-2.compute.amazonaws.com" using identity file "~/path/mykeypair.pem"
bash: ssh -i File Regex <|endoftext|>
<|endoftext|> english: display all the files in the file system which belong to the user with the id 1005
bash: find Path -uid Regex <|endoftext|>
<|endoftext|> english: Find links to any file that happens to be named `foo.txt'
bash: find Path -lname Regex <|endoftext|>
<|endoftext|> english: Remove all vmware-*.log files under current directory
bash: find Path -name Regex -exec rm {} \; <|endoftext|>
<|endoftext|> english: create a list of all files in all subdirectories
bash: find Path -type f -exec md5 {} \; <|endoftext|>
<|endoftext|> english: Find all OGG files in the home directory larger than 20 megabytes
bash: find Path -iname Regex -size +Size <|endoftext|>
<|endoftext|> english: Find all files/directories named 'photo?.jpg' under current directory tree
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Remove files whose names match regular expression '^.*/[A-Za-z]+-[0-9]+x[0-9]+\.[A-Za-z]+$' from the current directory tree
bash: find Path -regex Regex | xargs -I {} echo Regex Regex {} <|endoftext|>
<|endoftext|> english: Recursively change owner to "amzadm" and group to "root" of all files in "/usr/lib/python2.6/site-packages/"
bash: chown Regex -R File <|endoftext|>
<|endoftext|> english: Sort file1 and file2 then display differences between them.
bash: diff <( sort File -u ) <( sort File -u ) <|endoftext|>
<|endoftext|> english: Change to folder where the oracle binary is.
bash: cd $( dirname $( which Regex ) ) <|endoftext|>
<|endoftext|> english: search for the regular/normal file "foo.bar" and force delete it
bash: find Path -name Regex -type f -exec rm -f {} \; <|endoftext|>
<|endoftext|> english: Find symbolic links under /etc/
bash: find Path -type l <|endoftext|>
<|endoftext|> english: Search "inputfile" for lines starting with "t:" and group the results in files with at most 200 lines each
bash: cat File | grep Regex | split -l Quantity <|endoftext|>
<|endoftext|> english: Search the current directory tree for files whose names start with "f"
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: Find and print the names of all files found in the current directory and all of its sub-directories.
bash: find Path <|endoftext|>
<|endoftext|> english: Print the IP addresses for the current host name
bash: hostname -I <|endoftext|>
<|endoftext|> english: Find file size in bytes
bash: du -b File <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory that were accessed less than 1 day ago
bash: find Path -atime -Timespan -print <|endoftext|>
<|endoftext|> english: Find all files that belongs to user root under / directory and show a few lines of output from the beginning
bash: find Path -user Regex | head <|endoftext|>
<|endoftext|> english: Print $d if $d is an empty directory
bash: find Path -prune -empty -type d <|endoftext|>
<|endoftext|> english: Find all files whose names end with "~" in the /home/peter directory tree, following symlinks, and delete them
bash: find -L Path -name Regex -exec rm {} \; <|endoftext|>
<|endoftext|> english: search for all xml files in current folder and display them
bash: find Path -name Regex -exec echo {} \; <|endoftext|>
<|endoftext|> english: Find all files/directories named orm.properties under current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Fix files to default permissions 755
bash: find Path -type d -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: extract 'archive.tar.gz' to /destination
bash: gzip -d -c Regex | tar -x -f File -C Directory <|endoftext|>
<|endoftext|> english: List all environment variables (name and value) whose name either equals HOME or PATH, or starts with GO
bash: env | grep Regex <|endoftext|>
<|endoftext|> english: list all .c or .sh regular files.
bash: find Path -type f \( -name Regex -or -name Regex \) <|endoftext|>
<|endoftext|> english: Output the string 'yes' continously until killed
bash: yes <|endoftext|>
<|endoftext|> english: Find all directories recursively starting from / and skipping the contents of /proc/, and count them
bash: find Path -path Regex -prune -or -type d | wc -l <|endoftext|>
<|endoftext|> english: Find every directory under "0001" and make new directories replacing "0001" with "0002" at the beginning of their names.
bash: find Path -type d | sed Program | xargs -I {} mkdir {} <|endoftext|>
<|endoftext|> english: find all the files in the current folder which are bigger than 9MB
bash: find Path -size +Size <|endoftext|>
<|endoftext|> english: Search the current directory tree for files and directories whose names do not end in ".exe" and ".dll"
bash: find Path -name Regex -or -name Regex -or -print <|endoftext|>
<|endoftext|> english: Find all files/directories under /home/bozo/projects directory that were modified 1 day ago
bash: find Path -mtime Timespan <|endoftext|>
<|endoftext|> english: Display all variables with names starting with "derby" in a Window's command line
bash: set Regex <|endoftext|>
<|endoftext|> english: Remove all files except the ones listed in "MANIFEST"
bash: find Path -type f -printf %P\\n | sort | comm -3 File File | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: Recursively remove all "*.txt" files and answer "y" to any prompt
bash: yes | rm -r File <|endoftext|>
<|endoftext|> english: Create ssh tunnel through "genja.org" connecting localhost port 4444 to "raptor.lan" port 22
bash: ssh -L Regex Regex <|endoftext|>
<|endoftext|> english: Copies ""$project_dir"/iTunesArtwork", to the 'Payload/iTunesArtwork', rewriting files if necessary.
bash: cp -f File File <|endoftext|>
<|endoftext|> english: Find files and directories whose owner is daniel
bash: find Path -user Regex <|endoftext|>
<|endoftext|> english: find all text files which have extra extensions in the current folder
bash: find Path -name Regex -exec  \; -print <|endoftext|>
<|endoftext|> english: search for all "tif" images in current folder
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: Find all files that belongs to group 'root' under / directory and show a few lines of output from the beginning
bash: find Path -group Regex | head <|endoftext|>
<|endoftext|> english: change the permission of all the files in the current directory to 664 and change the permission of all the directories  in the current folder to 775.
bash: find Path \( -type f -exec chmod Permission {} \; \) -and \( -type d -exec chmod Permission {} \; \) <|endoftext|>
<|endoftext|> english: Save absolute path of "$path" that may not exist to variable "abspath"
bash: readlink -m File <|endoftext|>
<|endoftext|> english: find all ".flac" files in current folder starting with "cmn-"
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Set up local port forwards in the background with no terminal or command execution from port 4431 to host "www1" port 443 and port 4432 to host "www2" port 443 via the host "colocatedserver"
bash: ssh -f -N -T -L Regex -L Regex Regex <|endoftext|>
<|endoftext|> english: Delete files with inode number 782263 under current directory
bash: find Path -inum Quantity -exec rm -i {} \; <|endoftext|>
<|endoftext|> english: find all files in the file system which have not been accessed in the last 2 days
bash: find Path -atime +Timespan <|endoftext|>
<|endoftext|> english: Pushes directory path that saved in $line variable to the dirs stack, expanding symbol '~', if present, as home folder path.
bash: pushd Directory <|endoftext|>
<|endoftext|> english: Find all 400 permission files under /data directory, print 'Modifying ' appended with file path for each of them and change their permission to 755
bash: find Path -type f -perm Permission -exec echo Regex {} \; -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Pushes to the dirs stack directory path of the current script, or current directory path if executed from bash shell.
bash: pushd $( dirname Regex ) <|endoftext|>
<|endoftext|> english: Search for files/directories with the case insensitive pattern anaconda.* in var/log directory and create an archive (somefile.tar) of all the files found ensuring white space safety
bash: find Path -print0 -iname Regex | tar -c -v -f File -T File <|endoftext|>
<|endoftext|> english: Remove all but 5 last comma-separated fields from each line in 'data.csv'
bash: cat File | rev | cut -d Regex -f -Number | rev <|endoftext|>
<|endoftext|> english: Print the current directory tree with file permissions
bash: tree -p <|endoftext|>
<|endoftext|> english: Find all 777 permission regular files and use chmod command to set permissions to 644
bash: find Path -type f -perm Permission -print -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Change permissions to 644 for all regular files under the /path/to/dir/ tree unless these permissions are already set
bash: find Path ! -perm Permission -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: List all non-empty files under under current directory
bash: find Path -type f ! -size Size <|endoftext|>
<|endoftext|> english: split processed content of the file temp into pieces per 1 line named "tempNNN" with numeric suffix
bash: sed Program File | split -d -l Quantity File Regex <|endoftext|>
<|endoftext|> english: Find recursively all Python files in the current directory tree and count the number of lines in them
bash: find Path -name Regex | xargs -I {} wc -l {} <|endoftext|>
<|endoftext|> english: Copy all files matching "*failed.ipynb" in the current directory tree to "./fails" preserving the directory hierarchy
bash: find Path -name Regex | cpio -p -d Regex <|endoftext|>
<|endoftext|> english: Prints what year it was 222 days ago
bash: date --date Regex +"%Y" <|endoftext|>
<|endoftext|> english: Merge already sorted files "file*.txt" and split the result into files of at most 100000 lines each with a prefix "sorted_file"
bash: sort --merge File | split -l Quantity File Regex <|endoftext|>
<|endoftext|> english: Delete all empty files in the current directory tree
bash: find Path -type f -empty -delete <|endoftext|>
<|endoftext|> english: Find regular files in the current directory tree that have executable bits set for the user and group but not for the other
bash: find -L Path -type f -perm -Permission ! -perm -Permission <|endoftext|>
<|endoftext|> english: Print the first 2 lines of tree's help message by redirecting it from standard error to standard output
bash: tree --help | head -n Quantity <|endoftext|>
<|endoftext|> english: Remove files under /mnt/zip matching "*prets copy" with confirmation
bash: find Path -name Regex -print0 | xargs -0 -p -I {} rm {} <|endoftext|>
<|endoftext|> english: Print lines 10000 to 10010 from input "seq 1 100000"
bash: seq Number Number | tail -n +Quantity | head -n Quantity <|endoftext|>
<|endoftext|> english: Make directory and parents as needed to "~/temp/bluecove/target/"
bash: mkdir -p Directory <|endoftext|>
<|endoftext|> english: Select everything selected by * without descending into any directories
bash: find Path -maxdepth Quantity <|endoftext|>
<|endoftext|> english: display all the files in the current folder
bash: find Path | xargs -I {} echo {} <|endoftext|>
<|endoftext|> english: list names of bind functions containing "/"
bash: bind -l | grep Regex <|endoftext|>
<|endoftext|> english: Count the number of "x" characters in "filename"
bash: sed Program File | tr -d Regex | wc -c <|endoftext|>
<|endoftext|> english: Compare each file in "repos1/" and "repos2/", treat absent files as empty, ignore differences in whitespace and tab expansions, and print 3 lines of unified context
bash: diff -E -N -w -b -u Quantity File File <|endoftext|>
<|endoftext|> english: Print full path of command "programname"
bash: which Regex <|endoftext|>
<|endoftext|> english: Creates temporary folder within TMPDIR, with name like current shell name and 10-letter suffix.
bash: mktemp -d -t $( basename Regex ) <|endoftext|>
<|endoftext|> english: Delete all regular files that have not been modified in the last 60 weeks under $DIR directory tree
bash: find Path -type f -mtime +Timespan -exec rm {} \; <|endoftext|>
<|endoftext|> english: create directory subdirectory
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: Create a report of the contents of a USB drive mounted at find /path/to/drive
bash: find Path -type f -exec file -b {} \; -printf '%s\n' | awk -F Regex Program | sort -n -r <|endoftext|>
<|endoftext|> english: Find all files under ${searchpath} that match the regex ${string1}.*${string2}.*${string3}  in their contents where ${string1} etc.. will be expanded
bash: find Path -type f -print0 | xargs -0 -I {} grep -l -E Regex {} <|endoftext|>
<|endoftext|> english: find all files in the current folder which are of size 0 bytes.
bash: find Path -type f -size Size <|endoftext|>
<|endoftext|> english: find all executable files
bash: find Path Path <|endoftext|>
<|endoftext|> english: change the group of all directories in the current folder
bash: find Path -type d -exec chgrp Regex {} \; <|endoftext|>
<|endoftext|> english: Find all files/directories named 'text' under current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Compare "file1" and "file2" line by line with 3 lines of unified context
bash: diff -u Quantity File <|endoftext|>
<|endoftext|> english: Copy all files (not directories) in "/path/to/local/storage" to "/path/to/copy" on host "remote.host" authenticating as user "user"
bash: rsync File File <|endoftext|>
<|endoftext|> english: Make directories "a/b/c" as needed without causing an error if it exists
bash: mkdir -p Directory <|endoftext|>
<|endoftext|> english: Remount "/" with read and write permission
bash: mount Regex -o remount,rw <|endoftext|>
<|endoftext|> english: Find all directories in maximum 1 level down the current directory that were modified less than 1 day ago
bash: find Path -maxdepth Quantity -type d -mtime -Timespan <|endoftext|>
<|endoftext|> english: Print a colon-separated list of all directories from the ~/code directory tree, except hidden ones
bash: find Path -type d -name Regex | tr Regex Regex | sed Program <|endoftext|>
<|endoftext|> english: Force create a symbolic link in "/usr/bin/" for each file matching "$javaUsrLib/jdk1*/bin/*"
bash: ln -f -s File Regex <|endoftext|>
<|endoftext|> english: Find all regular files that reside in the current directory tree and were last modified 1 day ago
bash: find Path -type f -mtime Timespan <|endoftext|>
<|endoftext|> english: find all files in the file system which are modified after the file /tmp/checkpoint
bash: find Path -newer File <|endoftext|>
<|endoftext|> english: List all files in entire file system that are newer than the file $newerthan and older than the file $olderthan and sort them according to file modification time
bash: find Path -type f -name Regex -newermt Regex ! -newermt Regex -printf '%T@ %p\n' | sort -k Number -n | sed Program <|endoftext|>
<|endoftext|> english: display the count of regular/normal files in the current folder do not search in sub directories
bash: find Path -maxdepth Quantity -type f | wc -l <|endoftext|>
<|endoftext|> english: Find every JavaScript file in the wordpress directory
bash: find Path -maxdepth Quantity -name Regex <|endoftext|>
<|endoftext|> english: find all .pm, .pl files in /users/tom and search for multiple pattern in same files and display the matched file names
bash: find Path -name Regex -exec grep -l -- Regex {} + | xargs -I {} grep -l Regex {} <|endoftext|>
<|endoftext|> english: Print line number "${linenum}" in file "$filename"
bash: cat File | sed Program <|endoftext|>
<|endoftext|> english: Print the IP addresses for the current host name
bash: hostname -I | awk -F Regex Program <|endoftext|>
<|endoftext|> english: Set the group to "username" for all files with GID=1000 in the current directory tree
bash: find Path -gid Regex -exec chown -h Regex {} \; <|endoftext|>
<|endoftext|> english: Find all *.csv files under /foo/bar and move them to some_dir
bash: find Path -name Regex -print0 | xargs -0 -I {} mv -t Directory {} <|endoftext|>
<|endoftext|> english: find all the files in the current directory which have the inode number 31246 and remove them.
bash: find Path -inum Quantity -exec rm {} \; <|endoftext|>
<|endoftext|> english: Find all files you have modified in the last two days
bash: find Path -type f -mtime -Timespan <|endoftext|>
<|endoftext|> english: List any line in "f1" or "f2" which does not appear in the other and delete all tab characters in the output
bash: comm -3 <( sort -u -n File ) <( sort -u -n File ) | tr -d Regex <|endoftext|>
<|endoftext|> english: Find empty files/directories under test directory
bash: find Path -empty <|endoftext|>
<|endoftext|> english: Remove file with inode number 31246
bash: find Path -inum Quantity -exec rm {} \; <|endoftext|>
<|endoftext|> english: Set up a local SSH tunnel from port 80 to port 3000
bash: ssh Regex -L Regex -N <|endoftext|>
<|endoftext|> english: Search all files in the current directory tree whose names end in "1" for string "1"
bash: find Path -name Regex -print0 | xargs -0 -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: Get files that last had their meta information changed more than 3 days ago
bash: find Path -ctime +Timespan <|endoftext|>
<|endoftext|> english: Find all * * regular files under current directory
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: SSH into server "server.com" as user "remote_user"
bash: ssh Regex <|endoftext|>
<|endoftext|> english: show all the ".flac" files in the current folder and do not search in the sub directories
bash: find Path -maxdepth Quantity -type f -name Regex <|endoftext|>
<|endoftext|> english: Search for the string 'git' in all the files under current directory tree excluding paths and names that contain the string 'git'
bash: find Path -not -path Regex -not -name Regex | grep Regex <|endoftext|>
<|endoftext|> english: Print received input to the terminal
bash: tee <|endoftext|>
<|endoftext|> english: Locate symlinks in directory trees lpi104-6 and research/lpi104-6
bash: find Path Path -type l <|endoftext|>
<|endoftext|> english: Give rwx permissions to the user and group of the directory named "files" leaving others without any privileges
bash: find Path -type d -name Regex -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Gets string with IP4 address of en0 network interface.
bash: ifconfig Regex | grep Regex | grep -v Regex <|endoftext|>
<|endoftext|> english: Create a symbolic link named "/lib/libc.so.0" to "/lib/libc.so.6"
bash: ln -s File Regex <|endoftext|>
<|endoftext|> english: Find all files under current directory whose file type description contains "image", display only path to each file.
bash: find Path -type f -exec file {} \; | awk -F Regex Program <|endoftext|>
<|endoftext|> english: For each line in 'file', print "result = " followed by the line backwards.
bash: rev File | awk Program <|endoftext|>
<|endoftext|> english: delete all text files from current folder
bash: find Path -type f ! -iname Regex -delete <|endoftext|>
<|endoftext|> english: Search /var/log for logs larger than 10 megabytes
bash: find Path -size +Size -ls <|endoftext|>
<|endoftext|> english: Find files owned by no user
bash: find Path -nouser <|endoftext|>
<|endoftext|> english: find all the files in the entire file system that have been accessed in the last 60 days ago
bash: find Path -amin -Quantity <|endoftext|>
<|endoftext|> english: Process each file beginning with "file" in the current directory as an argument to "bash script.sh"
bash: find Path -type f -maxdepth Quantity -name Regex -print0 | sort -z | xargs -0 -I {} bash File {} <|endoftext|>
<|endoftext|> english: Remove the "^M" characters from all *.ext files under /home directory
bash: find Path -type f -name Regex -exec sed -i -e Program {} \; <|endoftext|>
<|endoftext|> english: Find all directories under /path whose names are 33 characters long
bash: find Path -type d -printf "%f\n" | awk Program <|endoftext|>
<|endoftext|> english: Enables 'nullglob' shell option.
bash: shopt -s nullglob <|endoftext|>
<|endoftext|> english: Split a file "file.tar.gz" into pieces named as "file.tar.gz.part-NNN" with size 1024 MB where NNN is a numeric suffix
bash: split -b Size File Regex <|endoftext|>
<|endoftext|> english: Search for files/directories which are writable by both their owner and their group
bash: find Path -perm -Permission <|endoftext|>
<|endoftext|> english: Compress all directories found in $LOGDIR wherein a file's data has been modified within the last 24 hours
bash: find Path -type d -mtime +Timespan -exec compress File {} \; <|endoftext|>
<|endoftext|> english: List files in directory "one" that exist in directory "two"
bash: sort <( ls File ) <( ls File ) | uniq -d <|endoftext|>
<|endoftext|> english: Removes all files but 5 newest ones from current folder.
bash: ls -t -p | grep -v Regex | tail -n +Quantity | xargs -I {} rm -- {} <|endoftext|>
<|endoftext|> english: remove top-level domain (.com, .org) from URL's in urllist.txt
bash: rev File | cut -d Regex -f Number | rev <|endoftext|>
<|endoftext|> english: Find all *.gz files/directories under asia and emea directory
bash: find Path Path -name Regex -print0 | xargs -0 <|endoftext|>
<|endoftext|> english: Find all files under $dir
bash: find Path -type f <|endoftext|>
<|endoftext|> english: display all the regular/normal files in a folder
bash: find Path -type f <|endoftext|>
<|endoftext|> english: Recursively removes all files named '.svn' in a current folder, and prints messages on each action.
bash: find Path -name Regex -exec rm -v {} \; <|endoftext|>
<|endoftext|> english: Finds all files in a '/path' folder and prints long listing for them.
bash: find Path -type f -exec ls -l File \; <|endoftext|>
<|endoftext|> english: Remove all files with names like "vmware-*.log" from the current directory tree
bash: find Path -name Regex -exec rm {} \; <|endoftext|>
<|endoftext|> english: Counts lines of /dir/file.txt file.
bash: wc -l File <|endoftext|>
<|endoftext|> english: Serach for all the files containing grep in man pages
bash: find Path -regex Regex <|endoftext|>
<|endoftext|> english: Search for lines that have zero or more whitespace characters before "http://" and number the uniquely sorted output
bash: grep Regex | sort -u | nl <|endoftext|>
<|endoftext|> english: Find all files in the current directory and its sub-directories that have not been assessed in more than 30 days.
bash: find Path -atime +Timespan -print <|endoftext|>
<|endoftext|> english: Insert the current host name on line 15 of "test.html"
bash: sed -i $( hostname ) File <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory and sort them
bash: find | sort <|endoftext|>
<|endoftext|> english: Sources script incl.sh in the folder where current running script is located
bash: source $( dirname Regex ) <|endoftext|>
<|endoftext|> english: Archive "/path/to/sfolder" to "name@remote.server:/path/to/remote/dfolder" preserving hard links and compressing the data during transmission
bash: rsync -a -H -v -z File File <|endoftext|>
<|endoftext|> english: display all regular files in current folder excluding search in the directories that are ending with "git,svn"
bash: find Path \( -type d -regex Regex -prune -false \) -or -type f -print0 <|endoftext|>
<|endoftext|> english: Delete files in $DIR_TO_CLEAN older than $DAYS_TO_SAVE days
bash: find Path -mtime +Timespan -exec rm {} \; <|endoftext|>
<|endoftext|> english: Find all files under ${searchpath} that match the regex '"${string1}".*"${string2}".*"${string3}"' (${string1} ... won't be expanded) in their contents
bash: find Path $( echo Regex ) -type f -print0 | xargs -0 -I {} grep -l -E Regex {} <|endoftext|>
<|endoftext|> english: search a url in all regular/normal files in a folder.
bash: find Path -type f -exec grep Regex {} \; <|endoftext|>
<|endoftext|> english: Prints top-ten of most used utilities from history.
bash: history | awk Program | awk Program | sort | uniq -c | sort -n -r | head <|endoftext|>
<|endoftext|> english: change the permissions of al the directories in the current folder
bash: find Path -type d -exec chmod Permission {} + <|endoftext|>
<|endoftext|> english: Print all lines of "seq 10" except the last 3
bash: seq Number | tac | sed Program | tac <|endoftext|>
<|endoftext|> english: Create archive "backup1.tar" of all subdirectories of the current directory
bash: find Path -mindepth Quantity -maxdepth Quantity -type d | awk Program | xargs -d Regex -I {} tar -c -z -f File {} <|endoftext|>
<|endoftext|> english: display all directories in a folder
bash: find Path -type d -print <|endoftext|>
<|endoftext|> english: Show all previously typed shell commands, waiting for user interaction after each page of output.
bash: history | more <|endoftext|>
<|endoftext|> english: Compresses all files in the directory 'PATH_TO_FOLDER' without recursion and keeps uncompressed files from deletion.
bash: find Path -maxdepth Quantity -type f -exec bzip2 -z -k {} \; <|endoftext|>
<|endoftext|> english: Find all *.log files under path/
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find regular files in the current directory that are writable by at least somebody
bash: find Path -maxdepth Quantity -type f -perm Permission <|endoftext|>
<|endoftext|> english: Unzip "bigfile.txt.gz" to standard output, search for patterns in "patterns.txt", and list the unique matches
bash: gunzip -c Regex | grep -f File | sort | uniq -c <|endoftext|>
<|endoftext|> english: Changes group ownership of /sys/class/gpio/export and /sys/class/gpio/unexport to 'gpio'.
bash: chgrp Regex File File <|endoftext|>
<|endoftext|> english: Find the file in the current directory tree with inode number $inum and delete it
bash: find Path -inum Quantity -exec rm {} \; <|endoftext|>
<|endoftext|> english: Find "*201512*" regular files in /home/myhome/data/ARCHIVE/ and move them to /home/myhome/ARCHIVE/TempFolder/
bash: find Path -name Regex -or -type d -prune -or -name Regex -print | xargs -i -I {} mv {} File {} <|endoftext|>
<|endoftext|> english: Find *.conf files/directories only upto 2 levels down under /etc directory and show a few lines of output from the end
bash: find Path -maxdepth Quantity -name Regex | tail <|endoftext|>
<|endoftext|> english: search for the file in the entire file system which has the words "filename" in its name
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find command will display top 5 small files from curent directory . most probably you will get ZERO  bytes files .
bash: find Path -type f -exec ls -s {} \; Path Path | head - Quantity <|endoftext|>
<|endoftext|> english: search for all the text files and display the long listing of these files from that directory
bash: find Path -name Regex -execdir ls -l -a {} \; <|endoftext|>
<|endoftext|> english: Search everywhere for directories named `root'
bash: find Path -type d -name Regex <|endoftext|>
<|endoftext|> english: find all normal/regular files in current folder and display the total lines in them
bash: find Path -type f -exec wc -l {} + <|endoftext|>
<|endoftext|> english: For each line which has a common first field in file1.csv and file2.txt, output the first 4 fields of file1.csv - both files must be sorted first.
bash: join -o 1.1,1.2,1.3,1.4 -t Regex File File <|endoftext|>
<|endoftext|> english: find the file "MyCProgram.c" in the current folder
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: remove all the permissions for others to all the files in the current folder which have  read,write,execute access to users,group and others.
bash: find Path -perm Permission -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Find all directories under /home/me
bash: find Path -type d <|endoftext|>
<|endoftext|> english: Find all *.txt and *.json files
bash: find Path -type f \( -name Regex -or -name Regex \) <|endoftext|>
<|endoftext|> english: Write the current date and time followed by " 1" to the console and append to "log.csv"
bash: echo $( date ) Regex | tee -a File <|endoftext|>
<|endoftext|> english: find directories  that have been modified in the last seven days
bash: find Path -mtime -Timespan -type d <|endoftext|>
<|endoftext|> english: Search for files specifying the minimum depth of the search
bash: find Path -mindepth Quantity -name Regex <|endoftext|>
<|endoftext|> english: Find all files named 'text.txt' under current directory tree and display their contents
bash: find Path -name Regex -print -exec cat {} \; <|endoftext|>
<|endoftext|> english: Ping hostname, grep for 192.168.11 and print the IP from the output
bash: ping -c Quantity Regex | grep Regex | grep Regex | awk Program | sed Program <|endoftext|>
<|endoftext|> english: remove all subdirectories named "CVS" under current dir
bash: find Path -type d -name Regex -exec rm -r {} \; <|endoftext|>
<|endoftext|> english: Print a count of each unique line in "ip_addresses"
bash: sort File | uniq -c <|endoftext|>
<|endoftext|> english: list all *.txt files in the user's home directory.
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Gets IP addresses of all active network interfaces and saves to 'ip' variable.
bash: ifconfig | grep -o -P Regex <|endoftext|>
<|endoftext|> english: Finds out what groups a current user has.
bash: groups <|endoftext|>
<|endoftext|> english: Compress every file in the current directory tree that matches "*cache.html" and keep the original file
bash: find Path -type f -name Regex -exec gzip -k {} \; <|endoftext|>
<|endoftext|> english: find the type of all the regular/normal files in the current folder
bash: find Path -type f -exec file {} \; <|endoftext|>
<|endoftext|> english: Prints information about user $euids currently on machine and its processes, without printing header.
bash: w -h Regex <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory tree whose names start with '(test)' followed by two digits and end with '.txt' extension
bash: find Path -regex Regex <|endoftext|>
<|endoftext|> english: Disable wildcard expansion and name globbing
bash: set -f <|endoftext|>
<|endoftext|> english: Delete all files under root whose status were changed more than 30 minutes ago
bash: find Path -type -f -cmin +Quantity -delete <|endoftext|>
<|endoftext|> english: Create an empty file with a carriage return character in its name.
bash: touch File <|endoftext|>
<|endoftext|> english: Find all files in the current directory tree whose names begin with '-'
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Format the time string @133986838 according to the default time format and save it to variable 'VARIABLENAME'
bash: date -d Regex <|endoftext|>
<|endoftext|> english: Create the directory '.npm-global' in the user's home directory(~).
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: Print the paths of the directories from the paths expanded by the glob pattern /path/to/directory/*
bash: find Path -maxdepth Quantity -type d <|endoftext|>
<|endoftext|> english: Copy directory hierarchy from "$sourceDir" to "$targetDir"
bash: find Path -type d | sed -e Program | xargs -I {} mkdir -p {} <|endoftext|>
<|endoftext|> english: Print file system disk space usage in human readable format of the root filesystem
bash: df -h File <|endoftext|>
<|endoftext|> english: Print the current working directory without a trailing newline
bash: echo -n $( pwd ) <|endoftext|>
<|endoftext|> english: find all the files that have the word "fstab" in their name in a folder
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Search the files from the current directory tree for "foo"
bash: find Path -exec grep -l Regex {} + <|endoftext|>
<|endoftext|> english: Sort file pointed by variable $filename, removing duplicate entries but ignoring the last N characters of each line.
bash: rev File | sort | uniq -f Quantity | rev <|endoftext|>
<|endoftext|> english: search for the directory "mysql" in the /etc folder
bash: find Path -name Regex -type d <|endoftext|>
<|endoftext|> english: Delete files under $LOCATION that match $REQUIRED_FILES in their names and were modified more than 360 minutes ago
bash: find Path -name Regex -type f -mmin +Quantity -delete <|endoftext|>
<|endoftext|> english: Copy the owner and group of "oldfile" to "newfile"
bash: chown --reference File Regex <|endoftext|>
<|endoftext|> english: Search for files in the current user's home directory and below for files that have not been accessed for more than 100 days and ask the user for permission to delete each file, one by one.
bash: find Path -atime +Timespan -exec rm -i {} \; <|endoftext|>
<|endoftext|> english: Print the ping time number only of a single request to "8.8.8.8"
bash: ping -c Quantity Regex | awk Program | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: Join data in file1 containing one number per line with data in file2 containing a number and other information per line, keeping the same order as it is found in file1.
bash: join -1 Regex -2 Regex -a Quantity <( cat -n File | sort -k Number ) <( sort File ) | sort -k Number | cut --complement -d Regex -f Number <|endoftext|>
<|endoftext|> english: Print and recursively remove the alphabetically last directory in the current directory
bash: find Path -mindepth Quantity -maxdepth Quantity -type d | cut -c Number | sort -k Number | tail -n Quantity | xargs -r -I {} echo Regex Regex {} <|endoftext|>
<|endoftext|> english: Recursively removes all files like '*.r*' in current folder and removes folders with such files if they become empty.
bash: find Path -type f -name Regex -delete -printf "%h\0" | xargs -0 -I {} rmdir {} <|endoftext|>
<|endoftext|> english: search for the folder .dummy and remove it from the folder "Test folder"
bash: find Path -type d -name Regex -delete <|endoftext|>
<|endoftext|> english: Print every three lines of "file" as a comma separated line
bash: paste -s -d Regex File <|endoftext|>
<|endoftext|> english: Recursively change ownership of "/usr/local/lib" to the current user
bash: chown -R $( whoami ) File <|endoftext|>
<|endoftext|> english: Search the current directory up to depth level 2 for files and directories
bash: find Path -maxdepth Quantity <|endoftext|>
<|endoftext|> english: Find the largest files in a particular location
bash: find Path -type f -exec du -S -h {} + | sort -r -h | head -n Quantity <|endoftext|>
<|endoftext|> english: Calculate md5 checksum of $line and save to variable 'md5'
bash: $( echo Regex | md5sum ) <|endoftext|>
<|endoftext|> english: Count the number of unique file extensions in the current directory tree
bash: find Path -type f | sed -e Program | sed -e Program | sort | uniq -c | sort -r -n <|endoftext|>
<|endoftext|> english: Find all *.txt files that reside under and below /home/wsuNID/
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Search the home directory tree for all .txt files
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find regular files named core under /tmp and delete them
bash: find Path -name Regex -type f -print | xargs -I {} rm -f {} <|endoftext|>
<|endoftext|> english: Prints total number of lines of all *.c files in a current folder and subfolders.
bash: find Path -name Regex -print0 | xargs -0 -I {} wc -l {} | grep -v Regex | awk Program <|endoftext|>
<|endoftext|> english: Change permissions to 755 recursively only for directories
bash: find Path -type d -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Archive all ".txt" files in the current directory to "/path/to/dest" keeping partially transferred files
bash: rsync -a -P --include Regex --include Regex --exclude Regex File File <|endoftext|>
<|endoftext|> english: Execute `echo' for each file found
bash: find Path | xargs -n Quantity -I {} echo {} <|endoftext|>
<|endoftext|> english: Find all 400 permission files under /data directory
bash: find Path -type f -perm Permission <|endoftext|>
<|endoftext|> english: Receive input and print it to terminal
bash: cat <|endoftext|>
<|endoftext|> english: Print pathnames of all files in the current directory and below skipping directories named SCCS and files in them
bash: find Path -name Regex -prune -or -print <|endoftext|>
<|endoftext|> english: Print current UTC date in ISO format with precision to seconds
bash: date -u -I seconds <|endoftext|>
<|endoftext|> english: search the word "MySearchStr" in all the regular/normal files in the current folder and display the line number and the file name
bash: find Path -type f -print0 | xargs -0 -e Regex -n Quantity -e Regex <|endoftext|>
<|endoftext|> english: force remove all the directories with the name logs in the folder /var/www
bash: find Path -type d -mtime Timespan -name Regex -exec rm -f -r {} \; <|endoftext|>
<|endoftext|> english: Prints string "0 1 * * * /root/test.sh" to the terminal, and append it to file '/var/spool/cron/root'
bash: echo Regex | tee -a File <|endoftext|>
<|endoftext|> english: list all CSS files (and directories ending with “.css”) under the current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Use ANSI escape codes to make "World" bold from input "Hello World!"
bash: echo Regex | sed Program <|endoftext|>
<|endoftext|> english: Find all files/directories named 'FindCommandExamples.txt' that belong to the user 'root' in the entire filesystem
bash: find Path -user Regex -name Regex <|endoftext|>
<|endoftext|> english: Find all symbolic links containing 'javaplugin' in their names under '/usr' directory tree
bash: find Path -lname Regex <|endoftext|>
<|endoftext|> english: display all the files in the entire file system
bash: find Path -type f -exec echo {} \; <|endoftext|>
<|endoftext|> english: Go to previous working directory.
bash: cd Directory <|endoftext|>
<|endoftext|> english: Creates temporary file and saves path to it in 'content_dir2' variable.
bash: $( mktemp ) <|endoftext|>
<|endoftext|> english: Display only mimetype of myfile.txt, without the filename.
bash: file -b -i File <|endoftext|>
<|endoftext|> english: Copy a whole directory tree skipping files residing on other files systems to destination_dir
bash: find Path -mount -depth -print | cpio -p -d -m Regex <|endoftext|>
<|endoftext|> english: Remove junk files modified more than 31 days ago recursively
bash: find Path -type f -mtime +Timespan -print0 | xargs -0 -r -I {} rm -f {} <|endoftext|>
<|endoftext|> english: display the three smallest files by size in a folder.
bash: find Path -type f -exec ls -s {} + | sort -n | head - Quantity <|endoftext|>
<|endoftext|> english: Print the last 1000 lines of all files matching "/var/spool/cron/*"
bash: tail -n Quantity File <|endoftext|>
<|endoftext|> english: Create a symbolic link named "/usr/bin/my-editor" to "/usr/share/my-editor/my-editor-executable" and attemp to hard link directories
bash: ln -s -F File Regex <|endoftext|>
<|endoftext|> english: Create hard links of all files and directories matching "test/icecream/cupcake/*" or "test/mtndew/livewire/*" in "test-keep" preserving directory hierarchy
bash: find Path -path Regex -or -path Regex | cpio -p -a -d -l -u -v Regex <|endoftext|>
<|endoftext|> english: Execute the 'echo' command on each file from the current directory tree individually
bash: find Path -exec echo {} \; <|endoftext|>
<|endoftext|> english: Send a single ping request with a TTL of 1 to "192.168.1.1"
bash: ping -c Quantity -t Timespan Regex <|endoftext|>
<|endoftext|> english: Display the entire file system in a tree-like format
bash: tree Directory <|endoftext|>
<|endoftext|> english: Find directories and regular files containing `blah' in their names modified less than 2 days ago, case insensitive
bash: find Path -iname Regex \( -type d -or -type f \) -mtime -Timespan <|endoftext|>
<|endoftext|> english: Search the current directory recursively for the largest files
bash: find Path -type f -printf '%20s %p\n' | sort -n | cut -b Number | tr Regex Regex | xargs -0 -I {} ls -l -a -S -r {} <|endoftext|>
<|endoftext|> english: Recursively search for all regular files below directory "dir1" in currentd directory, and output the name of each, without any containing directories.
bash: find Path -type f -exec basename {} \; <|endoftext|>
<|endoftext|> english: Find all php files in a directory
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: Removes resursively all files and folders named "Thumbs.db", ignoring case distincts.
bash: find Path -iname Regex -print0 | xargs -0 -I {} rm -r -f {} <|endoftext|>
<|endoftext|> english: Copy "fileName.txt" to all directories listed in "allFolders.txt" - names may not contain spaces.
bash: cat File | xargs -n Quantity -I {} cp File {} <|endoftext|>
<|endoftext|> english: display all the files in the current folder along with the change time and display file names of the last 10 changed files
bash: find Path -type f -printf "%C@ %p\n" | sort -r -n | head -n Quantity <|endoftext|>
<|endoftext|> english: Follows symbolic link $BASH_SOURCE, and prints path to its target.
bash: $( dirname $( readlink -f File ) ) <|endoftext|>
<|endoftext|> english: Find all empty files under /tmp
bash: find Path -type f -empty <|endoftext|>
<|endoftext|> english: forcibly and verbosely create symbolic links in directory "~/Library/LaunchAgents" to all files located in /usr/local/opt/mongodb/ and that have filename extension ".plist"
bash: ln -s -f -v File Regex <|endoftext|>
<|endoftext|> english: Get a list of directories owned by group ID 100
bash: find Path -type d -gid Regex <|endoftext|>
<|endoftext|> english: Search the current directory recursively for regular files last modified more than 2 days ago
bash: find Path Path -f -mtime +Timespan <|endoftext|>
<|endoftext|> english: Make directory "TestProject"
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: change user and group of the file bin to user and group root:wheel
bash: chown Regex File <|endoftext|>
<|endoftext|> english: Create a symbolic link in target directory "~/newlinks" to "$source"
bash: ln -s File -t Directory <|endoftext|>
<|endoftext|> english: Find all *bar files/directories under current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Creates temporary file in a TMPDIR folder with name like tmp.XXXXXXXXXX.
bash: mktemp <|endoftext|>
<|endoftext|> english: Count the number of unique duplicate lines in "file1" and "file2" combined
bash: sort File File | uniq -d | wc -l <|endoftext|>
<|endoftext|> english: Split "abc.txt" into files with at most 1500000000 bytes each and use prefix "abc"
bash: split --bytes Size File Regex <|endoftext|>
<|endoftext|> english: Find all 2*.data files/directories under jcho directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all files that are set user ID to root
bash: find Path -user Regex -perm -Permission -print <|endoftext|>
<|endoftext|> english: File 'mydatafile' has a number on each line, display the sum of these numbers rounded to lowest integer.
bash: awk Program Program <|endoftext|>
<|endoftext|> english: Search for 'example' in all regular files under current directory tree and also print the filenames
bash: find Path -type f -exec grep Regex {} \; -print <|endoftext|>
<|endoftext|> english: Delete all files/directories named 'file' under current directory tree
bash: find Path -name Regex -delete <|endoftext|>
<|endoftext|> english: Search the current directory recursively for regular files last accessed less than 2 minutes ago
bash: find Path Path -f -amin -Quantity <|endoftext|>
<|endoftext|> english: Delete all __temp__* directories under maximum 1 level down the current directory tree
bash: find Path -maxdepth Quantity -type d -name Regex -print0 | xargs -0 -I {} rm -r -f {} <|endoftext|>
<|endoftext|> english: Change the ownership to eva for all files/directories that belong to the user 'george' in the entire file system without traversing to other devices/partitions
bash: find -x Path -user Regex -print0 | xargs -0 -I {} chown Regex {} <|endoftext|>
<|endoftext|> english: Find all directories named "0" in the current directory tree and create a single tar archive of their RS* subdirectories
bash: find Path -type d -name Regex -execdir tar -c -v -f File File \; <|endoftext|>
<|endoftext|> english: Save all directories under the current directory as a comma separated list in variable "FOLDERS"
bash: find Path -type d | paste -d Regex -s <|endoftext|>
<|endoftext|> english: Change permissions of "/usr/bin/wget" to 777
bash: chmod Permission File <|endoftext|>
<|endoftext|> english: Add newline before all 2nd and consequent occurrences of '3d3d' in file 'temp' and write each line from the output to files with prefix 'temp' and numeric suffixes
bash: sed Program File | split -d -l Quantity File Regex <|endoftext|>
<|endoftext|> english: Append ".txt" to all filenames in the current directory tree
bash: find Path -type f | xargs -I {} mv {} File <|endoftext|>
<|endoftext|> english: Find files with 002 permission in entire file system with the null character as the delimiter
bash: find Path -type f -perm -Permission -print0 <|endoftext|>
<|endoftext|> english: Find all files/directories that start with 'screen' (case insensitive) in their names under user's home directory tree and show them by paging through one screenful at a time
bash: find Path -iname Regex | more <|endoftext|>
<|endoftext|> english: Recursively finds strings with"text string to search” in files under 'directory-path', regarding provided options '[option]'.
bash: grep Regex File File <|endoftext|>
<|endoftext|> english: display a long listing of all the files in the current folder that have been accessed in today from the start of the day
bash: find Path -daystart -atime Timespan -ls <|endoftext|>
<|endoftext|> english: Finds if environment variable like 'DUALCASE' exists in environment.
bash: env | grep Regex <|endoftext|>
<|endoftext|> english: Find all regular files in the current directory tree that match pattern 'btree*.c'
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: Change permissions to 644 of multiple regular files with permissions 755
bash: find Path -type f -perm Permission -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Search for "Stock" in all *.java files from the current directory tree
bash: find Path -name Regex | xargs -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: search for the file job.hostory in the folder "/data/Spoolln"
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Grab a gzipped text file from the web and display its decompressed content, interactively paging through the output.
bash: curl Regex Regex | gunzip Regex | less <|endoftext|>
<|endoftext|> english: download contents of a website "http://example.com/"
bash: curl Regex <|endoftext|>
<|endoftext|> english: remove all the core files in the temp file after user confirmation
bash: find Path -name Regex -type f -print0 | xargs -0 -I {} rm -i {} <|endoftext|>
<|endoftext|> english: Search the /mnt/raid/upload directory tree for files that have been modified within the last 7 days
bash: find Path -mtime -Timespan -print <|endoftext|>
<|endoftext|> english: display all the configuration files in the current folder which are in the current tree structure
bash: find Path -path Regex <|endoftext|>
<|endoftext|> english: Recursively change the owner and group of "subdir1" to "user1"
bash: chown Regex -R File <|endoftext|>
<|endoftext|> english: Prints number of files with extension "${EXTENSION}" in the "${SEARCHPATH}" directory.
bash: echo Regex $( ls -1 File | wc -l ) <|endoftext|>
<|endoftext|> english: display all the header files  and cpp files in the current folder
bash: find Path -name Regex -print -or -name Regex -print <|endoftext|>
<|endoftext|> english: Find all executable files under current directory and reverse sort them
bash: find Path -perm -Permission -type f | sort -r <|endoftext|>
<|endoftext|> english: Prints long listing of directories "./my dir" and "./anotherdir" sorted from oldest to newest, with appended indicators.
bash: ls -F -l -t -r File File <|endoftext|>
<|endoftext|> english: Search /usr/local for subdirectories whose names end with a number 0-9
bash: find Path -maxdepth Quantity -type d -name Regex <|endoftext|>
<|endoftext|> english: Move all files and directories in the current directory to "/foo"
bash: mv $( ls ) File <|endoftext|>
<|endoftext|> english: renames all ".htm" files to ".html" files
bash: find Path -name Regex -exec mv {} File \; <|endoftext|>
<|endoftext|> english: Find all files/directories under '/usr/share/doc' directory tree that contain 'readme' (case insensitive) at the beginning of their names
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: Removes resursively all files and folders named ".DS_Store".
bash: find Path -name Regex -print0 | xargs -0 -I {} rm -r -f {} <|endoftext|>
<|endoftext|> english: Delete all .svn files/directories under current directory
bash: find Path -name Regex | xargs -I {} rm -f -r {} <|endoftext|>
<|endoftext|> english: find all the png files in the current folder which are present in the pattern list search .txt
bash: find Path -name Regex | grep -f File <|endoftext|>
<|endoftext|> english: Find directories in the current directory tree that were modified within the last 24 hours and move them to /path/to/target-dir
bash: find Path -type d -mtime Timespan -exec mv {} File \; <|endoftext|>
<|endoftext|> english: List all files/directories under /data1/Marcel with their file information which are greater than 524288 bytes and were modified or accessed more than 1 year ago
bash: find Path -size +Size \( -mtime +Timespan -or -atime +Timespan \) -ls -exec file {} \; <|endoftext|>
<|endoftext|> english: Creates temporary file and saves path to it in 'content_dir1' variable.
bash: $( mktemp ) <|endoftext|>
<|endoftext|> english: display long listing of all the symbolic links in the current folder
bash: find Path -type l -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: Find all thumb.png files in the temps/ directory tree
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: list regular file which file name end with 'cache' 'xml' or 'html' in current directory
bash: find Path -type f \( -name Regex -or -name Regex -or -name Regex \) <|endoftext|>
<|endoftext|> english: Search for all files with either "sitesearch" or "demo" in their path names
bash: find Path -ipath Regex -ipath Regex <|endoftext|>
<|endoftext|> english: Find all files residing in /home/dm/Video or below that were last changed at least 10 days ago
bash: find Path -mtime +Timespan <|endoftext|>
<|endoftext|> english: Locate all files "needle.txt"
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Add prefix like number and "^M${LOGFILE}> " to every non-blank line received on standard input
bash: nl -s Regex <|endoftext|>
<|endoftext|> english: Find files in the current directory recursively that are not readable by all
bash: find Path -type f ! -perm -Permission <|endoftext|>
<|endoftext|> english: Find files modified between 6 and 9 minutes ago
bash: find Path -mmin +Quantity -mmin -Quantity <|endoftext|>
<|endoftext|> english: find all the directories in the current folder excluding search in the sub directories and create these directories in another path
bash: find Path -maxdepth Quantity -type d | xargs -I {} mkdir Directory <|endoftext|>
<|endoftext|> english: List all files/directories under current directory with 'FooBar' in their names ensuring white space safety
bash: find Path -name Regex -print0 | xargs -0 <|endoftext|>
<|endoftext|> english: Find all .* files excluding list_files (case insensitive) under current directory
bash: find Path -iname Regex ! -iname Regex <|endoftext|>
<|endoftext|> english: Write "127.0.0.1 ad.doubleclick.net" to the console and append to "/etc/hosts" as root
bash: echo Regex Regex | tee -a File <|endoftext|>
<|endoftext|> english: Fetch a script from the web and interpert (run) it in the current shell, without writing the script to disk.
bash: source <( wget -q -O File Regex ) <|endoftext|>
<|endoftext|> english: find the file with inode $inum under the current directory and delete it
bash: find Path -inum Quantity -exec rm {} \; <|endoftext|>
<|endoftext|> english: Find files in entire file system that are writable by group or other
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: find the count of text files that are present in the current working directory.
bash: find Path -maxdepth Quantity -name Regex -print0 | grep -c -z Regex <|endoftext|>
<|endoftext|> english: Find all *.java files under current directory containing the string 'String'
bash: find Path -name Regex -exec grep Regex {} \; <|endoftext|>
<|endoftext|> english: Copy "/Users/username/path/on/machine/" to "username@server.ip.address.here:/home/username/path/on/server/" and convert encoding from UTF-8-MAC to UTF-8
bash: rsync --iconv UTF-8-MAC,UTF-8 File File <|endoftext|>
<|endoftext|> english: Find all files/directories named 'foo.rb' under current directory tree
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory tree that contain 'pattern' in their names
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Allow anyone to run command "Xvfb" as the owner of "Xvfb"
bash: chmod Permission $( which Regex ) <|endoftext|>
<|endoftext|> english: Find files and directories modified within the last 7 days
bash: find Path -mtime -Timespan <|endoftext|>
<|endoftext|> english: Move "file1", "file2", "..." to "target" directory
bash: mv -t Directory File File File <|endoftext|>
<|endoftext|> english: Print a list of unique users who are logged in
bash: who | cut -d Regex -f Number | sort | uniq <|endoftext|>
<|endoftext|> english: Display the sizes and filepaths of all files/directories with '.undo' extension under current directory tree
bash: find Path -name Regex -print0 | du -h -c --files0-from File <|endoftext|>
<|endoftext|> english: Find mysong.ogg anywhere under the home directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Move all files and directories in the current directory to "$TARGET" excluding files matching "$EXCLUDE"
bash: ls -1 | grep -v Regex | xargs -I {} mv {} File <|endoftext|>
<|endoftext|> english: Display a list of files with sizes in decreasing order of size of all the regular files under '/your/dir' directory tree that are bigger than 5 MB in size
bash: find Path -type f -size +Size -print0 | xargs -0 -I {} ls -1 -S -s -h {} <|endoftext|>
<|endoftext|> english: Search the current directory tree for files and directories whose names do not end in ".exe" and ".dll"
bash: find Path ! \( -name Regex -or -name Regex \) <|endoftext|>
<|endoftext|> english: Print the sorted unique column of usernames of users who are currently logged in without the header
bash: finger | tail -n +Quantity | awk Program | sort | uniq <|endoftext|>
<|endoftext|> english: Create a compressed archive from "www" and split the contents into files of at most 1073741824 bytes and use prefix "www-backup.tar."
bash: tar -c -z -f File File | split -b Size File Regex <|endoftext|>
<|endoftext|> english: Find all regular files under current directory tree and replace all '1.2.3.4' with '5.6.7.8' in these files modiying the files in-place
bash: find Path -type f -exec sed -i Program {} \; <|endoftext|>
<|endoftext|> english: display all the files in the current folder
bash: find Path <|endoftext|>
<|endoftext|> english: Search the *.txt files from the current directory tree for "string"
bash: find Path -name Regex -print0 | xargs -0 -I {} grep -E Regex {} <|endoftext|>
<|endoftext|> english: Delete all .svn files/directories under current directory
bash: find Path -name Regex -exec rm -r -f {} \; <|endoftext|>
<|endoftext|> english: Find all files under ${searchpath} that match the regex ${string1}.*${string2}.*${string3}  in their contents where ${string1} etc.. will be expanded
bash: find Path -type f -print0 | xargs -0 -I {} grep -l -E Regex {} <|endoftext|>
<|endoftext|> english: Find all directories name nasa in the current directory and below.
bash: find Path -name Regex -type d <|endoftext|>
<|endoftext|> english: Print the list of files modified within a fortnight ago removing the leading ./ from the file names
bash: find Path -mtime -Timespan | sed -e Program <|endoftext|>
<|endoftext|> english: Set 644 permission to all regular files under current directory
bash: find Path -type f -print0 | xargs -0 -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: Make a copy of the entire contents of SRCFOLDER called "DESTFOLDER", if DESTFOLDER exists, the copy will be placed within it.
bash: cp -R File File <|endoftext|>
<|endoftext|> english: Delete all .svn files/directories under current directory
bash: find Path -name Regex -exec rm -r -f {} + <|endoftext|>
<|endoftext|> english: Setup a local SSH tunnel from port 1234 to "remote2" port 22 via connection to "remote1" as "user1" on port 45678
bash: ssh -L Regex -p Regex Regex <|endoftext|>
<|endoftext|> english: Search the current directory tree for regular files whose names match pattern $x
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: Find all files on your system that are world writable
bash: find Path -wholename Regex -prune -or -type f -perm -Permission -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: Save first one of space separated parts of each line in $LOCKFILE file to the 'CURRENT_PID_FROM_LOCKFILE' variable
bash: cat File | cut -f Number -d Regex <|endoftext|>
<|endoftext|> english: Locate OGG files under the home directory smaller than 100 megabytes
bash: find Path -iname Regex -type f -size -Size <|endoftext|>
<|endoftext|> english: force delete all the regular/normal files in the current folder
bash: find Path -type f -exec rm -f -v {} \; <|endoftext|>
<|endoftext|> english: concatenates file1.txt, file2.txt, and file3.txt with the filenames printed at the beginning of file contents
bash: head -n Quantity File File File <|endoftext|>
<|endoftext|> english: Find all directories under maximum 1 level down the current directory and set their permission to 700 recursively
bash: find Path -maxdepth Quantity -type d -exec chmod -R Permission {} \; <|endoftext|>
<|endoftext|> english: Find files and directories with group id 1003
bash: find Path -gid Regex <|endoftext|>
<|endoftext|> english: Search for filenames matching "android" in the current directory and number the output
bash: ls | grep Regex | nl <|endoftext|>
<|endoftext|> english: Search files "file-containing-can't" in the current directory tree for the string "can't"
bash: find Path -name Regex -exec grep Regex {} \; -print <|endoftext|>
<|endoftext|> english: Print a sorted list of directories from the ~/Music tree containing files whose names begin with "cover."
bash: find Path -iname Regex -printf '%h\n' | sort -u <|endoftext|>
<|endoftext|> english: Print yesterday's date as yyy:mm:dd
bash: date +%Y:%m:%d -d Regex <|endoftext|>
<|endoftext|> english: Search everywhere for a file called `httpd.conf' that is newer than /etc/apache-perl/httpd.conf
bash: find Path -name Regex -newer File <|endoftext|>
<|endoftext|> english: Search for .bam files anywhere in the current directory recursively
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find string "STRING" in files residing in the current directory tree, case insensitive
bash: find Path -type f -print | xargs -I {} grep -n -i Regex {} <|endoftext|>
<|endoftext|> english: display all files in the current folder which end with extension "myfile" followed by two digits
bash: find Path -regex Regex <|endoftext|>
<|endoftext|> english: display long listing of all the text files in the current folder (plus at the end executes quickly by sending bulk data as input to the command in exec)
bash: find Path -name Regex -exec ls -l -a {} + <|endoftext|>
<|endoftext|> english: display all text files in a folder
bash: find Path -type f -iname Regex <|endoftext|>
<|endoftext|> english: Move all regular files under current directory to ./newdir
bash: find Path -type f -print | xargs -i -I {} mv -f {} File {} <|endoftext|>
<|endoftext|> english: Change directory to "/path/to/pdf"
bash: cd Directory <|endoftext|>
<|endoftext|> english: Unset the executable bit of all regular files from directory trees arch, etc, lib, module, usr, xpic
bash: find Path Path Path Path Path Path -type f | xargs -I {} chmod -Permission {} <|endoftext|>
<|endoftext|> english: List directories under current directory
bash: find Path -type d <|endoftext|>
<|endoftext|> english: Find recursively all regular files in the current directory tree not ending in .dll or .exe
bash: find Path -type f | grep -v -P Regex <|endoftext|>
<|endoftext|> english: find all files in the current folder that are modified exactly 2 minutes ago
bash: find Path -mmin Quantity -print <|endoftext|>
<|endoftext|> english: prints the last occurrence of text between two tags
bash: tac File | sed -n Program <|endoftext|>
<|endoftext|> english: Find all files with '.conf' extension under '/etc' directory going into at most 2 level deep and show the last 10 of them
bash: find Path -maxdepth Quantity -name Regex | tail <|endoftext|>
<|endoftext|> english: Mount the "vboxsf" filesystem "myFileName" on "~/destination"
bash: mount -t vboxsf Regex Regex <|endoftext|>
<|endoftext|> english: Search all files in the current directory tree whose names end in "1" for string "1"
bash: find Path -name Regex -exec grep Regex {} + <|endoftext|>
<|endoftext|> english: search for all the regular/normal files  in the /etc folder which have been modified in the last 24 hours
bash: find Path -type f -mtime -Timespan <|endoftext|>
<|endoftext|> english: Removes first and last parts of path 'test/90_2a5/Windows' and prints the result.
bash: echo Regex | xargs -I {} dirname {} | xargs -I {} basename {} <|endoftext|>
<|endoftext|> english: create directory new_dir
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: Report root file system disk usage human-readable.
bash: df -h File <|endoftext|>
<|endoftext|> english: Find all PHP files under current directory
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: Count the number of lines in "/dir/file.txt"
bash: cat File | wc -l <|endoftext|>
<|endoftext|> english: display all the files in the current folder which have are bigger than 1KB
bash: find Path -size +Size -print <|endoftext|>
<|endoftext|> english: Make directories "$@" verbosely and replace "mkdir: created directory " with "jar-jar: yea, weesa gotta " in the output
bash: mkdir -v Directory | sed Program <|endoftext|>
<|endoftext|> english: Find all read only files in  /home directory
bash: find Path -type f -perm Permission <|endoftext|>
<|endoftext|> english: test if the 2nd column in file A is in the reverse order of the second column of file B
bash: diff --brief <( awk Program Program ) <( tac File | awk Program ) <|endoftext|>
<|endoftext|> english: List unique series of 3 characters in file "$1" prefixed by the number of occurrences and sorted from most frequent to least frequent
bash: fold -w Quantity File | sort | uniq -c | sort -k Number -k Number <|endoftext|>
<|endoftext|> english: find all the files in the home folder which have not been modified in the last 1 year.
bash: find Path -mtime +Timespan <|endoftext|>
<|endoftext|> english: Find all files on smbfs mounts and print its information and file type
bash: find Path $( mount -t smbfs | awk Program ) -mount -type f -ls -execdir file {} \; <|endoftext|>
<|endoftext|> english: Find all directories named "D" in the current directory tree
bash: find Path -type d -name Regex <|endoftext|>
<|endoftext|> english: Recursively copies '../include/gtest' directory to '~/usr/gtest/include/'.
bash: cp -r File File <|endoftext|>
<|endoftext|> english: Search the current directory tree for files whose names begin with 'my'
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: display all files in the current folder which do not belong to the user john
bash: find Path ! -user Regex <|endoftext|>
<|endoftext|> english: Create a table containing all information from S43.txt and S44.txt, merging lines where the first field of both files matches, and keeping the line that starts with "Gene" at the start of the file.
bash: join -a Quantity -a Quantity <( sed Program File | sort ) <( sed Program File | sort ) | column -t | sed Program <|endoftext|>
<|endoftext|> english: Set permissions of all directories under "/opt/lampp/htdocs" to 711
bash: find Path -type d -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: List the z* links in the /usr/bin directory with inode information and the file to which it points to
bash: find Path -type l -name Regex -ls <|endoftext|>
<|endoftext|> english: display the number of lines in all the header files in the current folder
bash: find Path -name Regex -print | xargs -I {} wc -l {} <|endoftext|>
<|endoftext|> english: find the type & description of all the regular/normal files in the home folder
bash: find Path -type f -print0 | xargs -0 -I {} file {} <|endoftext|>
<|endoftext|> english: Print a frequency count of column two for every file in the current directory
bash: awk -F Regex Program Program | sort | uniq -c | sort -n -r <|endoftext|>
<|endoftext|> english: Opens gawk info manual and goes to command-line options node.
bash: info -O Regex <|endoftext|>
<|endoftext|> english: Create a symbolic lnk named "$1/link" to "$dir"
bash: ln -s File Regex <|endoftext|>
<|endoftext|> english: Count the number of regular files in directory tree ${DIRECTORY} that contain a vowel in their names
bash: find Path -type f -print | sed -e Program | grep Regex | wc -l <|endoftext|>
<|endoftext|> english: display a long listing of all the files in the current folder in sorted order, which are bigger than 10KB
bash: find Path -size +Size -exec ls -l -s {} + | sort -n -r <|endoftext|>
<|endoftext|> english: Prints the absolute directory path of the current script preceded by the string "dirname/readlink: "
bash: echo $( dirname $( readlink -f File ) ) <|endoftext|>
<|endoftext|> english: display all the files in the current folder which have not been modified in the last 7 days and which are not in the list "file.lst"
bash: find Path -mtime +Timespan -print | grep -F -x -v -f Regex <|endoftext|>
<|endoftext|> english: Read a single character from standard input with delimeter '' and no echo
bash: read -d Regex -s -n Quantity <|endoftext|>
<|endoftext|> english: Get the disk space used by all *.txt (case insensitive) files under /home/d directory
bash: find Path -type f -name Regex -printf "%s\n" | awk Program <|endoftext|>
<|endoftext|> english: ask user confirmation and delete all the files in the directory /mydir which have not been accessed in the last 100*24 hours
bash: find Path -atime +Timespan -ok rm {} \; <|endoftext|>
<|endoftext|> english: Print true directory name of the current directory
bash: readlink $( pwd ) <|endoftext|>
<|endoftext|> english: Search the current directory tree for an html file having the text 'Web sites' in it
bash: find Path -type f -iname Regex -exec grep -s Regex {} \; <|endoftext|>
<|endoftext|> english: Find regular files in the current directory that are writable by their owner
bash: find Path -maxdepth Quantity -type f -perm Permission <|endoftext|>
<|endoftext|> english: Print common characters in variable "$a" and "$b"
bash: comm -1 -2 <( echo Regex | awk -F Regex Program ) <( echo Regex | awk -F Regex Program ) | tr -d Regex <|endoftext|>
<|endoftext|> english: Execute 'echo -e "\033[31mHello World\033[0m"' every without color support 2 seconds
bash: watch echo -e Regex <|endoftext|>
<|endoftext|> english: Format tab delimited file "list-of-entries.txt" as a table
bash: column -t -s Regex File <|endoftext|>
<|endoftext|> english: Remove all files in and below the current directory whose names begin with "not"
bash: find Path -name Regex | xargs -d Regex -I {} rm {} <|endoftext|>
<|endoftext|> english: Show the current UTC date in '%Y-%m-%dT%k:%M:%S%z' format
bash: date -u '+%Y-%m-%dT%k:%M:%S%z' <|endoftext|>
<|endoftext|> english: Find command will display top 10 Big files from current directory .
bash: find Path -type f -exec ls -s {} \; | sort -n -r | head <|endoftext|>
<|endoftext|> english: long list al the files in the current directory which have only read permission to the group
bash: find Path -perm Permission -type f -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: Recursively removes 'classes' folder, prompting user on each deletion.
bash: rm -r File <|endoftext|>
<|endoftext|> english: Grab "variable = value" pairs from a windows style .ini file into the current shell.
bash: source <( grep Regex File | sed Program ) <|endoftext|>
<|endoftext|> english: Find all regular files undee '/usr/bin' directoryt tree that are less than 50 bytes in size
bash: find Path -type f -size -Size <|endoftext|>
<|endoftext|> english: Verbosely compresses all files on seventh and eighth depth level keeping original files in place.
bash: bzip2 -k -v File <|endoftext|>
<|endoftext|> english: Save the full path of command "~/f" to variable "foo"
bash: which Regex <|endoftext|>
<|endoftext|> english: display all the files in the current folder excluding the files with the name mmm
bash: find Path -name Regex -prune -or -print <|endoftext|>
<|endoftext|> english: Gets IP address of 'eth0' network interface.
bash: ifconfig Regex | awk Program <|endoftext|>
<|endoftext|> english: Find directories named `doc' in /usr and below
bash: find Path \( -name Regex -and -type d \) <|endoftext|>
<|endoftext|> english: Display the host's ECDSA fingerprint using the md5 hasing algorithm.
bash: ssh-keygen -l File File -f File <|endoftext|>
<|endoftext|> english: Print a space separated list of numbers from 1 to 10
bash: seq Number | xargs <|endoftext|>
<|endoftext|> english: Find files that are orphaned
bash: find Path -nouser <|endoftext|>
<|endoftext|> english: find all the html files in the current folder and rename them to .var files
bash: find Path -name Regex -print0 | xargs -0 -I {} rename Regex {} <|endoftext|>
<|endoftext|> english: Remove all tmp/*.mp3 files
bash: find Path -maxdepth Quantity -name Regex -print0 | xargs -0 -I {} rm {} <|endoftext|>
<|endoftext|> english: search for all the files in the current directory which have size greater than 10KB (approx) and less than 32KB(approx).
bash: find Path -size +Size -size -Size -print <|endoftext|>
<|endoftext|> english: Print the size for every *.ogg file found under the home directory
bash: find Path -name Regex -type f -exec du -h {} \; <|endoftext|>
<|endoftext|> english: Prints file descriptor of executed built-in 'true'.
bash: echo <( true ) <|endoftext|>
<|endoftext|> english: create directories bravo_dir and alpha_dir
bash: mkdir Directory Directory <|endoftext|>
<|endoftext|> english: Create a symbolic link named "$tmpdir/bam" to the full path of command "bam2" found in "$PATH"
bash: ln -s $( which Regex ) Regex <|endoftext|>
<|endoftext|> english: recursively change owner of the directory ~/.npm to the current user
bash: chown -R $( whoami ) File <|endoftext|>
<|endoftext|> english: display the commands to force delete all jpg files in current directory which are less than 50KB and do not search in the sub directories
bash: find Path -maxdepth Quantity -name Regex -size -Size | xargs -I {} echo Regex Regex {} <|endoftext|>
<|endoftext|> english: Show current date in "%Y-%m-%d" format
bash: date "+%Y-%m-%d" <|endoftext|>
<|endoftext|> english: display all the regular/normal files in the entire file system
bash: find Path -type f -exec echo {} \; <|endoftext|>
<|endoftext|> english: Convert "abc" to a string of hexadecimal bytes
bash: echo Regex | od -A n -v -t x1 | tr -d Regex <|endoftext|>
<|endoftext|> english: Search the `images' directory tree for regular files
bash: find Path -type f <|endoftext|>
<|endoftext|> english: find all the empty directories in the current folder and all its sub directories too
bash: find Path -depth -empty -type d <|endoftext|>
<|endoftext|> english: Exit the shell immediately if an error is encountered
bash: set -e <|endoftext|>
<|endoftext|> english: Print the files in the current directory as a list of comma separated values
bash: ls -1 | tr Regex Regex <|endoftext|>
<|endoftext|> english: List all regular files from the current directory tree that were modified less than 60 minutes ago
bash: find Path -type f -mmin -Quantity -print0 | xargs -r -0 -I {} ls -l {} <|endoftext|>
<|endoftext|> english: change user of the direct public_html to user owner and group nobody
bash: chown Regex File <|endoftext|>
<|endoftext|> english: Set permissions to 600 for regular files under var/
bash: find Path -type f -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Split "${fspec}" into 6 files with about equal number of lines each and use prefix "xyzzy."
bash: split --number Quantity File Regex <|endoftext|>
<|endoftext|> english: Counts lines in each of *.php files in a current folder and subfolders ignoring 'tests' folder and prints total count as well.
bash: find Path -name Regex -prune -or -type f -name Regex | xargs -I {} wc -l {} <|endoftext|>
<|endoftext|> english: Search for 'string-to-find' in all files under current directory tree matching the regex 'filename-regex.\*\.html' in their paths and show the matched lines along with the filenames
bash: find Path -regex Regex -exec grep -H Regex {} \; <|endoftext|>
<|endoftext|> english: Display all symlinks and their targets in the current directory
bash: find -P Path -maxdepth Quantity -type l -exec echo -n Regex \; -exec readlink {} \; <|endoftext|>
<|endoftext|> english: find all the normal/regular files in the current folder which have been modified in the last day and display a long listing of them
bash: find Path -type f -mtime -Timespan -daystart -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: remove all the pdf files in the current folder and do not delete those in the sub folders
bash: find Path -name Regex -maxdepth Quantity -print0 | xargs -0 -I {} rm {} <|endoftext|>
<|endoftext|> english: change owner of the file /home/bob to user root
bash: chown Regex File <|endoftext|>
<|endoftext|> english: Read standard input and replace any repeated characters except spaces with a single instance
bash: tr -c -s Regex <|endoftext|>
<|endoftext|> english: run ls command on files found
bash: find Path -name Regex -exec ls -l -d {} \; <|endoftext|>
<|endoftext|> english: Generates a randomly sorted list of numbers from 1 to 10.
bash: seq Number Number | sort -R | tee File | cat <( cat File ) <( echo Regex ) <( tac ) <|endoftext|>
<|endoftext|> english: Split "$FILENAME" into files with at most 20 lines each with a prefix "xyz"
bash: split -l Quantity File Regex <|endoftext|>
<|endoftext|> english: Gets IP addresses of all network interfaces.
bash: ifconfig | grep -E Regex | grep -v Regex | awk Program | cut -f Number -d Regex <|endoftext|>
<|endoftext|> english: recursively change owner of the directory testproject and all files into it to user ftpuser
bash: chown Regex File -R <|endoftext|>
<|endoftext|> english: Join comma-separated information in 4 files - files must be sorted.
bash: join -t Regex File File | join -t Regex File File | join -t Regex File File <|endoftext|>
<|endoftext|> english: Save the logical current working directory to variable "basedir"
bash: pwd -L <|endoftext|>
<|endoftext|> english: FInd files in current directory and grep text and html files - but not index.html and report things that contain the word 'elevator' in four or more lines
bash: find Path -type f -print0 | grep -E -i -a -z -Z Regex | grep -v -a -z -Z Regex | xargs -n Quantity -0 -I {} grep -c -H -i Regex {} | grep -E -v Regex <|endoftext|>
<|endoftext|> english: Find all files under /path and below executable by `group' or `other'
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: Find any files in the current directory and its sub-directories that were last accessed more than 7 days and are larger than 20480 blocks in size.
bash: find Path -atime +Timespan -size +Size -print <|endoftext|>
<|endoftext|> english: Count the number of unique lines in sorted file "a.txt" compared to sorted file "b.txt"
bash: comm -2 -3 File File | wc -l <|endoftext|>
<|endoftext|> english: Display a character dump of "oldfile"
bash: od -c File <|endoftext|>
<|endoftext|> english: Move all files in "/path/subfolder" to "/path" without clobbering any destination files
bash: find Path -maxdepth Quantity -type f -name Regex -exec mv -n {} File \; <|endoftext|>
<|endoftext|> english: display all directories in current folder excluding those that are present in .git folder
bash: find Path -iregex Regex -prune -or -type d -name Regex <|endoftext|>
<|endoftext|> english: Print a sorted list of unique directory paths in entire file system that match the pattern '<name_pattern>' in their names
bash: find Path -name Regex -type d | sort | uniq <|endoftext|>
<|endoftext|> english: List all *.txt files/directories under /etc
bash: find Path -name Regex -ls <|endoftext|>
<|endoftext|> english: Create an empty file "foo" in each directory under the current directory containing a file named "bar".
bash: find Path -name Regex -execdir touch File \; <|endoftext|>
<|endoftext|> english: replaces the last occurrence of 'a' with 'c'
bash: tac File | sed Program | tac <|endoftext|>
<|endoftext|> english: Find all directories that have been modified in the last seven days.
bash: find Path -mtime -Timespan -type d <|endoftext|>
<|endoftext|> english: Calculate the md5 sum of all files in the current directory with the filename printed first
bash: ls -p | grep -v Regex | xargs -I {} md5sum {} | awk Program <|endoftext|>
<|endoftext|> english: Find all files under ./lib/app and sort them
bash: find Path -type f | sort <|endoftext|>
<|endoftext|> english: Search the directory tree given as variable $dir for regular files
bash: find Path -type f <|endoftext|>
<|endoftext|> english: find all files ending with "js.compiled" in current folder
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: List the files from the current directory tree that contain lines matching regular expression  '^Subject:.*unique subject'
bash: find Path -type f -print | xargs -I {} grep -i -l Regex {} <|endoftext|>
<|endoftext|> english: Print all string from file 'file2.txt' matching pattern in file 'file1.txt'
bash: grep $( cat File ) File <|endoftext|>
<|endoftext|> english: Remount "/path/to/chroot/jail/usr/bin" as read only
bash: mount -o remount,ro Regex <|endoftext|>
<|endoftext|> english: display all text files in the folder /user/directory which have been modified in today
bash: find Path -name Regex -mtime Timespan -type f <|endoftext|>
<|endoftext|> english: Delete all in the current directory tree
bash: find Path -delete <|endoftext|>
<|endoftext|> english: Find files/directories in entire file system with at least 644 permission
bash: find Path -perm -Permission <|endoftext|>
<|endoftext|> english: Move all files/directories under current directory to ~/play
bash: find Path -exec mv {} File \; <|endoftext|>
<|endoftext|> english: display all the files in the home folder except text files
bash: find Path ! -name Regex <|endoftext|>
<|endoftext|> english: Create links for all files in the current directory tree that are more than 1000 days old in "/home/user/archives"
bash: find Path -type f -mtime +Timespan -print0 | cpio -d -u -m -p -l -0 Regex <|endoftext|>
<|endoftext|> english: Print the last line of "$file1" to the console and append to "$file2"
bash: tail - Quantity File | tee -a File <|endoftext|>
<|endoftext|> english: search for a word in all the files in the current directory
bash: find Path -type f -exec grep Regex {} \; <|endoftext|>
<|endoftext|> english: Remove the line matching "pattern to match" in "./infile" and print to standard output
bash: sed Program File <|endoftext|>
<|endoftext|> english: Find all files/directories named file in minimum 4 levels down the current directory
bash: find Path -mindepth Quantity -name Regex <|endoftext|>
<|endoftext|> english: Finds all files in $LOCATION, prints file names, overwrite files with random content $TIMES times, and finally remove them.
bash: find Path -print -exec shred File -u {} \; <|endoftext|>
<|endoftext|> english: search for a function in all python files in the current folder
bash: find Path -name Regex | xargs -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: search for the file "file1" in the entire file system
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Gets domain name from dig reverse lookup.
bash: dig -x Regex | grep Regex | cut -d Regex -f Number | grep Regex | cut -f Number <|endoftext|>
<|endoftext|> english: search for the file "file" in current folder and save the output to the same file
bash: find Path -name Regex -fprint File <|endoftext|>
<|endoftext|> english: Print a listing of the `other' directory
bash: find Path -maxdepth Quantity <|endoftext|>
<|endoftext|> english: Find all sample* files/directories under current directory and print 'program {}-out {}' where {} will expand to file paths
bash: find Path -name Regex | xargs -i -I {} echo Regex Regex {} {} <|endoftext|>
<|endoftext|> english: Delete all the files found in the current directory tree whose names begin with "heapdump"
bash: find Path -name Regex | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: Search the system for files named "findcommandexamples.txt", ignoring the case
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: copy all the files with the extension ".type" from one folder to a target directory
bash: find Path -type f -name Regex | xargs -I {} cp -t Directory {} <|endoftext|>
<|endoftext|> english: Recursively change ownership of "/usr/lib/node_modules/" to the current user
bash: chown -R $( whoami ) File <|endoftext|>
<|endoftext|> english: Print unique lines in sorted file "A" when compared to sorted files "B", "C", and "D"
bash: comm -2 -3 File File | comm -2 -3 File File | comm -2 -3 File File <|endoftext|>
<|endoftext|> english: Force create a symbolc link named "softlink_name" to "source_file_or_directory_name" without dereferencing "softlink_name"
bash: ln -s -f -n File Regex <|endoftext|>
<|endoftext|> english: search for files having python in filename
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Remove all *.txt files under the given directory modified more than 5 minutes ago
bash: find Path -maxdepth Quantity -mmin +Quantity -type f -name Regex -delete <|endoftext|>
<|endoftext|> english: Find all filenames ending with .c in the current directory tree
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: display the name of all directories in the current folder and do not search in sub directories
bash: find Path -type d -maxdepth Quantity -exec basename {} \; <|endoftext|>
<|endoftext|> english: find all the files in the current folder which have been modified in the last 60 minutes, which are atleast 1 level deep and display a long listing of these files
bash: find Path -mindepth Quantity -mmin -Quantity | xargs -r -I {} ls -l -d {} <|endoftext|>
<|endoftext|> english: find in the entire file system for the file mysql
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: Just find directories and skip file names
bash: find Path -type d -name Regex -ls <|endoftext|>
<|endoftext|> english: Find all CSS files
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Gets IP address of 'eth0' network interface.
bash: ifconfig Regex | grep Regex | cut -d Regex -f Number | awk Program <|endoftext|>
<|endoftext|> english: display all the regular/normal files in the folder "/home/user/demo" which have the permission 777.
bash: find Path -type f -perm Permission -print <|endoftext|>
<|endoftext|> english: Search for "CONFIG_64BIT" in gzip compressed file "/proc/config.gz"
bash: zcat Regex | grep Regex <|endoftext|>
<|endoftext|> english: Create empty files (or update timestamps if they exist) with names matching each word in variable "correctFilePathAndName"
bash: echo -e Regex | xargs -I {} touch {} <|endoftext|>
<|endoftext|> english: list files found under the current directory ending in "txt" or ending in "html"
bash: find Path -name Regex -or -name Regex <|endoftext|>
<|endoftext|> english: display all the text and pdf files in the current folder
bash: find Path -regex Regex <|endoftext|>
<|endoftext|> english: Find all .js files in the current directory tree that do not contain a whitespace
bash: find Path -type f -name Regex \( -exec grep -q Regex {} \; -or -print \) <|endoftext|>
<|endoftext|> english: Output a CSV file as a formatted table
bash: sed Program File | tr -d Regex | column -s Regex -t <|endoftext|>
<|endoftext|> english: display all regular/normal files in temp folder and display the filename along with file size
bash: find Path -type f -printf "f %s %p\n" <|endoftext|>
<|endoftext|> english: display all the files in the folder "$ORIG_DIR"
bash: find Path <|endoftext|>
<|endoftext|> english: Recursively set all permissions under "../tools" to 777
bash: chmod -R Permission File <|endoftext|>
<|endoftext|> english: Display the 5 smallest files in the current directory and its sub-directories.
bash: find Path -type f -exec ls -s {} \; | sort -n | head - Quantity <|endoftext|>
<|endoftext|> english: Search for regular files of the grooup 'users' in the file system
bash: find Path -type f -group Regex <|endoftext|>
<|endoftext|> english: Delete all the files found in the current directory tree whose names begin with "heapdump"
bash: find Path -name Regex -exec rm {} File \; <|endoftext|>
<|endoftext|> english: Prints top-ten list of most used utilities from history.
bash: history | awk Program | sort | uniq -c | sort -r -n | head <|endoftext|>
<|endoftext|> english: Find all directories under minimum 1 level down the current directory and set their permission to 755
bash: find Path -type d -mindepth Quantity -print -exec chmod Permission File \; <|endoftext|>
<|endoftext|> english: Read a line from standard input into variable "foobar" and suppress showing user input
bash: read -s Regex <|endoftext|>
<|endoftext|> english: Request DNS record for  domain 'dragon-architect.com' with tracing and additional section, and extract third block of text, separated between two new lines.
bash: dig Regex Regex dragon-architect.com | awk Program Program <|endoftext|>
<|endoftext|> english: Evaluate the output of recursively changing the owner and group of "/data/*" to "mongodb"
bash: $( chown -R Regex File ) <|endoftext|>
<|endoftext|> english: find all the files in the current folder which have been modified in the last one day
bash: find Path -daystart -mtime -Timespan -ls <|endoftext|>
<|endoftext|> english: Change the permission to 0644 for all files under current directory
bash: find Path -type f -exec chmod Permission {} + <|endoftext|>
<|endoftext|> english: Recursively removes all files like '*.pyc' in a current folder.
bash: rm File <|endoftext|>
<|endoftext|> english: Shows status of a shell option 'dotglob'.
bash: shopt dotglob <|endoftext|>
<|endoftext|> english: find all the files in the file system which have read permission to the user and display the ten files
bash: find Path -perm Permission | head <|endoftext|>
<|endoftext|> english: Search the files residing in the current directory tree whose names contain "bills" for "put"
bash: find Path -name Regex -exec grep -H Regex {} \; <|endoftext|>
<|endoftext|> english: Set variable "fname" to the basename of path specified in variable "f", that is remove everything up to the last slash if present.
bash: basename Regex <|endoftext|>
<|endoftext|> english: List all files named "filename" from the current directory tree, ignoring directory "FOLDER1"
bash: find Path -name Regex -prune -or -name Regex -print <|endoftext|>
<|endoftext|> english: Convert all characters in "$a" to upper case and save to variable "b"
bash: echo Regex | sed Program <|endoftext|>
<|endoftext|> english: Split "/tmp/files" into files of at most 1000 lines each
bash: split File <|endoftext|>
<|endoftext|> english: delete recursively, without prompting, any files or directories under the current directory that case insensitively match the filename ".svn"
bash: find Path -iname Regex -print0 | xargs -0 -I {} rm -r -f {} <|endoftext|>
<|endoftext|> english: Prints number of days in a current month.
bash: cal $( date +"%m %Y" ) | awk Program <|endoftext|>
<|endoftext|> english: Display differences between a and b side-by-side
bash: diff -y File File <|endoftext|>
<|endoftext|> english: find all the regular/normal files in the /path folder and delete them
bash: find Path -type f -delete <|endoftext|>
<|endoftext|> english: List the largest file in long list format of all the files under the current directory
bash: find Path -type f -ls | sort -n -r -k Number | head - Quantity <|endoftext|>
<|endoftext|> english: Search in the current directory and all sub-directories except ./D and any further sub-directories also named D for the file named hi.dat
bash: find Path \( -name Regex -prune \) -or -name Regex <|endoftext|>
<|endoftext|> english: Change the owner to "user" and group to "group" of files "file ..."
bash: chown Regex File File <|endoftext|>
<|endoftext|> english: search for directories in the folder "test" which end with 5 digits using regular expressions
bash: find Path -regextype posix-egrep -type d -regex Regex <|endoftext|>
<|endoftext|> english: Find all regular files in current directory and /home/www directory
bash: find Path Path -type f <|endoftext|>
<|endoftext|> english: Recursively find files in the current directory with a modification time more than 7 days ago, save the filenames to "compressedP.list", and compress no more than 10 at a time
bash: find Path -type f -mtime +Timespan | tee File | xargs -I {} -P Quantity compress {} <|endoftext|>
<|endoftext|> english: Find recursively all regular .txt files in the current directory tree except README.txt
bash: find Path -type f -name Regex ! -name Regex -print <|endoftext|>
<|endoftext|> english: Recursively finds all '*.pdf' files in a current folder and removes them without prompting.
bash: find Path -name Regex -exec rm -f {} \; <|endoftext|>
<|endoftext|> english: find all the files that have been modified exactly 1 day ago
bash: find Path -mtime Timespan <|endoftext|>
<|endoftext|> english: display all files in current folder using regular expression
bash: find Path -regex Regex <|endoftext|>
<|endoftext|> english: Recursively change the owner and group of "~/.ssh/" to "dev_user"
bash: chown Regex -R File <|endoftext|>
<|endoftext|> english: Remove all *.mp3 files in tmp directory but not in it's subdirectories
bash: find Path -maxdepth Quantity -name Regex -maxdepth Quantity | xargs -n Quantity -I {} rm {} <|endoftext|>
<|endoftext|> english: create a backup of all the files in the current folder to the floppy and save the file list in the file /tmp/BACKUP.LOG
bash: find Path Path Path -print | tee File <|endoftext|>
<|endoftext|> english: Search for '“foobar”' in all files starting with '‘' and ending with '’' and contain '.' in their names in the entire filesystem and display only the matched files
bash: find Path -name Regex -exec grep -i -l Regex {} \; <|endoftext|>
<|endoftext|> english: Convert *.au files to *.wav files using `sox'
bash: find Path -type f -name Regex | awk Program | bash <|endoftext|>
<|endoftext|> english: Print the contents of "foo.txt" starting with line 2
bash: tail -n +Quantity File <|endoftext|>
<|endoftext|> english: Search for the case insensitive regex expanded by $2 in all files named $1 (to be expanded) under current directory
bash: find Path -name Regex -type f -exec grep -i Regex {} \; <|endoftext|>
<|endoftext|> english: Enables shell options 'extglob' and 'progcomp'
bash: shopt -s extglob progcomp <|endoftext|>
<|endoftext|> english: Find all files named "test2" in the current directory tree
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Gets all IP addresses from host network configuration and prints first one.
bash: ifconfig | grep Regex | grep -v Regex | grep -E -o Regex | head - Quantity <|endoftext|>
<|endoftext|> english: Find all hidden (regular) files under /tmp
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: Reverse the space separated words in "35 53 102 342"
bash: echo Regex Regex Regex Regex | tr Regex Regex | tac | tr Regex Regex <|endoftext|>
<|endoftext|> english: search for the regular/normal file 'myfile' in the folder /root excluding those that are present in the "work" directory
bash: find Path -name Regex -prune -or -name Regex -type f -print <|endoftext|>
<|endoftext|> english: Count the number of lines in "myfile.txt"
bash: cat File | wc -l <|endoftext|>
<|endoftext|> english: Find all the files whose name is FindCommandExamples.txt and contains both capital and small letters in / directory
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: Find all files that are exactly 50 bytes
bash: find Path -size Size <|endoftext|>
<|endoftext|> english: Find files and directories owned by xuser1 and change their ownership to user2
bash: find Path -user Regex -exec chown -R Regex {} \; <|endoftext|>
<|endoftext|> english: display all the files in the home folder that have been modified in the last 7*24 hours
bash: find Path -mtime -Timespan <|endoftext|>
<|endoftext|> english: Recursively finds all '*.pdf' files in a current folder and removes them.
bash: find Path -name Regex -exec rm {} \; <|endoftext|>
<|endoftext|> english: Search for all files with either "sitesearch" or "demo" in their path names
bash: find Path -iregex Regex -iregex Regex <|endoftext|>
<|endoftext|> english: Search for all files in the current directory recursively whose names contain "linkin", ignoring the case
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: Find all files under current directory and search for 'something' in those files
bash: find Path -print | xargs -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: Counts number of processors and saves in variable NUMCPU.
bash: grep Regex File | wc -l <|endoftext|>
<|endoftext|> english: Find all files in the current directory tree containing "foo" in their names
bash: find Path -print | grep -i Regex <|endoftext|>
<|endoftext|> english: Prints week day of a 31 day in a current month.
bash: cal | awk -v Program Program <|endoftext|>
<|endoftext|> english: Print full path of command "c++"
bash: which Regex <|endoftext|>
<|endoftext|> english: Recursively changes group ownership of everything in a '/home/user1/project/dev' folder to 'project_dev'.
bash: chgrp -R Regex File <|endoftext|>
<|endoftext|> english: Search the current directory tree for all files matching either pattern "*.rb" or pattern "*.py"
bash: find Path -name Regex -or -name Regex <|endoftext|>
<|endoftext|> english: Gets MAC address of 'eth0' network interface.
bash: ifconfig Regex | head -n Quantity | tr -s Regex | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: search for the directory starting with "ora10" in the entire file system
bash: find Path -type d -name Regex <|endoftext|>
<|endoftext|> english: find case-insentive example.com file, and whole dose not contain beta
bash: find Path -iname Regex | grep -v Regex <|endoftext|>
<|endoftext|> english: search for the word "mysql" in all the files in the current containing the word "notes" in their name. print0 is used to handle files  with newlines in their names or those which have only spaces in their names
bash: find Path -iname Regex -print0 | xargs -I {} -0 grep -i Regex {} <|endoftext|>
<|endoftext|> english: Find all empty files under a certain path
bash: find Path -type f -empty <|endoftext|>
<|endoftext|> english: Find all symbolic links containing 'vim' in their names uder '/usr/bin' directory tree
bash: find Path -name Regex -type l <|endoftext|>
<|endoftext|> english: Remove all directories called "test" from the current directory tree
bash: find Path -path Regex -type d -delete <|endoftext|>
<|endoftext|> english: Print a colon-separated list of all directories from the ~/code directory tree, except hidden ones and those below them
bash: find Path -name Regex -prune -or -type d -printf ':%p' <|endoftext|>
<|endoftext|> english: Print the list of 1st level subdirectories in /fss/fin
bash: find Path -d Path -type d -name Regex -print <|endoftext|>
<|endoftext|> english: List all regular files in and below the home directory that have been modified in the last 90 minutes
bash: find Path -type f -mmin -Quantity | xargs -I {} ls -l {} <|endoftext|>
<|endoftext|> english: List all files and directories in the /home directory tree whose names are "Trash"
bash: find Path -name Regex -exec ls -a -l {} \; <|endoftext|>
<|endoftext|> english: List all empty files in the current directory tree
bash: find Path -type f -empty <|endoftext|>
<|endoftext|> english: List all files without descending into subdirectories
bash: find Path -type f -print -or -type d -prune <|endoftext|>
<|endoftext|> english: Find all files under current directory matching the posix-egrep type regex '^.*/[a-z][^/]*$'  in their names
bash: find Path -regextype posix-egrep -regex Regex -type f <|endoftext|>
<|endoftext|> english: Locate world-writable files and directories on the system
bash: find Path -path Regex -prune -or -perm -Permission ! -type l -ls <|endoftext|>
<|endoftext|> english: Split "bigfile" into files of at most 1000 lines each with prefix "/lots/of/little/files/here"
bash: split File Regex <|endoftext|>
<|endoftext|> english: Find all files/directories starting with 'app-' and ending with '.log' in their names and have been modified in the last 5 minutes
bash: find Path -name Regex -mmin -Quantity <|endoftext|>
<|endoftext|> english: search for a word in all the .C files in the current directory
bash: find Path -name Regex -exec grep -i -r Regex {} \; <|endoftext|>
<|endoftext|> english: sleep for 500 seconds
bash: sleep Timespan <|endoftext|>
<|endoftext|> english: display all the files in the folders mydir1, mydir2 which are bigger than 2KB and have not been accessed in the last 30*24 hours
bash: find Path Path -size +Size -atime +Timespan -print <|endoftext|>
<|endoftext|> english: Remove all regular files in the current directory
bash: find Path -type f -exec rm -r -f {} \; <|endoftext|>
<|endoftext|> english: find all files beneath the current directory that begin with the letters 'Foo' and delete them.
bash: find Path -type f -name Regex -exec rm {} \; <|endoftext|>
<|endoftext|> english: find files in the current directory and sub-directories, that changed within last hour
bash: find Path -cmin -Quantity <|endoftext|>
<|endoftext|> english: Print every file's type, name, and inode
bash: find Path -printf "%y %i %prn" <|endoftext|>
<|endoftext|> english: Find all l files in the 'foo' folder but ones with name like '*Music*' to the 'bar' folder.
bash: find Path -type f ! -name Regex -exec cp {} File \; <|endoftext|>
<|endoftext|> english: Change permissions of all regular files in the ~/dir_data directory tree in accordance with mode `a-x,u+w'
bash: find Path -type f -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Find all regular files under current directory
bash: find Path -depth -type f -print <|endoftext|>
<|endoftext|> english: Replace "foo" with "bar" in all files in the current directory tree
bash: find Path | xargs -I {} sed -i Program {} <|endoftext|>
<|endoftext|> english: Pipe the output of ls into "read var" in its separate process
bash: ls | read Regex <|endoftext|>
<|endoftext|> english: search for all the files in current folder which start with "file2015-0" and move them to another folder
bash: find Path -name Regex -exec mv {} File \; <|endoftext|>
<|endoftext|> english: Print file type of the command "c++"
bash: file $( which Regex ) <|endoftext|>
<|endoftext|> english: Finds all strings with parent folder of path '$path' in 'file', and saves result in 'x' variable.
bash: grep $( dirname Regex ) File <|endoftext|>
<|endoftext|> english: Delete all files/directories named test under maximum 2 level down the current directory
bash: find Path -maxdepth Quantity -name Regex -exec rm -r -f {} \; <|endoftext|>
<|endoftext|> english: Calculate md5 sums for each files matching 'main.cpp*'
bash: md5sum File <|endoftext|>
<|endoftext|> english: display ten files in the current directory
bash: find | head <|endoftext|>
<|endoftext|> english: Find all files/directories named 'Desktop' under current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all files/directories named 'articles.jpg' under 'images' directory tree
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Print the last 10 commands in history
bash: history | tail - Quantity <|endoftext|>
<|endoftext|> english: display all the files in the entire file system which are bigger than 10MB
bash: find Path -size +Size <|endoftext|>
<|endoftext|> english: find all the perl files in the current folder, print0 is used to handle files with new lines in their names or only spaces
bash: find Path -type f -name Regex -print0 <|endoftext|>
<|endoftext|> english: search for a word in all the php files in the current folder and display the count of all matching lines.
bash: find Path -name Regex -type f -exec grep -H -n Regex {} + | wc -l <|endoftext|>
<|endoftext|> english: find all files & dircetiry in current directory which  have .tmp extension and delete them .
bash: find Path -type f -name Regex -exec rm -r -f {} \; <|endoftext|>
<|endoftext|> english: Save the absolute path of "$path" to variable "fullpath"
bash: readlink -f File <|endoftext|>
<|endoftext|> english: find all files in current folder which are bigger than 1 MB and move them to another folder
bash: find Path -size +Size -exec mv {} File + <|endoftext|>
<|endoftext|> english: Shows status of a shell option 'nullglob'.
bash: shopt nullglob <|endoftext|>
<|endoftext|> english: find the oldest normal file in the current directory and display its contents
bash: find Path -type f -printf "%T+ %p\0" | sort -z | grep -z -o -m Regex File | cat <|endoftext|>
<|endoftext|> english: Find all directories in maximum 1 level down the current directory and remove the . entry from the output
bash: find Path -maxdepth Quantity -type d | sed Program <|endoftext|>
<|endoftext|> english: Print a hex dump byte to byte of the output of "echo Aa"
bash: echo Regex | od -t x1 <|endoftext|>
<|endoftext|> english: Print all files and directories in the `.' directory tree skipping SCCS directories
bash: find Path -name Regex -prune -or -print <|endoftext|>
<|endoftext|> english: Sort all directory names matching folder_* and go to the last one.
bash: cd $( find Path -maxdepth Quantity -type d -name Regex | sort -t Regex -k Number -n -r | head - Quantity ) <|endoftext|>
<|endoftext|> english: Sort and print each unique line in "myfile.txt"
bash: cat File | sort | uniq <|endoftext|>
<|endoftext|> english: Delete recursively empty files named 'bad'
bash: find Path -name Regex -empty -delete <|endoftext|>
<|endoftext|> english: Find recursively all regular files changed within the last 5 minutes starting from directory b
bash: find Path -type f -cmin -Quantity <|endoftext|>
<|endoftext|> english: Show what content owned by root has been modified within the last day
bash: find Path -user Regex -mtime Timespan <|endoftext|>
<|endoftext|> english: Find all files/directories with '.mp4' extension and all regular files with '.flv' extension, sort them according to their names and display the first 500 of them
bash: find Path -name Regex -or -name Regex -type f | sort | head -n Quantity <|endoftext|>
<|endoftext|> english: Add group write permission to all files matching "*" or "...*"
bash: chmod Permission File File <|endoftext|>
<|endoftext|> english: Create a ssh key and store it in the file ~/.ssh/apache-rsync
bash: ssh-keygen -f File <|endoftext|>
<|endoftext|> english: Find a single file called FindCommandExamples.txt under current directory and remove it
bash: find Path -type f -name Regex -exec rm -f {} \; <|endoftext|>
<|endoftext|> english: Make DNS lookup requests for domain list in file '/path/to/host-list.txt'
bash: dig -f File <|endoftext|>
<|endoftext|> english: Make directory "aaa/bbb"
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: Archive "src-dir" to "dest-dir" on "remote-user@remote-host" and delete any files in "dest-dir" not found in "src-dir"
bash: rsync -a -v --delete File File <|endoftext|>
<|endoftext|> english: Set variable 'file' to the base name of first argument to script or function, that is the part following the last slash.
bash: basename Regex <|endoftext|>
<|endoftext|> english: Search for files greater than 20MB in the entire file system and display the path and file size
bash: find Path -type f -size +Size -exec ls -l -h {} \; | awk Program <|endoftext|>
<|endoftext|> english: Search the /path/to/directory tree for regular files modified 61 days ago and then remove them
bash: find Path -type f -mtime Timespan -exec rm -f {} \; <|endoftext|>
<|endoftext|> english: Read the history file $HISTFILE and append the contents to the history list
bash: history -r Quantity <|endoftext|>
<|endoftext|> english: Find "file.xml" under the current directory and change directory to its parent
bash: cd $( find Path -name Regex -exec dirname {} \; ) <|endoftext|>
<|endoftext|> english: Split "file" into 10 files of about equal size without splitting lines
bash: split -n Quantity File <|endoftext|>
<|endoftext|> english: Find regular files in the current directory tree that have any executable bits set
bash: find -L Path -type f \( -perm -Permission -or -perm -Permission -or -perm -Permission \) <|endoftext|>
<|endoftext|> english: change the permission of all the rpm files in the entire file system to 755
bash: find Path -name Regex -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Find all files/directories with '.log' extension whose names start with 'app-', have been modified in the last 5 minutes and show the first one found
bash: find Path -name Regex -mmin -Quantity -print | head -n Quantity <|endoftext|>
<|endoftext|> english: display all files in a folder
bash: find Path <|endoftext|>
<|endoftext|> english: Find all directories and for each of them, print an mv command to move it to /new/location
bash: find Path -type d -execdir echo Regex {} Regex \; <|endoftext|>
<|endoftext|> english: Remove with prompting all files that have not been accessed in over 100 days
bash: find Path -atime +Timespan -ok rm {} \; <|endoftext|>
<|endoftext|> english: Merge the first "$lc" lines of "current.txt" and the last "$lc" lines of "current.txt" and display the result as a comma separated table
bash: paste <( head - Quantity File ) <( tail - Quantity File ) | column -t File <|endoftext|>
<|endoftext|> english: Execute "date" every second
bash: watch -n Quantity date <|endoftext|>
<|endoftext|> english: Delete all files under $INTRANETDESTINATION/weekly directory tree that were modified more than 32 days ago
bash: find Path -mtime +Timespan -exec rm {} \; <|endoftext|>
<|endoftext|> english: display all directories in current folder
bash: find Path -type d -print0 <|endoftext|>
<|endoftext|> english: display all files in the current directory excluding those that are present in the directories whose name starts with "efence" and do not search in the sub directories
bash: find Path -maxdepth Quantity -name Regex -prune -or -print <|endoftext|>
<|endoftext|> english: find all text files in the current folder excluding those that are presenti n the folder "/svn" and search for a pattern.
bash: find Path -name Regex ! -wholename Regex -exec grep Regex {} \; -print <|endoftext|>
<|endoftext|> english: Find out all hard links in the /home directory to file1
bash: find Path -xdev -samefile Regex <|endoftext|>
<|endoftext|> english: Find all files/directores under '/usr/local' directory tree that contain the word 'blast' in their names
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Print all matching commands in $PATH for command "python"
bash: which -a Regex <|endoftext|>
<|endoftext|> english: display all regular/normal files in the folder Symfony
bash: find Path -type f <|endoftext|>
<|endoftext|> english: find all the normal/regular files in the folder "pathfolder" excluding all hidden files and display the count
bash: find Path -maxdepth Quantity -type f -not -path Regex | wc -l <|endoftext|>
<|endoftext|> english: Find all files/directories named 'articles.jpg' under current directory tree
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all *.txt files/directories under current directory discarding 'Permission denied' errors
bash: find Path -name Regex -print | grep -v Regex <|endoftext|>
<|endoftext|> english: Print $d if $d is empty
bash: find Path -prune -empty <|endoftext|>
<|endoftext|> english: Print a count of case insensitive duplicate filenames in the current directory
bash: ls -1 | tr Regex Regex | sort | uniq -c | grep -v Regex <|endoftext|>
<|endoftext|> english: Print common lines in "file1" and "file2"
bash: comm -1 -2 File File <|endoftext|>
<|endoftext|> english: Copy all *.mp3 files under the current directory to /tmp/MusicFiles/
bash: find Path -type f -name Regex -exec cp {} File \; <|endoftext|>
<|endoftext|> english: Replace all '置換前' with '置換後' in all regular files under current directory tree and modify them in-place
bash: find Path -type f -exec sed -i Program {} \; <|endoftext|>
<|endoftext|> english: Extract any line in "file1.txt" which does not appear as the first ";" delimited entry in "file2.txt"
bash: comm -2 -3 <( sort File ) <( grep -o Regex File | sort ) <|endoftext|>
<|endoftext|> english: Print all '-' separated digits in file 'infile' as dot ('.') separated digits
bash: grep -E -o Regex File | tr Regex Regex <|endoftext|>
<|endoftext|> english: Count non-blank lines in a file 'foo.c'
bash: sed Program File | wc -l <|endoftext|>
<|endoftext|> english: display a long listing of all images with the name "articles" in the current folder
bash: find Path -iname Regex -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: move all the files in the current folder  to temp folder and search atleast in one subfolder
bash: find Path -mindepth Quantity -print0 | xargs -0 -I {} mv {} File <|endoftext|>
<|endoftext|> english: Display what flags mount points are mounted with
bash: mount -l <|endoftext|>
<|endoftext|> english: Find regular files larger than 500MB in the current directory tree
bash: find Path -type f -size +Size <|endoftext|>
<|endoftext|> english: Find all xx* files/directories excluding 'xxx' files/directories under your home directory
bash: find Path -name Regex -and -not -name Regex <|endoftext|>
<|endoftext|> english: find all the regular files in the current folder which start with a "some text"
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: Print A record for domain 'domain.' from 'some.other.ip.address' nameserver
bash: dig Regex Regex a <|endoftext|>
<|endoftext|> english: Find all directories under current directory and set read-write-execute permission for owner, read-execute permission for group and no permission for other for those directories
bash: find Path -type d -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Recursively copy "dir_b" to "dir_a" and delete any new files in "dir_a"
bash: rsync -u -r --delete File File <|endoftext|>
<|endoftext|> english: Read hexadecimal bytes from device "/dev/midi1"
bash: od -v -t x1 File <|endoftext|>
<|endoftext|> english: Count the number of areas that differ in "file1" and "file2" with 0 lines of unified context
bash: diff -U Quantity File File | grep Regex | wc -l <|endoftext|>
<|endoftext|> english: Display a long listing of all 0777 permission directories under current directory tree
bash: find Path -perm Permission -type d -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: display all normal/regular files in a folder
bash: find Path -type f <|endoftext|>
<|endoftext|> english: Format output of "mount" as a table
bash: mount | column -t <|endoftext|>
<|endoftext|> english: List all files from the current directory tree that were modified less than 60 minutes ago, omitting "."
bash: find Path -mindepth Quantity -mmin -Quantity | xargs -r -I {} ls -l -d {} <|endoftext|>
<|endoftext|> english: Search the /usr/local/doc directory tree for .texi files
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Creates temporary folder and saves path to it in a 'tempd' variable.
bash: mktemp -d <|endoftext|>
<|endoftext|> english: find all the files in the filesystem which do not belong to any group
bash: find Path -nogroup -print <|endoftext|>
<|endoftext|> english: Find all files owned by user `comp'
bash: find Path -user Regex <|endoftext|>
<|endoftext|> english: Print the average time of 4 ping requests to "www.stackoverflow.com"
bash: ping -c Quantity Regex | tail - Quantity | awk Program | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: Recursively change the owner to "${JBOSS_USER}" of "$JBOSS_LOG_DIR"
bash: chown -R Regex File <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory with 'FooBar' in their paths and copy them to ~/foo/bar
bash: find Path | grep Regex | tr Regex Regex | xargs -0 -I {} cp {} File <|endoftext|>
<|endoftext|> english: Find all *.p[lm] files/directories under current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: recursively change user of the direct /home/test/ and all files into it to user test
bash: chown -R Regex File <|endoftext|>
<|endoftext|> english: Finds recursively all files having extension .c, .h in '/path/' that contain 'pattern', and prints matched strings with string number and file name.
bash: grep --include Regex -r -n -w Regex -e Regex <|endoftext|>
<|endoftext|> english: Find all *.rb (regular) files under current directory
bash: find Path -name Regex -type f <|endoftext|>
<|endoftext|> english: list regular files under the current directory
bash: find Path -type f <|endoftext|>
<|endoftext|> english: Remove files under current directory that contains white space in their name
bash: find Path -name Regex -exec rm -f {} \; <|endoftext|>
<|endoftext|> english: Find files in and below the current directory whose names begin with "not" and remove one of them
bash: find Path -name Regex | tail - Quantity | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: display all file in the home folder except ".c" files
bash: find Path ! -iname Regex Path <|endoftext|>
<|endoftext|> english: Find all files in ~/clang+llvm-3.3/bin/ and print 'basename /file/path' for each file
bash: find Path -type f -exec echo Regex {} \; <|endoftext|>
<|endoftext|> english: modify the permissions of all the folders in a directory
bash: find Path -type d -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Delete all regular files named 'IMAG1806.jpg' under current directory tree
bash: find Path -type f -name Regex -exec rm -f {} \; <|endoftext|>
<|endoftext|> english: display long listing of all regular/normal files whose size is less than 50 bytes.
bash: find Path -type f -size -Size -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: search for the file test.txt in the folders /home and /opt
bash: find Path Path -name Regex <|endoftext|>
<|endoftext|> english: Returns exit code 1 and terminates shell if 'set -e' was applied.
bash: false <|endoftext|>
<|endoftext|> english: Sets shell options 'extglob' and 'nullglob'.
bash: shopt -s nullglob extglob <|endoftext|>
<|endoftext|> english: Find all the files/directories in '/path/to/files' directory tree which have not been modified in the last 2 hours
bash: find Path -mmin +Quantity <|endoftext|>
<|endoftext|> english: Overwirte file '/path/to/your/file' with random content, then overwrite with zeroes, and remove, showing progress while execution.
bash: shred -v -n File -z -u File <|endoftext|>
<|endoftext|> english: Find all files that belongs to group Developer under /home directory
bash: find Path -group Regex <|endoftext|>
<|endoftext|> english: Find recursively the latest modified file in the current directory
bash: find Path -type f | sed Program | xargs -I {} ls File {} | awk Program | sort | tail - Quantity <|endoftext|>
<|endoftext|> english: Find all *.c files located under /home and below
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Search /usr/bin for regular files that have been modified within the last 10 days
bash: find Path -type f -mtime -Timespan <|endoftext|>
<|endoftext|> english: View history using "less"
bash: history | less <|endoftext|>
<|endoftext|> english: Save in QUEUE_PIDS variable only pid numbers that stored in $NEW_PIDS variable
bash: comm -2 -3 <( echo Regex | sort -u ) <( echo Regex | sort -u ) | grep -v Regex <|endoftext|>
<|endoftext|> english: Remove trailing white spaces from all *.py files under dir directory (ignoring .git path) and keep backups of the originals
bash: find Path -not -path Regex -iname Regex -print0 | xargs -0 -I {} sed --in-place Regex Program {} <|endoftext|>
<|endoftext|> english: Print first field from semicolon-seprated line $string.
bash: echo Regex | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: Remove all *bak files under current directory with confirmation prompt
bash: find Path -name Regex -exec rm -i {} \; <|endoftext|>
<|endoftext|> english: Search the current directory tree for files whose name is ".note", case insensitive
bash: find Path -iname Regex | sort <|endoftext|>
<|endoftext|> english: Find the top 5 biggest files
bash: find Path -type f -exec ls -s {} \; | sort -n -r | head - Quantity <|endoftext|>
<|endoftext|> english: Find all *.tex regular files under current directory
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: Moves the file that named like file $1 from '/tmp' folder to the folder where $2 file is located.
bash: mv $( basename Regex ) $( dirname Regex ) <|endoftext|>
<|endoftext|> english: From the list of words (one per line) in list1.txt, display the number of occurrences of this word in list2.txt and sort the results from highest to lowest count.
bash: grep -F -f Regex File | sort | uniq -c | sort -n <|endoftext|>
<|endoftext|> english: Save the absolute path of the current script to variable "SELF"
bash: readlink -f File <|endoftext|>
<|endoftext|> english: Find all files/directories with '.txt' extension under '/home' directory tree that are exactly 100KB in size
bash: find Path -name Regex -size Size <|endoftext|>
<|endoftext|> english: Instantly kill all processes whose command is 'myprocess'.
bash: kill - Regex Regex Regex <|endoftext|>
<|endoftext|> english: display all the files in the user folder which have been modified after the files /tmp/stamp$$
bash: find Path -newer File <|endoftext|>
<|endoftext|> english: Find blabla* files under current directory
bash: find Path -depth -name Regex -type f | xargs -I {} rm -f {} <|endoftext|>
<|endoftext|> english: split content all files file1..40000 into pieces per 1445 lines named as outputprefixNNN as digital prefix
bash: cat File File File File | split -n Quantity -d File Regex <|endoftext|>
<|endoftext|> english: Find all fonts (in '/usr/local/fonts') that belong to the user 'warwick'
bash: find Path -user Regex <|endoftext|>
<|endoftext|> english: Search for 'mystring' in all *.txt files under current directory
bash: find Path -name Regex | xargs -I {} grep -E Regex {} <|endoftext|>
<|endoftext|> english: Dry run making directories in "/TARGET_FOLDER_ROOT/" for each ".mov" file in the current directory tree
bash: find Path -type f -iname Regex -printf '%h\n' | sort | uniq | xargs -n Quantity -d Regex -I {} echo Regex Regex Regex <|endoftext|>
<|endoftext|> english: Search for all files that end in ".conf"
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: List all *.gif files found in the current directory tree
bash: find Path -name Regex -exec ls {} \; <|endoftext|>
<|endoftext|> english: display all non empty directories in current folder
bash: find Path ! -empty -type d <|endoftext|>
<|endoftext|> english: Find files which were changed in the past 1 hour
bash: find Path -cmin -Quantity <|endoftext|>
<|endoftext|> english: find all sqlite files in the current directory.
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Remove trailing whitespaces in TXT files from the current directory tree
bash: find Path -iname Regex -type f -exec sed -i Program File {} + <|endoftext|>
<|endoftext|> english: Search the current directory for files whose names start with my
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: List environment variables whose name contains "X"
bash: set | cut -d Regex -f Number | grep Regex <|endoftext|>
<|endoftext|> english: List each unique case insensitive character in "file" prefixed by number of occurrences
bash: grep -o Regex File | sort -f | uniq -i -c <|endoftext|>
<|endoftext|> english: Shows only process trees rooted at processes of this user.
bash: pstree Regex <|endoftext|>
<|endoftext|> english: display all the files in the file system which belong to the user "user1"
bash: find Path -user Regex <|endoftext|>
<|endoftext|> english: display all the normal/regular files in the current folder which are empty
bash: find Path -type f -empty <|endoftext|>
<|endoftext|> english: Display the contents of "sample_0001.gz" with "lk=1&" removed
bash: zcat Regex | sed -e Program <|endoftext|>
<|endoftext|> english: change user and group of the file "/var/run/docker.sock" to user root and group dockerroot
bash: chown Regex File <|endoftext|>
<|endoftext|> english: Search the current directory tree for regular files whose names end in ".shtml" or ".css"
bash: find Path -type f \( -name Regex -or -name Regex \) <|endoftext|>
<|endoftext|> english: create a backup of all the files which have been modified in the last 48 hours
bash: find Path -ctime -Timespan | cpio -p -v -d -m Regex <|endoftext|>
<|endoftext|> english: Identify CMS version/releases accross all your Drupal websites
bash: find Path -type f -iwholename Regex -exec grep -H Regex {} \; <|endoftext|>
<|endoftext|> english: search all the files in the current folder excluding those that are present in the folder test and using regex
bash: find Path -name Regex -prune -regex Regex <|endoftext|>
<|endoftext|> english: Represent the UTC date given in time string "1970.01.01-$string1" as number of seconds since the epoch and save it in 't1' variable
bash: $( date -u -d Regex +"%s" ) <|endoftext|>
<|endoftext|> english: Print first column of every line in every *.txt separated by a space
bash: paste -d Regex File | sed Program <|endoftext|>
<|endoftext|> english: Pops the top directory of dirs stack and changes to it.
bash: popd <|endoftext|>
<|endoftext|> english: Search the current directory recursively for files last modified within the past 24 hours ignoring .swp files and "en" and "es" directories
bash: find Path \( -name Regex -or -name Regex \) -prune -and -mtime Timespan ! -name Regex <|endoftext|>
<|endoftext|> english: Copy a file xyz.c to all the directories below the current one whose names begin with "temp"
bash: find Path -type d -name Regex | xargs -n Quantity -I {} cp File {} <|endoftext|>
<|endoftext|> english: search for the word echo all the bash files(files ending with .bash) in the current folder
bash: find Path -name Regex | xargs -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: Read a single character from standard input with prompt "Is this a good question (y/n)? " and timeout of 3 seconds and save the response to variable "answer"
bash: read -t Quantity -n Quantity -p Regex Regex <|endoftext|>
<|endoftext|> english: View gzip's help documentation
bash: gzip --help | less <|endoftext|>
<|endoftext|> english: Change permissions of ".git/hooks/prepare-commit-msg" to 777
bash: chmod Permission File <|endoftext|>
<|endoftext|> english: find all the files that have not been modified in the last 2 days
bash: find Path -mtime +Timespan <|endoftext|>
<|endoftext|> english: split the result of command "ping -c 25 google.com | tee " into pieces per 100000 bytes named as "/home/user/myLogFile.logNNN"
bash: ping -c Quantity Regex | tee >( split -d -b Size File Regex ) <|endoftext|>
<|endoftext|> english: Filters only directories including hidden ones from long file listing of a current directory, and prints their names.
bash: ls -A -l | grep Regex | awk -F Regex Program <|endoftext|>
<|endoftext|> english: Change all file permissions to 664 and all directory permissions to 775 in directory tree "htdocs"
bash: find Path -type f -exec chmod Permission {} + -or -type d -exec chmod Permission {} + <|endoftext|>
<|endoftext|> english: Counts total lines in PHP and JS files.
bash: find Path -name Regex -or -name Regex | xargs -I {} wc -l {} | grep Regex | awk Program <|endoftext|>
<|endoftext|> english: List the files from the current directory tree that contain lines matching regular expression  '^Subject:.*unique subject'
bash: find Path -type f -print0 | xargs -0 -I {} grep -i -l Regex {} <|endoftext|>
<|endoftext|> english: Change the user and group of all files and directories under /var/www to www-data:www-data
bash: find Path -print0 | xargs -0 -I {} chown Regex {} <|endoftext|>
<|endoftext|> english: Force create a symbolic link named "$lines" to "$c" without dereferencing "$lines"
bash: ln -s -f -n File Regex <|endoftext|>
<|endoftext|> english: Calculate the total disk usage for each ".jpg" file on the system and prepend the system host name to the output
bash: find Path Path -iname Regex -exec du -s {} + | sed $( hostname ) <|endoftext|>
<|endoftext|> english: Search the .java files from the current directory tree for TODO lines
bash: find Path -name Regex -exec grep -H -i -n Regex {} \; <|endoftext|>
<|endoftext|> english: Print the ping statistics of 4 requests to "www.google.com"
bash: ping -c Quantity Regex | awk Program <|endoftext|>
<|endoftext|> english: Remove all *.swp files under current directory ensuring white space safety
bash: find Path -name Regex -print0 | xargs -0 -I {} rm {} <|endoftext|>
<|endoftext|> english: Move all files from the `sourceDir' directory to the `destDir' directory
bash: find Path -mindepth Quantity -maxdepth Quantity -exec mv --target-directory Directory {} + <|endoftext|>
<|endoftext|> english: find the most recently changed files under current directory
bash: find Path -type f -printf '%TY-%Tm-%Td %TT   %p\n' | sort <|endoftext|>
<|endoftext|> english: Wrap standard input to fit in 10 characters per line
bash: fold -w Quantity <|endoftext|>
<|endoftext|> english: Find all *.c files under and below the current directory that contain "hogehoge"
bash: find Path -name Regex | xargs -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: Find all the Sticky Bit files whose permission are 551
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: Show filename and filetype description of all PHP files in all directories contained in current directory whose name or filetype description includes "UTF"
bash: file File | grep Regex <|endoftext|>
<|endoftext|> english: display all shell scripts in current folder
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: display the count of total number of non empty files in the current folder
bash: find Path -type f -not -empty | wc -l <|endoftext|>
<|endoftext|> english: search for the regulars file starting with HSTD which have been modified yesterday from day start and copy them to /path/tonew/dir
bash: find Path -type f -iname Regex -daystart -mtime Timespan -exec cp {} File File \; <|endoftext|>
<|endoftext|> english: Remove all files with the .c extension in the current directory tree
bash: find Path -name Regex | xargs -I {} rm -r -f {} <|endoftext|>
<|endoftext|> english: Search the current directory tree for all .java files newer than the file build.xml
bash: find Path -name Regex -newer File -print <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory and print them twice in each line
bash: find | xargs -i -I {} sh -c echo {} {} {} <|endoftext|>
<|endoftext|> english: Delete all files named '-F' under current directory tree
bash: find Path -name Regex -exec rm {} \; <|endoftext|>
<|endoftext|> english: Remove all directories called "test" from the current directory tree
bash: find Path -name Regex -type d -print0 | xargs -0 -I {} rm -r -- {} <|endoftext|>
<|endoftext|> english: find all the files in the entire file system that have been modified exactly 7 days before which end with "conf"
bash: find Path -name Regex -mtime Timespan <|endoftext|>
<|endoftext|> english: update the permission of all the php files in current directory and save the output to a file
bash: find Path -name Regex -exec chmod Permission {} \; | tee File <|endoftext|>
<|endoftext|> english: file all the Sticky Bit set files whose permission are 551
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: Print only digits in variable "$name"
bash: echo Regex | tr -c -d Regex <|endoftext|>
<|endoftext|> english: Execute "du -s path" every 300 seconds
bash: watch -n Quantity du -s File <|endoftext|>
<|endoftext|> english: Find all directories named '.texturedata' under '/path/to/look/in/' directory tree
bash: find Path -type d -name Regex <|endoftext|>
<|endoftext|> english: find all normal/regular files in current folder and display them in sorted order
bash: find Path -type f -ls | awk Program <|endoftext|>
<|endoftext|> english: Find all files starting from the current directory that match regular expression '.*Message.*\.java'
bash: find Path -print | grep Regex <|endoftext|>
<|endoftext|> english: Recursively copy "emptydir" to "destination/newdir"
bash: rsync --recursive File File <|endoftext|>
<|endoftext|> english: find all the files in the file system that start with "win" and searched only in the mounted file systems
bash: find Path -mount -name Regex <|endoftext|>
<|endoftext|> english: Create an empty file in each directory named "mydir" under current directory.
bash: find Path -type d -name Regex -print | sed Program | xargs -I {} touch {} <|endoftext|>
<|endoftext|> english: Move "file.txt" to docker container "$COUNTAINER_ID" in path "/var/lib/docker/aufs/mnt/$CONTAINER_ID/rootfs/root/file.txt"
bash: mv -f File File <|endoftext|>
<|endoftext|> english: Delete all regular files with '.cache' extension that were accessed more than 30 days ago under $HOME/Library/Safari/Icons directory tree
bash: find Path -type f -atime +Timespan -name Regex -print -delete <|endoftext|>
<|endoftext|> english: Print a welcome message with the current user's user name
bash: echo -n -e $( whoami ) <|endoftext|>
<|endoftext|> english: Save the directory name of the canonical path to the current script in variable "MY_DIR"
bash: dirname $( readlink -f File ) <|endoftext|>
<|endoftext|> english: Copy all .png files from the home directory tree to imagesdir/
bash: find Path -name Regex -exec cp {} File \; <|endoftext|>
<|endoftext|> english: Calculates process depth of process with id $processid, and stores it in a 'depth' variable.
bash: pstree -s -A Regex | head -n Quantity | sed -e Program -e Program -e Program | wc -l <|endoftext|>
<|endoftext|> english: Display the contents of "text"
bash: cat File <|endoftext|>
<|endoftext|> english: find all the hidden files in the temp folder
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: Change permissions to 755 for all directories in the /path/to/dir directory tree
bash: find Path -type d -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Run checksums recursively from the current directory, and give back the filenames of all identical checksum results
bash: find Path -type f -print0 | xargs -0 -n Quantity -I {} md5sum {} | sort -k Number | uniq -w Quantity -d --all-repeated separate | sed -e Program <|endoftext|>
<|endoftext|> english: search for the files which contain the word start in their name excluding search in ./proc, ./sys, ./run folders
bash: find Path -path Regex -prune -or -path Regex -prune -or -path Regex -prune -or -iname Regex -print <|endoftext|>
<|endoftext|> english: Creates temporary folder in TMPDIR (if defined) or in '/tmp/', and stores path to created folder in 'dir' variable.
bash: mktemp -d <|endoftext|>
<|endoftext|> english: Search the /Path directory tree for files whose pathnames match pattern "/Path/bar*" and whose names match pattern "file_name*"
bash: find Path -path Regex -name Regex <|endoftext|>
<|endoftext|> english: Calculate the md5 checksum of the current directory structure and save it in variable SUM
bash: tree | md5sum <|endoftext|>
<|endoftext|> english: Print lines 10000 to 10010 from input "seq 1 100000"
bash: seq Number Number | sed -n Program <|endoftext|>
<|endoftext|> english: Copy all files below the current directory whose names contain "FooBar" to directory foo/bar/ in user's home directory.
bash: find Path -name Regex -print0 | xargs -0 -I {} cp -t Directory {} <|endoftext|>
<|endoftext|> english: Print amount of space available on the file system containing path to the current working directory in megabytes.
bash: df File -B Size | tail - Quantity | awk Program | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: Delete all files/directories with inode number 117672808 under current directory tree
bash: find Path -inum Quantity -exec rm {} \; <|endoftext|>
<|endoftext|> english: Find all TXT files that belong to user root
bash: find Path -user Regex -iname Regex <|endoftext|>
<|endoftext|> english: Subtract each column in File2 from matching column in File1, output the result in a similarly formatted table
bash: awk Program Program Program | rev | column -t | rev <|endoftext|>
<|endoftext|> english: Change permissions of all files ending in ".php" under the current directory to 755 and print a count of modified files
bash: find Path -name Regex -exec chmod Permission {} \; -exec echo {} \; | wc -l <|endoftext|>
<|endoftext|> english: Find all regular files in the current directory tree last modified between 1 and 3 days ago and list them using format '%TY %p\n'
bash: find Path -daystart -mtime -Timespan -type f ! -mtime -Timespan -printf '%TY %p\n' <|endoftext|>
<|endoftext|> english: Print a sorted list of the subdirectories of ~/Music
bash: find Path -maxdepth Quantity -mindepth Quantity -type d | sort <|endoftext|>
<|endoftext|> english: Find all *.$input_file_type files/directories under $source_dir with the null character as the delimiter
bash: find Path -name Regex -print0 <|endoftext|>
<|endoftext|> english: Copy all directories recursively from "source/" to "destination/" excluding all files
bash: rsync -a -f Program -f Program File File <|endoftext|>
<|endoftext|> english: Unzip and expand tar archive "compressFileName"
bash: zcat Regex | tar -x -v -f File <|endoftext|>
<|endoftext|> english: Print summary of new/missing files, and which files differ between folder1 and folder2, excluding those matching pattern "node_modules".
bash: diff -r -q -y -l File File --exclude Regex <|endoftext|>
<|endoftext|> english: Print the list of all files in the current directory except for SVN, CVS, GIT, and binary files
bash: find Path -not \( -name Regex -prune -or -name Regex -prune -or -name Regex -prune \) -type f -print0 | xargs -0 -I {} file -n {} | grep -v Regex | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: List all directories of the $topdir directory tree that contain a Makefile and at least one .py file
bash: find Path -name Regex -printf '%h\0' | xargs -0 -I {} find {} -mindepth Quantity -maxdepth Quantity -name Regex -printf '%h\n' | sort -u <|endoftext|>
<|endoftext|> english: Exit the shell immediately if an error is encountered, treat references to unset variables as errors, disable overwriting existing files, and use the first non-zero exit code of a set of piped commands as the exit code of the full set of commands
bash: set -o errexit -o nounset -o noclobber -o pipefail <|endoftext|>
<|endoftext|> english: search for the directory "config" in the current folder and change directory to it
bash: cd $( find Path -name Regex ) <|endoftext|>
<|endoftext|> english: Print reverse lookup for adress 127.0.0.1
bash: dig -x Regex <|endoftext|>
<|endoftext|> english: Make 3 directories named "~/Labs/lab4a/folder" followed by the number 1, 2, or 3
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: find all configuration files in a folder
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: find all the normal/regular files in the current folder which have been modified in the last 24 hours and display a long listing of them
bash: find Path -type f -mtime -Timespan -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: Create directorie(s) 'some/path' as required in the current directory
bash: mkdir -p Directory <|endoftext|>
<|endoftext|> english: List all files in /var/www and below that have changed in the last 10 minutes
bash: find Path -cmin -Quantity -printf "%c %pn" <|endoftext|>
<|endoftext|> english: display all the text files in the home folder
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Write the common third space separated fields in "file1.sorted" and "file2.sorted" to "common_values.field"
bash: comm -1 -2 <( cut -d Regex -f Number File | uniq ) <( cut -d Regex -f Number File | uniq ) <|endoftext|>
<|endoftext|> english: Replace spaces with underscores in the names of all files and directories in the "/tmp" directory tree
bash: find Path -depth -name Regex -execdir rename Regex {} \; <|endoftext|>
<|endoftext|> english: find all raw images in the current folder and pass them one at a time to the xargs command and enable parallel processing of the files
bash: find Path -type f -iname Regex -print0 | xargs -0 -n Quantity -P Quantity -I {} <|endoftext|>
<|endoftext|> english: Search the current directory and all of its sub-directories for the file 'file1'.
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: Print "huge-file.log" starting at line 1000001
bash: tail -n +Quantity File <|endoftext|>
<|endoftext|> english: find all files in the current folder that have a single letter in their name and have not been modified today
bash: find Path -name Regex -mtime +Timespan <|endoftext|>
<|endoftext|> english: Remove files in the current directory tree whose names match pattern "file?"
bash: find Path -name Regex -exec rm -v -f {} \; <|endoftext|>
<|endoftext|> english: Numerically sort file "table" by the fourth character of the second field, ignoring leading spaces
bash: sort -b -n -k Number File <|endoftext|>
<|endoftext|> english: display all the files in the current folder which have been modified between two dates
bash: find Path -newermt Regex -and ! -newermt Regex <|endoftext|>
<|endoftext|> english: start 2 sleep processes in the background
bash: sleep Timespan | sleep Timespan <|endoftext|>
<|endoftext|> english: Print unique lines of sorted file "f1" compared to sorted file "f2"
bash: comm -2 -3 File File <|endoftext|>
<|endoftext|> english: Keep the last 3 components (directories) of $path
bash: echo Regex | rev | cut -d Regex -f -Number | rev <|endoftext|>
<|endoftext|> english: List .c files in the current directory
bash: find Path \( ! -name Regex -prune \) -name Regex -print <|endoftext|>
<|endoftext|> english: Print characters in variable "$a" that exist in variable "$b"
bash: echo $( comm -1 -2 <( echo Regex | fold -w Quantity | sort | uniq ) <( echo Regex | fold -w Quantity | sort | uniq ) | tr -d Regex ) <|endoftext|>
<|endoftext|> english: Print all filenames in /usr/src except for those that are of the form '*,v' or '.*,v'
bash: find Path -not \( -name Regex -or -name Regex \) {} Path -print <|endoftext|>
<|endoftext|> english: Find all files whose names contain the string 'xpilot' which exist within '/usr/local/games'
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Print mount point of the file system containing $path.
bash: df -P File | awk Program <|endoftext|>
<|endoftext|> english: count the lines of java code for all the java files in the current directory
bash: find Path -name Regex -print0 | xargs -0 -I {} wc {} <|endoftext|>
<|endoftext|> english: Delete all *.zip files under current directory that are older than 2 days
bash: find Path -name Regex -mtime +Timespan -print0 | xargs -0 -I {} rm {} <|endoftext|>
<|endoftext|> english: Executes tmux commands that are stored in the '$tmux_command' variable, and then attaches to the tmux session.
bash: tmux command <|endoftext|>
<|endoftext|> english: find all the files in the current directory and search for the word "pw0" in them.
bash: find Path -exec grep -i Regex {} \; <|endoftext|>
<|endoftext|> english: find all the files in the folder /work which belong to the user "olivier"
bash: find Path -user Regex -print <|endoftext|>
<|endoftext|> english: Calculate the md5 sum of all files in "/your/dir" including content and filenames
bash: grep -a -r -e Regex Regex | md5sum | cut -c -Number <|endoftext|>
<|endoftext|> english: find all the php files in current folder and search for multiple patterns in these files and display the file names
bash: find Path -name Regex -exec grep -i -n Regex {} + | grep Regex | cut -d Regex -f Number | uniq <|endoftext|>
<|endoftext|> english: prints absolute file paths for files in current directory
bash: find Path $( pwd ) -maxdepth Quantity <|endoftext|>
<|endoftext|> english: Find all *.txt files/directories under current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all files with '.db' extension (case insensitive) that belong to user 'exampleuser' and were modified exactly 7 days ago under '/home' directory tree
bash: find Path -user Regex -mtime Timespan -iname Regex <|endoftext|>
<|endoftext|> english: Make directory "/etc/cron.15sec"
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: display a list of all the files  in the home folder which have been modified today
bash: find Path -type f -mtime Timespan -ls <|endoftext|>
<|endoftext|> english: find all the files that are modified in the last 1 day
bash: find Path -mtime +Timespan -mtime -Timespan <|endoftext|>
<|endoftext|> english: Recursively removes all files and folders named '.svn' in a current folder.
bash: find Path -name Regex | xargs -I {} rm -r -f {} <|endoftext|>
<|endoftext|> english: Update the archived copy of the home directory, "alldata.tar"
bash: find Path -newer File -exec tar -u -v -f File {} \; <|endoftext|>
<|endoftext|> english: Search for files which have read and write permission for their owner and group, and which other users can read, without regard to the presence of any extra permission bits
bash: find Path -perm -Permission <|endoftext|>
<|endoftext|> english: Print every 20 bytes of standard input as tab separated groups of bytes 1-3, 4-10, and 11-20
bash: fold -b -w Quantity | cut --output-delimiter Regex -b Number <|endoftext|>
<|endoftext|> english: Remove any file containing string "GUI"
bash: find Path -type f -print0 | xargs -0 -I {} grep -l -i -w -Z Regex {} | xargs -0 -I {} rm -f {} <|endoftext|>
<|endoftext|> english: find all regular/normal files in the folder "myfiles" which have read and write permission to the other users
bash: find Path -type f -perm -Permission <|endoftext|>
<|endoftext|> english: change the permissions of all the files ending with "fits" in the folder "/store/01" and save the output file names to a log file
bash: find Path -name Regex -exec chmod -Permission {} \; -exec ls -l {} \; | tee File <|endoftext|>
<|endoftext|> english: Merge lines from files "file1", "file2", "file3", "file4", "file5", replace "\t" with " \t", and format the "\t" delimited result as a table
bash: paste File | sed -e Program | column -t -s Regex <|endoftext|>
<|endoftext|> english: Recursively change the owner and group of all files in the current directory to "apache"
bash: find Path -maxdepth Quantity -not -name Regex -print0 | xargs --null -I {} chown -R Regex {} <|endoftext|>
<|endoftext|> english: get all the files that have been modified within the last 30 days
bash: find Path -mtime -Timespan -print <|endoftext|>
<|endoftext|> english: Search the current directory tree for files whose name is ".note", case insensitive
bash: find Path -type d -exec find {} -maxdepth Quantity ! -type d -iname Regex \; <|endoftext|>
<|endoftext|> english: find all the file that have been modified exactly 3 days ago ( considers day starting not 24 hours )
bash: find Path -daystart -mtime -Timespan <|endoftext|>
<|endoftext|> english: Disables overwriting existing files
bash: set -o noclobber <|endoftext|>
<|endoftext|> english: display the contents of all the text files in the current directory
bash: find Path -name Regex -exec cat {} \; <|endoftext|>
<|endoftext|> english: Sets shell options 'globstar', 'dotglob' and 'nullglob'.
bash: shopt -s globstar nullglob dotglob <|endoftext|>
<|endoftext|> english: Print onlt last slash-separated field from $PATH value
bash: echo Regex | rev | cut -d Regex -f Number | rev <|endoftext|>
<|endoftext|> english: Print history with the first field removed
bash: history | awk Program <|endoftext|>
<|endoftext|> english: Removes all files but $1 newest ones from current folder.
bash: ls -t -p | grep -v Regex | tail -n +Quantity | xargs -I {} rm -- {} <|endoftext|>
<|endoftext|> english: find files in current directory that names are game
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Locate all "copyright" files under and below /usr/share/doc
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: List each unique character in "file" prefixed by number of occurrences and sorted from most frequent to least frequent
bash: grep -o Regex File | sort | uniq -c | sort -n -r <|endoftext|>
<|endoftext|> english: find all the files in the current folder that have been modified in the last 24*3 hours
bash: find Path -mtime -Timespan <|endoftext|>
<|endoftext|> english: Archive all filepattern-*2009* files/directories under data/ into 2009.tar
bash: find Path -name Regex -exec tar -u -f File {} \; <|endoftext|>
<|endoftext|> english: Find all files that have wrong permission
bash: find Path \( -perm -Permission -or -perm -Permission \) \( ! -type -l \) -ls <|endoftext|>
<|endoftext|> english: display the list of all the files in the current directory which have been accssed in the last 500 days exluding hidden files
bash: find Path -type f \( ! -iname Regex \) -mtime +Timespan -exec ls {} \; <|endoftext|>
<|endoftext|> english: display all the files in the current folder which do not belong to any group
bash: find Path -nogroup <|endoftext|>
<|endoftext|> english: Update timestamps of all files (not directories) under current directory.
bash: find Path -exec touch {} \; <|endoftext|>
<|endoftext|> english: check readline bindings for "\x61"
bash: bind -p | grep Regex <|endoftext|>
<|endoftext|> english: Search for '/usr/bin/perl' in all regular files under current dirctory tree and also show a long listing of them
bash: find Path -type f -exec grep Regex {} \; -ls <|endoftext|>
<|endoftext|> english: Sort ":" delimited lines in "test.txt" by the first and third field preserving only unique lines
bash: sort -u -t Regex -k Number -k Number File <|endoftext|>
<|endoftext|> english: Replace the spaces after line number in the output of history with ".."
bash: history | sed Program <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory tree that have modified in the last 2 days and contain 'blah' (case insensitive) in their names
bash: find Path -iname Regex \( -type d -or -type f \) -mtime -Timespan <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory excluding the paths that match the POSIX extended regex ".*def/incoming.*|.*456/incoming.*"
bash: find Path -regextype posix-extended -regex Regex -prune -or -print <|endoftext|>
<|endoftext|> english: find all text files in current folder and delete all the files that have the word foo in their name
bash: find Path -name Regex | grep Regex | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: Find files/directories that belong to user 'ian' under '/tmp' directory tree
bash: find Path -user Regex <|endoftext|>
<|endoftext|> english: Find all 777 permission files/directories under current directory tree
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: Find files bigger than 20 megabytes in the home directory tree
bash: find Path -size +Size <|endoftext|>
<|endoftext|> english: Find all regular .mp3 files larger than 10M and delete them
bash: find Path -type f -name Regex -size +Size -exec rm {} \; <|endoftext|>
<|endoftext|> english: Prints current directory name
bash: pwd | sed Program <|endoftext|>
<|endoftext|> english: Print the list of files in directory /tmp/a1 recursively
bash: find Path <|endoftext|>
<|endoftext|> english: display all the files in the home folder excluding directories which have been modified in the last 24 hours
bash: find Path -mtime -Timespan ! -type d <|endoftext|>
<|endoftext|> english: Find regular files modified within the last 7 days
bash: find Path -mtime -Timespan -type f <|endoftext|>
<|endoftext|> english: Print a count of each unique line in "ip_addresses.txt" sorted numerically
bash: sort -n File | uniq -c <|endoftext|>
<|endoftext|> english: Print the full real path of "/dev/disk/by-uuid/$1" followed by "is not mounted"
bash: echo $( readlink -f File ) Regex Regex Regex <|endoftext|>
<|endoftext|> english: Print the first two bytes of "my_driver" in octal
bash: od --read-bytes Size File <|endoftext|>
<|endoftext|> english: Search the current directory recursively for files containing "needle text"
bash: find Path -type f -print0 | xargs -0 -I {} grep -I -Z -l Regex {} | xargs -0 -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: Find all *.sql file that are not newer than  $oldest_to_keep excluding the  $oldest_to_keep file
bash: find Path -name Regex -not -samefile Regex -not -newer File <|endoftext|>
<|endoftext|> english: display all the files  in the current folder excluding the current folder and do not search in the sub directories
bash: find Path -maxdepth Quantity -type d \( ! -name Regex \) <|endoftext|>
<|endoftext|> english: Create a symbolic link named "${DESTINATION}${file}" to "${TARGET}${file}"
bash: ln -s File Regex <|endoftext|>
<|endoftext|> english: Overwirte file '/path/to/your/file' with random content, showing progress while execution.
bash: shred -v -n File File <|endoftext|>
<|endoftext|> english: Create intermediate directories "x" and "p" as required and create "q"
bash: mkdir -p Directory <|endoftext|>
<|endoftext|> english: Delete all files in the current directory.
bash: find Path -exec rm {} \; <|endoftext|>
<|endoftext|> english: Make directory "testExpress"
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: Find all empty files under /tmp and below
bash: find Path -type f -empty <|endoftext|>
<|endoftext|> english: Print second section of space-separated data from text file "a".
bash: cut File -f Number File <|endoftext|>
<|endoftext|> english: find all files that names are dir-name-here
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all files in the current directory tree that are newer than some_file
bash: find Path -newer File <|endoftext|>
<|endoftext|> english: Find recursively the files named "file" in the current directory ignoring the .git subdirectory
bash: find Path -path Regex -prune -or -name Regex -print <|endoftext|>
<|endoftext|> english: find all foo.bar files in the entire file system
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: Delete empty files and print their names
bash: find Path -empty -delete -print <|endoftext|>
<|endoftext|> english: Output all lines from file1 except those present in file2, assuming both files are sorted.
bash: diff File File | grep Regex | sed Program <|endoftext|>
<|endoftext|> english: Delete files in the DIR directory tree whose names begin with "2015" and contain "album" or "picture"
bash: find Path \( -name Regex -and \( -name Regex -or -name Regex \) \) -delete <|endoftext|>
<|endoftext|> english: Print the absolute path of third-level files under the current directory tree and number the output
bash: ls -d -1 File | nl <|endoftext|>
<|endoftext|> english: find all files that have been used more than two days since their status was last changed
bash: find Path Path <|endoftext|>
<|endoftext|> english: Finds strings with text "text" in all files named "string to be searched" recursively in a current folder.
bash: find Path -name Regex -exec grep Regex {} \; <|endoftext|>
<|endoftext|> english: Removes all empty folders within $DELETEDIR folder.
bash: find Path -mindepth Quantity -depth -type d -empty -exec rmdir {} \; <|endoftext|>
<|endoftext|> english: Search for 'Attached: Yes' in all regular files under '/proc/scsi' directory tree matching the path '/proc/scsi/usb-storage' and show only the matched filenames
bash: find Path -path Regex -type f | xargs -I {} grep -l Regex {} <|endoftext|>
<|endoftext|> english: Print 3 newline separated "y"s
bash: yes | head - Quantity <|endoftext|>
<|endoftext|> english: Delete all files in the TBD directory that were modified more than 1 day ago
bash: find Path -mtime +Timespan | xargs -I {} rm -r -f {} <|endoftext|>
<|endoftext|> english: Concatenate all files under the current directory and below that contain "test" in their names
bash: find Path -iname Regex -exec cat {} \; <|endoftext|>
<|endoftext|> english: Find find symlinks pointing to /mnt/oldname* in the entire file system
bash: find Path -type l -lname Regex <|endoftext|>
<|endoftext|> english: Locate all *.csv files under the current directory tree
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: change owner and group of the current directory and all files into it to user and group andrew
bash: chown -R Regex File <|endoftext|>
<|endoftext|> english: Print "Total generated: " followed by the number of unique lines in "$generated_ports"
bash: echo $( echo Regex | sort | uniq | wc -l ) <|endoftext|>
<|endoftext|> english: list jobs including its PIDs
bash: jobs -l <|endoftext|>
<|endoftext|> english: Set trace prompt to print seconds.nanoseconds
bash: $( date "+%s.%N" ) <|endoftext|>
<|endoftext|> english: delete all the trace files (".trc") from the folder $DBA/$ORACLE_SID/bdump/ which have not been accessed in the last 7*24 hours
bash: find Path -mtime +Timespan -exec rm {} \; <|endoftext|>
<|endoftext|> english: Print numbered list of all third-level files under the current directory
bash: ls -d -1 File | cat -n <|endoftext|>
<|endoftext|> english: Search for " 000" in the hex dump of "file-with-nulls"
bash: od File | grep Regex <|endoftext|>
<|endoftext|> english: Print all files with a '-' after their name if they are regular files, and a '+' otherwise
bash: find Path -type f -exec echo {} Regex \; -or -exec echo {} + Path <|endoftext|>
<|endoftext|> english: Output line number and lines 200000000 through 200000005 from the infinite input of "y"
bash: yes | sed -n Program <|endoftext|>
<|endoftext|> english: Find all files owned by the user daniel in the current directory and below.
bash: find Path -user Regex <|endoftext|>
<|endoftext|> english: Make directories "mnt" and "point"
bash: mkdir Directory Directory <|endoftext|>
<|endoftext|> english: Create master SSH control socket "my-ctrl-socket" in the background with no terminal or command execution with connection forwarding from localhost port 50000 to localhost port 3306 via "jm@sampledomani.com"
bash: ssh -M -S Path -f -n -N -T -L Regex Regex <|endoftext|>
<|endoftext|> english: Print only the line "foo///" given two empty directories foo and bar
bash: find Path Path -name Regex -or -name Regex <|endoftext|>
<|endoftext|> english: make directory "/etc/cron.15sec"
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: Find all files and directories starting from the current directory
bash: find Path <|endoftext|>
<|endoftext|> english: Verbosely compresses all files on third and fourth depth level keeping original files in place.
bash: bzip2 -k -v File <|endoftext|>
<|endoftext|> english: Delete all files in the /myDir directory tree that were last modfied more than 7 days ago
bash: find Path -mindepth Quantity -mtime +Timespan -delete <|endoftext|>
<|endoftext|> english: Remove all *.sql files in the $backup_path directory that were last modified more than 5 days ago
bash: find Path -mtime +Timespan -exec rm -f {} \; <|endoftext|>
<|endoftext|> english: Find all files under current directory with their size and paths, reverse sort them numerically, then print the 2nd field (with space as the delimiter) of the first 4 entries
bash: find Path -type f -printf "%s %p\n" | sort -n -r | head -n Quantity | awk Program <|endoftext|>
<|endoftext|> english: find all the files which have not been modified in the last 1 year and display the total disk usage of them  in GB
bash: find Path -type f -mtime +Timespan -printf '%s\n' | awk Program <|endoftext|>
<|endoftext|> english: Extract and print hostname and protocol part from URL like "http://www.suepearson.co.uk/product/174/71/3816/".
bash: echo Regex | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: Find all files under maximum 1 level down the ./subfolder and ./subfolder/*/  paths
bash: find Path Path -maxdepth Quantity -type f <|endoftext|>
<|endoftext|> english: Replace all occurrence of "subdomainA.example.com" with "subdomainB.example.com" in all files under /home/www and below
bash: find Path -type f -exec sed -i Program {} + <|endoftext|>
<|endoftext|> english: search for all the regular/normal mp3 files in the file system and move them to the folder /mnt/mp3
bash: find Path -iname Regex -type f -exec mv {} File \; <|endoftext|>
<|endoftext|> english: Count all the mp3 files in the music user's home and subdirs.
bash: find Path -type f -iname Regex | wc -l <|endoftext|>
<|endoftext|> english: Join strings from 'file1' and 'file2', discarding excessive strings from largest file, and printing first, second and third space-separated field from first file, and third and fourth field from second file as a join result
bash: join -o 1.2,1.3,2.4,2.5,1.4 <( cat -n File ) <( cat -n File ) <|endoftext|>
<|endoftext|> english: find all the files which end with ".deb" and display their base name (strip the extension)
bash: find Path -name Regex -exec basename {} \; <|endoftext|>
<|endoftext|> english: List environment variable values whose name matches '^\w*X\w*'
bash: set | grep -P Regex | grep -o -P Regex <|endoftext|>
<|endoftext|> english: Force create a symbolic link without dereferencing named "mylink" to "dir2"
bash: ln -n -s -f File Regex <|endoftext|>
<|endoftext|> english: search for all the non-hidden files in the current directory and do not search in the subfolders and dispaly their name and size.
bash: find Path -maxdepth Quantity -name Regex -printf 'Name: %16f Size: %6s\n' <|endoftext|>
<|endoftext|> english: Decompress "file2.txt" and "file1.txt" and print lines in "file1.txt" that match the 5th tab separated field in "file2.txt"
bash: awk -F Regex Program <( zcat Regex ) <( zcat Regex ) <|endoftext|>
<|endoftext|> english: Brings down network interface eth0.
bash: ifconfig Regex Regex <|endoftext|>
<|endoftext|> english: find all the files which are of size 0 bytes.
bash: find Path -type f -empty <|endoftext|>
<|endoftext|> english: Print lines in file 'filename' that do not match the regex 'pattern'
bash: grep -v Regex File <|endoftext|>
<|endoftext|> english: Print a list of regular files from directory tree sort_test/ sorted with LC_COLLATE=en_US.UTF-8
bash: find Path -type f | env -i Program Program <|endoftext|>
<|endoftext|> english: Create an empty file with a carriage return character in its name.
bash: echo -e Regex | xargs -I {} touch {} <|endoftext|>
<|endoftext|> english: Read a line from standard input into variable "YESNO" ignoring backslash escapes and using the prompt "$(echo $@) ? [y/N] "
bash: read -r -p $( echo Regex ) Regex <|endoftext|>
<|endoftext|> english: Find all files/directories with space in their names under $1 directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Remove all .mpg files in the /home/luser directory tree
bash: find Path -type f -name Regex | tr Regex Regex | xargs -0 -I {} rm -f {} <|endoftext|>
<|endoftext|> english: find all the files in the home folder which have been modified in 1 year or more ( which are not modified in the last 1 year ).
bash: find Path -mtime +Timespan <|endoftext|>
<|endoftext|> english: Find all empty folders in the current directory and below
bash: find Path -type d -empty <|endoftext|>
<|endoftext|> english: ssh into localhost on port 10022
bash: ssh -p Regex Regex <|endoftext|>
<|endoftext|> english: Remove all *.bak and *.backup files that were accessed last time more than 30 days ago
bash: find Path \( -name Regex -or -name Regex \) -type f -atime +Timespan -exec rm {} \; <|endoftext|>
<|endoftext|> english: find for a filename with multiple patterns in the current folder
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Print your/dir if it's empty
bash: find Path -prune -empty <|endoftext|>
<|endoftext|> english: Execute "ls -l" every 0.5 seconds
bash: watch -n Quantity ls -l <|endoftext|>
<|endoftext|> english: Search the current directory tree for file `teste.tex'
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all *.ps files under $STARTDIR
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: search for version in system.info files.
bash: find Path -type f -iwholename Regex -exec grep -H Regex {} \; <|endoftext|>
<|endoftext|> english: Removes 55, adds a 10-digit line number, and rearranges the date for each line in "input"
bash: nl -n rz -w Quantity -s Regex File | sed -r Program <|endoftext|>
<|endoftext|> english: Find files that have a modification time of a day ago
bash: find Path -mtime Timespan <|endoftext|>
<|endoftext|> english: Find all files/directories not with the name 'query_to_avoid' under current directory
bash: find Path -not -name Regex <|endoftext|>
<|endoftext|> english: Display standard input as a table with "${tab}" separators
bash: column -s Regex -t <|endoftext|>
<|endoftext|> english: Prints Kb size of all top-level files and folders in a current folder in descending order.
bash: du -k -s File | sort -n -r <|endoftext|>
<|endoftext|> english: Find all files/directories named 'query' (case insensitive) under current directory
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: Make a list of regular files from the current directory tree that have more than 1 link and view it with the "less" pager
bash: find Path -type f -noleaf -links +Quantity -printf "%n %i %f\t%h\n" | sort | less <|endoftext|>
<|endoftext|> english: Find all filename.* files/directories under /root/directory/to/search
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Recursively search current directory for all files with name ending with ".t1", change this to .t2
bash: find Path -name Regex -exec rename Regex {} \; <|endoftext|>
<|endoftext|> english: Recursively copy all files with names ending with .txt from dir_1 to the same location within copy_of_dir_1
bash: rsync --recursive --prune-empty-dirs --include Regex --filter Program File File <|endoftext|>
<|endoftext|> english: Copy all files that match 'FooBar' in their paths under current directory tree to the '~/foo/bar' directory
bash: find Path | grep Regex | tr Regex Regex | xargs -0 -I {} cp {} File <|endoftext|>
<|endoftext|> english: Ungzip and untar all files matching "www-backup.tar.*"
bash: cat File | gunzip -c | tar File File <|endoftext|>
<|endoftext|> english: change group of the file myfile to group friends
bash: chown Regex File <|endoftext|>
<|endoftext|> english: List all *.txt files/directories under current directory
bash: find Path -name Regex -exec ls {} \; <|endoftext|>
<|endoftext|> english: Count number of users logged in
bash: who | awk -F Regex Program | sort -u | wc -l <|endoftext|>
<|endoftext|> english: Changes to the directory where 'ssh' executable is located.
bash: cd $( dirname $( which Regex ) ) <|endoftext|>
<|endoftext|> english: Finds string beginning with 'IFS' in a 'set' output.
bash: set | grep Regex <|endoftext|>
<|endoftext|> english: Get the sizes (and total size) of all files under dir2 directory
bash: find Path ! -type d | xargs -I {} wc -c {} <|endoftext|>
<|endoftext|> english: Find grub.conf files in entire file system
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Save the first 3 lines output by 'yes' to 'file', and log the rest through 'more' which simply waits for user interaction at each page.
bash: yes | awk Program | more <|endoftext|>
<|endoftext|> english: Find files with 002 permission in entire file system and print them with the string 'has world write permissions' appended after every path
bash: find Path -type f -perm -Permission -printf '%p has world write -permissions\n' <|endoftext|>
<|endoftext|> english: Remove adjascent duplicate lines from file 'input' comparing all but last space-separated fields
bash: rev File | uniq -f Quantity | rev <|endoftext|>
<|endoftext|> english: Copy all files ending in ".a" in directory trees matching "folder*" to "/path/to/dest" preserving directory hierarchy
bash: find Path -name Regex -print | cpio -p -v -d Regex <|endoftext|>
<|endoftext|> english: Sort the contents of file "ips.txt", eliminate duplicate entries, and prefix each entry with number of occurrences.
bash: sort File | uniq -c <|endoftext|>
<|endoftext|> english: Print base name of the file name without all extensions.
bash: basename Regex | cut -d Regex -f -Number <|endoftext|>
<|endoftext|> english: find all files in the current directory which are bigger than 4MB
bash: find Path -size +Size -print <|endoftext|>
<|endoftext|> english: find all the regular files in the current directory which do not have a read permission
bash: find Path -type f ! -perm -Permission <|endoftext|>
<|endoftext|> english: Archive "/home/abc/*" to "/mnt/windowsabc" with human readable output
bash: rsync -a -v -h File File <|endoftext|>
<|endoftext|> english: Recursively add read and execute permissions to all files and folders in "directory"
bash: chmod -R +Permission File <|endoftext|>
<|endoftext|> english: Removes empty folder, and hides error message if one is not empty.
bash: rmdir --ignore-fail-on-non-empty Directory <|endoftext|>
<|endoftext|> english: Lists all top-level files in a '/home/dreftymac/' folder.
bash: ls File <|endoftext|>
<|endoftext|> english: Removes any empty folder that matches pattern ed*.
bash: rmdir Directory <|endoftext|>
<|endoftext|> english: Find all regular .html files in the /var/www directory tree
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: Remove all files in the ~/backups/mydatabasename directory recursively that were last modified more than 30 days ago
bash: find Path -mtime +Timespan -exec rm {} \; <|endoftext|>
<|endoftext|> english: Find all *.rb (regular) files under current directory ensuring white space safety and print at most two file names/paths per line
bash: find Path -name Regex -type f -print0 | xargs -0 -n Quantity -I {} echo {} <|endoftext|>
<|endoftext|> english: find all the html files that are acces in the last 24 hours in the current folder
bash: find Path -mtime Timespan -name Regex -print <|endoftext|>
<|endoftext|> english: Prints groups list that current user belongs to.
bash: groups Regex Regex Regex Regex Regex Regex Regex Regex <|endoftext|>
<|endoftext|> english: change the permission of all the directories to 755 in the current folder
bash: find Path -type d -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Lists all subdirectories in a current folder, removing trailing slash.
bash: ls -d File | sed Program <|endoftext|>
<|endoftext|> english: Prints long listing of directory $var sorted from oldest to newest, with appended indicators.
bash: ls -F -l -t -r File <|endoftext|>
<|endoftext|> english: Find files with 002 permission under /tmp and print them with the string 'Found world write permissions:' printed as the first line of output or print 'No world writable found' if no such files were found
bash: find Path -type f -perm -Permission | awk -- Program <|endoftext|>
<|endoftext|> english: Find all directories named 'local' in entire file system
bash: find Path -name Regex -type d <|endoftext|>
<|endoftext|> english: display all files in the current folder expect text files
bash: find Path -name Regex -prune -or -print <|endoftext|>
<|endoftext|> english: List all variables (names and values) whose name or value contains X.
bash: env | grep Regex <|endoftext|>
<|endoftext|> english: find all the directories in the entire file system whose size is greater than 50KB
bash: find Path -type d -size +Size <|endoftext|>
<|endoftext|> english: List all leaf directories (directories which don't contain any sub-directory) under current directory
bash: find Path -depth -type d | sed Program <|endoftext|>
<|endoftext|> english: Create a tar archive with all *.java files under the current directory
bash: find Path -type f -name Regex | xargs -I {} tar -c -v -f File {} <|endoftext|>
<|endoftext|> english: find all files in home folder which have been modified exactly 1 day before
bash: find Path -mtime Timespan -daystart <|endoftext|>
<|endoftext|> english: Print percents of the space used on the file system containing path to the current working directory.
bash: df File -B Size | tail - Quantity | awk Program <|endoftext|>
<|endoftext|> english: Remove all files in the current directory tree that have the name "abc.xxx"
bash: find Path -name Regex -exec rm {} \; <|endoftext|>
<|endoftext|> english: display all text files in the folder /home/you which have been modified in the last 60*24 hours(case insensitive search)
bash: find Path -iname Regex -mtime -Timespan -print <|endoftext|>
<|endoftext|> english: find all files having certain word in its name in the current folder
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: Synchronize "/path/to/dir_b" with files in "/path/to/dir_a/" if the files are newer
bash: rsync -r -t -u -v File File <|endoftext|>
<|endoftext|> english: Make directory "foo"
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: Change to directory 'xyz' and resolve any symlinks in the resulting path, making the physical path the current one.
bash: cd -P Directory <|endoftext|>
<|endoftext|> english: Print the date formatted with "%a %x %X" followed by the host name
bash: echo $( date +"%a %x %X" ) $( hostname ) <|endoftext|>
<|endoftext|> english: Search for the regex ^catalina in the first line of each file under current directory
bash: find Path -type f | xargs -I {} head -v -n Quantity {} | grep -B Quantity -A Quantity -e Regex <|endoftext|>
<|endoftext|> english: Find all files under and below the current working directory with the word California in the file, and count the number of lines in the output
bash: find Path -type f -exec grep -n Regex {} \; -print | wc -l <|endoftext|>
<|endoftext|> english: Prints process tree of a process having id $mypid, with command options and process id number.
bash: pstree -a -A -p $( ps -e -j -H | awk -v Program Program ) <|endoftext|>
<|endoftext|> english: Find every file/directory under /var/spool that was modified more than 60 days ago.
bash: find Path -mtime +Timespan <|endoftext|>
<|endoftext|> english: Show manual for the find command
bash: man Regex <|endoftext|>
<|endoftext|> english: Find recursively the latest modified file in the current directory
bash: find Path -type f -print0 | xargs -0 -I {} ls -d -r -t {} | tail -n Quantity <|endoftext|>
<|endoftext|> english: Find files/directories named 'sar' under directory trees whose path starts with '/u' or '/b' or '/s' or '/o'
bash: find Path $( ls -d File ) -name Regex <|endoftext|>
<|endoftext|> english: display long list of all the perl files in the current folder
bash: find Path -name Regex -ls <|endoftext|>
<|endoftext|> english: Search for 'birthday' (case insensitive) in all regular files under ~/Documents directory tree and show only the filenames
bash: find Path -type f -print0 | xargs -0 -I {} grep -i -l Regex {} <|endoftext|>
<|endoftext|> english: Recursively removes all files like '*.pyc' in a current folder.
bash: find Path -name Regex | xargs -I {} rm -r -f {} <|endoftext|>
<|endoftext|> english: List all files/directories in entire file system
bash: find Path -print <|endoftext|>
<|endoftext|> english: Append "foo" and "bar" column in file "file" with values dependent on the current table contents
bash: awk Program Program | column -t <|endoftext|>
<|endoftext|> english: Create symbolic links in current directory for all files located in "dir" directory and have filename extension "jpg"
bash: find Path -name Regex -exec ln -s {} \; <|endoftext|>
<|endoftext|> english: Print lines of 'file' reverted order, and reverted characterwise
bash: tac File | rev <|endoftext|>
<|endoftext|> english: find files which full path name is /tmp/foo/bar under /tmp/foo directory and print
bash: find Path -path Regex -print <|endoftext|>
<|endoftext|> english: Find recursively regular files in the directory given as the script's command line argument #1, skipping hidden files and directories
bash: find Path -path Regex -prune -or \( -type f -print0 \) <|endoftext|>
<|endoftext|> english: Append "<br/>" to the end of each line in "1\n2\n3"
bash: echo -e Regex | sed Program <|endoftext|>
<|endoftext|> english: Update the archive '2009.tar' with the files from the data/ directory tree that match pattern 'filepattern-*2009*'
bash: find Path -name Regex -exec tar -u -f File {} \; <|endoftext|>
<|endoftext|> english: Create a copy of index.html in all directories in current directory whose name contains Va, pausing for confirmation before overwriting any existing files - names may not contain spaces.
bash: find Path -mindepth Quantity -maxdepth Quantity -type d | grep Regex | xargs -n Quantity -I {} cp -i File {} <|endoftext|>
<|endoftext|> english: Print 'bla.txt' if at least one file with such name is present below the current directory.
bash: ls -a -l -F -t $( find Path -name Regex ) | rev | cut -d Regex -f Number | rev | head - Quantity <|endoftext|>
<|endoftext|> english: Find all files larger than 20000k and print their names and sizes
bash: find Path -type f -size +Size -exec ls -l -h {} \; | awk Program <|endoftext|>
<|endoftext|> english: Print the IP addresses for the current host name
bash: hostname -I | cut -f Number -d Regex <|endoftext|>
<|endoftext|> english: Find all .mp3 files with more than 10MB and delete them
bash: find Path -type f -name Regex -size +Size -exec rm {} \; <|endoftext|>
<|endoftext|> english: Copy all *.data files under /source_path to /target_path
bash: find Path -name Regex -exec cp {} File \; <|endoftext|>
<|endoftext|> english: Find all the files that were modified exactly one day ago
bash: find Path -mtime Timespan <|endoftext|>
<|endoftext|> english: Find *2011* files and grep for the string 'From: Ralph' in those files
bash: find Path -name Regex -print | xargs -n Quantity -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: Change permissions to 644 for all files in the current directory tree
bash: find Path -type f | xargs -I {} chmod -v Permission {} <|endoftext|>
<|endoftext|> english: find all the text files in the folder /home/calvin and do not search beyond 2 levels
bash: find Path -maxdepth Quantity -name Regex <|endoftext|>
<|endoftext|> english: Replace all instances of "string" with "longer_string" in file "input.txt" and re-align
bash: cat File | sed Program | column -t <|endoftext|>
<|endoftext|> english: Find x* files/directories under /tmp directory whose status was changed less than 1 day ago
bash: find Path -ctime -Timespan -name Regex <|endoftext|>
<|endoftext|> english: returns the first 100 bytes in the file
bash: head -c Quantity File <|endoftext|>
<|endoftext|> english: display all the files in the file system which belong to the user "wnj" and which are modified after the file "ttt"
bash: find Path -newer File -user Regex -print <|endoftext|>
<|endoftext|> english: Count the number of files in the current directory and below
bash: find Path -type d -exec basename {} \; | wc -l <|endoftext|>
<|endoftext|> english: find all teh script files in a directory
bash: find Path -name Regex -type f -print <|endoftext|>
<|endoftext|> english: Delete all directories found in $LOGDIR that are more than a work-week old
bash: find Path -type d -mtime +Timespan -exec rm -r -f {} \; <|endoftext|>
<|endoftext|> english: Move files from $sourcePath to $destPath that have not been modified in the last 10 days
bash: find Path -type f -mtime +Timespan -name Regex -exec mv {} File \; <|endoftext|>
<|endoftext|> english: start from current directory, skip the directory src/emacs and print it then skip all files and directories under it, and print the names of the other files found
bash: find Path -wholename Regex -prune -and -print <|endoftext|>
<|endoftext|> english: Mount "/dev/shm" using /etc/fstab entry
bash: mount Regex <|endoftext|>
<|endoftext|> english: remote copy all text files from one location to another
bash: find Path -name Regex -exec rsync -R {} File \; <|endoftext|>
<|endoftext|> english: Make directory "foo" and do not cause an error if it exists
bash: mkdir -p Directory <|endoftext|>
<|endoftext|> english: Print numbers from 1 to 30 with equalized 0 padding
bash: seq -w Number <|endoftext|>
<|endoftext|> english: Finds all the log* files recursively in /myDir that are more than 7 days older and compresses them.
bash: find Path -name Regex -ctime +Timespan -exec bzip2 -z -v {} \; <|endoftext|>
<|endoftext|> english: Find files with extension .conf in the /etc directory tree
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: find for the word "dba_2pc_pending" in all the files of current fodler having the word "sql" in their name
bash: find Path -print | grep Regex | xargs -I {} grep -i Regex {} <|endoftext|>
<|endoftext|> english: Find all files/directories named 'apt' in the entrie filesystem
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: recursively change owner and group of the directory  /vol/html and all files into it to user ec2-user and group apache
bash: chown -R Regex File <|endoftext|>
<|endoftext|> english: find file which case-insensitive name is foo in current directory.
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: create a zip of all the files in the current folder which are bigger than 100Kb and do not go more than 2 levels during search
bash: find Path -maxdepth Quantity -size +Size -exec bzip2 {} \; <|endoftext|>
<|endoftext|> english: Clears terminal screen.
bash: echo $( clear ) <|endoftext|>
<|endoftext|> english: Finds shell options with 'login' in name.
bash: shopt | grep Regex <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory and print their paths
bash: find Path -exec echo {} + <|endoftext|>
<|endoftext|> english: Split "$1" into files of at most "$2" or default 10000 using a numeric suffix of length 6
bash: split -l Quantity -d -a Quantity File <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory that are greater than 10MB in size
bash: find Path -size +Size <|endoftext|>
<|endoftext|> english: Search for 'pattern' in all files with '.cc' extension under current directory tree and show the matched lines with line numbers and filenames
bash: find Path -name Regex | xargs -I {} grep -n Regex {} <|endoftext|>
<|endoftext|> english: display list of all the regular/normal files in the current folder which start with "my"
bash: find Path -name Regex -type f -ls <|endoftext|>
<|endoftext|> english: Find *.c and *.h files under the current directory tree skipping hidden directories and files
bash: find Path \( -path Regex -prune -or ! -name Regex \) -and -name Regex <|endoftext|>
<|endoftext|> english: display all the files in the current folder
bash: find Path -print <|endoftext|>
<|endoftext|> english: Archive "/var/www/test/" to "/var/www/test" on host "231.210.24.48" as user "ubuntu" via ssh using identity file "/home/test/pkey_new.pem"
bash: rsync -r -a -v -e File File File <|endoftext|>
<|endoftext|> english: Saves index number of file 'script.sh' in the 'inode' variable.
bash: ls -i File | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: Find all files under current directory excluding hidden files
bash: find Path -depth -path Regex -prune -or -print <|endoftext|>
<|endoftext|> english: find all files that are readable and writable by their owner
bash: find Path -perm -Permission -print <|endoftext|>
<|endoftext|> english: Print the second space separated fields from standard input
bash: tr -s Regex | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: ERROR - will overwrite the executable if it's not a symlink.
bash: ln -s -f File $( which Regex ) <|endoftext|>
<|endoftext|> english: Fiind and remove multiple files such as *.mp3 or *.txt
bash: find Path -type f -name Regex -exec rm -f {} \; <|endoftext|>
<|endoftext|> english: Save the FQDN host name of the system in variable "hnd"
bash: hostname -f <|endoftext|>
<|endoftext|> english: Show the list of files that are not owned by user wnj or are not newer than file `ttt'
bash: find Path ! \( -newer File -user Regex \) -print <|endoftext|>
<|endoftext|> english: Search the current directory recursively for files containing "needle text"
bash: find Path -type f -print0 | xargs -0 -I {} grep -I Regex {} <|endoftext|>
<|endoftext|> english: display the filename and size of all the files in the file system which are bigger than 20MB
bash: find Path -type f -size +Size -exec ls -l -h {} \; | awk Program <|endoftext|>
<|endoftext|> english: Look for any instance of "HIGHMEM" in the current kernel's compile-time config file.
bash: grep Regex $( uname -r ) <|endoftext|>
<|endoftext|> english: Show process tree with command-line arguments of a process that has id 20238.
bash: pstree -a -p Regex <|endoftext|>
<|endoftext|> english: SSH into host "$1" using key file "/path/to/ssh/secret/key" and execute command "$2"
bash: ssh -i File Regex command <|endoftext|>
<|endoftext|> english: display list of all the regular/normal files in the home folder which are bigger than 512 kb
bash: find Path -type f -size +Size -exec ls -l -h {} \; <|endoftext|>
<|endoftext|> english: Display differences between list of files in /bin and /usr/bin.
bash: diff <( ls File ) <( ls File ) <|endoftext|>
<|endoftext|> english: Print number of lines that equal in files '/home/xyz/a.csv1' and '/home/abc/tempfile'
bash: comm -1 -2 <( sort -u File ) <( sort -u File ) | wc -l <|endoftext|>
<|endoftext|> english: List all file paths under the current directory with case insensitive name ".note" in reverse alphabetic order
bash: find Path -iname Regex | sort -r <|endoftext|>
<|endoftext|> english: display the long listing of all files in /var/log which were modified 60 days or more ago.
bash: find Path -mtime +Timespan -type f -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: Delete all lines matching "pattern" in "filename"
bash: sed -i Program File <|endoftext|>
<|endoftext|> english: Remove all regular files found in and below /path
bash: find Path -type f -exec rm {} + <|endoftext|>
<|endoftext|> english: find the oldest normal file in the current directory
bash: find Path -type f -printf '%T+ %p\n' | sort | head -n Quantity <|endoftext|>
<|endoftext|> english: Find all directories under minimum 1 level down the  $GIVEN_DIR directory
bash: find Path -type d -mindepth Quantity <|endoftext|>
<|endoftext|> english: Delete files "*doc copoy" in directory tree /mnt/zip
bash: find Path -name Regex -execdir rm {} \; <|endoftext|>
<|endoftext|> english: Find all hard links to file1 under /home directory
bash: find Path -xdev -samefile Regex <|endoftext|>
<|endoftext|> english: Find all SGID files in entire file system
bash: find Path -perm +Permission <|endoftext|>
<|endoftext|> english: display all the files in the current folder that have been modified in the last 24 hours
bash: find Path -mtime -Timespan <|endoftext|>
<|endoftext|> english: Find all empty files in the current directory and delete them
bash: find Path -type f -maxdepth Quantity -empty -print0 | xargs -0 -I {} rm {} <|endoftext|>
<|endoftext|> english: Write every two lines in "infile" on a single line separated by a space
bash: cat File | paste -s -d File <|endoftext|>
<|endoftext|> english: display all the files in the current folder which have the permissions 777 and which have been modified in the last 24 hours.
bash: find Path -perm Permission -mtime Timespan -print <|endoftext|>
<|endoftext|> english: list all the ".ksh" files in the current directory
bash: find Path -ls -name Regex <|endoftext|>
<|endoftext|> english: Find all directories named 'mydir' under 'local' and '/tmp' directory tree
bash: find Path Path -name Regex -type d -print <|endoftext|>
<|endoftext|> english: Delete all regular files that start with 'sess_' in their names, are at least 1 level deep and were modified more than $gc_maxlifetime minutes ago under $save_path directory tree
bash: find Path Path -depth -mindepth Quantity -name Regex -ignore_readdir_race -type f -cmin Quantity -delete <|endoftext|>
<|endoftext|> english: find all the text files in the current folder
bash: find Path -type f -name Regex -print <|endoftext|>
<|endoftext|> english: List the unique parent directories of all .class files found in the entire filesystem
bash: find Path -name Regex -printf '%h\n' | sort --unique <|endoftext|>
<|endoftext|> english: Find files smaller than 40 blocks skipping directories on other file systems
bash: find Path -size -Size -xdev -print <|endoftext|>
<|endoftext|> english: Find directories that are directly under $workspace_ts directory (no-subdirectories) and were modified more than 30 days ago
bash: find Path -mindepth Quantity -maxdepth Quantity -type d -mtime +Timespan -print <|endoftext|>
<|endoftext|> english: Display differences between /tmp/test1 and /tmp/test2 side-by-side.
bash: diff -y File File <|endoftext|>
<|endoftext|> english: List all files in the /myfiles directory tree
bash: find Path -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: Delete interactively all the files/directories with inode number 782263 under current directory tree
bash: find Path -inum Quantity -exec rm -i {} \; <|endoftext|>
<|endoftext|> english: Remove all directories called "test" from the /path/to/dir directory tree
bash: find Path -name Regex -type d -exec rm -r -f {} \; <|endoftext|>
<|endoftext|> english: Find all files/directories under /var/log directory
bash: find Path <|endoftext|>
<|endoftext|> english: Find files in the current directory tree which are larger than 5 MB in size
bash: find Path -size +Size -type f <|endoftext|>
<|endoftext|> english: Move "$PHANTOM_JS" to "/usr/local/share" directory
bash: mv File File <|endoftext|>
<|endoftext|> english: Print a welcome message with the current user's user name
bash: echo $( whoami ) <|endoftext|>
<|endoftext|> english: Combine every two lines of standard input
bash: paste -d Regex File File <|endoftext|>
<|endoftext|> english: Find files/directories named 'TEST_3' under current directory tree
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all *.py files under current directory and search for regular expressions taken from the search_terms.txt file
bash: find Path -name Regex -exec grep -n -f File {} \; <|endoftext|>
<|endoftext|> english: Search the .sh files in the current directory tree for string "ksh"
bash: find Path -name Regex | xargs -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: Archive directory specified by variable "i" to "/iscsi" preserving relative paths.
bash: rsync -a -v -R File File <|endoftext|>
<|endoftext|> english: Finds all files having text "texthere" recursively in a current folder, and precedes found string with string number in file and file name.
bash: find Path -type f -exec grep -H -n Regex {} + <|endoftext|>
<|endoftext|> english: Find the first file/directory under current directory and quit
bash: find Path Path -print Path <|endoftext|>
<|endoftext|> english: List all *.bak files in the current directory tree
bash: find Path -name Regex -ls <|endoftext|>
<|endoftext|> english: find all file name in curent directory ,  -exec will file all file output  awk used here for print only file name .
bash: find Path -type f -exec ls -l -r -t {} \; | awk -F Regex Program <|endoftext|>
<|endoftext|> english: List all files under current directory with white space safety in their paths
bash: find Path -type f -print0 | xargs -0 -I {} ls {} <|endoftext|>
<|endoftext|> english: Find all files under /path/to/dir and change their permission to 644
bash: find Path -type f -exec chmod Permission {} + <|endoftext|>
<|endoftext|> english: find a 'fool.scala' named regular file under /opt /usr /var those directories.
bash: find Path Path Path -name Regex -type f <|endoftext|>
<|endoftext|> english: Reverse the order of lines in "myfile.txt" using BSD "tail" command
bash: tail - Quantity File <|endoftext|>
<|endoftext|> english: List all files in maximum 2 levels down the current directory
bash: find Path -maxdepth Quantity -type f -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: Find a directory named 'project.images' case insensitively in the entire filesystem and show it in long listing format
bash: find Path -type d -iname Regex -ls <|endoftext|>
<|endoftext|> english: List all files in the /hometest directory tree whose names are "Trash", and their sizes
bash: find Path -name Regex -exec ls -s {} \; <|endoftext|>
<|endoftext|> english: Find *.txt files in the current directory tree, ignoring paths ./Movies/*, ./Downloads/*, and ./Music/*
bash: find Path -type f -name Regex ! -path Regex ! -path Regex ! -path Regex <|endoftext|>
<|endoftext|> english: Copies file '/boot/config-`uname -r`' to the  '.config', printing info message and prompting before owerwriting files.
bash: cp -v -i $( uname -r ) File <|endoftext|>
<|endoftext|> english: Find all files under current directory
bash: find Path -type f <|endoftext|>
<|endoftext|> english: Find all Read Only files in the file system
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: Execute "ls -l" every 2 seconds
bash: watch ls -l <|endoftext|>
<|endoftext|> english: List *.txt files under current directory that have 'mystring' in their name
bash: find Path -name Regex | grep -E Regex <|endoftext|>
<|endoftext|> english: Split "file.txt" excluding the first line into files of at most 4 lines each and with a prefix "split_"
bash: tail -n +Quantity File | split -l Quantity File Regex <|endoftext|>
<|endoftext|> english: Find all files/directories with '.tar.gz' extension under $DIR/tmp/daily/ directory tree, sort them numerically and show the last 3 of them
bash: find Path -name Regex | sort -n | tail - Quantity <|endoftext|>
<|endoftext|> english: Change permissions to 644 of multiple files with permissions 755
bash: find Path -perm Permission -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Create a compressed archive named 'my_directory.tar.gz' with files inside directory 'my_directory' without including the directory entry 'my_directory' itself
bash: tar -c -z -v -f File -C Directory File <|endoftext|>
<|endoftext|> english: Find files/directories under current directory that matches './projects/insanewebproject' in their paths
bash: find Path -ipath Regex <|endoftext|>
<|endoftext|> english: Compress all files in the "$FILE" directory tree that were last modified 30 days ago and have not already been compressed with gzip
bash: find Path -type f -not -name Regex -mtime Timespan -exec gzip {} \; <|endoftext|>
<|endoftext|> english: Find all *.txt files/directories under current directory
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: Move each of the 'm?' directories in current directory to another directory whose name is constituted by appending .mbox to each directory name and create a directory named Messages in this directory then move all *.emlx files into this directory
bash: find Path -name Regex -type d -exec mv {} File \; -exec mkdir Directory \; -exec sh -c mv File File \; <|endoftext|>
<|endoftext|> english: Remove all "core" regular files in the /tmp/ directory tree
bash: find Path -name Regex -type f -print | xargs -I {} rm -f {} <|endoftext|>
<|endoftext|> english: Find files in the current directory tree whose names begin with "file" and whose size is 0, and remove them
bash: find Path -name Regex -size Size -delete <|endoftext|>
<|endoftext|> english: Find *.c files under $HOME and search for the string 'sprintf' in those files
bash: find Path -name Regex -print | xargs -I {} grep -l Regex {} <|endoftext|>
<|endoftext|> english: Sets shell option 'extglob'.
bash: shopt -s extglob <|endoftext|>
<|endoftext|> english: Send one ping request to host whose name or IP address is specified by variable "ip", using network interface eth9.
bash: ping Regex -I Regex -c Quantity <|endoftext|>
<|endoftext|> english: Recursively change the owner to "$USER" and group to "$GROUP" of "/var/log/cassandra"
bash: chown -R Regex File <|endoftext|>
<|endoftext|> english: Create a symbolic link named "~/bin/subl" to "/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl"
bash: ln -s File Regex <|endoftext|>
<|endoftext|> english: find files in current folder using name patterns and sort the display the file names in the sorted order
bash: find Path -name Regex | rev | awk -F Regex Program | rev | sort -t Regex -k Number <|endoftext|>
<|endoftext|> english: Find all files/directories with '.in' extension in the directory $directory and its subdirectories
bash: du -a File | awk Program | grep Regex <|endoftext|>
<|endoftext|> english: List the last entry of the numerically sorted list of all files and folders under "/foldername"
bash: find Path | sort -n | tail - Quantity <|endoftext|>
<|endoftext|> english: Recursively removes all files like '._*' from current folder.
bash: find Path -name Regex -print0 | xargs -0 -I {} rm -r -f {} <|endoftext|>
<|endoftext|> english: Copy "some_file_name" to "destination_directory" and change ownership to "someuser:somegroup"
bash: echo Regex | cpio -p --owner Regex Regex <|endoftext|>
<|endoftext|> english: Reports count of processors in system.
bash: grep Regex File | sort -u | wc -l <|endoftext|>
<|endoftext|> english: Set variable "b" to the first word of "a" converted to uppercase.
bash: echo Regex | awk Program <|endoftext|>
<|endoftext|> english: Counts non-blank lines (lines with spaces are considered blank) in all *.py files in a current folder.
bash: grep -v Regex File | wc <|endoftext|>
<|endoftext|> english: find all data files in current folder which have not been changed in the last 60 minutes and display their name without extension
bash: find Path -iregex Regex -type f -cmin +Quantity -exec basename {} \; <|endoftext|>
<|endoftext|> english: Remove the last 2 tab-separated fields of each line in file pointed to by filename
bash: cat File | rev | cut -c Number | rev <|endoftext|>
<|endoftext|> english: Find all files with the SUID bit set beginning with the root directory
bash: find Path -perm -Permission <|endoftext|>
<|endoftext|> english: List all files in the current directory tree except for those in the ./src/emacs directory
bash: find Path -path Regex -prune -or -print <|endoftext|>
<|endoftext|> english: Ping all hosts in file "ips" twice
bash: cat File | xargs -I {} ping -c Quantity {} <|endoftext|>
<|endoftext|> english: Search all files in the current directory tree, except GIT files, for "string-to-search"
bash: find Path -name Regex -prune -or -print | xargs -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: Replace all non-punctuation characters with newlines from standard input
bash: tr -s -c Regex Regex <|endoftext|>
<|endoftext|> english: Display the content of YourFile.txt, waiting for user input at each page.
bash: more File <|endoftext|>
<|endoftext|> english: Find all regular files in minimum 1 level down the $dir directory
bash: find Path -mindepth Quantity -type f <|endoftext|>
<|endoftext|> english: Find all files in the home directory tree that are owned by another user
bash: find Path ! -user Regex <|endoftext|>
<|endoftext|> english: Starts new tmux session, assuming the terminal supports 256 colours.
bash: tmux -2 <|endoftext|>
<|endoftext|> english: Find all hidden directories starting from the current directory
bash: find Path -type d -name Regex <|endoftext|>
<|endoftext|> english: display all files in current folder which are bigger than 100KB but are less than 500KB
bash: find Path -size +Size -and -size -Size <|endoftext|>
<|endoftext|> english: Creates temporary directory with name formatted like .daemonXXXXXXX in /tmp/ folder, and saves path to it in 'TMPDIR' variable.
bash: mktemp -p Directory -d Regex <|endoftext|>
<|endoftext|> english: SSH into host "server" as user "user"
bash: ssh Regex <|endoftext|>
<|endoftext|> english: download contents of a website "https://get.scoop.sh"
bash: curl Regex Regex <|endoftext|>
<|endoftext|> english: Replace all colons (':') with newlines in $list and search for the first match to the regex "^$removepat\$" where $removepat is a variable and save the result to variable 'removestr'
bash: echo Regex | tr Regex Regex | grep -m Quantity Regex <|endoftext|>
<|endoftext|> english: Counts all business days in a current month.
bash: cal -h | cut -c Number | tail -n +Quantity | wc -w <|endoftext|>
<|endoftext|> english: display all the files in the current folder
bash: find Path <|endoftext|>
<|endoftext|> english: Replace all occurrences of "foo_fn" with "bar_fn" in the files named "foo_fn" from the current directory tree
bash: find Path -name Regex -exec sed -i Program {} \; <|endoftext|>
<|endoftext|> english: search for all the files in current folder which start with "file2015-0" and move them to frst 400 fiiles  to another folder
bash: find Path -name Regex | head - Quantity | xargs -I {} mv {} <|endoftext|>
<|endoftext|> english: Find all image.pdf files/directories under ./polkadots
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Search the ~ and `Music' directory trees for .mp3 files
bash: find Path Path -name Regex <|endoftext|>
<|endoftext|> english: Count the number of open files for PID "$PYTHONPID" every 2 seconds
bash: watch command <|endoftext|>
<|endoftext|> english: Find all regular files in the current directory tree last modified between 1 and 3 days ago and list them using find's -ls option
bash: find Path -daystart -mtime -Timespan -type f ! -mtime -Timespan -exec ls -l -d {} \; <|endoftext|>
<|endoftext|> english: Decompress "/file/address/file.tar.gz" to standard output
bash: gzip -d -c Regex <|endoftext|>
<|endoftext|> english: Identify CMS version/releases accross all your PHPBB installations
bash: find Path -type f -wholename Regex -exec grep -H Regex {} \; <|endoftext|>
<|endoftext|> english: Save directory "../../lib" relative to the executable "gcc" to variable "libdir"
bash: dirname $( dirname $( which Regex ) ) <|endoftext|>
<|endoftext|> english: Finds file 'Subscription.java' and changes to containing folder.
bash: cd $( find Path -name Regex | xargs -I {} dirname {} ) <|endoftext|>
<|endoftext|> english: List the current directory recursively ignoring the "dir1" subdirectory's content
bash: find Path -print -name Regex -prune <|endoftext|>
<|endoftext|> english: Remove all directories called "test" from the current directory tree
bash: find Path -name Regex -type d -delete <|endoftext|>
<|endoftext|> english: Find and show all files in the current directory tree that are exactly 2000 kB
bash: find Path -size Size <|endoftext|>
<|endoftext|> english: Store N symbols of input into variable 'buffer'
bash: read -N Quantity Regex <|endoftext|>
<|endoftext|> english: display all the directories in the current folder and create a skeleton of make directory commands with all these folders
bash: find Path -type d | sed -r Program <|endoftext|>
<|endoftext|> english: Add executable permission to "java_ee_sdk-6u2-jdk-linux-x64.sh"
bash: chmod +Permission File <|endoftext|>
<|endoftext|> english: Make a list of all files in the current directory tree, except *.png and *.class, and view it in the vim editor
bash: find Path | grep -v Regex | grep -v Regex | vim File <|endoftext|>
<|endoftext|> english: Save full path of command "tr" to variable "TR"
bash: which Regex <|endoftext|>
<|endoftext|> english: Search all .py files in the current directory tree for "some_function"
bash: find Path -name Regex | xargs -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: long list al the files in the current directory which have read permission to the group
bash: find Path -perm -Permission -type f -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: Execute "ls -l" every 2 seconds
bash: watch ls -l <|endoftext|>
<|endoftext|> english: Search for file names with "bad" characters in the current directory and delete the files.
bash: find Path -name Regex -maxdepth Quantity -exec rm -f {} \; <|endoftext|>
<|endoftext|> english: find all CSS files under currenty directory and use sed to edit them
bash: find Path -name Regex -exec sed -i -r Program {} \; <|endoftext|>
<|endoftext|> english: Search the current directory tree for *cache, *xml, and *html files
bash: find Path -type f \( -name Regex -or -name Regex -or -name Regex \) <|endoftext|>
<|endoftext|> english: Create an archive named newArch from the contents of ./test directory
bash: find Path -printf "././%f\n" | cpio -o -F Regex <|endoftext|>
<|endoftext|> english: Print unique lines of sorted file "a" compared with sorted file "b"
bash: comm -2 -3 File File <|endoftext|>
<|endoftext|> english: Find files modified more recently than file poop
bash: find Path -newer File <|endoftext|>
<|endoftext|> english: Print list of file systems currently mounted.
bash: df -h | awk Program <|endoftext|>
<|endoftext|> english: Set the shell option 'errexit'  causing bash to exit immediately if one of the commands in a multi-command statement fails.
bash: set -e <|endoftext|>
<|endoftext|> english: Find all *conf* files recursively under current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Saves byte size of all content of $1 folder in 'uiTotalSize' variable.
bash: ls -l -R File | grep -v Regex | awk Program <|endoftext|>
<|endoftext|> english: display all the regular files in the current folder and do not search in sub folders
bash: find Path -maxdepth Quantity -type f <|endoftext|>
<|endoftext|> english: Delete files in /var/tmp/stuff and below that have not been modified in over 90 days
bash: find Path -mtime +Timespan -print | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: Find all files and directories under current directory
bash: find Path <|endoftext|>
<|endoftext|> english: Gets IP address of 'en1' network interface.
bash: ifconfig Regex | grep Regex | awk Program | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: display a long listing of all the normal/regular files in the current folder (print0 is used to handle files which have newlines in their names or files with the name only as spaces )
bash: find Path -type f -print0 | xargs -0 -I {} ls -l {} <|endoftext|>
<|endoftext|> english: Remove all *.mp3 files in tmp directory but not in it's subdirectories
bash: rm $( find Path -maxdepth Quantity -name Regex ) <|endoftext|>
<|endoftext|> english: Copy loadable kernel module "mymodule.ko" to the drivers in modules directory matchig current kernel.
bash: cp File $( uname -r ) <|endoftext|>
<|endoftext|> english: Measure the disk space taken up by all TXT files in the current directory tree
bash: find Path -iname Regex -exec du -b {} + | awk Program <|endoftext|>
<|endoftext|> english: remove all the core files from /usr folder which have not been accessed in the last 7*24 hours
bash: find Path -name Regex -atime +Timespan -exec rm {} \; <|endoftext|>
<|endoftext|> english: display all the files in the home folder which have read permission to the user
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: Delete all non digits from index "$i" in bash array "depsAlastmodified" and print the hex dump as characters
bash: echo Regex | tr -c -d Regex | od -c <|endoftext|>
<|endoftext|> english: Find all files under and below /dir that were changed or created less than 60 minutes ago
bash: find Path -cmin -Quantity <|endoftext|>
<|endoftext|> english: Counts lines in each *.php file sorted by file path.
bash: find Path -name Regex -type f | sort | xargs -I {} wc -l {} <|endoftext|>
<|endoftext|> english: Print the help message of command "split"
bash: split --help <|endoftext|>
<|endoftext|> english: Invoke a trusted X11 forwarding SSH connection with the server $ssh_server as user $ssh_user
bash: ssh -Y Regex <|endoftext|>
<|endoftext|> english: ERROR - this is for DOS
bash: ping -n Regex Regex | find Path <|endoftext|>
<|endoftext|> english: Find all broken symlinks under current directory
bash: find Path -type l -xtype l <|endoftext|>
<|endoftext|> english: remove all "Foo*" files under current dir
bash: find Path -type f -name Regex -exec rm {} \; <|endoftext|>
<|endoftext|> english: Search for files/directories which have read and write permission for their owner, and group and only read permission for others
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: Remove leading and trailing spaces or tabs from "   wordA wordB wordC   "
bash: echo Regex | sed -e Program | sed -e Program <|endoftext|>
<|endoftext|> english: Find all directories in maximum 2 levels down the /tmp directory
bash: find Path -maxdepth Quantity -mindepth Quantity -type d <|endoftext|>
<|endoftext|> english: Find all empty regular files in the current directory and below
bash: find Path -type f -empty <|endoftext|>
<|endoftext|> english: Search for first match of the regex 're' in all *.coffee files under current directory and print the file names
bash: find Path -name Regex -exec awk Program {} \; <|endoftext|>
<|endoftext|> english: Find the directories whose names contain "New Parts" at level 3 of the current directory tree and create symlinks to them in /cygdrive/c/Views
bash: find Path -mindepth Quantity -maxdepth Quantity -type d -name Regex -exec ln -s -t Directory {} \; <|endoftext|>
<|endoftext|> english: Recursively change the ownership of all files in "/Users/xxx/Library/Developer/Xcode/Templates" to "xxx"
bash: chown -R Regex File <|endoftext|>
<|endoftext|> english: Shows state of 'extglob' shell option.
bash: shopt -o extglob <|endoftext|>
<|endoftext|> english: Remove all files in the /myfiles directory tree that were accessed at least 30 days ago
bash: find Path -atime +Timespan -exec rm {} \; <|endoftext|>
<|endoftext|> english: Clear the in-memory history
bash: history -c <|endoftext|>
<|endoftext|> english: Find empty regular files in /dir and its subdirectories
bash: find Path -type f -size Size -print <|endoftext|>
<|endoftext|> english: find all files with the first letter “e” or “f” and last one x in /usr/bin directory:
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Kill all processes matching the string "myProcessName"
bash: ps -e -f | grep Regex | grep -v Regex | awk Program | xargs -I {} kill - Regex {} <|endoftext|>
<|endoftext|> english: Remove all 'a.out', '*.o', and 'core' files in the current directory tree
bash: find Path \( -name Regex -or -name Regex -or -name Regex \) -exec rm {} \; <|endoftext|>
<|endoftext|> english: List all *.png files/directories under /home/kibab directory
bash: find Path -name Regex -exec echo {} \; <|endoftext|>
<|endoftext|> english: Find all the regular files with '.tgz' and '.gz' extensions and delete the oldest file under '/home/backups' directory tree
bash: find Path -type f \( -name Regex -or -name Regex \) -print0 | xargs -0 -I {} ls -t {} | tail - Quantity | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: create a tar of all png & jpg images in the current folder
bash: find Path \( -iname Regex -or -iname Regex \) -print -exec tar -r -f File {} \; <|endoftext|>
<|endoftext|> english: find all the ogg files in the current directory which have the word "monfichier" in their name
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: List each file or directory in the current directory prefixed by its filesize in bytes and sorted from smallest to largest
bash: du -a --max-depth Quantity | sort -n <|endoftext|>
<|endoftext|> english: Search the home directory tree for files modified less than a day ago
bash: find Path -mtime -Timespan <|endoftext|>
<|endoftext|> english: find all the directories in the current folder
bash: find Path -type d -print <|endoftext|>
<|endoftext|> english: set MyVariable to the value of VARIABLE_NAME
bash: env | grep Regex | grep -o -e Regex <|endoftext|>
<|endoftext|> english: Count the number of differing lines in "file1" and "file2" with 0 lines of unified context
bash: diff -U Quantity File File | grep -v Regex | wc -l <|endoftext|>
<|endoftext|> english: Print IP addresses of the current host
bash: hostname -I | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: create directory saxon_docs
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: find all the text files that have modified in the last 2 days and not modified today
bash: find Path -name Regex -type f -daystart -mtime +Timespan -mtime -Timespan <|endoftext|>
<|endoftext|> english: Start 'top' to monitor all processes with the default settings.
bash: top <|endoftext|>
<|endoftext|> english: List all files/directories under current directory matching the posix-egrep type regex ".+\.(c|cpp|h)$" in their names excluding the paths */generated/* and */deploy/*
bash: find Path -regextype posix-egrep -regex Regex -not -path Regex -not -path Regex -print0 | xargs -0 -I {} ls -L -1 -d {} <|endoftext|>
<|endoftext|> english: Search the file system for regular files whose names are shorter than 25 characters
bash: find Path -type f | grep -E Regex <|endoftext|>
<|endoftext|> english: Search for 'Processed Files' in all $srch* (case insensitive) files under current directory
bash: find Path -iname Regex -exec grep Regex {} \; -print <|endoftext|>
<|endoftext|> english: find all the text files in the current folder and display the results pagewise
bash: find Path -name Regex -print | less <|endoftext|>
<|endoftext|> english: find all the php files in current folder using regular expressions
bash: find Path -regex Regex <|endoftext|>
<|endoftext|> english: Print the filenames taken by the glob pattern * with null character as the delimiter
bash: find Path -maxdepth Quantity -type d -print0 <|endoftext|>
<|endoftext|> english: Display bash function definition of "foobar"
bash: set | sed -n Program <|endoftext|>
<|endoftext|> english: Use multiple -exec command in find . Find all .txt files & grep banna in .txt files .
bash: find Path -name Regex -exec echo {} \; -exec grep Regex {} \; <|endoftext|>
<|endoftext|> english: Lists all files in a current folder, separating names with comma.
bash: ls -1 | tr Regex Regex | sed Program <|endoftext|>
<|endoftext|> english: Remove trailing white spaces and replace CRLF with LF in all files under current directory ignoring .git and .svn directories
bash: find Path -not \( -name Regex -prune -or -name Regex -prune \) -type f -exec sed -i Program File \; -exec sed -i Program File \; <|endoftext|>
<|endoftext|> english: Find all the files on the system that have been changed within the last hour
bash: find Path -cmin -Quantity <|endoftext|>
<|endoftext|> english: Recursively prints paths to all text file in folder (ignores binary files).
bash: grep -R -I -l Regex File <|endoftext|>
<|endoftext|> english: Prints first found folder that contains 'ssh' file and has 'bin' in path.
bash: dirname $( find Path -name Regex | grep Regex | head - Quantity ) <|endoftext|>
<|endoftext|> english: Removes only lowest level subfolders from current directory tree (folders without files and another folders within).
bash: find Path -type d | xargs -I {} rmdir {} <|endoftext|>
<|endoftext|> english: Extract 8 bytes as an unsigned integer that is "$o" offset into "$rpm"
bash: set $( od -j Size -N File -t u1 File ) <|endoftext|>
<|endoftext|> english: Search the /home/bozo/projects directory tree for files modified within the last 24 hours
bash: find Path -mtime Timespan <|endoftext|>
<|endoftext|> english: display all file in the home folder except ".c" files
bash: find Path -not -iname Regex -print <|endoftext|>
<|endoftext|> english: Search for environmental variables with "HIST" in their name or contents
bash: set | grep Regex <|endoftext|>
<|endoftext|> english: Print nothing because 'MYVAR' string doesn`t match with '/[^/]+:' pattern
bash: echo Regex | grep -o -E Regex | cut -c Number | rev | cut -c Number | rev <|endoftext|>
<|endoftext|> english: Display the number of lines in all regular files under current directory tree and also show the total count
bash: find Path -type f -exec wc -l {} + <|endoftext|>
<|endoftext|> english: Search the home directory tree for video files
bash: find Path -type f -regex Regex <|endoftext|>
<|endoftext|> english: find all the files ending with "clj" in the current folder and search for a pattern
bash: find Path -name Regex -exec grep -r Regex {} \; <|endoftext|>
<|endoftext|> english: Continuously send "y" as input to "cat" which outputs to "more"
bash: yes | cat | more <|endoftext|>
<|endoftext|> english: display all instances  of the file tkConfig.sh in the folder /usr
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all files/directories case insensitively containing 'xt' in their names under '/etc' directory tree
bash: find Path -iregex Regex <|endoftext|>
<|endoftext|> english: Remove all files with the .c extension in the current directory tree
bash: find Path -name Regex -print0 | xargs -0 -I {} rm -r -f {} <|endoftext|>
<|endoftext|> english: Finds strings with dot-separated sequence of numbers, and prints part of that sequence before the first dot.
bash: echo Regex | grep -E -o Regex | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: Make directory "/cpuset"
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: find all jpg files in the current folder
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Print appended data in "/var/log/syslog" as the file grows
bash: tail -f Regex <|endoftext|>
<|endoftext|> english: Delete all empty directories under test directory
bash: find Path -depth -type d -empty -delete <|endoftext|>
<|endoftext|> english: Recursively compresses all files within $2 folder.
bash: find Path -type f -exec bzip2 {} \; <|endoftext|>
<|endoftext|> english: display a long listing of all files in the entire file system which are bigger than 1MB
bash: find Path -size +Size -exec ls -l {} \; -print <|endoftext|>
<|endoftext|> english: List all files/directories with spaces in their names under ~/Library directory
bash: find Path -name Regex -exec ls {} \; <|endoftext|>
<|endoftext|> english: finds all files modified within a certain time frame recursively
bash: find Path -type f -newermt Regex ! -newermt Regex <|endoftext|>
<|endoftext|> english: Print numbers from 1 to the number in variable "$1"
bash: seq Number <|endoftext|>
<|endoftext|> english: Creates full path with parents, that matches to folder path extracted from $f variable.
bash: mkdir -p -- $( dirname -- Regex ) <|endoftext|>
<|endoftext|> english: Find all directories named build under the current directory
bash: find Path -type d -name Regex <|endoftext|>
<|endoftext|> english: Recursively copies all files in the current directory but ones with 'c' in name to the home directory.
bash: cp -r $( ls -A | grep -v Regex ) File <|endoftext|>
<|endoftext|> english: Delete all lines matching "some string here" in "yourfile"
bash: sed --in-place Regex Program <|endoftext|>
<|endoftext|> english: Find all files/directories in directories/files taken from the glob pattern '/tmp/test/*' that were modified within the last day (day counted from today)
bash: find Path -daystart -mtime -Timespan <|endoftext|>
<|endoftext|> english: Find all files named 'new' under current directory tree and display their contents
bash: find Path -name Regex -print -exec cat {} + <|endoftext|>
<|endoftext|> english: add read,write permissions to all the files in the current folder which have the permission 600
bash: find Path -perm Permission -print | xargs -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: Rename all *.txt regular files in the current directory tree to *.abc
bash: find Path -type f -iname Regex -print0 | xargs -0 -I {} rename Regex Regex {} <|endoftext|>
<|endoftext|> english: Find the total size of *.jpg files within the current directory tree
bash: find Path -type f -iname Regex -print0 | du -c --files0-from File <|endoftext|>
<|endoftext|> english: split all files in directory "posns " into pieces per 10000 lines
bash: find Path -type f -exec split -l Quantity {} \; <|endoftext|>
<|endoftext|> english: display all file names in current folder
bash: find Path -printf '%p ' <|endoftext|>
<|endoftext|> english: Find all *.ogg (case insensitive) files/directories in entire file system
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: Print the full path directory name of each "file.ext" found under the current directory
bash: find Path -name Regex -execdir pwd \; <|endoftext|>
<|endoftext|> english: Save 'echo whatever you "want your" command to be' in history
bash: history -s Quantity <|endoftext|>
<|endoftext|> english: Shows state of 'globstar' shell option.
bash: shopt globstar <|endoftext|>
<|endoftext|> english: create directory dir1
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: Perform a case insensitive search for *.jpg files which are greater than 500KB in size under /ftp/dir/ directory
bash: find Path -size +Size -iname Regex <|endoftext|>
<|endoftext|> english: Remove all files and directories called "test" from the current directory tree
bash: find Path -name Regex -exec rm {} \; <|endoftext|>
<|endoftext|> english: Compare files "A1" and "A2" with 3 lines of unified context and print lines beginning with "+"
bash: diff -u Quantity File | grep -E Regex <|endoftext|>
<|endoftext|> english: Print the names of all files in /some/directory and its subdirectories recursively whose MIME type is video
bash: find Path -type f -exec file -N -i -- {} + | sed -n Program <|endoftext|>
<|endoftext|> english: force delete all the files which have not been accessed in the last 240 hours in the temp folder
bash: find Path -atime +Timespan -exec rm -f {} \; <|endoftext|>
<|endoftext|> english: search for a word in all files in a directory
bash: find Path -type f -print0 | xargs -0 -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: remove all the core files in the home folder
bash: find Path -name Regex -exec rm {} \; <|endoftext|>
<|endoftext|> english: Search for files that were accessed less than 5 days ago.
bash: find Path -atime -Timespan <|endoftext|>
<|endoftext|> english: display all the files in the folder "/home/mywebsite" which have been changed in the last 7*24 horus
bash: find Path -type f -ctime -Timespan <|endoftext|>
<|endoftext|> english: List all regular files residing in the current directory tree and containing string "/bin/ksh"
bash: find Path -type f -exec grep -l -i Regex {} \; <|endoftext|>
<|endoftext|> english: Locate all files in the current directory and below that have "testfile" in their names
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Get second line from text contained in variable $data.
bash: echo Regex | cut -f Number -d Regex <|endoftext|>
<|endoftext|> english: Print a space separated list of numbers from 1 to 10 with no trailing new line
bash: seq Number | xargs -I {} echo -n {} <|endoftext|>
<|endoftext|> english: Prints information about active network interfaces in system.
bash: echo $( ifconfig ) <|endoftext|>
<|endoftext|> english: Create a new directory "existing-dir/new-dir/" on host "node"
bash: rsync File File <|endoftext|>
<|endoftext|> english: Find a single file called tecmint.txt and remove it
bash: find Path -type f -name Regex -exec rm -f {} \; <|endoftext|>
<|endoftext|> english: Find all index.* files/directories under current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Remount "/mnt/mountpoint" with read and write permission
bash: mount Regex -o remount,rw <|endoftext|>
<|endoftext|> english: Find all level 1 subdirectories of the current directory
bash: find Path -maxdepth Quantity -type d <|endoftext|>
<|endoftext|> english: Search the specified group for the given "filename
bash: find Path -group Regex -iname Regex <|endoftext|>
<|endoftext|> english: Search for the Perl regex "[\x80-\xFF]" in *.xml files under current directory tree
bash: find Path -name Regex | xargs -I {} grep -P Regex {} <|endoftext|>
<|endoftext|> english: Set variable BZIP2_CMD to the full path of command "bzip2"
bash: $( which Regex ) <|endoftext|>
<|endoftext|> english: display all the files in the current folder except those whose name is "PERSONAL"
bash: find Path -name Regex -prune -or -print <|endoftext|>
<|endoftext|> english: Save the current date to 'DATE' variable
bash: echo $( date ) <|endoftext|>
<|endoftext|> english: Count total number of lines in all *.txt file in cuuent directory .
bash: find Path -type f -name Regex -exec wc -l {} \; | awk Program <|endoftext|>
<|endoftext|> english: Search the system for files and directories owned by user `admin'
bash: find Path -user Regex -print <|endoftext|>
<|endoftext|> english: find all the files in the current folder with the name "test-a" and move them to the folder test-10
bash: find Path -type f -name Regex -exec mv {} File \; <|endoftext|>
<|endoftext|> english: Find all the files which are accessed in last 1 hour
bash: find Path -amin -Quantity <|endoftext|>
<|endoftext|> english: Find files by type
bash: find Path -type type_descriptor <|endoftext|>
<|endoftext|> english: Print the names of the directories from the paths expanded by the glob pattern /path/to/directory/*
bash: find Path -maxdepth Quantity -type d -printf '%f\n' <|endoftext|>
<|endoftext|> english: find all the regular/normal files in the current direcoty which have not been accessed in the last 30 days.
bash: find Path -type f -atime +Timespan -print <|endoftext|>
<|endoftext|> english: display all the directories in the folder master-
bash: find Path -type d | sort <|endoftext|>
<|endoftext|> english: Show a long listing of the latest file or directory under current directory
bash: ls -l -r -t | tail -n Quantity <|endoftext|>
<|endoftext|> english: Prints current directory name
bash: pwd | awk -F Regex Program <|endoftext|>
<|endoftext|> english: Find all files in the `work' directory tree, pass them to grep and search for "profit"
bash: find Path -print | xargs -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: Find all your jsp's, map them to your localhost webserver, and invoke a wget (fetch) on them
bash: find Path -name Regex | sed Program | xargs -n Quantity -I {} wget {} <|endoftext|>
<|endoftext|> english: Find all directories under /directory-path and change their permission to 2755
bash: find Path -type d -exec chmod Permission {} + <|endoftext|>
<|endoftext|> english: Search the current directory tree for directories
bash: find Path -type d <|endoftext|>
<|endoftext|> english: Delete the files under the current working directory with inode numbers specified on standard input
bash: xargs -n Quantity -I {} find Path $( pwd ) -type f -inum {} -delete <|endoftext|>
<|endoftext|> english: Split "file.txt" into files of at most 20 lines each with a prefix "new"
bash: split -l Quantity File Regex <|endoftext|>
<|endoftext|> english: Find all directories under $d directory and set read-write-execute permission for owner and group and no permission for other for those directories
bash: find Path -type d -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Force create a symbolic link without dereferencing named "$SYMLINK_PATH" to "$lastModified"
bash: ln -n -s -f File Regex <|endoftext|>
<|endoftext|> english: Search the .css files in the /starting/directory tree for ".ExampleClass"
bash: find Path -type f -name Regex | xargs -t -i -I {} grep Regex {} {} <|endoftext|>
<|endoftext|> english: Search the current directory tree for files whose names end in "rb" or "js"
bash: find Path -name Regex -or -name Regex <|endoftext|>
<|endoftext|> english: find the md5 sum of all the regular files in multiple folders and display them in sorted order
bash: find Path Path -type f -exec md5 File {} \; | sort <|endoftext|>
<|endoftext|> english: List all files in current directory whose name or file type description contains the word "ASCII".
bash: file File | grep Regex <|endoftext|>
<|endoftext|> english: Find all the files whose name is tecmint.txt in the current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Number each line in "/etc/passwd" as right-justified zero padded to a width of 9
bash: nl -n rz -w Quantity File <|endoftext|>
<|endoftext|> english: Find all *.mov (case insensitive) files under current directory and list their paths with their names
bash: find Path -iname Regex -printf "%p %f\n" <|endoftext|>
<|endoftext|> english: Find all files under current directory that are larger than 10KB in size
bash: find Path -type f -size +Size <|endoftext|>
<|endoftext|> english: Allow all users to execute "myscript.sh"
bash: chmod Permission File <|endoftext|>
<|endoftext|> english: Variable PID contains a process ID, check if this process exists - resulting exit status from this command will be zero if it does and current user has permission to send it signals.
bash: kill - Regex Regex <|endoftext|>
<|endoftext|> english: Sets shell option 'globstar'.
bash: shopt -s globstar <|endoftext|>
<|endoftext|> english: Find all files that belong to group root
bash: find Path -group Regex <|endoftext|>
<|endoftext|> english: find all the files in the current folder which have been modified in the last 60 minutes
bash: find Path -mmin -Quantity <|endoftext|>
<|endoftext|> english: Save "$N" number of '.' characters in variable "myvar"
bash: seq Number Number | sed Program | tr -d Regex <|endoftext|>
<|endoftext|> english: search for regular files in the current folder which path is not  "./.*" and not "./*/.*"
bash: find Path -type f -name Regex ! -path Regex ! -path Regex <|endoftext|>
<|endoftext|> english: SSH into "hostname" on port 22 as user "myName"
bash: ssh -l Regex -p Regex Regex <|endoftext|>
<|endoftext|> english: Make directory "subdirectory"
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: display all the normal/regular files in a directory
bash: find Path -type f -name Regex -print <|endoftext|>
<|endoftext|> english: Print position number of day '9' in fourth line of calendar output for September, 2009.
bash: cal DateTime DateTime | awk Program <|endoftext|>
<|endoftext|> english: Decompress and extract 'libxml2-sources-2.7.7.tar.gz'
bash: gzip -d -c Regex | tar -x -v -f File <|endoftext|>
<|endoftext|> english: List all files/directories under current directory matching the posix-egrep type regex ".+\.(c|cpp|h)$" in their names excluding the files that contain 'generated' or 'deploy' in their paths
bash: find Path -regextype posix-egrep -regex Regex -print0 | grep -v -z -Z Regex | grep -v -z -Z Regex | xargs -0 -I {} ls -1 -L -d {} <|endoftext|>
<|endoftext|> english: Delete all files in the /myDir directory tree that were last modfied 7 days ago
bash: find Path -mindepth Quantity -mtime Timespan -exec rm -r -f {} \; <|endoftext|>
<|endoftext|> english: Remove files erroneously named `-F'
bash: find Path -name Regex -exec rm {} \; <|endoftext|>
<|endoftext|> english: Find files that are 0 bytes in size in the current directory tree and remove them
bash: find Path -size Size -exec rm {} \; <|endoftext|>
<|endoftext|> english: Set the shell prompt to "host:pwd>"
bash: $( hostname ) <|endoftext|>
<|endoftext|> english: display all the files in current folder which have been accessed in the last 15 days
bash: find Path -atime -Timespan <|endoftext|>
<|endoftext|> english: List all files in /home/bozo/projects directory tree that were modified within the last day.
bash: find Path -mtime -Timespan <|endoftext|>
<|endoftext|> english: beginning at the end of the file, prints lines matching /2012/ and exits after first non-matching line
bash: tac File | awk Program <|endoftext|>
<|endoftext|> english: display all the files in the entire file system
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: Change the owner of all files in the directory tree "dir_to_start" excluding file "file_to_exclude" to "owner"
bash: find Path -not -name Regex -print0 | xargs -0 -I {} chown Regex {} <|endoftext|>
<|endoftext|> english: display the count of all the normal/ regular files in the current directory
bash: find Path -type f | wc -l <|endoftext|>
<|endoftext|> english: Find all files/directories under $1 which have at least read permission for their owner and set read permission for group for these files/directories
bash: find Path -perm -Permission -print0 | xargs -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: Display the first 10 lines of the byte hex dump with no file offset data for "/bin/ls"
bash: od -t x1 -A n File | head <|endoftext|>
<|endoftext|> english: Find files/directories named 'foo.bar' under './dir1' and './dir2' directory tree
bash: find Path Path -name Regex -print <|endoftext|>
<|endoftext|> english: Change permissions to 0755 for all directories in the /path directory tree
bash: find Path -type d | xargs -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: search for the word "search-pattern" in all the regular/normal files in the current folder and display the matched file name
bash: find Path -type f | xargs -I {} grep -l Regex {} <|endoftext|>
<|endoftext|> english: List *.txt files residing in the current directory tree
bash: find Path -name Regex -exec ls {} \; <|endoftext|>
<|endoftext|> english: Find all files on the system that are larger than 600 MB
bash: find Path -size +Size -print <|endoftext|>
<|endoftext|> english: find all the ".jpg" files in current folder and display their count
bash: find Path -name Regex -type f | wc -l <|endoftext|>
<|endoftext|> english: Close the master SSH control socket "my-ctrl-socket" to "jm@sampledomain.com"
bash: ssh -S Path -O Regex Regex <|endoftext|>
<|endoftext|> english: execute a command in 10 seconds
bash: true | sleep Timespan <|endoftext|>
<|endoftext|> english: Find files in the current directory whose names begin with "file" and remove them
bash: find Path -name Regex -maxdepth Quantity -exec rm {} \; <|endoftext|>
<|endoftext|> english: Make all directories in the current directory tree accessible to anybody
bash: find Path -type d -print0 | xargs -0 -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: Create a copy of the current working directory structure in the usr/project directory,
bash: find Path -type d -print | sed Program | xargs -I {} mkdir -p {} <|endoftext|>
<|endoftext|> english: Find all files modified less than 5 minutes ago, and page interactively through the output.
bash: find Path -cmin -Quantity | less -R <|endoftext|>
<|endoftext|> english: login as user postgres
bash: su -l Regex <|endoftext|>
<|endoftext|> english: Find all pdf files excluding *_signed.pdf files under /some/dir with null character as the delimiter
bash: find Path -name Regex ! -name Regex -print0 <|endoftext|>
<|endoftext|> english: Read a line from standard input with prompt "Continue (y/n)?" and save response in variable "CONT"
bash: read -p Regex Regex <|endoftext|>
<|endoftext|> english: Print info about all mounted file systems
bash: df <|endoftext|>
<|endoftext|> english: Find all files with the SUID bit set, starting from /
bash: find Path -perm -Permission <|endoftext|>
<|endoftext|> english: search for files in current folder using name patterns
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Rename "file0001.txt" to "1.txt"
bash: mv File File <|endoftext|>
<|endoftext|> english: find all symbolic links in the current folder
bash: find Path -type l <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory and print them
bash: find Path -print0 | xargs -I {} -0 echo {} <|endoftext|>
<|endoftext|> english: Find all files ignoring hidden files under current directory and replace every occurrences of 'subdomainA.example.com' with 'subdomainB.example.com' in those files
bash: find Path -not -path Regex -type f -print0 | xargs -0 -I {} sed -i Program {} <|endoftext|>
<|endoftext|> english: Search the /Path/bar* directories recursively for files matching pattern "file_name*"
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: download file  "https://raw.githubusercontent.com/creationix/nvm/v0.31.0/install.sh" and execute it
bash: curl Regex Regex | bash <|endoftext|>
<|endoftext|> english: search for the file "process.txt" in the current folder (case insensitive search)
bash: find Path -iname Regex -print <|endoftext|>
<|endoftext|> english: Print the list of directories that are present in the /mnt/raid directory tree
bash: find Path -type d <|endoftext|>
<|endoftext|> english: Counts number of *.php files in a current folder and subfolders.
bash: find Path -name Regex | wc -l <|endoftext|>
<|endoftext|> english: Remove all regular files from the current directory tree whose names do not end with "ignore1" or "ignore2"
bash: find Path -type f -not -name Regex -or -not -name Regex | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: List the directory paths of all file.ext files under present working directory
bash: find Path $( pwd ) -name Regex -exec dirname {} \; <|endoftext|>
<|endoftext|> english: Repeat "image.png" 10 times on a single line
bash: echo $( yes Regex | head -n Quantity ) <|endoftext|>
<|endoftext|> english: Find all files/directories with 'my key phrase' in their names under current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Uncompress and unarchive "data.tar.gz"
bash: gzip -d -c Regex | tar -x -v -f File <|endoftext|>
<|endoftext|> english: Print the last 10 lines of '/var/log/syslog', printing out any additional data appended to the file
bash: tail -f Regex <|endoftext|>
<|endoftext|> english: Deletes empty folder 'nonsense_dir'.
bash: rmdir Directory <|endoftext|>
<|endoftext|> english: Copy all files unconditionally and directories in directory tree "myfiles" to "target-dir" preserving directory hierarchy and modification time
bash: find Path | cpio -p -m -u -d Regex <|endoftext|>
<|endoftext|> english: List the 10 largest files or directories and their sizes under (and including) "/var"
bash: du -a File | sort -n -r | head -n Quantity <|endoftext|>
<|endoftext|> english: search for the word "redeem reward" in all the regular/normal files in the current folder
bash: find Path -type f -exec grep -i Regex {} \; -print <|endoftext|>
<|endoftext|> english: find regular files in the current directory, without descending into sub-directories and display as a null separated list.
bash: find Path -maxdepth Quantity -type f -printf '%f\000' <|endoftext|>
<|endoftext|> english: Find files ending in "f"
bash: find Path -path Regex <|endoftext|>
<|endoftext|> english: Rename absolute path of symbolic link "dirln" to "dir2"
bash: mv $( readlink -f File ) File <|endoftext|>
<|endoftext|> english: Find all files under current directory without descending into .snapshot directory that were modified in last 24 hours with null character as the delimiter
bash: find Path -name Regex -prune -or \( -type f -mtime Timespan -print0 \) <|endoftext|>
<|endoftext|> english: Save the directory of the full path to the current script in variable "dir"
bash: dirname $( readlink File ) <|endoftext|>
<|endoftext|> english: Write the shell's input to standard error as it is read
bash: set -v <|endoftext|>
<|endoftext|> english: List files in "dir1" that are not in "dir2"
bash: comm -2 -3 <( ls File | sort ) <( ls File | sort ) <|endoftext|>
<|endoftext|> english: list all javascipts file which whole name does not contain "directory"
bash: find Path -name Regex -and -not -path Regex <|endoftext|>
<|endoftext|> english: Find all files under /myfiles with read-write access for others
bash: find Path -type f -perm -Permission <|endoftext|>
<|endoftext|> english: Split "domains.xml" into files of at most 50000 lines each with a numeric suffix of length 4 and prefix of "domains_"
bash: split -a Quantity -d -l Quantity File Regex <|endoftext|>
<|endoftext|> english: Find smallest file in the current directory with find commad
bash: find Path -type f -printf "%s\t%p\n" | sort -n | head - Quantity <|endoftext|>
<|endoftext|> english: Exclude directory from find . command
bash: find Path -path Regex -prune -or -iname Regex -print <|endoftext|>
<|endoftext|> english: Prints calendar of $month, $year, and redirects all output to the awk script 'cal.awk', with predefined variable 'day=$day'.
bash: cal DateTime DateTime | awk -v Program -f File <|endoftext|>
<|endoftext|> english: List all .jpg files in the home directory tree
bash: find Path -name Regex -print0 | xargs -0 -I {} ls {} <|endoftext|>
<|endoftext|> english: Create a symbolic link named "$1/link" to the current working directory
bash: ln -s $( pwd ) Regex <|endoftext|>
<|endoftext|> english: Print local SRV record of domain '_etcd-client._tcp.'
bash: dig Regex Regex SRV <|endoftext|>
<|endoftext|> english: Calculate the md5 sum of all *.py files in the current directory
bash: cat File | md5sum <|endoftext|>
<|endoftext|> english: Display top 500 mp4 and flv files under current directory along with their timestamps in the sorted order of time
bash: find Path -regex Regex -type f -printf '%T+ %p\n' | sort | head -n Quantity <|endoftext|>
<|endoftext|> english: Find all directories under htdocs directory and set their permission to 775
bash: find Path -type d -exec chmod Permission {} + <|endoftext|>
<|endoftext|> english: show all the mp3 files in the folder /home
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: Make DNS lookup for hostname stackoverflow.com
bash: dig Regex <|endoftext|>
<|endoftext|> english: find all files in the current folder whose size is less than 50KB
bash: find Path -size -Size <|endoftext|>
<|endoftext|> english: Find the first file/directory under $DIR which matches the $TMP_DIR in its path
bash: find Path -maxdepth Quantity -ipath Regex -print Path <|endoftext|>
<|endoftext|> english: find all the files in the home folder that have not been modified in the last one year
bash: find Path -mtime +Timespan <|endoftext|>
<|endoftext|> english: List all files in /home/bozo/projects directory tree that were modified within the last day
bash: find Path -mtime -Timespan <|endoftext|>
<|endoftext|> english: Split "input.txt" into files of at most 10 bytes each with prefix "xxx/split-file"
bash: split -b Size File Regex <|endoftext|>
<|endoftext|> english: find all the directories in the folder /raid with the extension local_sd_customize.
bash: find Path -type d -name Regex -print <|endoftext|>
<|endoftext|> english: Make directories "tmp/real_dir1" and "tmp/real_dir2" as needed
bash: mkdir -p Directory Directory <|endoftext|>
<|endoftext|> english: Compute the mean average of the word count of *.txt files in the home directory
bash: find Path -name Regex -print0 | xargs -0 -I {} wc -w {} | awk Program <|endoftext|>
<|endoftext|> english: Remove "\r" at the end of each line in "infile" and display the result as printable characters or backslash escapes
bash: cat File | sed Program | od -c <|endoftext|>
<|endoftext|> english: search in the current directory for any file named Chapter1.txt
bash: find Path -name Regex -type f <|endoftext|>
<|endoftext|> english: Rename "new" to "old" and backup to "old.old" if "old" exists
bash: mv File File -b -S Regex <|endoftext|>
<|endoftext|> english: Find all files named "filename" in the current directory tree, not descending into "FOLDER1" directories
bash: find Path \( -name Regex -prune -or -name Regex \) -print <|endoftext|>
<|endoftext|> english: display the sum of disk used by all the access.log files in /var/www folder
bash: find Path -type f -name Regex -exec du -k {} \; | awk Program <|endoftext|>
<|endoftext|> english: Print out the contents of all *.txt files in the home directory
bash: find Path -name Regex -exec cat {} \; <|endoftext|>
<|endoftext|> english: find all the files in the folder /path/to/dir which have been modified after a specific date (Feb 07)
bash: find Path -newermt Regex <|endoftext|>
<|endoftext|> english: Get the disk space used by all *.txt (case insensitive) files/directories under current directory
bash: find Path -iname Regex -exec du -b {} + | awk Program <|endoftext|>
<|endoftext|> english: Save the number of matching executables for "$cmd" in $PATH to variable "candidates"
bash: which -a Regex | wc -l <|endoftext|>
<|endoftext|> english: find the type of all the regular/normal files in the current folder (plus takes bulk of files as input to the file command)
bash: find Path -type f -exec file {} + <|endoftext|>
<|endoftext|> english: create directory foo
bash: mkdir -p Directory <|endoftext|>
<|endoftext|> english: Expands `whoami` as current user name, and adds resulted path to the directory stack.
bash: pushd $( whoami ) <|endoftext|>
<|endoftext|> english: Immediately terminate all processes whose command or arguments match "myProcessName"
bash: ps -e -f | grep Regex | grep -v Regex | awk Program | xargs -I {} kill - Regex {} <|endoftext|>
<|endoftext|> english: Save the percentage of packets lost of the 5 packets sent to "$host" in variable "packet_loss"
bash: ping -c Quantity -q Regex | grep -o -P Regex <|endoftext|>
<|endoftext|> english: Find all files under $dir
bash: find Path -type f <|endoftext|>
<|endoftext|> english: Move all files matching case insensitive ".cpp" in the current directory tree to "./test/"
bash: find Path -type f -iname Regex -exec mv -t Directory {} + <|endoftext|>
<|endoftext|> english: display all symbolic links in current folder
bash: find Path -lname Regex <|endoftext|>
<|endoftext|> english: Find recursively all empty directories in the current directory
bash: find Path -type d -empty <|endoftext|>
<|endoftext|> english: Print lines in file 'file' that do not match any word specified in file 'blacklist' (one word per line)
bash: grep -w -v -f File Regex <|endoftext|>
<|endoftext|> english: count lines of C or C++ or Obj-C code under the current directory
bash: find Path \( -name Regex -or -name Regex -or -name Regex -or -name Regex \) -print0 | xargs -0 -I {} wc {} <|endoftext|>
<|endoftext|> english: Print 'file' content, formatting output as 29-symbol wide column
bash: cat File | fold -w Quantity <|endoftext|>
<|endoftext|> english: Creates temporary file and saves path to it in a 'tmpfile' variable.
bash: mktemp <|endoftext|>
<|endoftext|> english: Make directory "/tmp/new"
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: Set the setgid bit on all directories in the repository "/git/our_repos"
bash: find Path -type d -exec chmod Permission {} + <|endoftext|>
<|endoftext|> english: Recursively removes all files like '.DS_Store' from current folder.
bash: rm $( find Path -name Regex ) -r -f <|endoftext|>
<|endoftext|> english: find non-hidden files (ones that do not start with the period "." chartacter) that were are modified in the last 15 minutes.
bash: find Path -mmin -Quantity \( ! -regex Regex \) <|endoftext|>
<|endoftext|> english: Look in /home/dm and below for files with 'uniform' in their names
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: search for the word text in all the python files in the current folder
bash: find Path -iname Regex -exec grep Regex {} \; <|endoftext|>
<|endoftext|> english: Search for the wp-config.php file in /var/www and one level below
bash: find Path -name Regex -maxdepth Quantity <|endoftext|>
<|endoftext|> english: Print the file 'text1;text2;text3' replacing each space(" ") with a newline
bash: cat File | sed -e Program <|endoftext|>
<|endoftext|> english: display all the directories in the current folder excluding those that have the name "node_modules"
bash: find Path ! -name Regex -type d <|endoftext|>
<|endoftext|> english: Print "file1.txt" "file2.txt" and "file3.txt" with filename headers
bash: tail -n +Quantity File File File <|endoftext|>
<|endoftext|> english: find the file "foo.txt" in the current folder and assign the output to a variable
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all 777 permission directories and use chmod command to set permissions to 755
bash: find Path -type d -perm Permission -print -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Print the number of lines in file.txt.
bash: wc -l File | cut -f Number -d Regex <|endoftext|>
<|endoftext|> english: Find files in the current directory and below that are less than 500 kB in size
bash: find Path -size -Size -print <|endoftext|>
<|endoftext|> english: Remove all Thumbs.db files from the current directory tree
bash: find Path -name Regex -exec rm {} \; <|endoftext|>
<|endoftext|> english: Print local files without descending non-local directories
bash: find Path ! Path -prune -or -print <|endoftext|>
<|endoftext|> english: copy the entire contents of the current directory to another directory, while preserving the permissions, times, and ownership of every file and sub-directory
bash: find Path | cpio -p -d -u -m -v Regex <|endoftext|>
<|endoftext|> english: Copies all files like "*FooBar*" under the current directory to the '~/foo/bar' directory.
bash: find Path -name Regex | sed Program | xargs -I {} cp File {} <|endoftext|>
<|endoftext|> english: Format time string @1267619929 according to default time format
bash: date -d Regex <|endoftext|>
<|endoftext|> english: Echo each command before running
bash: set -x <|endoftext|>
<|endoftext|> english: Print lines 2960 to 2966 from the output of "history"
bash: history | sed -n Program <|endoftext|>
<|endoftext|> english: find a difference between website content of "http://tldp.org/LDP/abs/html/" and "http://www.redhat.com/mirrors/LDP/LDP/abs/html/"
bash: diff <( curl Regex Regex ) <( curl Regex Regex ) <|endoftext|>
<|endoftext|> english: Reads content of bzip2 compressed files and processes it with awk utility.
bash: bzip2 -d -c File File | awk Program <|endoftext|>
<|endoftext|> english: Count the number of regular files in the current directory that contain a vowel in their names
bash: find Path -maxdepth Quantity -type f -iname Regex -printf ".\n" | wc -l <|endoftext|>
<|endoftext|> english: Find files in the current directory tree which have permissions rwx for user and rw for group and others
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: Change the group to `temp' for all files in the current directory tree that belong to group `root'
bash: find Path -group Regex -print | xargs -I {} chgrp Regex {} <|endoftext|>
<|endoftext|> english: Find all *.java files under current directory and replace every occurrences of 'subdomainA.example.com' with 'subdomainB.example.com' in those files
bash: find Path -name Regex -type f -print0 | xargs -0 -I {} sed -i Program {} <|endoftext|>
<|endoftext|> english: print all readline bindings
bash: bind -P <|endoftext|>
<|endoftext|> english: Search for files only that end with .php and look for the string $test inside those files
bash: find Path -name Regex -type f -print0 | xargs -0 -n Quantity -I {} grep -H -n Regex {} <|endoftext|>
<|endoftext|> english: Print file type of the executable file of command "file"
bash: file $( which Regex ) <|endoftext|>
<|endoftext|> english: Recursively copy all ".txt" files to "user@remote.machine:/tmp/newdir/"
bash: rsync -r -v -v File File <|endoftext|>
<|endoftext|> english: Prints total count of lines of all files in a current folder and subfolders.
bash: find Path -type f -exec wc -l {} \; | awk Program <|endoftext|>
<|endoftext|> english: Find all regular files named postgis-2.0.0 under current directory
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: Find recursively the latest modified file in the current directory
bash: find Path -type f -print0 | xargs -0 -I {} ls -l -t -r {} | tail -n Quantity <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory bypassing file hierarchies in lexicographical order
bash: find Path -s <|endoftext|>
<|endoftext|> english: Read a line from standard input with a timeout of 10 seconds
bash: read -t Quantity <|endoftext|>
<|endoftext|> english: Find regular files under / that contain "stringtofind"
bash: find Path -maxdepth Quantity -xdev -type f -exec grep -l -i Regex {} \; <|endoftext|>
<|endoftext|> english: display all the files in the folders /etc /srv excluding the paths /etc/mtab and  /srv/tftp/pxelinux.cfg
bash: find Path Path \( -path Regex -or -path Regex \) -prune -or -print <|endoftext|>
<|endoftext|> english: display all the files ending with .c in the current folder
bash: find Path -name Regex -print0 <|endoftext|>
<|endoftext|> english: Create intermediate directories as required directory{1..3} and subdirectory{1..3} and directories subsubdirectory1 and subsubdirectory2
bash: mkdir -p Directory <|endoftext|>
<|endoftext|> english: Display who is logged on and what they are doing
bash: w <|endoftext|>
<|endoftext|> english: Change to folder where the oracle binary is.
bash: cd $( dirname $( which Regex ) ) <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory tree that contain '1' or 'k' in their names
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Print unique lines of sorted file "a" and "b" and remove leading tabs
bash: comm -3 File File | sed Program <|endoftext|>
<|endoftext|> english: Print line, word and byte counts for each .php files in current directory tree and also show the total counts
bash: wc $( find | grep Regex ) <|endoftext|>
<|endoftext|> english: Copy "source" recursively to "destination" excluding "path1/to/exclude" and "path2/to/exclude"
bash: rsync -a -v --exclude Regex --exclude Regex File File <|endoftext|>
<|endoftext|> english: Find all files/directories with execute permission by group or others
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: Set the setup connection timeout to 3 seconds for connecting to "user@ip" via ssh
bash: ssh -o ConnectTimeout=3 Regex <|endoftext|>
<|endoftext|> english: Search the /myfiles directory tree for files whose names contain "blue"
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Sets shell option 'nounset'.
bash: shopt -s -o nounset <|endoftext|>
<|endoftext|> english: Lists content of all subfolder (without recursion) in a current folder.
bash: ls -d -1 File <|endoftext|>
<|endoftext|> english: show all the files in the current folder which has the word "ITM"
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find files named tecmint.txt  of owner root in the entire file system
bash: find Path -user Regex -name Regex <|endoftext|>
<|endoftext|> english: Finds strings matching pattern '^fields=\\\|^var=' in a 'set' output.
bash: set | grep Regex <|endoftext|>
<|endoftext|> english: Create symbolic links in the current directory for all files located in directory "/path/with/files" with a name containing "txt"
bash: find Path -type f -name Regex -exec ln -s {} Regex \; <|endoftext|>
<|endoftext|> english: Archive "/home/user1" to "wobgalaxy02:/home/user1" excluding hidden files
bash: rsync -a -v File File <|endoftext|>
<|endoftext|> english: find the file "dateiname" in the entire file system ( case insensitive search)
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: Copies all files under the current folder like "file.ext" with "FooBar" in the path to the root of the current folder, preserving mode, ownership and timestamp attributes.
bash: find Path -name Regex | grep Regex | xargs -i -I {} cp -p {} File {} <|endoftext|>
<|endoftext|> english: Print the user name of the user running sudo
bash: who -m | awk Program <|endoftext|>
<|endoftext|> english: Search the /path directory tree for files missing g+w or o+w bits
bash: find Path ! -perm -Permission <|endoftext|>
<|endoftext|> english: Print variable "$module" in formatted columns with at most 80 characters per line
bash: echo Regex | column -t | fold | column -t <|endoftext|>
<|endoftext|> english: Find and copy all log files in the current directory tree to /tmp/log-files
bash: find Path -name Regex -print0 | xargs -I {} -0 cp -v {} File <|endoftext|>
<|endoftext|> english: Find all the files under /etc directory which are larger than 100k
bash: find Path -size +Size <|endoftext|>
<|endoftext|> english: Search for files only that end with .php and look for the string $test inside those files
bash: find Path -name Regex -type f -exec grep -H -n Regex {} + <|endoftext|>
<|endoftext|> english: Remove files matching pattern '*-*x*.*' from the current directory tree
bash: find Path -name Regex | xargs -I {} rm -f {} <|endoftext|>
<|endoftext|> english: List all regular files in the current directory tree
bash: find Path -type f -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: Recursively copies 'SRCFOLDER' to the 'DESTFOLDER/'
bash: cp -R File File <|endoftext|>
<|endoftext|> english: Find and compress all .pl files in the current directory tree
bash: find Path -name Regex | xargs -I {} tar -z -c -f File {} <|endoftext|>
<|endoftext|> english: Find all *fstab* files under and below /etc
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Display the count of regular files for which the owner has read and execute permission under 'home/magie/d2' directory tree
bash: find Path -type f -perm -Permission | wc -l <|endoftext|>
<|endoftext|> english: Set the host name to the contents of "/etc/hostname"
bash: hostname $( cat File ) <|endoftext|>
<|endoftext|> english: Finds all files like "mylog*.log" newer than $2 and archives them with bzip2.
bash: find Path -type f -ctime -Timespan -name Regex | xargs -I {} bzip2 {} <|endoftext|>
<|endoftext|> english: Find files not matching the patterns 'Image*-70x70*' and 'Image*-100x100*' in their names under Folder1 and copy them to Folder2
bash: find Path \( ! -name Regex -and ! -name Regex \) | xargs -I {} cp -p {} File <|endoftext|>
<|endoftext|> english: Remove `core' files whose status was changed more than 4 days ago
bash: find Path $( pwd ) -name Regex -ctime +Timespan -execdir rm -f {} \; <|endoftext|>
<|endoftext|> english: SSH into user@server and run command ${SSH_COMMAND}
bash: ssh Regex command <|endoftext|>
<|endoftext|> english: Print process tree, adjusting output width with a screen size.
bash: pstree | cat <|endoftext|>
<|endoftext|> english: Find all files under $1 directory excluding hidden files and append a null character at the end of each of their paths
bash: find Path -path Regex -prune -or \( -type f -print0 \) <|endoftext|>
<|endoftext|> english: Find all files that were not accessed in the past 100 days
bash: find Path -atime +Timespan <|endoftext|>
<|endoftext|> english: Find all regular files that reside in the current directory tree and were last modified more than 3 days ago
bash: find Path -type f -mtime +Timespan <|endoftext|>
<|endoftext|> english: create a tar file of all the songs on my system that have been modified in the last 180 days (which is essentially six months)
bash: find Path -name Regex Path Path -mtime -Timespan -print0 | xargs -0 -I {} tar -r -v -f File {} <|endoftext|>
<|endoftext|> english: Finds recursively all folders in current folder which path not contains "NameToExclude" string and removes only ones without files and another folders within.
bash: find Path -type 'd' | grep -v Regex | xargs -I {} rmdir {} <|endoftext|>
<|endoftext|> english: Search the .log files in the current directory tree for string "The SAS System"
bash: find Path $( pwd ) -name Regex -exec grep Regex {} \; <|endoftext|>
<|endoftext|> english: search in the current folder for all the directories with the name "test"
bash: find Path -type d -name Regex <|endoftext|>
<|endoftext|> english: Copy all files in the current directory tree matching "textToSearch" to "$destination_path"
bash: find Path -type f | xargs -I {} grep -l Regex {} | cpio -p -V Regex <|endoftext|>
<|endoftext|> english: Find all *.foo files under current directory and search for 'bar' in those files
bash: find Path -name Regex -exec grep Regex {} \; <|endoftext|>
<|endoftext|> english: Print the output of history without line numbers
bash: history | cut -d Regex -f Number | sed Program <|endoftext|>
<|endoftext|> english: Find broken symlinks in current directory
bash: find Path -L -type l <|endoftext|>
<|endoftext|> english: Find all hidden files
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: Recursively change the owner and group of "/home/el/svnworkspace" and "775" to "your_user_name"
bash: chown -R Regex File File <|endoftext|>
<|endoftext|> english: Find files/directories named 'foo' under current directory tree without descending into directories named 'foo'
bash: find Path -name Regex -type d -prune -or -name Regex -print <|endoftext|>
<|endoftext|> english: Find & calculate total number of worlds in all .txt file from current directory
bash: find Path -type f -name Regex -exec wc -w {} \; | awk Program <|endoftext|>
<|endoftext|> english: find all the files ending with "rb" and display the first 10000 lines from these files.
bash: find Path -name Regex -print0 | xargs -0 -I {} head - Quantity {} <|endoftext|>
<|endoftext|> english: display all files  expect directories in the current folder
bash: find Path ! -type d -print <|endoftext|>
<|endoftext|> english: Search for all .mp3 files in the /mnt/usb directory tree
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: Mount "/tmp/loop.img" on "/mnt/image" as a loop back device
bash: mount Regex Regex -o loop <|endoftext|>
<|endoftext|> english: Replace "-" with "0" in columns 4 and 5 of file "test.in" and format as a table
bash: awk Program Program | column -t <|endoftext|>
<|endoftext|> english: Convert Unix `cal` output to latex table code.
bash: cal | sed Program <|endoftext|>
<|endoftext|> english: Print the IP address of your SSH session
bash: who File Regex | awk Program <|endoftext|>
<|endoftext|> english: Remove all files that end with 'prefs copy' in their names under '/mnt/zip' directory tree
bash: find Path -name Regex -print | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: Look for file `Chapter1' under /usr and /home
bash: find Path Path -name Regex -type f <|endoftext|>
<|endoftext|> english: Print "new.txt" with line numbers prepended
bash: cat File | nl <|endoftext|>
<|endoftext|> english: Request authority info with comments for 'djzah.com' from name server 'ns1.hosangit.com', and pass it to 'script.awk' awk script.
bash: dig Regex Regex +noall +authority +comments | awk -f File <|endoftext|>
<|endoftext|> english: change owner and group of the all files with group owner vboxusers into home directory to user and group kent
bash: find Path -group Regex -exec chown Regex {} \; <|endoftext|>
<|endoftext|> english: find all files in current folder which are more than 300MB
bash: find Path -size +Size <|endoftext|>
<|endoftext|> english: find all the files in the file system that belong to the user www
bash: find Path -user Regex -print <|endoftext|>
<|endoftext|> english: Find all files/directories named 'filename' that belong to user 'username' and group 'groupname' in the entire filesystem
bash: find Path -user Regex -group Regex -name Regex <|endoftext|>
<|endoftext|> english: create directory aaa/bbb
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: List all regular files in the current directory tree modified within the last 24 hours
bash: find Path -mtime Timespan -type f -ls <|endoftext|>
<|endoftext|> english: Print the input "hello world" to the console followed by a swap of the first two awk fields
bash: echo Regex Regex | tee File | awk Program <|endoftext|>
<|endoftext|> english: Find all regular files under current directory tree that contain 'some text' in their names excluding paths that contain dot files/directories
bash: find Path -not -path Regex -type f -name Regex <|endoftext|>
<|endoftext|> english: Find files in the current directory tree whose permissions are 775
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: display all files in current folder ending with "~" or "#" using regular expression
bash: find Path -regex Regex <|endoftext|>
<|endoftext|> english: Find all directories in the current directory tree that do not have `execute' permissions for anyone
bash: find Path -type d ! -perm -Permission <|endoftext|>
<|endoftext|> english: List .conf files residing in the /etc/nginx/ directory tree
bash: find Path -name Regex -exec echo {} \; <|endoftext|>
<|endoftext|> english: Open all .java files in the current directory tree in the vim editor
bash: find Path -name Regex | xargs -I {} vim {} <|endoftext|>
<|endoftext|> english: search for the word "foo" in all the regular/normal files in the directory "/path/to/dir"
bash: find Path -type f -print0 | xargs -0 -I {} grep -l Regex {} <|endoftext|>
<|endoftext|> english: find all readme files in a folder
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all empty files in home directory
bash: find Path -empty <|endoftext|>
<|endoftext|> english: find all the normal/regular files in the folder main-directory
bash: find Path -type f <|endoftext|>
<|endoftext|> english: Finds strings with text "searched-string" recursively in all files of current folder and prints names of files with matched strings.
bash: grep -r -l Regex File <|endoftext|>
<|endoftext|> english: Print the second line of output of "ls -l"
bash: ls -l | tail -n +Quantity | head -n Quantity <|endoftext|>
<|endoftext|> english: Delete all files (files, directories, links, pipes...) named 'core' under current directory
bash: find Path -name Regex -exec rm -f {} \; <|endoftext|>
<|endoftext|> english: Print the list of files and directories of the current directory including "."
bash: find Path \( -name Regex -or -prune \) <|endoftext|>
<|endoftext|> english: Search the current directory tree for regular .mkv files
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: search for a word in all the regular/normal files in the current folder and display the filename along with the matched text
bash: find Path -type f -exec grep -l Regex {} \; <|endoftext|>
<|endoftext|> english: Print a listing of the `other' directory
bash: find Path -maxdepth Quantity -printf "%P\n" <|endoftext|>
<|endoftext|> english: search for the ip "192.168.1.5" in all the files in /etc folder
bash: find Path -iname Regex | xargs -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: Remove all .txt files in and below the current directory
bash: find Path -name Regex -exec rm {} \; <|endoftext|>
<|endoftext|> english: Search the file system for regular files whose pathnames are shorter than 25 characters
bash: find Path -type f | awk -F Regex Program | awk Program <|endoftext|>
<|endoftext|> english: Search for files/directories with a case insensitive .txt extension in entire file system
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: find all the files ending with "clj" in the current folder and search for a pattern
bash: find Path -name Regex | xargs -I {} grep -r Regex {} <|endoftext|>
<|endoftext|> english: display a list of all java or jsp files in the current folders
bash: find Path \( -name Regex -or -name Regex \) -type f -ls <|endoftext|>
<|endoftext|> english: Search the /home/www directory tree for regular files
bash: find Path -type f <|endoftext|>
<|endoftext|> english: Search the /path directory tree for files lacking the group writable bit
bash: find Path ! -perm Permission <|endoftext|>
<|endoftext|> english: Pass a wildcard to scp by escaping it: copy all files with names starting with "files" in directory "/location" on host "server" to current directory on local machine, displaying debug info and preserving timestamps and permissions on copied files.
bash: scp -v -p File <|endoftext|>
<|endoftext|> english: Prints process tree for the current process with ASCII line drawing characters.
bash: pstree -A -s Regex <|endoftext|>
<|endoftext|> english: search for the regular/normal file "Dateiname" in the entire file system
bash: find Path -type f -iname Regex <|endoftext|>
<|endoftext|> english: Print all lines from file 'report.txt' containing any-cased 'error' pattern
bash: cat File | grep -i Regex <|endoftext|>
<|endoftext|> english: Read a line from standard input into variable "dir"
bash: read Regex <|endoftext|>
<|endoftext|> english: Recursively copy all files and directories matching "*ela*L1*TE*" in localhost's directory /tdggendska10/vig-preview-dmz-prod/docs/sbo/pdf/ to /var/www/html/sbo/2010/teacher/ela/level1 on localhost connecting as ssh user "dalvarado", in batch mode (no prompt for passwords) preserving file permissions and timestamps, and without displaying progress information.
bash: scp -B -p -q -r File File <|endoftext|>
<|endoftext|> english: Search the home directory for filenames starting with "xx" except for "xxx" files
bash: find Path -name Regex -and -not -name Regex <|endoftext|>
<|endoftext|> english: Gets MAC address of 'eth0' network interface.
bash: ifconfig Regex | grep -o -E Regex <|endoftext|>
<|endoftext|> english: display all the files in the file system which belong to no group
bash: find Path -nogroup Path -print <|endoftext|>
<|endoftext|> english: display all the files in the file system which have been modified in the last 10 minutes
bash: find Path -mmin -Quantity <|endoftext|>
<|endoftext|> english: Find all files/directories named orm.properties under  /eserver6 directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: display the names without extensions of all the data files in current folder and do not search in sub folders and which have not been changed in the last 60 mins
bash: find Path -maxdepth Quantity -name Regex -type f -cmin +Quantity -exec basename {} \; <|endoftext|>
<|endoftext|> english: find all the directories in current folder and do not search in sub directories
bash: find Path -maxdepth Quantity -type d -print0 <|endoftext|>
<|endoftext|> english: Print the files under current directory twice per line
bash: find Path -type f -exec echo {} {} \; <|endoftext|>
<|endoftext|> english: Saves hostname that matches ${ip_address} in 'host' variable, without trailing dot.
bash: dig Regex -x Regex | sed Program <|endoftext|>
<|endoftext|> english: Remove all "CVS" directories from the current directory tree, ignoring the case
bash: find Path -iname Regex -type d | xargs -I {} rm -r -f {} <|endoftext|>
<|endoftext|> english: Sort the lines of the file 'temp.txt' and change it in-place
bash: sort File -o File <|endoftext|>
<|endoftext|> english: Search all directories starting from the root directory for "filename"
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: Find all files/directories under '/usr/local/games' directory tree that contain the string 'xpilot' in their names
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find and remove multiple *.mp3 files
bash: find Path -type f -name Regex -exec rm -f {} \; <|endoftext|>
<|endoftext|> english: List all regular files from the current directory tree that were modified less than 60 minutes ago
bash: find Path -mmin -Quantity -type f | xargs -I {} ls -l {} <|endoftext|>
<|endoftext|> english: Forward all connections to client localhost 3307 via the SSH tunnel to gateway and then connect to host 1.2.3.4 to port 3306
bash: ssh -f Regex -L Regex -N <|endoftext|>
<|endoftext|> english: Check if the file "somelink" links to exists
bash: ls $( readlink File ) <|endoftext|>
<|endoftext|> english: Pair side-by-side content of the 'file' and its side-mirrored content
bash: paste -d Regex File <( rev File ) <|endoftext|>
<|endoftext|> english: display all directories in vim folder do not search in sub directories
bash: find Path -maxdepth Quantity -type d <|endoftext|>
<|endoftext|> english: Change permissions to 644 for all subdirectories
bash: find Path -type d -print0 | xargs -0 -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: Recursively changes group ownership on every file in the ${WP_ROOT}/wp-content directory to ${WS_GROUP} group.
bash: find Path -exec chgrp Regex {} \; <|endoftext|>
<|endoftext|> english: search for all the regular files in the folder /home which have the permission 077
bash: find Path -type f -perm Permission -print <|endoftext|>
<|endoftext|> english: change owner of all files into current directory except  files named as  './var/foo*' to user www-data
bash: find Path -not -iwholename Regex -exec chown Regex {} \; <|endoftext|>
<|endoftext|> english: Search the *.c files residing in the current directory tree for string "blash"
bash: find Path -name Regex -exec grep -n -e Regex {} \; <|endoftext|>
<|endoftext|> english: display all normal/regular files in current folder which have readable permission
bash: find Path -type f Path <|endoftext|>
<|endoftext|> english: Find all files under $x directory and set read-write permission for owner and group and no permission for other for those files
bash: find Path -type f -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Descend into every directory under /etc and print the file/directory names with relative paths
bash: find Path -execdir echo {} \; <|endoftext|>
<|endoftext|> english: Find all files newer than httpd.conf under and below the current directory
bash: find Path -newer File <|endoftext|>
<|endoftext|> english: Search PATH for utilities called "rename", display the type of file (script, executable, ...) for each match found.
bash: which -a Regex | xargs -I {} readlink -f {} | xargs -I {} file {} <|endoftext|>
<|endoftext|> english: Search the *.code files from the current directory tree for string 'pattern'
bash: find Path -name Regex -print0 | xargs -0 -I {} grep -H Regex {} <|endoftext|>
<|endoftext|> english: find all the files in the entire file system which belong to the group "staff"
bash: find Path -group Regex -print <|endoftext|>
<|endoftext|> english: Print content of 'file' file reverted characterwise
bash: rev File <|endoftext|>
<|endoftext|> english: Prints what day it was 222 days ago
bash: date --date Regex +"%d" <|endoftext|>
<|endoftext|> english: Find recursively all files matching pattern 'file??' in the xargstest/ directory and print a sorted list of them
bash: find Path -name Regex | sort <|endoftext|>
<|endoftext|> english: Print only first line of 'file' content, formatted as 29-symbol wide column, regarding space symbol as a word separator
bash: cat File | fold -s -w Quantity | head - Quantity <|endoftext|>
<|endoftext|> english: find all jpg files in current folder
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: print the names of all of the unstripped binaries in the /usr/local directory tree. Builtin tests avoid running file on files that are not regular files or are not executable
bash: find Path -type f -perm Permission | xargs -I {} file {} | grep Regex | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: find all the mp3 files in the entire file system whose size is bigger than 10MB
bash: find Path -type f -name Regex -size +Size -exec rm {} \; <|endoftext|>
<|endoftext|> english: Find files under current directory that are not newer than $date_time in regards of modification time
bash: find Path -type f -not -newermt Regex <|endoftext|>
<|endoftext|> english: search for all the rpm files in the file system which reside in the same partition as that of the root
bash: find Path -xdev -name Regex <|endoftext|>
<|endoftext|> english: Format file "list-of-entries.txt" as new-line separated columns
bash: column -t -s Regex File <|endoftext|>
<|endoftext|> english: Write standard input to standard output and file "/tmp/arjhaiX4"
bash: tee File <|endoftext|>
<|endoftext|> english: find all the cpp files in current folder
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Create an empty file 'last.check' in directory pointed by variable "log_dir", with specified timestamp.
bash: touch -m File File <|endoftext|>
<|endoftext|> english: Find files in $DIR_TO_CLEAN that are older than $DAYS_TO_SAVE days and print them with null character appended to their paths
bash: find Path -type f -mtime +Timespan -print0 <|endoftext|>
<|endoftext|> english: Save the absolute path of the current script to variable "SELF"
bash: readlink -f File <|endoftext|>
<|endoftext|> english: Find all files/directories with permission $permissions under $directory directory tree
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: Check that the master ssh connection "officefirewall" is running
bash: ssh -O Regex Regex <|endoftext|>
<|endoftext|> english: delete all the log files in the current folder
bash: find Path -name Regex -delete <|endoftext|>
<|endoftext|> english: Look for "testfile.txt" in the "/" directory and 1 level below
bash: find Path -maxdepth Quantity -name Regex <|endoftext|>
<|endoftext|> english: search for all the ".c" files in the folder "/home/david" which have been modified in the last 10 minutes
bash: find Path -mmin -Quantity -name Regex <|endoftext|>
<|endoftext|> english: Synchronize "/path/to/dir_a" with files in "/path/to/dir_b/" if the files are newer
bash: rsync -r -t -u -v File File <|endoftext|>
<|endoftext|> english: Search the current directory tree for PHP files changed less than 14 days ago
bash: find Path -name Regex -ctime -Timespan <|endoftext|>
<|endoftext|> english: Remove files from the file system that are owned by nobody
bash: find Path -nouser -exec rm {} \; <|endoftext|>
<|endoftext|> english: Make directories to "/tmp/boostinst" as needed and print a message for each created directory
bash: mkdir -p -v Directory <|endoftext|>
<|endoftext|> english: List all files in the current directory tree that were last modified between "mar 03, 2010 09:00" and "mar 11, 2010"
bash: find Path -newermt Regex -not -newermt Regex -ls <|endoftext|>
<|endoftext|> english: display all the files in the current directory and do not search in sub directories
bash: find Path -maxdepth Quantity -print0 <|endoftext|>
<|endoftext|> english: Find all 755 permission regular files under current directory tree
bash: find Path -type f -perm Permission <|endoftext|>
<|endoftext|> english: Recursively copies everything under the 'current' folder to the '.hiddendir' folder.
bash: cp File File -R <|endoftext|>
<|endoftext|> english: Find all files/directories with 777 permission under current directory tree
bash: find Path -perm Permission -print <|endoftext|>
<|endoftext|> english: Set the environment variable "DISPLAY" to the system host name followed by ":0 skype"
bash: env $( hostname ) Program <|endoftext|>
<|endoftext|> english: Sort lines in "FILE" to standard output preserving only unique lines
bash: sort -u File <|endoftext|>
<|endoftext|> english: Find regular files under and below /path that match pattern "???-???_[a-zA-Z]*_[0-9]*_*.???"
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: Save Java home in variable "JAVA_HOME"
bash: readlink -f $( which Regex ) | sed Program <|endoftext|>
<|endoftext|> english: Recursively removes all files like any-cased '*.pyc' in a current folder.
bash: find Path -iname Regex -print0 | xargs -0 --no-run-if-empty -I {} rm {} <|endoftext|>
<|endoftext|> english: search for text files in the current folder which do not have write access to others
bash: find Path -type f \( -iname Regex -not -perm -Permission \) <|endoftext|>
<|endoftext|> english: Display a long listing of all regular files with 0777 permission under current directory tree
bash: find Path -perm Permission -type f -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: Find disk used space of only the target directory
bash: du --max-depth Quantity File <|endoftext|>
<|endoftext|> english: Print the lines in "table.txt" grouped by the first field
bash: cat File | awk Program | sort | uniq | xargs -i -I {} grep {} File {} <|endoftext|>
<|endoftext|> english: Print second section of space-separated data coming from stdin.
bash: cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: find all files in the home folder which have been modified between 72 and 96 hours before
bash: find Path -mtime Timespan -mtime -Timespan -daystart <|endoftext|>
<|endoftext|> english: Search the .java files from the /Applications/ directory tree for TODO lines
bash: find Path -name Regex -exec grep -i Regex {} \; <|endoftext|>
<|endoftext|> english: List all environment variables (name and value) whose name starts with GOROOT
bash: env | grep Regex <|endoftext|>
<|endoftext|> english: find all the files in the current directory with the name "wagoneer" which are in the current device.
bash: find Path -xdev -name Regex -print <|endoftext|>
<|endoftext|> english: Copy directory structure from directory 'olddir' to 'newdir'
bash: find Path -type d -printf "newdir/%P\0" | xargs -0 -I {} mkdir -p {} <|endoftext|>
<|endoftext|> english: Print the empty directories and files under current directory
bash: find Path -empty <|endoftext|>
<|endoftext|> english: Search the system for directories named "needle"
bash: find Path -type d -name Regex <|endoftext|>
<|endoftext|> english: Print out the names and types of all files in the current directory tree
bash: find Path -printf "%y %p\n" <|endoftext|>
<|endoftext|> english: Remove empty directories from directory tree /srv/abc
bash: find Path -type d -empty -exec rmdir {} \; <|endoftext|>
<|endoftext|> english: find all the files in the home folder which are less than 300Bytes
bash: find Path -size -Size <|endoftext|>
<|endoftext|> english: Enables shell option 'failglob'.
bash: shopt -s failglob <|endoftext|>
<|endoftext|> english: Prints long listing of top ten most memory using processes in a system.
bash: ps -e -o rss=,args= | sort -n -r | head <|endoftext|>
<|endoftext|> english: Prints line count of each file within current directory.
bash: find Path -type f -print0 | xargs -0 -L Quantity -I {} wc -l {} <|endoftext|>
<|endoftext|> english: find  files which full path name is foo/bar under foo directory and print
bash: find Path -path Regex -print <|endoftext|>
<|endoftext|> english: Print each line in parallel in files "tmp/sample-XXX.tim" and "tmp/sample-XXX.log"
bash: paste File <|endoftext|>
<|endoftext|> english: display all the files in the current folder which have been modified in the last 24 hours excluding all directories
bash: find Path \( -type d ! -name Regex -prune \) -or \( -mtime -Timespan -print \) <|endoftext|>
<|endoftext|> english: List all files in the current directory tree that were modified 60 minutes ago
bash: find Path -mmin Quantity | xargs -I {} ls -l {} <|endoftext|>
<|endoftext|> english: Scan every file in /etc for IPV4 addresses.
bash: find Path -exec grep Regex {} \; <|endoftext|>
<|endoftext|> english: Opens menu item 'Basic Shell Features' -> 'Shell Expansions' -> 'Filename Expansion' -> 'Pattern Matching' in the 'bash' manual.
bash: info Regex Regex Regex Regex Regex <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory with null character as the delimiter
bash: find Path -print0 <|endoftext|>
<|endoftext|> english: Mark variables and function which are modified or created for export to the environment of subsequent commands
bash: set -a <|endoftext|>
<|endoftext|> english: Force create a symbolc link named "new_dir" to "/other/dir" without dereferencing "new_dir"
bash: ln -s -f -n File Regex <|endoftext|>
<|endoftext|> english: Find all symlinks under current directory
bash: find Path -type l <|endoftext|>
<|endoftext|> english: Gets IP addresses of all active network interfaces.
bash: ifconfig | grep Regex | grep -v Regex | cut -d Regex -f Number | awk Program <|endoftext|>
<|endoftext|> english: find all the regular/normal files in the current directory and print them skip searching all the directories in the current folders.
bash: find Path -type f -print -or -type d -prune <|endoftext|>
<|endoftext|> english: Delete all files in the current user's home directory and its sub-directories that have not been accessed for more than 100 days.
bash: find Path -atime +Timespan -delete <|endoftext|>
<|endoftext|> english: List all files from the current directory tree that were modified less than 60 minutes ago
bash: find Path -mmin -Quantity | xargs -r -I {} ls -l {} <|endoftext|>
<|endoftext|> english: search all the files in the current folder using regex excluding those that are present in the folder test
bash: find Path -name Regex -prune -or -regex Regex <|endoftext|>
<|endoftext|> english: Find files/directories that does not have write permssion for group or others
bash: find Path ! -perm -Permission <|endoftext|>
<|endoftext|> english: Print summary of new/missing files, and which files differ between dir1 and dir2.
bash: diff --brief --recursive File File <|endoftext|>
<|endoftext|> english: Creates random file name formatted like expression in variable ${str// /X} and saves it in 'rand_str' variable.
bash: mktemp --dry-run Regex <|endoftext|>
<|endoftext|> english: Find all files in $dir directory without going into sub-directories
bash: find Path -maxdepth Quantity -type f <|endoftext|>
<|endoftext|> english: Remove all directories called "test" from the current directory tree
bash: find Path -name Regex -type d -exec rm -r {} \; <|endoftext|>
<|endoftext|> english: Read a line from standard input into the variable "yn" using the first argument as the prompt ("$1 ")
bash: read -p Regex Regex <|endoftext|>
<|endoftext|> english: Gets domain name from dig reverse lookup.
bash: dig -x Regex | awk Program <|endoftext|>
<|endoftext|> english: Change the owner of "$JBOSS_CONSOLE_LOG" to "$JBOSS_USER"
bash: chown Regex File <|endoftext|>
<|endoftext|> english: Set permissions for files in `foldername' and its subdirectories to 644
bash: find Path -type f -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Search the *.cc files in the current directory tree for string "xxx"
bash: find Path -name Regex -print -exec grep Regex {} \; <|endoftext|>
<|endoftext|> english: Find .jpg files owned by user daniel in the current directory and its sub-directories but ignore any file beginning with "autumn".
bash: find Path -user Regex -type f -name Regex ! -name Regex <|endoftext|>
<|endoftext|> english: Print the contents of "Little_Commas.TXT"
bash: cat File <|endoftext|>
<|endoftext|> english: Delete all .svn files/directories under current directory
bash: find Path -depth -name Regex -exec rm -f -r {} \; <|endoftext|>
<|endoftext|> english: find all js files under the build direcotry except build/external and build/log directory.
bash: find Path -not \( -path Regex -prune \) -not \( -path Regex -prune \) -name Regex <|endoftext|>
<|endoftext|> english: Search the current directory tree for regular files whose names end in ".shtml" or ".css"
bash: find Path -type f \( -name Regex -or -name Regex \) -print <|endoftext|>
<|endoftext|> english: Display an amount of processes running with a certain name
bash: ps -e -f | grep -v Regex | grep -w -c Regex <|endoftext|>
<|endoftext|> english: Search the current directory recursively for regular files last accessed 2 minutes ago
bash: find Path Path -f -amin Quantity <|endoftext|>
<|endoftext|> english: Find all files under current directory that were modified more than 1 day ago
bash: find Path -mtime +Timespan <|endoftext|>
<|endoftext|> english: Change every file under "/var/www/html/" to have permissions 664
bash: find Path -type f -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: display all the files in current directory with each file name displayed twice in the same row
bash: find Path | sed Program <|endoftext|>
<|endoftext|> english: Find all .php files starting from the root directory /
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: display all files in the entire file system excluding the directories /proc,/sys,/dev and those files which are writable and which are not symbolic links and which are not sockets and which do not have the sticky bit set
bash: find Path -noleaf -wholename Regex -prune -or -wholename Regex -prune -or -wholename Regex -prune -or -perm -Permission ! -type l ! -type s ! \( -type d -perm -Permission \) -print <|endoftext|>
<|endoftext|> english: Numberically sort content of file 'files', using for sorting part of second one of dash separated fields beginning from second letter.
bash: cat File | sort -t Regex -k Number -n <|endoftext|>
<|endoftext|> english: Edit the cron job list for user 'wwwrun' using default editor specified by the EDITOR environment variable, or /usr/bin/editor if no default editor is specified.
bash: crontab -u Regex -e <|endoftext|>
<|endoftext|> english: Count lines that are neither blanks nor comments in a file 'foo.pl'
bash: cat File | sed Program | wc -l <|endoftext|>
<|endoftext|> english: Move all files from the `sourceDir' directory to the `destDir' directory
bash: find Path -mindepth Quantity -maxdepth Quantity -print0 | xargs -0 -I {} mv --target-directory Directory {} <|endoftext|>
<|endoftext|> english: Fetch a script from the web, and interpret it in the current shell.
bash: source <( curl Regex Regex ) <|endoftext|>
<|endoftext|> english: Read a single character from standard input with prompt "Are you sure? (y/n) "
bash: read -p Regex -n Quantity <|endoftext|>
<|endoftext|> english: replaces the second to last line of file
bash: tac File | sed Program | tac <|endoftext|>
<|endoftext|> english: Search for all files owned by user www-data that are not larger than 100kb
bash: find Path -user Regex -not -size +Size <|endoftext|>
<|endoftext|> english: display all text files in the folder /tmp/1
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: Sort "file" using a buffer with a size 50% of main memory
bash: sort -S Size File <|endoftext|>
<|endoftext|> english: find all text files in the current folder
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find and remove zero bytes files from user's directories .
bash: find Path -size Size -exec rm {} \; <|endoftext|>
<|endoftext|> english: find all files that were modified between 90 to 100 days ago in home directory and delete then .
bash: find Path -type f -mtime +Timespan -mtime -Timespan -exec rm {} \; <|endoftext|>
<|endoftext|> english: display all the text files in the temp folder
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Remove trailing white spaces from all *.rb files under current directory
bash: find Path -name Regex | xargs -I {} sed -i Program File {} <|endoftext|>
<|endoftext|> english: For each line which has a common first field in test.1 and test.2, output the first 2 fields of test.2 and the field 2 and 3 of test.1
bash: join -j Regex -o 2.1,2.2,1.2,1.3 <( sort File ) <( sort File ) <|endoftext|>
<|endoftext|> english: Join data in "file1" sorted by the second word of each line with data in "file2" sorted by the first word of each line, keeping the same order as it is found in "file1"
bash: join -1 Regex -2 Regex <( sort File File File ) <( sort File File File ) <|endoftext|>
<|endoftext|> english: Print the current shell
bash: ps | tail -n Quantity | sed Program File <|endoftext|>
<|endoftext|> english: display all files in the current folder which start with met
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Prints current month calendar, without highlighting of a current date.
bash: cal -h <|endoftext|>
<|endoftext|> english: find all files in the current folder which are bigger than 10MB and less than 50 MB
bash: find Path -size +Size -size -Size -print <|endoftext|>
<|endoftext|> english: Find all SGID set files in the file system
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: Search the current directory tree for regular files whose names end in ".shtml" or ".css"
bash: find Path -type f -regex Regex <|endoftext|>
<|endoftext|> english: Find all regular files that reside in the current directory tree and were last modified more than 2 days ago
bash: find Path -type f -mtime +Timespan <|endoftext|>
<|endoftext|> english: Decompress and sort "$part0" and "$part1" of files in different processes
bash: sort File <( zcat Regex | sort ) <( zcat Regex | sort ) <|endoftext|>
<|endoftext|> english: Remove everything in a current folder without prompting.
bash: find Path -mindepth Quantity -maxdepth Quantity -print0 | xargs -0 -I {} rm -r -f {} <|endoftext|>
<|endoftext|> english: Search the current directory tree for files named "accepted_hits.bam"
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: List all mounted filesystems
bash: mount <|endoftext|>
<|endoftext|> english: Display a named character dump of "test.sh"
bash: od -a File <|endoftext|>
<|endoftext|> english: Find a more recent version of httpd.conf file than /etc/apache-perl/httpd.conf in entire file system
bash: find Path -name Regex -newer File <|endoftext|>
<|endoftext|> english: Find SGID files
bash: find Path -perm +Permission <|endoftext|>
<|endoftext|> english: find all files in the file system whose size is bigger than 3GB
bash: find Path -size +Size <|endoftext|>
<|endoftext|> english: Find all hidden files starting from the directory given as variable $FOLDER
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: copy the file header.shtml to those dirs
bash: find Path Path Path Path -type d -exec cp File {} \; <|endoftext|>
<|endoftext|> english: Find disk usage of all files inside the directory
bash: du -a <|endoftext|>
<|endoftext|> english: Interactively create a symbolic link in the current directory for "$SCRIPT_DIR/$FILE"
bash: ln --symbolic --interactive File <|endoftext|>
<|endoftext|> english: Look for *log files in directories at least three levels down the directory tree
bash: find Path -mindepth Quantity -name Regex <|endoftext|>
<|endoftext|> english: Find all files named 'Makefile' in the /usr/ports directory tree and count the number of lines in them matching regular expression '^MASTER_SITE.*CPAN'
bash: find Path -name Regex -exec grep Regex {} + | wc -l <|endoftext|>
<|endoftext|> english: Find files under /tmp that are larger than 10KB and smaller than 20KB
bash: find Path -size +Size -size -Size <|endoftext|>
<|endoftext|> english: find all the png files in current folder which are present in the pattern list file "search.txt"
bash: find Path -name Regex | grep -f <( sed Program File ) <|endoftext|>
<|endoftext|> english: display all the files in the file system which are present in nfs system
bash: find Path -fstype nfs -print <|endoftext|>
<|endoftext|> english: Change permissions of ".git/hooks/pre-commit" to 777
bash: chmod Permission File <|endoftext|>
<|endoftext|> english: Display a long listing of all directories under '/nas' directory tree
bash: find Path -type d -ls <|endoftext|>
<|endoftext|> english: Read a line from standard input with prompt "Enter your choice: " and save response to variable "choice"
bash: read -p Regex Regex <|endoftext|>
<|endoftext|> english: Add cron lists from "file1" and "file2" to list of cron jobs, giving errors for any lines that cannot be parsed by crontab.
bash: cat File File | crontab <|endoftext|>
<|endoftext|> english: Wrap each line in "yourfile" to fit in 79 characters and right pad any lines shorter with spaces
bash: fold -w Quantity File | sed -e Program -e Program <|endoftext|>
<|endoftext|> english: Find all regular files newer than '/tmp/$$' (where $$ expands to current process id) under '/tmefndr/oravl01' directory tree
bash: find Path -type f -newer File <|endoftext|>
<|endoftext|> english: force delete all the files in the current folder expect xml files
bash: find Path | grep -v Regex | xargs -I {} rm -r -f {} {} <|endoftext|>
<|endoftext|> english: Make a copy of the entire contents of dir1 in the Pictures directory located in the user's home directory.
bash: cp -r File File <|endoftext|>
<|endoftext|> english: Search the current directory recursively for files last modified within the past 24 hours ignoring .swp files and paths ./es* and ./en*
bash: find Path -mtime Timespan -not \( -name Regex -or -regex Regex -or -regex Regex \) <|endoftext|>
<|endoftext|> english: Change owner to "root" and group to "dockerroot" of "/var/run/docker.sock"
bash: chown Regex File <|endoftext|>
<|endoftext|> english: Split the output of "ls" into files of at most 500 lines each with prefix "outputXYZ."
bash: ls | split -l Quantity File Regex <|endoftext|>
<|endoftext|> english: find all the files in the current folder which do not have the read permission
bash: find Path -type f ! -perm -Permission <|endoftext|>
<|endoftext|> english: Find directory "your/dir" if it is empty
bash: find Path -prune -empty -type d <|endoftext|>
<|endoftext|> english: Find all files in the /var/tmp directory tree with uid=1000
bash: find Path -uid Regex <|endoftext|>
<|endoftext|> english: Unpack all *.gz archives in the current directory tree
bash: find Path -name Regex -print0 | xargs -0 -I {} gunzip {} <|endoftext|>
<|endoftext|> english: Count and show the number of lines for each PHP files in the current directory tree
bash: find Path -name Regex | xargs -I {} wc -l {} <|endoftext|>
<|endoftext|> english: display ten files in the tmp directory
bash: find Path | head <|endoftext|>
<|endoftext|> english: Saves file sctipt.sh size in 'size' variable.
bash: cat File | wc -c <|endoftext|>
<|endoftext|> english: Read standard input until a null character is found and save the result in variable "line"
bash: read -d Regex Regex <|endoftext|>
<|endoftext|> english: Subtract all columns in "File2" from "File1" except the first
bash: awk Program Program Program | rev | column -t | rev <|endoftext|>
<|endoftext|> english: Search the /home/test directory tree for directories and files called '.ssh'
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Prefix all files and directories in the current directory with "unix_"
bash: ls | xargs -i -I {} mv {} File {} <|endoftext|>
<|endoftext|> english: Save the first "." separated field of the system host name to variable "HOSTZ"
bash: hostname | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: Search for 'Text To Find' in all regular files under current directory tree and show the matched files
bash: find Path -type f -exec grep -l Regex {} \; <|endoftext|>
<|endoftext|> english: Recursively list all files on smbfs mounts
bash: mount -v | grep Regex | awk Program | xargs -I {} ls -l -s -R {} <|endoftext|>
<|endoftext|> english: Replace spaces with underscores in the names of all files and directories in the "/tmp" directory tree
bash: find Path -depth -name Regex -execdir rename Regex Regex {} \; <|endoftext|>
<|endoftext|> english: Find all files/directories named 'query' under current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Infinitely print "1" then "0"
bash: yes Regex | sed Program <|endoftext|>
<|endoftext|> english: Print only unique lines of 'file_name' file
bash: cat -n File | sort -u -k Number | sort -n -k Number | cut -f Number <|endoftext|>
<|endoftext|> english: Find all regular files under $d directory tree and change their permissions to 777
bash: find Path -type f -print0 | xargs -0 -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: find  files which full path name is /tmpfoo/bar under /tmp/foo directory and print
bash: find Path -path Regex -print Path <|endoftext|>
<|endoftext|> english: Recursively removes all empty folders under current path, printing info message on each operation, and suppressing error messages if folder is not empty.
bash: find Path -type d -empty -exec rmdir -v -p --ignore-fail-on-non-empty {} + <|endoftext|>
<|endoftext|> english: Prints only first ten characters of each string of file $file.
bash: cat File | cut -c Number <|endoftext|>
<|endoftext|> english: delete all the files in the file system which belong to the user edwarda after user confirmation
bash: find Path -user Regex -ok rm {} \; <|endoftext|>
<|endoftext|> english: Execute "cat /tmp/iostat.running" every 10 seconds
bash: watch -n Quantity cat File <|endoftext|>
<|endoftext|> english: Move all files in the current directory tree that match "some_pattern" to "target_location"
bash: find Path -name Regex -print0 | xargs -0 -I {} mv {} File <|endoftext|>
<|endoftext|> english: Counts lines in each *.php file.
bash: wc -l $( tree -i -f --noreport | grep -e Regex ) <|endoftext|>
<|endoftext|> english: Find files/directories with exactly read,write and execute permission for all (owner, group and others) under /path
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: search all the files in the current folder using regex
bash: find Path -regex Regex <|endoftext|>
<|endoftext|> english: Counts lines in file 'filename' ignoring empty lines and lines with spaces only.
bash: cat File | grep Regex | wc -l <|endoftext|>
<|endoftext|> english: Find all the SUID files in the current directory tree
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: Show the value of variable "list", discarding consecutive duplicates and adding number of occurrences at the beginning of each line.
bash: echo Regex | uniq -c <|endoftext|>
<|endoftext|> english: Adjust the timestamp of file $filename by subtracting 2 hours from it
bash: touch -d $( date -r File ) File <|endoftext|>
<|endoftext|> english: Find all regular files with 755 permission under current directory tree and change their permission to 644
bash: find Path -type f -perm Permission -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Counts non-empty lines in file fileName.
bash: cat File | grep -v Regex | wc -l <|endoftext|>
<|endoftext|> english: Print the names of all regular files in the current directory tree
bash: find Path -type f -exec echo {} \; <|endoftext|>
<|endoftext|> english: Change the owner and group of "testfile.txt" to "root"
bash: chown Regex File <|endoftext|>
<|endoftext|> english: Numerically sort each line in file "out" and print the result to console
bash: sort -n File <|endoftext|>
<|endoftext|> english: Search for the files/directories that were modified more than an hour ago
bash: find Path -mtime +Timespan <|endoftext|>
<|endoftext|> english: Find regular files matching pattern "*oraenv*" and excecute the "file" utility for each of them
bash: find Path -name Regex -type f -exec file {} \; <|endoftext|>
<|endoftext|> english: Find all *.p[lm] files under /users/tom directory that matches the regex '->get(\|#hyphenate' in their contents
bash: find Path -name Regex -exec grep -l -- Regex {} + <|endoftext|>
<|endoftext|> english: Recursively change the user and group of all files in "/var/lib/jenkins" to "root"
bash: chown -R Regex File <|endoftext|>
<|endoftext|> english: search for the folder .dummy and remove it from the folder "Test folder"
bash: find Path -type d -name Regex -exec rm -r -f File \; <|endoftext|>
<|endoftext|> english: Print a line of 10 '#' characters
bash: seq -f "#" -s Regex Number <|endoftext|>
<|endoftext|> english: Print the line number of each matching "<phrase>" in "<filename>"
bash: nl -b a File | grep Regex | awk Program <|endoftext|>
<|endoftext|> english: Finds recursively and following symlinks from root folder all files that contain "text-to-find-here" and prints files names.
bash: grep -R -i -l Regex File <|endoftext|>
<|endoftext|> english: Change the file extension from '.txt' to '.bak' for all files/directories under current directory tree
bash: find Path -name Regex | sed Program | xargs -i -I {} echo Regex Regex Regex {} | sh <|endoftext|>
<|endoftext|> english: find all regular/normal files which have execute permission in current folder and copy them to another folder
bash: cp $( find Path -perm -Permission -type f ) File <|endoftext|>
<|endoftext|> english: Decompress and extract '/usr/src/redhat/SOURCES/source-one.tar.gz'
bash: gzip -d -c Regex | tar -x -v -v -f File <|endoftext|>
<|endoftext|> english: Pipe content of 'somedata.txt' file to the input of command "$outfile"
bash: cat File | <|endoftext|>
<|endoftext|> english: Find all files in the directory $directory or below with the permissions specificed by $permissions.
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: Find all files/directories under _CACHE_* directories
bash: find Path <|endoftext|>
<|endoftext|> english: Read a line from an interactive shell's standard input into variable "message" without backslash escapes and prompt $'Please Enter a Message:\n'
bash: read -r -e -p Regex Regex <|endoftext|>
<|endoftext|> english: Get the current shell's executable name from the output of 'ps'.
bash: ps | grep $( echo Regex ) | awk Program <|endoftext|>
<|endoftext|> english: Extract any line in "set1" which does not appear in "set2"
bash: comm -2 -3 <( sort File ) <( sort File ) <|endoftext|>
<|endoftext|> english: Search the /path directory tree for files lacking the group writable bit
bash: find Path ! -perm Permission <|endoftext|>
<|endoftext|> english: Find all files whose names end with "~" in the /home/peter directory tree, following symlinks, and delete them
bash: find -L Path -name Regex | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: Send one ping request to host with local address in the 10.0.0.x range, with last number specified by variable "i", waiting 1 second for a reply, and output only lines containing "from" to standard output.
bash: ping -W Quantity -c Quantity Regex | grep Regex <|endoftext|>
<|endoftext|> english: Moves file '$2' to the folder where '$1' file is located.
bash: mv File $( dirname Regex ) <|endoftext|>
<|endoftext|> english: Send Output From Find The Find Command To A File
bash: find Path -name Regex -fprint File <|endoftext|>
<|endoftext|> english: Change directory to the download directory specified in the current user's user-dirs.dirs file
bash: cd $( grep Regex File | cut -f Number -d Regex | tr Regex Regex | tr -d Regex ) <|endoftext|>
<|endoftext|> english: Prints long listing of the current directory and top-level directories within, sorted from oldest to newest, with appended indicators.
bash: ls -F -l -t -r File <|endoftext|>
<|endoftext|> english: Make a directory in the current working directory with a random 32 alphanumeric character name
bash: cat File | tr -d -c Regex | fold -w Quantity | head -n Quantity | xargs -I {} mkdir {} <|endoftext|>
<|endoftext|> english: Print a list of all duplicate filenames in the current directory tree if there is no white space in filenames
bash: find Path | sed Program | sort | uniq -D -f File | cut -f Number <|endoftext|>
<|endoftext|> english: display long listing of all files in the current directory whose size is 24 or 25 bytes (doesnt display inode information) .
bash: find Path -size -Size -size +Size -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: Find all *foo files/directories under current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find files/directories under current directory and print them as null terminated strings.
bash: find Path -print0 <|endoftext|>
<|endoftext|> english: Find all *.cgi files/directories under current directory and change their permission to 775
bash: find Path -name Regex -print0 | xargs -0 -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: find all the normal/regular files in the current directory which have been modified in the last 24 hours
bash: find Path -mtime -Timespan -type f -print <|endoftext|>
<|endoftext|> english: Find files/directories under current directory and print them
bash: find Path -print0 | xargs -0 -I {} echo {} <|endoftext|>
<|endoftext|> english: Print file type of the executable file of command "file"
bash: which Regex | file -f File <|endoftext|>
<|endoftext|> english: Creates temporary file name and saves path to it in 'TMP_FILE' variable.
bash: mktemp -t <|endoftext|>
<|endoftext|> english: Find all files/directories named 'file1' under current directory tree
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: Reports count of characters in the value of ${FOO_NO_TRAIL_SPACE} variable as follows: "length(FOO_NO_TRAIL_SPACE)==<counted number of characters>"
bash: echo -e $( echo -n -e Regex | wc -m ) <|endoftext|>
<|endoftext|> english: find all files in the file system which have been accessed in the last 24 hours
bash: find Path -atime Timespan <|endoftext|>
<|endoftext|> english: find all files in the current directory that are less than 1 byte size
bash: find Path -size -Size -print <|endoftext|>
<|endoftext|> english: Remove all files with names like "vmware-*.log" from the current directory tree
bash: find Path -name Regex -delete <|endoftext|>
<|endoftext|> english: Find CSS files omitting results containing "CVS"
bash: find Path ! -path Regex -type f -name Regex <|endoftext|>
<|endoftext|> english: Display the named characters in "Test\rTesting\r\nTester\rTested"
bash: echo -e Regex | awk Program | od -a <|endoftext|>
<|endoftext|> english: Change permissions to 0755 for all directories in the /path directory tree
bash: find Path -type d -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: search for all the files in the current directory which belong to the user "xuser1" and change the owner ship of them to "user2"
bash: find Path -user Regex -exec chown -R Regex {} \; <|endoftext|>
<|endoftext|> english: Remove all *.mp3 files in tmp directory but not in it's subdirectories
bash: find Path -maxdepth Quantity -name Regex -maxdepth Quantity | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: Find the total size of *.jpg files within the directory tree ./photos/john_doe
bash: find Path -type f -name Regex -exec du -c -h {} + | grep Regex <|endoftext|>
<|endoftext|> english: sort and display the unique lines display the contents of all the files that have been modified in the last 91 days and not in the last 2 days
bash: find Path -name Regex -type f -daystart -mtime -Timespan -mtime +Timespan | xargs -I {} cat {} | sort | uniq <|endoftext|>
<|endoftext|> english: Find all *.jpg files under current directory and print only unique names
bash: find Path -name Regex -exec basename {} \; | uniq -u <|endoftext|>
<|endoftext|> english: Print a colon-separated list of all directories from the $root directory tree
bash: find Path -type d | tr Regex Regex <|endoftext|>
<|endoftext|> english: Find all regular files under '/usr/bin' directory tree that are less than 50 bytes in size
bash: find Path -type f -size -Size <|endoftext|>
<|endoftext|> english: Find all files whose names end with "~" in the /home/peter directory tree, following symlinks, and delete them
bash: find -L Path -name Regex -print0 | xargs -0 -r -n Quantity -I {} rm {} <|endoftext|>
<|endoftext|> english: display all the regular files in the current folder that are exactly 10KB
bash: find Path -type f -size Size <|endoftext|>
<|endoftext|> english: Search the current directory tree for regular files omitting directory `omit-directory'
bash: find Path -name Regex -prune -or -type f <|endoftext|>
<|endoftext|> english: Look for files with wide open permissions
bash: find Path -type f -perm Permission -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: Finds strings with 'TEXT' from *.log files and prints all but first field from any space-delimited string.
bash: grep -e Regex Regex | cut -d Regex --complement -s -f Number <|endoftext|>
<|endoftext|> english: display all normal/regular files in current folder
bash: find Path -type f <|endoftext|>
<|endoftext|> english: Search the current directory tree for all .java files that were last modified at least 7 days ago
bash: find Path -name Regex -mtime +Timespan -print <|endoftext|>
<|endoftext|> english: Find all files under /mnt/naspath directory without descending into .snapshot directory that were modified in last 24 hours with null character as the delimiter
bash: find Path ! \( -name Regex -prune \) -type f -mtime Timespan -print0 <|endoftext|>
<|endoftext|> english: Merge already sorted files in the current directory ending in ".$suffix"
bash: sort File File <|endoftext|>
<|endoftext|> english: Find all files starting from the current directory that contain '.java' in their pathnames
bash: find Path -print | grep Regex <|endoftext|>
<|endoftext|> english: find al the tmp directories in the current directory and create a dump of it
bash: find Path -type d -name Regex -prune -or -print | cpio -d -u -m -p Regex <|endoftext|>
<|endoftext|> english: Set permissions to 700 for every subdirectory of the current directory
bash: find Path -mindepth Quantity -type d -print0 | xargs -0 -I {} chmod -R Permission {} <|endoftext|>
<|endoftext|> english: Show file type information for all regular files under '/home' directory tree
bash: find Path -type f -exec file {} \; <|endoftext|>
<|endoftext|> english: change the permissions of all the directories in the current folder
bash: chmod Permission $( find Path -type d -print ) <|endoftext|>
<|endoftext|> english: Delete all files/directories under current directory
bash: find Path -delete <|endoftext|>
<|endoftext|> english: Output the specified path removing all containing directories and the .txt suffix, in this case "filename".
bash: basename Regex Regex <|endoftext|>
<|endoftext|> english: display all the ".c" files which have been modified in the last 10 minutes
bash: find Path -amin -Quantity -name Regex <|endoftext|>
<|endoftext|> english: display a long listing of all the java files in the current folder in sorted order
bash: find Path -type f -name Regex -ls | sort -k +Number -r <|endoftext|>
<|endoftext|> english: Print a line of 100 random characters either "." or " "
bash: cat File | tr -d -c Regex | fold -w Quantity | head - Quantity <|endoftext|>
<|endoftext|> english: delete all the text files in the current folder.
bash: find Path -type f -name Regex -exec rm -f {} \; <|endoftext|>
<|endoftext|> english: This find command ignore the case when searching for file name , to ignore the case  in this example all .py & .PY file will search
bash: find Path -type f -iname Regex <|endoftext|>
<|endoftext|> english: Finds the folder where temporary files would be written to, and save path to it in a 'TMPDIR' variable.
bash: dirname $( mktemp -u -t Regex ) <|endoftext|>
<|endoftext|> english: Search all of /usr for any directory named 'My Files', for each directory found, copy it to /iscsi preserving full paths and attributes.
bash: find Path -type d -name Regex -exec rsync -a -v -R {} File \; <|endoftext|>
<|endoftext|> english: Merge lines from "file_1" and "file_2" and format the output as a table with tab separators
bash: paste File File | column -s Regex -t <|endoftext|>
<|endoftext|> english: Recursively lists all files in a current folder in long format.
bash: ls -l -d $( find Path ) <|endoftext|>
<|endoftext|> english: Remount "yaffs2" filesystem "/dev/block/mtdblk4" to "/system" as read only
bash: mount -o ro,remount -t yaffs2 Regex Regex <|endoftext|>
<|endoftext|> english: Move all files and directories matching "*.boo" in the current directory to "subdir"
bash: mv $( ls File ) File <|endoftext|>
<|endoftext|> english: Find all files/directories under minimum 1 level down the $FOLDER directory and sort them
bash: find Path -mindepth Quantity | sort <|endoftext|>
<|endoftext|> english: Find all files which belong to user lal and change their ownership to ravi
bash: find Path -user Regex -exec chown Regex {} \; <|endoftext|>
<|endoftext|> english: Prints process tree of a process having id $ID with parent processes.
bash: pstree -s Regex <|endoftext|>
<|endoftext|> english: split file "${fspec} into pieces named as "xyzzyNNN" with numeric prefix from 1 to 6
bash: split --number Quantity File Regex <|endoftext|>
<|endoftext|> english: Find all Makefile's in the current directory tree and look for line 235 in each of them
bash: find Path -name Regex -print0 | xargs -0 -I {} grep -n -H Regex {} | grep Regex <|endoftext|>
<|endoftext|> english: Find all directories under mydir
bash: find Path -type d <|endoftext|>
<|endoftext|> english: display list of all the hidden files in the home folder
bash: find Path -name Regex -ls <|endoftext|>
<|endoftext|> english: Exclude directory from find . command
bash: find Path -type d -name Regex -prune -or -name Regex <|endoftext|>
<|endoftext|> english: Search the directory tree /tmp for regular files using zero delimiter for output
bash: find Path -type f -print0 <|endoftext|>
<|endoftext|> english: Display all files in the current directory tree that match "*foo"
bash: tree -P Regex <|endoftext|>
<|endoftext|> english: Display a long listing of all regular files that are less than 50 bytes in size under '/usr/bin' directory tree
bash: find Path -type f -size -Size -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: Displays process tree of a process with id 'PID', showing parent process and processes id.
bash: pstree -p -s Regex <|endoftext|>
<|endoftext|> english: display all text, mpg, jpg files  in the folder /Users/david/Desktop
bash: find Path -type f \( -name Regex -or -name Regex -or -name Regex \) <|endoftext|>
<|endoftext|> english: Find all files whose owner is `user1'
bash: find Path -user Regex <|endoftext|>
<|endoftext|> english: create a symbolic link named "/usr/lib/jvm/default-java" to file "/usr/lib/jvm/java-7-oracle"
bash: ln -s File Regex <|endoftext|>
<|endoftext|> english: create directory /etc/cron.15sec
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: Find all files/directories with '.bar' extension in maximum 2 levels down the current directory
bash: find Path -name Regex -maxdepth Quantity -print <|endoftext|>
<|endoftext|> english: Find ".c" and ".h" files in the current directory tree and print line numbers and lines containing "#include"
bash: tree -i -f | grep Regex | xargs -n Quantity -I {} grep -n -H Regex {} <|endoftext|>
<|endoftext|> english: Find all httpd.conf files in entire file system
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find regular files named 'findme.txt' under '/usr' and '/home' directory tree
bash: find Path Path -name Regex -type f -print <|endoftext|>
<|endoftext|> english: Calculate the md5sum of all the files with name "MyCProgram.c", ignoring case
bash: find Path -iname Regex -exec md5sum {} \; <|endoftext|>
<|endoftext|> english: Archive current directory to "/some/path" on localhost, using ssh to authentify as user "me", only update files that are newer in the source directory.
bash: rsync -a -u -v -e File File File <|endoftext|>
<|endoftext|> english: Find files with 002 permission under /tmp and print them with the string 'Found world write permissions:' printed as the first line of output
bash: find Path -type f -perm -Permission | sed Program <|endoftext|>
<|endoftext|> english: Find all files/directories under '/home/user/' directory tree whose status was changed exactly 10 minitues ago
bash: find Path -cmin Quantity -print <|endoftext|>
<|endoftext|> english: Save the system host name in variable "HOSTNAME"
bash: hostname <|endoftext|>
<|endoftext|> english: Show the subdirectories of the current directory
bash: find Path -maxdepth Quantity -type d -print | xargs -I {} echo Regex {} <|endoftext|>
<|endoftext|> english: Search directories /opt, /usr, /var for regular file foo
bash: find Path Path Path -name Regex -type f <|endoftext|>
<|endoftext|> english: Search the current directory recursively for regular files last changed 2 days ago
bash: find Path Path -f -ctime Timespan <|endoftext|>
<|endoftext|> english: display files ending with ".ext" in current folder excluding those that are present in the list list.txt
bash: find Path -type f -name Regex | grep -v -F -f Regex <|endoftext|>
<|endoftext|> english: Move all *.data files/directories in $S directory to $S/data/ directory
bash: find Path -name Regex -exec mv {} File \; <|endoftext|>
<|endoftext|> english: Make directory "backup"
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: Find x* files/directories under /tmp directory whose status was changed less than 1 day ago and move them to ~/play
bash: find Path -ctime -Timespan -name Regex -exec mv {} File \; <|endoftext|>
<|endoftext|> english: Find empty files in the test directory
bash: find Path -empty <|endoftext|>
<|endoftext|> english: Remove all files with names like "vmware-*.log" from the current directory tree
bash: find Path -name Regex -print0 | xargs -0 -I {} rm {} <|endoftext|>
<|endoftext|> english: find all the text files in the current folder
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: Locate files that reside in the /u/bill directory tree and were last accessed between 2 and 6 minutes ago
bash: find Path -amin +Quantity -amin -Quantity <|endoftext|>
<|endoftext|> english: find all the cpp(C++ source files), java, header files in the current directory
bash: find Path -name Regex -or -name Regex -or -name Regex <|endoftext|>
<|endoftext|> english: Find all .txt files under the current directory and below
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Make directories to "directory{1..3}/subdirectory{1..3}/subsubdirectory{1..2}" as needed
bash: mkdir -p Directory <|endoftext|>
<|endoftext|> english: List all directories in maximum 1 level down the current directory
bash: find Path -type d -maxdepth Quantity -exec ls -d -l -r -t {} \; <|endoftext|>
<|endoftext|> english: Search the current directory tree for files whose names do not end in "1" and "2"
bash: find Path -type f ! -name Regex ! -name Regex -print <|endoftext|>
<|endoftext|> english: Rename file extension '.andnav' (case insensitive) to '.tile' for all files/directories under current directory tree
bash: find Path -name Regex -exec rename -v Regex {} \; <|endoftext|>
<|endoftext|> english: Find all files/directories in the paths expanded by the glob pattern '.*'
bash: find Path <|endoftext|>
<|endoftext|> english: Rename "fghfilea" to "jklfilea"
bash: mv File File <|endoftext|>
<|endoftext|> english: Print the IP addresses of the host name
bash: hostname -I <|endoftext|>
<|endoftext|> english: Find files that are empty
bash: find Path -empty -type -f <|endoftext|>
<|endoftext|> english: Create a gzip archive file ($tarFile) of all *.log files under $sourcePath
bash: find Path -type f -name Regex -exec tar -u -v -f File {} \; <|endoftext|>
<|endoftext|> english: Search the current directory tree for regular files last changed more than 14 days ago
bash: find Path -type f -ctime +Timespan <|endoftext|>
<|endoftext|> english: Remove all directories called "test" from the current directory tree
bash: find Path -name Regex -type d -exec rm -r {} + <|endoftext|>
<|endoftext|> english: Find all *.rb files/directories under current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: find files in the /usr/src directory with pattern` *.c  that larger than 100 Kilobytes
bash: find Path -name Regex -size +Size -print <|endoftext|>
<|endoftext|> english: find foo, Foo, FOo, FOO, etc.
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: explicitly list all files in the current directory
bash: find Path -print <|endoftext|>
<|endoftext|> english: Create symbolic links in the current directory for all files under "bar1" that are not directories and do not end in ".cc"
bash: find Path -name Regex -not -type d -not -name Regex -exec ln -s File Regex \; <|endoftext|>
<|endoftext|> english: Delete all *txt files under current directory
bash: find Path -name Regex -type f -print | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: remove all text files from the current folder. Print0 is used to handle files whose names have only spaces or those files which have newlines in their names
bash: find Path -name Regex -print0 | xargs -0 -I {} rm {} <|endoftext|>
<|endoftext|> english: Find all *.java files in the current directory tree
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all .gz archives in the current directory tree
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: create a symbolic link with absolute path "/cygdrive/c/Users/Mic/mypics" to file "/cygdrive/c/Users/Mic/Desktop/PENDING - Pics/"
bash: ln -s -f File Regex <|endoftext|>
<|endoftext|> english: Save the list of all .py files under and below the current directory that contain "something" in their pathnames to output.txt
bash: find Path -name Regex | tee File | xargs -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: Find regular non-hidden files containing 'some text' in their names
bash: find Path -not -path Regex -type f -name Regex <|endoftext|>
<|endoftext|> english: Turns on network interface eth0.
bash: ifconfig Regex Regex <|endoftext|>
<|endoftext|> english: Find files created in the last minute; works on Mac OS X
bash: find Path -newerct Regex -print <|endoftext|>
<|endoftext|> english: Search the current directory tree for regular files that were accessed $FTIME days ago
bash: find Path -type f -atime Timespan <|endoftext|>
<|endoftext|> english: Display a dump of "file" as floating point values of double size
bash: od -t fD File <|endoftext|>
<|endoftext|> english: find all html or cgi files in current folder
bash: find Path -type f -iregex Regex -or -iregex Regex <|endoftext|>
<|endoftext|> english: Print the grand total disk usage of all files listed in "files.txt"
bash: cat File | xargs -I {} du -c {} | tail - Quantity <|endoftext|>
<|endoftext|> english: Find recursively all regular files in the current directory skipping hidden files and directories matching pattern '.?*'
bash: find Path -name Regex -prune -or \( -type f -print0 \) <|endoftext|>
<|endoftext|> english: find all the files in the home folder which have been modified in the last 24 hours
bash: find Path -mtime -Timespan <|endoftext|>
<|endoftext|> english: Find files in the current directory and below that are 2000 kB in size
bash: find Path -size Size -print <|endoftext|>
<|endoftext|> english: Find files recursively with extension "ext"
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all *blue* files/directories under /myfiles
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find files associated with an inode
bash: find Path -inum Quantity -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: Find all .java files starting from the current folder
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Remove all files that were older than 3 days
bash: find Path -type f -mtime +Timespan -exec rm -f {} \; <|endoftext|>
<|endoftext|> english: find all files in the home folder that are modified in the last 7 days
bash: find Path -mtime -Timespan <|endoftext|>
<|endoftext|> english: Represent time string $MOD_DATE as seconds since epoch and save to variable 'MOD_DATE1'
bash: $( date -d Regex +%s ) <|endoftext|>
<|endoftext|> english: Recursively removes all files like '*.pyc' in a current folder.
bash: find Path -name Regex -print0 | xargs -0 -I {} rm {} <|endoftext|>
<|endoftext|> english: Replace the occurrences of "HOGE" with "MOGA" once per each line of the .yaml files from the current directory tree
bash: find Path -type f -name Regex -print0 | xargs -0 -I {} sed -i -e Program {} <|endoftext|>
<|endoftext|> english: Delete characters in columns 36 through 40 from the output of "finger"
bash: finger | cut --complement -c Number <|endoftext|>
<|endoftext|> english: find & Substitute Only When the Line Matches with the Pattern Using sed
bash: find Path -type f -name Regex -exec sed Program {} \; <|endoftext|>
<|endoftext|> english: Find all files in maximum 1 level down the current directory that were modified less than 1 day ago
bash: find Path -maxdepth Quantity -type f -mtime -Timespan <|endoftext|>
<|endoftext|> english: Find all the files without permission 777 under current directory and show a few lines of output from the beginning
bash: find Path -type f ! -perm Permission | head <|endoftext|>
<|endoftext|> english: search for a word in all the files in the current directory
bash: find Path -exec grep Regex {} \; <|endoftext|>
<|endoftext|> english: Takes folder name of file $0, changes backslashes to forward ones and saves result in $basedir variable.
bash: dirname $( echo Regex | sed -e Program ) <|endoftext|>
<|endoftext|> english: Find all files/directories with '.c' or '.h' extension under current directory tree and search for the regex expanded by the variable $i and show the output by paging through one screenful at a time
bash: find Path -name Regex -exec grep Regex {} \; | less <|endoftext|>
<|endoftext|> english: Send one ping request to host whose name or IP address is specified by variable "remote_machine".
bash: ping -c Quantity Regex <|endoftext|>
<|endoftext|> english: Recursively copy all directories in "/path/to/source" to "/path/to/dest/" preserving directory hierarchy
bash: find Path -type d | cpio -p -d Regex <|endoftext|>
<|endoftext|> english: search for all the files in the folder /home/user1 which end with ".bin"
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Print canonical filename of "/path/there/../../" even if it does not exist
bash: readlink -m File <|endoftext|>
<|endoftext|> english: find all files in the current folder that are not modified in the last 240 hours
bash: find Path -mtime +Timespan -print <|endoftext|>
<|endoftext|> english: Decompress 'file.gz'
bash: gzip -d Regex <|endoftext|>
<|endoftext|> english: Split "file.txt" excluding the first line into files with at most 20 lines each and a prefix "split_"
bash: tail -n +Quantity File | split -l Quantity File Regex <|endoftext|>
<|endoftext|> english: Count the number of regular files with 755 permission under current directory tree
bash: find Path -type f -perm Permission | wc -l <|endoftext|>
<|endoftext|> english: Find recursively all empty directories in the current directory
bash: find Path -type d -empty <|endoftext|>
<|endoftext|> english: List all files under current directory matching the regex '.*(c|h|cpp)$'
bash: find -E Path -type f -regex Regex -exec ls {} \; <|endoftext|>
<|endoftext|> english: Search the current directory and all subdirectories for files that have 777 permissions and the permissions to 755
bash: find Path -type f -perm Permission -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Print the MD5 message digest of "/path/to/destination/file"
bash: md5sum File <|endoftext|>
<|endoftext|> english: Search directory tree `foo' for files named `Headers'
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Search for "pattern" in all the .c files in the current directory tree
bash: find Path -name Regex | xargs -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: Replace the "openssl" command executable with a symbolic link to "/usr/local/ssl/bin/openssl"
bash: ln -s -f File $( which Regex ) <|endoftext|>
<|endoftext|> english: Display all lines contained in 'dax-weekly.csv' in reverse order.
bash: cat File | awk Program <|endoftext|>
<|endoftext|> english: Counts lines in each of *.php files in a current folder and subfolders and prints total count as well.
bash: wc -l File <|endoftext|>
<|endoftext|> english: Numerically sort standard input by the second word of each line
bash: sort -n -k Number <|endoftext|>
<|endoftext|> english: Prints only unique strings of those stored in variables $COMMANDS and $ALIASES.
bash: echo Regex | sort -u <|endoftext|>
<|endoftext|> english: Print name of the file system containing $path.
bash: df -h File | cut -f Number -d Regex | tail - Quantity <|endoftext|>
<|endoftext|> english: Measure the disk space taken up by all *.txt files in the current directory tree
bash: find Path -name Regex -print0 | xargs -0 -I {} du -c -h {} | tail -n Quantity <|endoftext|>
<|endoftext|> english: Find all your text files
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: Saves location of file $1 in 'dir_context' variable.
bash: dirname -- Regex <|endoftext|>
<|endoftext|> english: Save the absolute path of the current script to variable "SELF"
bash: readlink File <|endoftext|>
<|endoftext|> english: Change the group of all directories (except those with a '.') under current directory tree to a group with the same name as the directory name
bash: find Path -type d | sed -e Program | awk Program | xargs -I {} chgrp {} <|endoftext|>
<|endoftext|> english: Search the current directory tree recursively for the regular file named "myfile" ignoring "work" and "home" directories
bash: find Path \( -name Regex -or -name Regex \) -prune -or -name Regex -type f -print <|endoftext|>
<|endoftext|> english: Find SQL files with text `expression'
bash: find Path -name Regex -print0 -type f | xargs -0 -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: split file /usr/bin/gcc into pieces per 100000 lines
bash: split -n Quantity File <|endoftext|>
<|endoftext|> english: get a PID of a process with name 'test.sh &'
bash: jobs -l | grep Regex | grep -v Regex | awk Program <|endoftext|>
<|endoftext|> english: display all the files in the file system which are smaller than 20 bytes
bash: find Path -size Size <|endoftext|>
<|endoftext|> english: Search the regular files of the current directory tree for string "texthere"
bash: find Path -type f -exec grep -H -n Regex {} + <|endoftext|>
<|endoftext|> english: To match only hidden dot directories
bash: find Path -type d -name Regex -print0 -exec ls -l -r -t {} \; <|endoftext|>
<|endoftext|> english: Report file system mounted at $path_in_question disk usage if canonical path $path_in_question is a mount point.
bash: df File | grep Regex <|endoftext|>
<|endoftext|> english: search for a cpp directory in current folder and display all its files
bash: find Path -type d -name Regex -exec find {} -type f \; <|endoftext|>
<|endoftext|> english: find all the html files in the current folder and replace the end of each line with a pattern
bash: find Path -type f -name Regex | xargs -I {} sed -i Program {} <|endoftext|>
<|endoftext|> english: find all c, cpp files in current folder
bash: find Path -regex Regex <|endoftext|>
<|endoftext|> english: find and delete all the empty directories in the current folder and all its sub directories too
bash: find Path -depth -empty -type d -delete <|endoftext|>
<|endoftext|> english: Read a single character from standard input into variable "REPLY" ignoring backslash escapes and using the prompt "${1:-Continue?} [y/n]: "
bash: read -r -n Quantity -p Regex Regex <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory
bash: find Path <|endoftext|>
<|endoftext|> english: Removes all files like 'A*.pdf' from current folder without prompting.
bash: rm -f File <|endoftext|>
<|endoftext|> english: display all the files in the current folder which have been accessed in the last 60 minutes
bash: find Path -amin -Quantity <|endoftext|>
<|endoftext|> english: Store info about all mounted file systems, printing all sizes in powers of 1000
bash: df -H <|endoftext|>
<|endoftext|> english: Print the file system "file/goes/here" is on
bash: df -P File | tail - Quantity | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: find the oldest normal file in the current directory
bash: find Path -type f -print0 | xargs -0 -I {} ls -l -t -r {} | head -n Quantity <|endoftext|>
<|endoftext|> english: Creates temporary file with name formatted like '.script.XXXXXX' in '/tmp/' folder and saves path to it in 'script1' variable.
bash: $( mktemp Regex ) <|endoftext|>
<|endoftext|> english: Recursively changes group ownership of everything within '/git/our_repos' to 'shared_group'.
bash: chgrp -R Regex File <|endoftext|>
<|endoftext|> english: Sort lines in "set1" and "set2" to standard output preserving only unique lines
bash: sort -u File File <|endoftext|>
<|endoftext|> english: Find only files under /etc with the size of 100k-150k
bash: find Path -size +Size -size -Size <|endoftext|>
<|endoftext|> english: Delete all but the most recent 5 files
bash: ls -t -r | head -n -Quantity | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: Reports count of characters in the value of ${FOO_NO_WHITESPACE} variable as follows: "length(FOO_NO_WHITESPACE)==<counted number of characters>"
bash: echo -e $( echo -n -e Regex | wc -m ) <|endoftext|>
<|endoftext|> english: Save a list of all 755 permission files/directories under $dir directory tree to the variable 'files'
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: Search for 'example' in all regular files under current directory tree
bash: find Path -type f -print | xargs -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: Recursively finds and compresses all files in the directory '/path/to/dir'
bash: find Path -type f -exec bzip2 {} \; <|endoftext|>
<|endoftext|> english: download content from "http://example.com/textfile.txt" and output to "textfile.txt"
bash: curl Regex Regex Regex <|endoftext|>
<|endoftext|> english: show the disk use of all the regular/normal files in the file system which are bigger than 100MB
bash: find Path -type f -size +Size | xargs -I {} du -s -h {} <|endoftext|>
<|endoftext|> english: Print file size with the file name
bash: find Path -name Regex -exec du -h {} \; <|endoftext|>
<|endoftext|> english: Find files on the system accessed during the last 24 hours but not within the last hour
bash: find Path -atime -Timespan -amin +Quantity <|endoftext|>
<|endoftext|> english: Find all files in the current directory tree whose names are ".DS_STORE"
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all the files in entire file system  which are modified 50 days back.
bash: find Path -mtime Timespan <|endoftext|>
<|endoftext|> english: Print the list of all regular files on the system using "echo"
bash: find Path -type f -exec echo {} \; <|endoftext|>
<|endoftext|> english: Shows state of shell option 'extglob'.
bash: shopt extglob <|endoftext|>
<|endoftext|> english: Print content of all files found regarding seach options '[whatever]'
bash: find Path -exec cat {} + <|endoftext|>
<|endoftext|> english: move all files in the current folder another folder and do not move the files in the sub folder
bash: find Path -name Regex -maxdepth Quantity -exec mv -t Directory {} + <|endoftext|>
<|endoftext|> english: Find all files that belongs to user Tecmint under /home directory
bash: find Path -user Regex <|endoftext|>
<|endoftext|> english: Find all regular files that reside in the current directory tree and were last modified more than 1 day ago
bash: find Path -type f -mtime +Timespan <|endoftext|>
<|endoftext|> english: find all the files in the current folder that end with the word bar
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Set permissions for files in `foldername' to 777
bash: find Path -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Print all directories under $root appending a : (colon) at the end of each path without descending into directories matching the pattern .[a-z]*
bash: find Path -name Regex -prune -or -type d -printf '%p:' <|endoftext|>
<|endoftext|> english: Search for the regex ... in the manual of the find command
bash: man Regex | grep Regex <|endoftext|>
<|endoftext|> english: create directory /tmp/foo
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: Unzip all files matching "/homes/ndeklein/mzml/*.gz"
bash: ls File | xargs -I {} gunzip {} <|endoftext|>
<|endoftext|> english: Delete all files that have not been accessed in the last 30 days
bash: find Path -type f -atime +Timespan -exec rm {} \; <|endoftext|>
<|endoftext|> english: Search for the regex '[0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*' in all files under /etc
bash: find Path -exec grep Regex {} \; <|endoftext|>
<|endoftext|> english: display all the regular/normal files ending with ".mod" in a folder
bash: find Path -name Regex -type f -print0 <|endoftext|>
<|endoftext|> english: Find all .sh files in or below the current directory and move them to folder ~/back.scripts
bash: find Path -name Regex -print0 | xargs -0 -I {} mv {} File <|endoftext|>
<|endoftext|> english: Send SIGTERM signal to first process sent to background by the current shell.
bash: kill Regex <|endoftext|>
<|endoftext|> english: change the extension of all the ".abc" files in the folder "/the/path" to ".edefg" and do not change in the sub directories
bash: find Path -depth -name Regex -exec rename Regex {} + <|endoftext|>
<|endoftext|> english: View line 500 to line 500 + 501 in gzipped file "bigfile.z"
bash: zcat Regex | tail -n +Quantity | head - Quantity <|endoftext|>
<|endoftext|> english: find all files not ending in ".html"
bash: find Path -type f -not -name Regex <|endoftext|>
<|endoftext|> english: Split "file.tar.gz" into files of size 1024 MB
bash: split -b Size File <|endoftext|>
<|endoftext|> english: Read a line from standard input into variable "date" with prompt "BGC enter something", and storing typed backslash as backslash symbol
bash: read -p Regex -r Regex <|endoftext|>
<|endoftext|> english: search for all the file sin the current folder which are bigger than 10KB and display them smallest file
bash: find Path -size +Size -exec ls -l -S {} + | head - Quantity <|endoftext|>
<|endoftext|> english: Remove all .mpg files in the /home/luser directory tree
bash: find Path -type f -name Regex -print0 | xargs -0 -I {} rm -f {} <|endoftext|>
<|endoftext|> english: Join lines of 'file': fields 1 and 2 of lines discarding adjascent lines ignoring first 3 fields, with fields 3 to end of line discarding adjascent lines ignoring 3 last fields.
bash: paste <( uniq -f Quantity File | cut -f Number ) <( tac File | uniq -f Quantity | tac | cut -f Number ) <|endoftext|>
<|endoftext|> english: Join lines in file "aa" with lines in file "bb" if the lines share a common first word and sort the result numerically
bash: join <( sort File ) <( sort File ) | sort -k Number <|endoftext|>
<|endoftext|> english: Print the list of the current directory's subdirectories
bash: find Path -type d -maxdepth Quantity <|endoftext|>
<|endoftext|> english: Find all .c and .C files in the current directory tree that contain "main(" and copy them to directory test1/
bash: find Path -iname Regex -exec grep -l Regex {} \; -and -exec cp {} File \; <|endoftext|>
<|endoftext|> english: display the list of all the normal files excluding hidden files which have been accessed in the last 500 days
bash: find Path -type f -not -name Regex -mtime +Timespan -exec ls {} \; <|endoftext|>
<|endoftext|> english: display the count of total number of text files in the folder /home/you which have been modified in the last 60*24 hours
bash: find Path -iname Regex -mtime -Timespan | wc -l <|endoftext|>
<|endoftext|> english: List files and directories recursively
bash: find Path -print | xargs -I {} ls -g -i -l -d -s {} <|endoftext|>
<|endoftext|> english: display all the configuration files in the etc folder
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: find all the regular/normal files in the current folder which belong to the users with the user id's between 500 and 1000
bash: find Path -uid Regex -uid Regex -type f <|endoftext|>
<|endoftext|> english: Get the disk space used by all *.txt (case insensitive) files/directories under current directory
bash: find Path -name Regex -print0 | xargs -0 -I {} du -c -h {} | tail -n Quantity <|endoftext|>
<|endoftext|> english: Search the system for *.rpm files ignoring removable media
bash: find Path -xdev -name Regex <|endoftext|>
<|endoftext|> english: Print space separated numbers from 1 to 10
bash: seq Number | xargs -I {} echo {} <|endoftext|>
<|endoftext|> english: find all js files which path neither ./dir1 nor ./dir2
bash: find Path -name Regex -not \( -path Regex -or -path Regex \) <|endoftext|>
<|endoftext|> english: Find all *fink* files/directories under current directory
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: find all files in the current folder that are modified exactly 1 minute ago
bash: find Path -mmin Quantity -print <|endoftext|>
<|endoftext|> english: Calculate a list of duplicate md5 sum hashes for all the ".java" files in the current directory
bash: md5sum File | awk Program | sort | uniq -d <|endoftext|>
<|endoftext|> english: Recursively copies '$1' directory to '$2' directory.
bash: cp -r File File <|endoftext|>
<|endoftext|> english: Find all files in /var/www/html/zip/data/*/*/*/*/* that are older than 90 days and print their parent directory paths
bash: find Path -type f -mtime +Timespan | sed Program <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory that match the case insensitive regex ./\(RT\|ED\).* and show several lines of output from the beginning
bash: find Path -iregex Regex | head <|endoftext|>
<|endoftext|> english: Find all files more than 700 megabytes
bash: find Path -size +Size <|endoftext|>
<|endoftext|> english: Create 6-letter named temporary file in a folder path that is provided as the first positional parameter, and save the path to it in a variable 'tmpfile'
bash: mktemp $( dirname Regex ) <|endoftext|>
<|endoftext|> english: display all the files in the home folder which are smaller than 500 bytes
bash: find Path -size -Size <|endoftext|>
<|endoftext|> english: Find files owned by the "shadow" group
bash: find Path -group Regex <|endoftext|>
<|endoftext|> english: find all the files in the entire file system that start with the word top and have 3 letters next to it.
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all files/directories following symbolic links under current directory tree that are owned by 'root' user
bash: find Path -follow -uid Regex -print <|endoftext|>
<|endoftext|> english: Remount root filesystem "/"
bash: mount -o remount Regex <|endoftext|>
<|endoftext|> english: Search directory trees foo and bar for .java files
bash: find Path Path -name Regex <|endoftext|>
<|endoftext|> english: Delete all regular files that have not been modified in the last 31 days under '/path/to/junk/files' directory tree
bash: find Path -type f -mtime +Timespan -exec rm -f {} \; <|endoftext|>
<|endoftext|> english: Make directories "es/LC_MESSAGES" as needed and do not error if it exists
bash: mkdir -p Directory <|endoftext|>
<|endoftext|> english: Remove all files under /home/user/Maildir/.SPAM/cur
bash: find Path -type f -exec rm -f {} + <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory with 'foobar' (case insensitive) in their names and copy them to ~/foo/bar
bash: find Path -iname Regex -exec cp {} File \; <|endoftext|>
<|endoftext|> english: Change owner to "root" and group to "www-data" of "/foobar/test_file"
bash: chown Regex File <|endoftext|>
<|endoftext|> english: display all the directories in the folder /usr/share
bash: find Path -type d <|endoftext|>
<|endoftext|> english: Search for 'organic' in all files with '.html' extension under ~/html directory
bash: find Path -name Regex -exec grep Regex {} \; <|endoftext|>
<|endoftext|> english: find all the files that were modified yesterday in the current directory.
bash: find Path -daystart -ctime Timespan -type f <|endoftext|>
<|endoftext|> english: search for all the files in the folder /data/images which are modified after /tmp/foo
bash: find Path -newer File <|endoftext|>
<|endoftext|> english: List all processes with detailed information
bash: ps -e -f <|endoftext|>
<|endoftext|> english: Copy the entire "/lib" and "/usr" directory including symlinks from "pi@192.168.1.PI" to "$HOME/raspberrypi/rootfs" and delete files after the transfer
bash: rsync -r -l --delete-after --safe-links File File <|endoftext|>
<|endoftext|> english: Find all *.cgi (case insensitive) files/directories under current directory and change their permission to 755
bash: find Path -iname Regex | xargs -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: Find symbolic links in /usr/sbin and /usr/bin to files whose pathnames end in "*/systemctl"
bash: find Path Path -lname Regex <|endoftext|>
<|endoftext|> english: Unzip "file.gz" and print each line with the 5th " or | separated field greater than 5
bash: zcat Regex | awk -F Regex Program <|endoftext|>
<|endoftext|> english: Find all directories under /fss/fin
bash: find Path -type d <|endoftext|>
<|endoftext|> english: Find all regular files matching the name pattern '*.?htm*' under '/srv/www' and '/var/html' directory tree
bash: find Path Path -name Regex -type f <|endoftext|>
<|endoftext|> english: Find files/directories writable by group and others under the /path directory
bash: find Path -perm -Permission <|endoftext|>
<|endoftext|> english: Executes 'echo "$ret"' in a subshell that is opened by command 'true'.
bash: true | echo Regex <|endoftext|>
<|endoftext|> english: Recursively change the owner to "user" and group to "www-data" of "yourprojectfoldername"
bash: chown -R Regex File <|endoftext|>
<|endoftext|> english: Search /public/html/cosi for files whose name is "wiki.phtml"
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Print content of 'filename' file, showing all non-printing characters and displaying $ at the end of each line.
bash: cat -v -e File <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory and print their paths
bash: find Path -exec echo {} + <|endoftext|>
<|endoftext|> english: Find broken links
bash: find Path -type l -print0 | xargs -0 -I {} file {} | grep Regex <|endoftext|>
<|endoftext|> english: Send 4 ping packets of size 2 to "www.google.com" on a Solaris machine
bash: ping -s Quantity Regex Regex <|endoftext|>
<|endoftext|> english: Find all files in the current directory recursively that were last modified more than 5 days ago
bash: find Path -mtime +Timespan <|endoftext|>
<|endoftext|> english: Perform a white space safe search for all files/directories under current directory
bash: find Path -print0 | xargs -0 <|endoftext|>
<|endoftext|> english: display all the files in the current folder excluding those which are in the path of ".git"
bash: find Path ! -path Regex -type f -print <|endoftext|>
<|endoftext|> english: change the permission of all the php files in the folder /var/www/ to 700
bash: find Path -type f -iname Regex -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Find *.java files under current directory and compress them to myfile.tar
bash: find Path -type f -name Regex | xargs -I {} tar -r -v -f File {} <|endoftext|>
<|endoftext|> english: split the file data.csv into pieces per 100 mb named as data.tsv.NNN with digital prefixes
bash: split -C Size -d File Regex <|endoftext|>
<|endoftext|> english: Print three lines of "some line " followed by a random number
bash: seq -f 'some line %g' Number | nl | sort -R | cut -f Number | head - Quantity <|endoftext|>
<|endoftext|> english: List all files and folders in the current working directory
bash: ls $( pwd ) <|endoftext|>
<|endoftext|> english: Search for all files in the current directory recursively whose names end with "Linkin Park"
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Checks compressed file integrity.
bash: bzip2 -t File <|endoftext|>
<|endoftext|> english: split the file hugefile.txt into pieces per 100000 lines named as partNNN with digital prefixes
bash: split -a Quantity -d -l Quantity File Regex <|endoftext|>
<|endoftext|> english: Continuously answer "y" to any prompt from "mv ..."
bash: yes | mv File <|endoftext|>
<|endoftext|> english: Move all files that contain "Subject: \[SPAM\]" to "DIR"
bash: grep -L -Z -r Regex File | xargs -0 -I {} mv {} File <|endoftext|>
<|endoftext|> english: Archive "/path/to/files" on host "remotemachine" authentifying as user "user" and compressing data during transmission, copy symlinks as symlinks.
bash: rsync -a -v -l -z -p File File <|endoftext|>
<|endoftext|> english: find all the files which have been accessed after modifying the file /etc/hosts
bash: find Path -anewer File <|endoftext|>
<|endoftext|> english: Execute "ls" every 2 seconds
bash: watch ls <|endoftext|>
<|endoftext|> english: get the count of all the files that have been accessed in the last 30 days
bash: find Path -atime +Timespan -exec ls \; | wc -l <|endoftext|>
<|endoftext|> english: Append the parent directory name with a space in all 'text.txt' files in all sub directories of current directory
bash: find Path -name Regex | sed Program | sh <|endoftext|>
<|endoftext|> english: Find all directories under /var/www/some/subset and set their SGID bit
bash: find Path -type d -print0 | xargs -0 -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: display all the text files from the current folder and skip searching in skipdir1 and skipdir2 folders
bash: find Path \( -name Regex -prune -and -name Regex -prune -or -name Regex \) -print <|endoftext|>
<|endoftext|> english: Find all regular files under /home/www and replace every occurrences of 'subdomainA.example.com' with 'subdomainB.example.com' in those files invoking sed as few times as possible
bash: find Path -type f -exec sed -i Program {} + <|endoftext|>
<|endoftext|> english: Find all directories under current directory with 755 permission and change their permission to 644
bash: find Path -perm Permission -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: searches through the /usr/local directory for files that end with the extension .html
bash: find Path -name Regex -type f <|endoftext|>
<|endoftext|> english: Find files/directories that is under group 'root' or have no group and set their group to 'apache'
bash: find Path -group Regex -or -nogroup -print0 | xargs -0 -I {} chown Regex {} <|endoftext|>
<|endoftext|> english: List all files under the current working directory with name ".htaccess"
bash: find Path $( pwd ) -name Regex <|endoftext|>
<|endoftext|> english: Find all files under current directory excluding hidden directories
bash: find Path -name Regex -prune -or \( -type f -print0 \) <|endoftext|>
<|endoftext|> english: List the unique parent directories of all .class files found under "/root_path"
bash: find Path -type f -iname Regex -printf "%h\n" | sort -u <|endoftext|>
<|endoftext|> english: Find the files in the current directory that match pattern '*.ISOLATE.*.txt' and move them to folder ./ISOLATE
bash: find Path -name Regex -maxdepth Quantity -print0 | xargs -0 -I {} mv {} File <|endoftext|>
<|endoftext|> english: Print the list of .txt files under and below the current directory
bash: find Path -name Regex -print0 | xargs -0 -n Quantity -I {} echo {} <|endoftext|>
<|endoftext|> english: Find all files in $dir directory (non-recursive) and count them
bash: find Path -maxdepth Quantity -type f | wc -l <|endoftext|>
<|endoftext|> english: Save the directory name of the current bash script to variable "path" if it is found in one of the directories specified by PATH.
bash: dirname $( which Regex ) <|endoftext|>
<|endoftext|> english: search for dbmsspool.sql file in the current folder
bash: find Path -print | grep Regex File <|endoftext|>
<|endoftext|> english: find all the directories with the name "some-dir" in the current folder and move them to another folder and do not search in subfolders
bash: find Path -maxdepth Quantity -name Regex -type d -print0 | xargs -0 -r -I {} mv -t Directory {} <|endoftext|>
<|endoftext|> english: Remove the last two components (directories) of $path
bash: echo Regex | rev | cut -d Regex -f Number | rev <|endoftext|>
<|endoftext|> english: display all php,xml and phtml files in current folder
bash: find Path -name Regex -or -name Regex -or -name Regex <|endoftext|>
<|endoftext|> english: Write "[some repository]" to standard output and append to "/etc/apt/sources.list" as root
bash: echo Regex | tee -a File <|endoftext|>
<|endoftext|> english: display a long listing of all the directories in current directory
bash: find Path -type d -ls <|endoftext|>
<|endoftext|> english: Cut off three last symbols from string '1234567890  *'
bash: echo Regex | rev | cut -c Number | rev <|endoftext|>
<|endoftext|> english: Find all .sh files in the current directory tree and remove them
bash: find Path -name Regex | xargs -I {} rm -r -f {} <|endoftext|>
<|endoftext|> english: find all files in the current folder which have not been modified today and whose file name is of length 1
bash: find Path -name Regex -mtime +Timespan <|endoftext|>
<|endoftext|> english: Print the lines of file "strings" specified in file "index"
bash: join <( sort File ) <( nl File | sort -b ) <|endoftext|>
<|endoftext|> english: find all the files ending with .mp3 or .jpg
bash: find Path \( -name Regex -or -name Regex \) -print <|endoftext|>
<|endoftext|> english: Removes all top-level empty folders within the current folder.
bash: ls | xargs -I {} rmdir {} <|endoftext|>
<|endoftext|> english: Prints yesterday's date information
bash: date --date Regex "+%a %d/%m/%Y" <|endoftext|>
<|endoftext|> english: Replace all newlines with spaces in standard input
bash: sed -z Program <|endoftext|>
<|endoftext|> english: List all variables (names only) with names containing X.
bash: env | awk -F Regex Program | grep Regex <|endoftext|>
<|endoftext|> english: Search the src/ directory recursively for .c and .h files
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Print the first line of every file matching pattern 'file?B' in the xargstest/ directory tree
bash: find Path -name Regex | sort | xargs -I {} head -n Quantity {} <|endoftext|>
<|endoftext|> english: Locate logo.gif in the /var/www directory tree
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Print sorted list of strings from 'ip_addresses' file, with number of occurrences of each string.
bash: sort File | uniq -c <|endoftext|>
<|endoftext|> english: Copy all ".php" files in "projects/" directory tree to "copy/" preserving directory hierarchy
bash: find Path -name Regex -print | cpio -p -d -m Regex <|endoftext|>
<|endoftext|> english: Search the current directory recursively for regular files with the extension given as variable $extension
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: Find files/directories named 'document' in 'ext2' partitions in entire filesystem
bash: find Path -fstype ext2 -name Regex -print <|endoftext|>
<|endoftext|> english: List all files/directories under $dir_name with size $sizeFile and print them according to the format string  '%M %n %u %g %s %Tb %Td %Tk:%TM %p\n'
bash: find Path -size Size -printf '%M %n %u %g %s %Tb %Td %Tk:%TM %p\n' <|endoftext|>
<|endoftext|> english: Print numbers from 1 to 10 with padded leading zeros
bash: seq -w Number Number <|endoftext|>
<|endoftext|> english: find files in /tmp directory that named are core and deletes them
bash: find Path -name Regex -type f -print | xargs -I {} rm -f {} <|endoftext|>
<|endoftext|> english: Mount the directory "/etc" on "/tmp/sarnold/mount_point/"
bash: mount -o bind Regex Regex <|endoftext|>
<|endoftext|> english: Print "$1" or default 10 random lines from standard input
bash: nl | sort -R | cut -f Number | head - Quantity <|endoftext|>
<|endoftext|> english: Find all files in current directory excluding hidden files, archive them and put the output into variable  full_backup_dir
bash: find Path -depth -wholename Regex -prune -or -print | cpio -o -a -v <|endoftext|>
<|endoftext|> english: Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.
bash: sort File | uniq | cut -f Number -d Regex | uniq -c | rev <|endoftext|>
<|endoftext|> english: Print a list of all duplicate case insensitive filenames in the current directory tree
bash: find Path -type f | awk -F Regex Program | sort -f | uniq -i -d <|endoftext|>
<|endoftext|> english: find all the directories in the file system which have read, write and execute to all the users
bash: find Path \( -type d -and -perm -Permission \) -print <|endoftext|>
<|endoftext|> english: List all *.txt files under current directory that match 'foo=' in their file information
bash: find Path -name Regex -type f -print | xargs -I {} file {} | grep Regex | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: find all the links in the current folder which are broken
bash: find Path -type l -xtype l <|endoftext|>
<|endoftext|> english: Search the current directory recursively for MOV files
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: List all files/directories under /myfiles directory
bash: find Path -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: Compare *.csv files in the current directory tree with their analogs stored in /some/other/path/
bash: find Path -name Regex -exec diff {} File \; -print <|endoftext|>
<|endoftext|> english: kill all active jobs
bash: jobs -p | xargs -I {} kill - Regex {} <|endoftext|>
<|endoftext|> english: Count the number of lines in all ".php" files in the current directory tree
bash: wc -l $( tree -i -f --noreport | grep -e Regex ) <|endoftext|>
<|endoftext|> english: Find all *.rb files/directories under current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all files under current directory matching either of the patterns 'error.[0-9]*', 'access.[0-9]*', 'error_log.[0-9]*', 'access_log.[0-9]*', 'mod_jk.log.[0-9]*' in their names
bash: find Path -type f -name Regex -or -name Regex -or -name Regex -or -name Regex -or -name Regex <|endoftext|>
<|endoftext|> english: Search the current directory tree for regular files whose names end in ".shtml" or ".css"
bash: find Path -type f | grep -E Regex <|endoftext|>
<|endoftext|> english: Open a session-less connection to 'host' as user 'user' in master mode with a socket "/tmp/%r@%h:%p" to enable connection sharing
bash: ssh Regex -M -S Path -N <|endoftext|>
<|endoftext|> english: Set the environment variable "DISPLAY" to the system host name followed by ":0 skype"
bash: hostname <|endoftext|>
<|endoftext|> english: Search the current directory tree for files matching regular expression '.*myfile[0-9][0-9]?'
bash: find Path -regex Regex <|endoftext|>
<|endoftext|> english: List the names of all files under current directory
bash: find Path -type f -exec basename {} \; <|endoftext|>
<|endoftext|> english: Find all broken symlinks under current directory
bash: find Path -type l -exec file {} \; | grep Regex <|endoftext|>
<|endoftext|> english: Find all symbolic links starting from the current directory and list them
bash: find Path -type l -ls <|endoftext|>
<|endoftext|> english: Search regular files under ~/mail for string "Linux"
bash: find Path -type f | xargs -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: find files in the current directory with pattern` '*.[ch]' which are contain ‘thing’ string and print file names
bash: find Path -name Regex | xargs -I {} grep -l Regex {} <|endoftext|>
<|endoftext|> english: Find regular files in the current directory tree that have all executable bits set
bash: find -L Path -type f -perm -Permission <|endoftext|>
<|endoftext|> english: Search the /root directory recursively for the regular file named "myfile" ignoring /root/work/
bash: find Path -path Regex -prune -or -name Regex -type f -print <|endoftext|>
<|endoftext|> english: Find all *.mov files under current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Calculate md5 checksum of theDirname
bash: cpio -i Regex Regex | md5sum <|endoftext|>
<|endoftext|> english: Read a line from standard input into variable "ans" without backslash escapes
bash: read -r Regex <|endoftext|>
<|endoftext|> english: find all files under "/usr"
bash: find Path -print <|endoftext|>
<|endoftext|> english: Convert all characters in "$a" to lower case and save to variable "b"
bash: echo Regex | sed Program <|endoftext|>
<|endoftext|> english: Search for "pattern" in "file" and separate each line with '" "'
bash: cat File | grep Regex | paste -s -d Regex | sed -e Program <|endoftext|>
<|endoftext|> english: create directory tata
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: display all the files in the current directory and do not search in the sub directories
bash: find Path -maxdepth Quantity -print <|endoftext|>
<|endoftext|> english: List all *.txt files/directories under current directory
bash: find Path -name Regex -exec  \; <|endoftext|>
<|endoftext|> english: change the permission of all directories in current folder to 755.
bash: find Path -type d -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Rename '.mkv' extension to '.avi' for all files/directories under '/volume1/uploads' directory tree
bash: find Path -name Regex -exec rename Regex Regex \; <|endoftext|>
<|endoftext|> english: Recursively finds all '*.pdf' files and folders in a current folder and removes them without prompting.
bash: find Path -name Regex -print0 | xargs -0 -I {} rm -r -f {} <|endoftext|>
<|endoftext|> english: Print file information of command "passwd"
bash: ls -l $( which Regex ) <|endoftext|>
<|endoftext|> english: Find files/directories that does not have write permssion for group and others
bash: find Path ! -perm Permission <|endoftext|>
<|endoftext|> english: Compress $file file using gzip
bash: gzip Regex <|endoftext|>
<|endoftext|> english: Save the short DNS lookup output of $WORKSTATION to 'WORKSTATION_IP' variable
bash: dig Regex Regex <|endoftext|>
<|endoftext|> english: Find all regular files in the current directory tree and search them for "example"
bash: find Path -type f -print0 | xargs -r -0 -I {} grep -F Regex {} <|endoftext|>
<|endoftext|> english: Split the first 100 lines of "datafile" into files with at most 1700 bytes each preserving lines
bash: sed Program File | split -C Size File <|endoftext|>
<|endoftext|> english: Print the line with most consecutive repeats prefixed with its count from standard input
bash: uniq -c | sort -n | tail -n Quantity <|endoftext|>
<|endoftext|> english: Find all files under current directory
bash: find Path -type f <|endoftext|>
<|endoftext|> english: Find 10 most recently changed files in the current directory tree
bash: find Path -type f -printf "%C@ %p\n" | sort -r -n | head -n Quantity <|endoftext|>
<|endoftext|> english: find all the fles that have .ssh in the end and redirect the output to ssh-stuff
bash: find Path -name Regex -print | tee -a File <|endoftext|>
<|endoftext|> english: Find all regular files in the "$dir" directory
bash: find Path -maxdepth Quantity -type f <|endoftext|>
<|endoftext|> english: Filters unique lines by matching against the first column of a .csv file
bash: tac File | sort -u -t Regex -r -k Number | tac <|endoftext|>
<|endoftext|> english: Set the exit code($?) to '0'.
bash: true <|endoftext|>
<|endoftext|> english: Find `string' in all *.java files ignoring the case of that string
bash: find Path -type f -name Regex -exec grep -i -l Regex {} \; <|endoftext|>
<|endoftext|> english: Find all *.texi files in /usr/local/doc
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find files and directories modified in last 7 days
bash: find Path -mtime -Timespan <|endoftext|>
<|endoftext|> english: Find all configration files in Home directory & Subtitute permanently in files
bash: find Path -name Regex -exec sed -i Program {} \; <|endoftext|>
<|endoftext|> english: display the base name(name without extension) of all the ".flac" files in the current folder
bash: find Path -name Regex -exec basename Regex Regex \; <|endoftext|>
<|endoftext|> english: Save the current user name in variable "myvariable"
bash: whoami <|endoftext|>
<|endoftext|> english: Removes 55, adds a 10-digit line number, and rearranges the date for each line in "input" on OSX
bash: nl -n rz -w Quantity -s Regex File | sed Program File <|endoftext|>
<|endoftext|> english: Kill the processes of user `myuser' that have been working more than 7 days
bash: find Path -user Regex -maxdepth Quantity -type d -mtime +Timespan -exec basename {} \; | xargs -I {} kill - Regex {} <|endoftext|>
<|endoftext|> english: Print the type of the current shell
bash: echo $( cat File ) <|endoftext|>
<|endoftext|> english: Print the base name of the current working directory
bash: basename $( pwd ) <|endoftext|>
<|endoftext|> english: Search *.x files from the current directory tree for string "fred"
bash: find Path -name Regex -print0 | xargs -0 -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: Find all files in the `sourceDir' directory tree
bash: find Path -mindepth Quantity <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory tree whose paths match the pattern '*ACK*1'  (case insensitive)
bash: find Path -iwholename Regex <|endoftext|>
<|endoftext|> english: Replace all occurrences of 'previousword' with 'newword' in all regular files with '.cpp' extension under '/myprojects' directory tree and modify them in-place
bash: find Path -type f -name Regex -print0 | xargs -0 -n Quantity -I {} sed -i Program {} <|endoftext|>
<|endoftext|> english: Remove all files whose names start with spam-
bash: find Path -name Regex | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: Count all files under "/DIR"
bash: find Path -type f -print0 | tr -d -c Regex | wc -c <|endoftext|>
<|endoftext|> english: Print permissions of every directory in the current directory tree
bash: tree -p -d <|endoftext|>
<|endoftext|> english: list complete path name to process associated with pid "$1"
bash: find Path -printf '%l\n' <|endoftext|>
<|endoftext|> english: Search the current directory tree for all files matching regular expression ".*\.rb$"
bash: find Path -regex Regex <|endoftext|>
<|endoftext|> english: search for files having python in filename
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: Find files and directories that are at least seven levels of nesting in the directory /usr/src
bash: find Path -name Regex -prune -or -mindepth Quantity -print <|endoftext|>
<|endoftext|> english: Split "file.tar.gz" into files of size 1024 MB with a prefix of "file.tar.gz.part-"
bash: split -b Size File Regex <|endoftext|>
<|endoftext|> english: Save the absolute path of "$path" to variable "full_path"
bash: readlink -f -n -- File <|endoftext|>
<|endoftext|> english: Generates temporary file name with full path by template 'fifo.XXXXXX' and saves it to variable 'fifo_name'
bash: mktemp -u -t Regex <|endoftext|>
<|endoftext|> english: Find all *FooBar* files/directories under current directory and copy them to ~/foo/bar
bash: find Path -name Regex -print0 | xargs -0 -I {} cp -t Directory {} <|endoftext|>
<|endoftext|> english: Find all the files/directories under user's home directory that do not belong to the user $USER
bash: find Path ! -user Regex <|endoftext|>
<|endoftext|> english: Find all *.cgi files/directories under current directory and change their permission to 755
bash: find Path -name Regex -print0 | xargs -0 -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: Modify and rewrite 'file' replacing all instances of "foo" with "bar"
bash: sed -i Program File <|endoftext|>
<|endoftext|> english: Displays calendar for a previous, current and next month.
bash: cal -3 <|endoftext|>
<|endoftext|> english: Delete all files/directories under current directory tree excluding '.gitignore' files/directories and files/directories matching the patterns '.git' or '.git/*' in their paths
bash: find Path ! -name Regex ! -path Regex ! -path Regex -exec rm -r -f {} \; <|endoftext|>
<|endoftext|> english: Unsets shell option 'extglob'.
bash: shopt -u extglob <|endoftext|>
<|endoftext|> english: Search for aaa in all files under current directory and count the number of matches
bash: find Path -type f -exec grep -o Regex {} \; | wc -l <|endoftext|>
<|endoftext|> english: Save absolute path of "$path" that must exist along with all parents to variable "abspath"
bash: readlink -e File <|endoftext|>
<|endoftext|> english: Remove all files containing 'sample' (case insensitive) in their names under '/home/user/Series' directory tree
bash: find Path -iname Regex -exec rm {} \; <|endoftext|>
<|endoftext|> english: Views text content of compressed FileB file in TarFile archive.
bash: tar -x -O -f File File | zless <|endoftext|>
<|endoftext|> english: Back up all *.txt files/directories in new files/directories with a .bak extension in their names under /etc directory
bash: find Path -name Regex | xargs -I {} mv {} File <|endoftext|>
<|endoftext|> english: Display the sizes and filepaths of all files/directories sorted in ascending order of size
bash: du -a --max-depth Quantity | sort -n <|endoftext|>
<|endoftext|> english: list regular files ending in .mbox
bash: find Path -type f -wholename Regex <|endoftext|>
<|endoftext|> english: Show the list of files modified less than a minute ago
bash: find Path -mmin -Quantity -print <|endoftext|>
<|endoftext|> english: find all the video files in the home folder
bash: find Path -type f -exec file -i {} + | grep Regex <|endoftext|>
<|endoftext|> english: Convert relative path "/x/y/../../a/b/z/../c/d" into absolute path with resolved symbolic links
bash: readlink -f File <|endoftext|>
<|endoftext|> english: search for a file "file" in current folder and if the file is found quit !
bash: find -name Regex Path <|endoftext|>
<|endoftext|> english: Find all *.html files under current directory
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: Make a POST request to "http://dweet.io/dweet/for/cycy42" with data "PiIP" set to the IP address of the system
bash: wget $( hostname -I ) Regex <|endoftext|>
<|endoftext|> english: find all the files that have been modified exactly yesterday (from 00:00 to 23:59 yesterday)
bash: find Path -type f -daystart -mtime Timespan <|endoftext|>
<|endoftext|> english: Recursively change the group of all files in "/tmp/php_session" to "daemon"
bash: chown -R Regex File <|endoftext|>
<|endoftext|> english: Print a welcome message with the current user's user name
bash: echo -n -e $( whoami ) <|endoftext|>
<|endoftext|> english: Find files with size more than 200557600B and which are more than 2 days old under  ${userdir}/${i}/incoming directory
bash: find Path -mtime +Timespan -type f -size +Size -ls <|endoftext|>
<|endoftext|> english: Split "data.tsv" into files of at most 100 MiB preserving lines and use a prefix of "data.tsv." and numeric suffixes
bash: split -C Size -d File Regex <|endoftext|>
<|endoftext|> english: Make directories to "/my/other/path/here/" as needed
bash: mkdir -p Directory <|endoftext|>
<|endoftext|> english: Count the number of lines in all files in the xargstest/ directory tree that match pattern 'file??'
bash: find Path -name Regex | sort | xargs -I {} wc -l {} <|endoftext|>
<|endoftext|> english: list all javascipts file which whole name does not contain excludeddir or excludedir2  or excludedir3
bash: find Path -name Regex | grep -v Regex | grep -v Regex | grep -v Regex <|endoftext|>
<|endoftext|> english: Find files/directories under current directory that are modified exactly one hour ago
bash: find Path -mtime Timespan <|endoftext|>
<|endoftext|> english: Find and remove all .core files
bash: find Path -name Regex -print -exec rm {} \; <|endoftext|>
<|endoftext|> english: Find all the SGID bit files under current directory whose permissions set to 644 and show a few lines of output from the beginning
bash: find Path -perm Permission | head <|endoftext|>
<|endoftext|> english: Print  "Cannot acquire lock - already locked by " followed by content of $lockfile file
bash: echo $( cat File ) <|endoftext|>
<|endoftext|> english: delete all the files in the file system which belong to the user edwarda
bash: find Path -user Regex -exec rm {} \; <|endoftext|>
<|endoftext|> english: create symbolic links in directory "/usr/local/symlinks " to all files located in directiry "incoming" and that have been modified earlier then 5 days and owned by user "nr"
bash: find Path -mtime -Timespan -user Regex -exec ln -s {} Regex \; <|endoftext|>
<|endoftext|> english: Display a long list of all the files/directories named ".todo" under $STORAGEFOLDER directory tree
bash: find Path -name Regex -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: Replace "string1" with "string2" in all regular files in the current directory tree
bash: find Path -type f -exec sed -i Program {} \; <|endoftext|>
<|endoftext|> english: find all the files in current directory of size exactly 6MB.
bash: find Path -size Size <|endoftext|>
<|endoftext|> english: display the count of all the directories in the current folder
bash: find Path -type d -print | wc -l <|endoftext|>
<|endoftext|> english: Save the user name in upper case of the current user in variable "v"
bash: whoami | tr Regex Regex <|endoftext|>
<|endoftext|> english: Find files named "blabla" in the current directory tree and print the number of lines in each of them
bash: find Path -name Regex -exec wc -l {} \; <|endoftext|>
<|endoftext|> english: Remount "extX" filesystem "/dev/hdaX" on "/" without writing in "/etc/mtab"
bash: mount -n -o remount -t extX Regex Regex <|endoftext|>
<|endoftext|> english: Print the list of the subdirectories of /path/to/dir
bash: find Path -mindepth Quantity -maxdepth Quantity -type d <|endoftext|>
<|endoftext|> english: Search for files only that end with .php and look for the string $test inside those files
bash: find Path -name Regex -type f -exec grep -H -n Regex {} \; <|endoftext|>
<|endoftext|> english: Print the list of the subdirectories of the current directory
bash: find Path -mindepth Quantity -maxdepth Quantity -type d -printf "%P\n" <|endoftext|>
<|endoftext|> english: Append all *.mp3 files modified within the last 180 days to tar archive `music.tar'
bash: find Path -name Regex Path Path -mtime -Timespan -print0 | xargs -0 -I {} tar -r -v -f File {} <|endoftext|>
<|endoftext|> english: Find files named 'core' in or below the directory /tmp and delete them
bash: find Path -name Regex -type f -print0 | xargs -0 -I {} rm -f {} <|endoftext|>
<|endoftext|> english: find all normal/regular files in current folder and display the total lines in them
bash: find Path -type f -print0 | xargs -0 -I {} wc -l {} <|endoftext|>
<|endoftext|> english: Print continuous lines of 100 random characters either "." or " "
bash: cat File | tr -d -c Regex | fold -w Quantity <|endoftext|>
<|endoftext|> english: split processed content of the file inout_file into pieces per 2000000 named as "out-prefix-NNN"
bash: sed Program File | split -l Quantity File Regex <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory
bash: find Path -print0 | xargs -0 <|endoftext|>
<|endoftext|> english: find regular files under the current directory and execute an md5sum command on each one
bash: find Path -type f -exec md5sum {} + <|endoftext|>
<|endoftext|> english: Print the IP addresses for the current host name
bash: hostname -I | awk Program <|endoftext|>
<|endoftext|> english: Find all empty directories recursively starting from the current one and delete them
bash: find Path -type d -empty -print0 | xargs -0 -I {} rmdir {} <|endoftext|>
<|endoftext|> english: Silently read exactly 1 character ignoring any delimiters  into variable "SELECT"
bash: read -s -N Quantity Regex <|endoftext|>
<|endoftext|> english: Display the last dot-separated field, in this case "com".
bash: echo Regex | rev | cut -d Regex -f Number | rev <|endoftext|>
<|endoftext|> english: display all the files in the current folder and traverse from the sub directories
bash: find Path -type d -depth <|endoftext|>
<|endoftext|> english: Find executable files
bash: find Path -perm -Permission -print <|endoftext|>
<|endoftext|> english: Search the current directory recursively for files writable for `others'
bash: find Path -perm -Permission <|endoftext|>
<|endoftext|> english: Recursively find the latest modified file in the current directory
bash: find Path -type f -printf '%T@ %p\n' | sort -n | tail - Quantity | cut -f Number -d Regex <|endoftext|>
<|endoftext|> english: Delete all empty directories under current directory
bash: find Path -type d -empty <|endoftext|>
<|endoftext|> english: Save number of lines in 'file.txt' file in 'nbLines' variable
bash: cat -n File | tail -n Quantity | cut -f Number | xargs <|endoftext|>
<|endoftext|> english: Print "$PATH" variable as input to awk script "rem_dup.awk" and concatenate the result with ":"
bash: echo Regex | awk -F Regex -f File | paste -s -d Regex <|endoftext|>
<|endoftext|> english: Rename all .txt files to .bak in the current directory tree
bash: find Path -name Regex | sed Program | xargs -i -I {} echo Regex Regex Regex {} | sh <|endoftext|>
<|endoftext|> english: Print chmod commands that can change permissions of regular files residing in the current directory tree to u=rw,g=r,o=
bash: find Path -type f -exec echo Regex Regex {} \; <|endoftext|>
<|endoftext|> english: Show file type information for files in /usr/bin
bash: find Path | xargs -I {} file {} <|endoftext|>
<|endoftext|> english: search for all regular/normal files in the current folder and display the number of lines in the file
bash: find Path -type f -print | xargs -L Quantity -I {} wc -l {} <|endoftext|>
<|endoftext|> english: Save the absolute path of the current script to variable "SELF"
bash: readlink File <|endoftext|>
<|endoftext|> english: List all crons in the environment
bash: cat File | sed Program | grep -v Regex | sh <|endoftext|>
<|endoftext|> english: Change the permissions of every directory in the current directory and all files and directories within them to 700
bash: find Path -maxdepth Quantity -type d -exec chmod -R Permission {} \; <|endoftext|>
<|endoftext|> english: Prints path to folder that contains file "/path/to/vm.vmwarevm/vm.vmx".
bash: echo Regex | xargs -I {} dirname {} <|endoftext|>
<|endoftext|> english: remove all the regular/normal files in the temp folder and do not delete in the sub folders
bash: find Path -maxdepth Quantity -type f -delete <|endoftext|>
<|endoftext|> english: Format file "list-of-entries.txt" with no column delimiter
bash: column -t -s Regex File <|endoftext|>
<|endoftext|> english: display all the regular files in the current folder excluding those that are present in the path "git"
bash: find Path -path Regex -prune -or -type f -print <|endoftext|>
<|endoftext|> english: Search the current directory recursively for files last modified within the past 24 hours
bash: find Path -mtime Timespan <|endoftext|>
<|endoftext|> english: Search for files specifying the maximum depth of the search
bash: find Path -maxdepth Quantity -name Regex <|endoftext|>
<|endoftext|> english: ssh into "ssh.myhost.net" as user "myusername" and run command "mkdir -p $2"
bash: ssh Regex command <|endoftext|>
<|endoftext|> english: Recursively removes all files and folders that match pattern '/usr/local/{lib/node{,/.npm,_modules},bin,share/man}/npm*'
bash: rm -r -f File <|endoftext|>
<|endoftext|> english: display the number of lines in all the ".c" files in the current folder
bash: find Path -name Regex -print0 | xargs -0 -I {} wc -l {} <|endoftext|>
<|endoftext|> english: List all files that are between 10000 and 32000 bytes in size
bash: find Path -size +Size -size -Size -print <|endoftext|>
<|endoftext|> english: Search /path/to/your/directory for *.avi and *.flv files
bash: find Path -regex Regex <|endoftext|>
<|endoftext|> english: Print which files differ in "dir1" and "dir2" recursively
bash: diff -q -r File File <|endoftext|>
<|endoftext|> english: display all the files in the home folder which belong to the suer "bruno" and end with ".sxw" and have been accessed in the last 3*24 hours
bash: find Path -type f -name Regex -atime -Timespan -user Regex <|endoftext|>
<|endoftext|> english: Display the contents of file 'filename' excluding lines starting with # or empty/space-only lines, waiting for user interaction after each page.
bash: grep -v Regex File | grep -v Regex | more <|endoftext|>
<|endoftext|> english: Gets IP addresses of all active network interfaces on host.
bash: ifconfig | awk -F Regex Program <|endoftext|>
<|endoftext|> english: Creates alias for network interface 'eth0' with IP address '192.0.2.55' and network mask '255.255.255.255'.
bash: ifconfig Regex Regex Regex Regex <|endoftext|>
<|endoftext|> english: Find the largest 10 files (regular files) under current directory
bash: find Path -type f -print0 | xargs -0 -I {} du {} | sort -n | tail - Quantity | cut -f Number | xargs -I {} du -s -h {} <|endoftext|>
<|endoftext|> english: Overwrites file $FILE with random content, then truncates and deletes it.
bash: shred -u File <|endoftext|>
<|endoftext|> english: Change permissions to 755 for all subdirectories of the current directory
bash: find Path -type d -print | sed -e Program -e Program | xargs -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: find all the files in the folder /home which are bigger than 10MB and smaller than 50 MB
bash: find Path -size +Size -size -Size <|endoftext|>
<|endoftext|> english: find all text files in current folder and display all files that have the alphabet a in their name
bash: find Path -name Regex | grep Regex <|endoftext|>
<|endoftext|> english: find all the files in the folder ~/Music which begin with "Automatically Add"
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: display all the files in current folder
bash: find Path <|endoftext|>
<|endoftext|> english: Delete all hidden files under $some_directory
bash: find Path -type f -name Regex | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: Find all directories named "D" in the current directory tree
bash: find Path -name Regex -type d <|endoftext|>
<|endoftext|> english: Find all files/directories under /myfiles that were accessed more than 30 days ago
bash: find Path -atime +Timespan <|endoftext|>
<|endoftext|> english: display all the regular/normal files in current folder which have been modified exactly 60 minutes before
bash: find Path -mmin Quantity -type f <|endoftext|>
<|endoftext|> english: Print a random number from 2000 to 65000
bash: seq Number Number | sort -R | head -n Quantity <|endoftext|>
<|endoftext|> english: Find the total size of *.jpg files within the current directory tree
bash: find Path -type f -iname Regex -print0 | xargs -r -0 -I {} du -a {} | awk Program <|endoftext|>
<|endoftext|> english: List all files in the current directory tree that were last modified yesterday or later
bash: find Path -newermt Regex -ls <|endoftext|>
<|endoftext|> english: Search the /home/sdt5z/tmp directory tree for files named "accepted_hits.bam"
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Search for all zero-byte files and move them to the /tmp/zerobyte folder
bash: find Path -type f -size Size -exec mv {} File \; <|endoftext|>
<|endoftext|> english: Remove from the current directory tree all the regular files which have a dot in their names and contain string "<img-name>-<width:integer>x<height:integer>.<file-ext> syntax"
bash: find Path -name Regex -type f -exec grep -l Regex {} \; | xargs -I {} rm -f {} <|endoftext|>
<|endoftext|> english: Find all regular files named 'Waldo' under ~/Books directory tree
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: Search directory /Users/david/Desktop/ recursively for regular files
bash: find Path -type f <|endoftext|>
<|endoftext|> english: Move all *.mp4 files from directory /foo/bar and its subdirectories to /some/path
bash: find Path -name Regex -print0 | xargs -0 -I {} mv -t Directory {} {} <|endoftext|>
<|endoftext|> english: Find the directories whose pathnames contain "New Parts" at level 3 of the current directory tree and create symlinks to them in /cygdrive/c/Views
bash: find Path -mindepth Quantity -maxdepth Quantity -type d | grep Regex | tr Regex Regex | xargs -0 -I {} ln -s -t Directory {} <|endoftext|>
<|endoftext|> english: Set permissions to ug=rwx,o= for directories inside the ./default/files tree
bash: find Path -type d -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Print the list of all files except files named BBB
bash: find Path ! -name Regex -print <|endoftext|>
<|endoftext|> english: Print space separated list of numbers from "$start" to "$end"
bash: seq -s Regex Number Number <|endoftext|>
<|endoftext|> english: Check if a drive is mounted to nfs
bash: mount | grep Regex <|endoftext|>
<|endoftext|> english: display all the text files and pdf files in the current folder
bash: find Path \( -name Regex -or -name Regex \) <|endoftext|>
<|endoftext|> english: Remount "/system" as read only
bash: mount -o remount,ro Regex <|endoftext|>
<|endoftext|> english: display all the files in the current folder
bash: find Path | awk Program <|endoftext|>
<|endoftext|> english: Find files matching pattern $2 in the $1 directory recursively and search them for text $3, where $1, $2, $3 are the command line arguments to the Bash script
bash: find Path -name Regex -exec grep -H -n Regex {} \; <|endoftext|>
<|endoftext|> english: List all the .c files under the current directory and below in a 3 column format
bash: find Path -name Regex | xargs -n Quantity <|endoftext|>
<|endoftext|> english: Print the host name
bash: hostname <|endoftext|>
<|endoftext|> english: Display the files/directories under current directory tree matching the regex '/$prefix$ypatt' where $prefix and $ypatt expands in the current shell
bash: find Path -print | grep Regex <|endoftext|>
<|endoftext|> english: Print the drive and mount point of the last mounted drive
bash: mount | tail - Quantity | sed Program <|endoftext|>
<|endoftext|> english: search for files which are writable by either their owner or their group
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: Gets MAC address of eth0 network interface.
bash: ifconfig Regex | grep -E -o -i Regex <|endoftext|>
<|endoftext|> english: Find "file.xml" under the current directory and change directory to its parent
bash: cd $( find Path -name Regex -printf %h ) <|endoftext|>
<|endoftext|> english: Enables shell option 'promptvars'.
bash: shopt -s promptvars <|endoftext|>
<|endoftext|> english: Find all Subscription.java files/directories under current directory and enter into the parent directory of the first one found
bash: cd $( find Path -name Regex | xargs -I {} dirname {} ) <|endoftext|>
<|endoftext|> english: display all the files in current folder which are bigger than 10KB
bash: find Path -size +Size <|endoftext|>
<|endoftext|> english: run ls command on *.pl files
bash: find Path -name Regex -exec ls -l -d {} \; <|endoftext|>
<|endoftext|> english: Search for all the files in man pages and return the manual page for grep
bash: find Path -regex Regex <|endoftext|>
<|endoftext|> english: Add read and execute permission to every directory under the current directory
bash: find Path -type d -exec chmod +Permission {} \; <|endoftext|>
<|endoftext|> english: Find all files under and below /dir that were accessed less than 60 minutes ago
bash: find Path -amin -Quantity <|endoftext|>
<|endoftext|> english: Find all *.* files under current directory
bash: find Path -type f -and -name Regex <|endoftext|>
<|endoftext|> english: Set the variable "me" to the name of the running script.
bash: basename Regex <|endoftext|>
<|endoftext|> english: Look in the current directory and below for all files whose names begin with either "my" or "qu"
bash: find Path \( -name Regex -or -name Regex \) -print <|endoftext|>
<|endoftext|> english: Prints calendar of April of 2012, and redirects output to 't' file and 'more' pager tool.
bash: cal DateTime DateTime | tee File | more <|endoftext|>
<|endoftext|> english: Print the full path of a file under the current working directory with inode number specified on standard input
bash: xargs -n Quantity -I {} find Path $( pwd ) -type f -inum {} -print <|endoftext|>
<|endoftext|> english: display the files along with the size of all the files in the current which are bigger than 100MB
bash: find Path -size +Size -exec ls -s {} \; <|endoftext|>
<|endoftext|> english: display all the soft links in a  folder which are not broken
bash: find -L Path ! -type l <|endoftext|>
<|endoftext|> english: Split "data.tsv" into files of at most 5000000 lines each with prefix "_tmp"
bash: split -l Quantity File Regex <|endoftext|>
<|endoftext|> english: Remove all *.tmp files from the /tmp directory tree
bash: find Path -name Regex | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: Find all regular files under /home/www and replace every occurrences of 'subdomainA' with 'subdomainB' in those files (may produce 'agument too long' error)
bash: sed -i Program -e Program $( find Path -type f ) <|endoftext|>
<|endoftext|> english: Find all regular files under ./Desktop directory
bash: find Path -type f <|endoftext|>
<|endoftext|> english: Find all *.tar.gz files/directories under /directory/whatever which were modified more than $DAYS ago
bash: find Path -name Regex -mtime +Timespan <|endoftext|>
<|endoftext|> english: find all the files in the folder "/mp3-collection" which are bigger than 10MB excluding those that start with the word Metallica
bash: find Path -size +Size ! -name Regex <|endoftext|>
<|endoftext|> english: Search the directories that match pattern '/path/to/directory/folder{?,[1-4]?,50}' for .txt files
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: find all the normal/regular files in the folder "pathfolder" which are 2 levels deep, excluding all hidden files and display the count
bash: find Path -mindepth Quantity -maxdepth Quantity -type f -not -path Regex | wc -l <|endoftext|>
<|endoftext|> english: Prints list of folders containing '.git', searching recursively from a current folder.
bash: find Path -name Regex | xargs -n Quantity -I {} dirname {} <|endoftext|>
<|endoftext|> english: Append all PNG and JPG files to tar archive 'images.tar'
bash: find Path \( -iname Regex -or -iname Regex \) -print -exec tar -r -f File {} \; <|endoftext|>
<|endoftext|> english: Find all files in current directory that were modified less than 1 day ago excluding hidden files and put the output to full_backup_dir variable
bash: find Path -depth -wholename Regex -prune -or -mtime -Timespan -print <|endoftext|>
<|endoftext|> english: List all aliencoders.[0-9]+ files/directories under /home/jassi/ directory
bash: find Path -name Regex | xargs -r -I {} ls -l -r -t {} | awk Program <|endoftext|>
<|endoftext|> english: compress all the non-compressed  files in the current directory.
bash: find Path ! -name Regex -exec compress -f {} \; <|endoftext|>
<|endoftext|> english: Decompress "path/to/test/file.gz" to standard output and save all lines matching "my regex" to files with a 1000000 line limit
bash: gzip -d -c Regex | grep -P --regexp Regex | split -l Quantity <|endoftext|>
<|endoftext|> english: Find all files/directories under $1 which have at least execute permission for their owner and set execute permission for group for these files/directories
bash: find Path -perm -Permission -print0 | xargs -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: List all files in the current directory tree that were last modified on the 3rd of March, 2010 or later
bash: find Path -newermt Regex -ls <|endoftext|>
<|endoftext|> english: search for the word "nameserver" in all the configuration files of the /etc folder
bash: find Path -type f -name Regex -print0 | xargs -I {} -0 grep Regex {} <|endoftext|>
<|endoftext|> english: Print first field from semicolon-seprated line <line>.
bash: echo Regex | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: Recursively finds string with text "foo" in all files of a current folder.
bash: find Path -type f | xargs -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: Search the regular files of the current directory tree for string "stringYouWannaFind", ignoring the case
bash: find Path -type f -print -exec grep -n -i Regex {} \; <|endoftext|>
<|endoftext|> english: Print the characters in $b that match with any character in $a without printing any newline
bash: echo Regex | grep -o Regex | tr -d Regex <|endoftext|>
<|endoftext|> english: Count all the lines of all files with names ending with 'php' in current directory recursively
bash: find Path -name Regex | xargs -I {} cat {} | wc -l <|endoftext|>
<|endoftext|> english: Print sed commands that would replace all occurrences of 'previousword' with 'newword' in all regular files with '.cpp' extension under '/myprojects' directory tree
bash: find Path -type f -name Regex -print0 | xargs -0 -I {} echo Regex Regex Regex {} <|endoftext|>
<|endoftext|> english: Search for 'example' in all regular files from the current directory
bash: find Path -maxdepth Quantity -type f | xargs -I {} grep -F Regex {} <|endoftext|>
<|endoftext|> english: Change permissions to u=rwx,g=rx,o= for all directories in the current directory tree
bash: find Path -type d -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: list all javascipts file which whole name does not contain excludeddir
bash: find Path -name Regex | grep -v Regex <|endoftext|>
<|endoftext|> english: Test if a file named 'file' in the current directory is more than 1 hour old
bash: find Path -cmin Quantity Path Path -or Path Path <|endoftext|>
<|endoftext|> english: Find all directories under /path/to/Dir and set their permission to 755
bash: find Path -type d -print0 | xargs -0 -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: Find files matching regular expression regexp
bash: find Path | xargs -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: Show the list of files that are owned by user wnj or are newer than file `ttt'
bash: find Path \( -newer File -or -user Regex \) -print <|endoftext|>
<|endoftext|> english: display all the files in current folder which have not been modified in the last 7 days
bash: find Path -mtime +Timespan <|endoftext|>
<|endoftext|> english: find all the directories in the $LOGDIR folder which have been modified in the last 24 hours and compress them
bash: find Path -type d -mtime +Timespan -exec compress File {} \; <|endoftext|>
<|endoftext|> english: Recursively counts non-blank lines in all files in a current folder, that match regex '\.php|\.as|\.sql|\.css|\.js', but skip folders './pma', './blog', './punbb', './js/3rdparty' and files like '*.svn'.
bash: find Path -path Regex -prune -or -path Regex -prune -or -path Regex -prune -or -path Regex -prune -or -print | grep -E Regex | grep -v Regex | xargs -I {} cat {} | sed Program | wc -l <|endoftext|>
<|endoftext|> english: Save the system host name in variable "HOSTNAME"
bash: hostname <|endoftext|>
<|endoftext|> english: create directory /path/to/destination
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: Create a symbolic link to "$file" named "/tmp/allfiles"
bash: ln File Regex <|endoftext|>
<|endoftext|> english: Find all the SGID bit files whose permissions set to 644
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: Calculate the md5 sum of all the file metadata in the current directory tree excluding ".svn"
bash: find Path -name Regex -prune -or -type f -printf '%m%c%p' | md5sum <|endoftext|>
<|endoftext|> english: Find all files/directories owned by user 'joebob' under '/some/directory' directory tree
bash: find Path -user Regex -print <|endoftext|>
<|endoftext|> english: display a long list of the files in the current folder which have the word fuddel in all the files in the current folder and then search for the word fiddel in the previously matched files
bash: find Path -exec grep -q Regex {} \; -exec grep -q Regex {} \; -ls <|endoftext|>
<|endoftext|> english: Remove the "^M" characters from all *.ext files under /home directory
bash: find Path -type f -name Regex -exec sed -i -e Program {} \; <|endoftext|>
<|endoftext|> english: Compare text "hello" and "goodbye" line by line
bash: diff <( echo Regex ) <( echo Regex ) <|endoftext|>
<|endoftext|> english: Find the file whose inode number is 1316256
bash: find Path -inum Quantity <|endoftext|>
<|endoftext|> english: Find all *.jpg files in */201111 paths
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find *.java files under current directory and compress them to myfile.tar  (unsafe)
bash: find Path -type f -name Regex | xargs -I {} tar -c -v -f File {} <|endoftext|>
<|endoftext|> english: Remove all .txt files with spaces in names in and below the current directory
bash: find Path -name Regex | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: Print "test=hello world"
bash: echo Regex | echo $( cat ) <|endoftext|>
<|endoftext|> english: find all files in current folder using name patterns
bash: find Path -iregex Regex <|endoftext|>
<|endoftext|> english: display a long list of all the directories which have files ending with ".todo"
bash: find Path -name Regex -printf '%h\n' | xargs -I {} ls -l {} <|endoftext|>
<|endoftext|> english: display a long listing of all the regular/normal files in the current folder
bash: find Path -type f -ls <|endoftext|>
<|endoftext|> english: Run 'join' with the number-sorted output of file1 and file2, without modifying file1 or file2: for each line with a common first field in file1 and file2, output the common field followed by the extra fields in both files.
bash: join <( sort -n File ) <( sort -n File ) <|endoftext|>
<|endoftext|> english: Find all *.jpg files in */201111/* paths and numerically sort them according to the second field in the file name with a delimiter '_'
bash: find Path -name Regex | sort -t Regex -n -k Number <|endoftext|>
<|endoftext|> english: find all the ".wma" files in the folder "$current_directory"
bash: find Path -type f -iname Regex <|endoftext|>
<|endoftext|> english: List and remove all regular files named "core" under /prog that are larger than 500k
bash: find Path -type f -size +Size -print -name Regex -exec rm {} \; <|endoftext|>
<|endoftext|> english: Find all directories under and below /root that match pattern "*linux*", case insensitive
bash: find Path -type d -iname Regex <|endoftext|>
<|endoftext|> english: Find all directories starting from / that have permissions 777
bash: find Path -type d -perm Permission <|endoftext|>
<|endoftext|> english: Add line numbers to each non-blank line in "file" starting with number 1000001
bash: nl -v Quantity File <|endoftext|>
<|endoftext|> english: find all the file that have been modified in the last 3 days ( considers day starting not 24 hours )
bash: find Path -daystart -mtime -Timespan <|endoftext|>
<|endoftext|> english: Find all regular files named 'whatever' under current directory tree excluding all paths that contain any hidden directory
bash: find Path \( ! -regex Regex \) -type f -name Regex <|endoftext|>
<|endoftext|> english: Find the "erl" executable in $PATH and read the "RELEASES" file to extract the erlang release number
bash: awk -F Regex Program $( dirname $( readlink -f $( which Regex ) ) ) <|endoftext|>
<|endoftext|> english: List all cron jobs which contain "word".
bash: crontab -l | grep -E Regex <|endoftext|>
<|endoftext|> english: find suffix tcl files under all directories started with 'n'
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: find all the normal/regular files in current folder and search for a pattern
bash: find Path -type f -print0 | xargs -0 -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: Find all *.c files under and below the current directory that contain "wait_event_interruptible"
bash: find Path -name Regex -exec grep Regex {} File \; <|endoftext|>
<|endoftext|> english: find files in /dir/path/look/up directory that names are dir-name-here
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Remove files cart4, cart5, cart6 in directory ~/junk
bash: find Path -name Regex -exec rm {} \; <|endoftext|>
<|endoftext|> english: Compute the mean average of the word count of *.txt files smaller than 2000 words in the home directory
bash: find Path -name Regex -print0 | xargs -0 -I {} wc -w {} | awk Program <|endoftext|>
<|endoftext|> english: list all zero-length files under the current directory
bash: find Path -empty -exec ls {} \; <|endoftext|>
<|endoftext|> english: Find directories that are directly under /home/user/workspace directory (no-subdirectories) and were modified more than 30 days ago and print a message saying that the directory wasn't modified during last 30 days
bash: find Path -mindepth Quantity -maxdepth Quantity -type d -mtime +Timespan -printf "\t- It seems that %p wasn't modified during last 30 day\n" <|endoftext|>
<|endoftext|> english: change the permissions of all regular/normal files in the current directory
bash: find Path -type f | xargs -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: Show files in /home owned by group `test'
bash: find Path -group Regex <|endoftext|>
<|endoftext|> english: Search for "#define" in all files in the current directory, excluding backup files *~, *.orig, *.bak
bash: find Path -maxdepth Quantity ! -regex Regex ! -regex Regex Path ! -regex Regex -exec grep --color "#define" {} + <|endoftext|>
<|endoftext|> english: Look for any instance of "ds1337" in the modules.alias file matching current kernel release
bash: grep Regex $( uname -r ) <|endoftext|>
<|endoftext|> english: display a long listing of all the directories in the current folder
bash: find Path -type d -exec ls -a -l -g -d {} \; <|endoftext|>
<|endoftext|> english: Find regular files named "expression -and expression" under and below /dir/to/search/
bash: find Path -type f -name Regex -print <|endoftext|>
<|endoftext|> english: Change the permission to 755 for all directories under current directory
bash: find Path -type d | xargs -I {} chmod -v Permission {} <|endoftext|>
<|endoftext|> english: Prints a random number between 1 and 10
bash: grep -m Quantity -a -o Regex File | sed Program | head -n Quantity <|endoftext|>
<|endoftext|> english: find all the files that have been modified today
bash: find Path -mtime +Timespan <|endoftext|>
<|endoftext|> english: Remove all .txt files from the /full/path/dir directory tree
bash: find Path -name Regex -exec rm {} \; <|endoftext|>
<|endoftext|> english: Find all .gz archives in the current directory tree and check if they are valid
bash: find Path -name Regex | xargs -I {} gunzip -v -t {} <|endoftext|>
<|endoftext|> english: Find all *.jpg files/directories under current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Represent current date in RFC 3339 format with precision to seconds and save it to 'timestamp' variable
bash: date --rfc-3339 seconds <|endoftext|>
<|endoftext|> english: Find all SUID set files under current directory and show a few lines of output from the beginning
bash: find Path -perm Permission | head <|endoftext|>
<|endoftext|> english: display all regular/normal files in the current folder which are accessed in the last 7*24 hours
bash: find Path -type f -atime -Timespan <|endoftext|>
<|endoftext|> english: Find all test2.h files under current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Recursively finds all files and prints all strings with 'text-to-find-here' from that files.
bash: find Path -type f | xargs -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: Move all hidden files in "/path/subfolder/" to "/path/"
bash: mv File File <|endoftext|>
<|endoftext|> english: find all java files in the current folder and search for the pattern REGEX
bash: find Path -name Regex -exec grep Regex {} \; <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory appending a null character at the end of each file name/path
bash: find Path -print0 <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory tree with inode number 211028 and move them to 'newname.dir'
bash: find Path -inum Quantity -exec mv {} File \; <|endoftext|>
<|endoftext|> english: Dump "file" as ASCII characters
bash: od -t c File <|endoftext|>
<|endoftext|> english: download contents from "https://raw.github.com/creationix/nvm/master/install.sh" and execute
bash: curl Regex | sh <|endoftext|>
<|endoftext|> english: Search the current directory recursively for text files containing at least one character
bash: find Path -type f -exec grep -I -q Regex {} \; -and -print <|endoftext|>
<|endoftext|> english: find all the patch files in current folder and copy them to separate folder patches
bash: find Path -name Regex -print0 | xargs -0 -I {} cp {} File <|endoftext|>
<|endoftext|> english: Find all directories under current directory excluding  directories (along with their contents) that start with a . (dot) in their names
bash: find Path -type d -and ! -name Regex -or -name Regex -and ! -prune <|endoftext|>
<|endoftext|> english: Unzip and merge all "small-*.gz" files into files of 2000000 lines
bash: zcat Regex | split -d -l Quantity -a Quantity File Regex <|endoftext|>
<|endoftext|> english: Format the contents of "[file]" in a neat table
bash: column -t File <|endoftext|>
<|endoftext|> english: Search /var/tmp for files larger than 30 MB modified 31 days ago
bash: find Path Path -size +Size -mtime Timespan -ls <|endoftext|>
<|endoftext|> english: Count the number of all directories under directory '/mount/point' non-recursively
bash: find Path -maxdepth Quantity -type d | wc -l <|endoftext|>
<|endoftext|> english: Find all README's in /usr/share
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Exclude directory from find . command
bash: find Path -name Regex | grep -v Regex <|endoftext|>
<|endoftext|> english: find regular file named foo.txt under root / directory.
bash: find Path -name Regex -type f -print <|endoftext|>
<|endoftext|> english: Find all regular files with 400 permission under '/data' directory tree
bash: find Path -type f -perm Permission -print <|endoftext|>
<|endoftext|> english: display all the directories in the current folder excluding those that are present in the aa directory tree
bash: find Path -type d -name Regex -prune <|endoftext|>
<|endoftext|> english: Create directory dir2
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: Determine the user associated with stdin
bash: who -m <|endoftext|>
<|endoftext|> english: find all js files under the build direcotry except build/external directory.
bash: find Path -not \( -path Regex -prune \) -name Regex <|endoftext|>
<|endoftext|> english: Copy all directories recursively from "source/" to "destination/" excluding all files
bash: rsync -a --include Regex --exclude Regex File File <|endoftext|>
<|endoftext|> english: Find all foo.mp4 files in the current directory tree and print the pathnames of their parent directories
bash: find Path -name Regex -printf '%h\n' <|endoftext|>
<|endoftext|> english: Display the 5 smallest files in the current directory and its sub-directories ignoring any empty files.
bash: find Path -not -empty -type f -exec ls -s {} \; | sort -n | head - Quantity <|endoftext|>
<|endoftext|> english: Find the password file between sub-directory level 2 and 4.
bash: find Path -mindepth Quantity -maxdepth Quantity -name Regex <|endoftext|>
<|endoftext|> english: Remove files that are greater than 1MB in size under current directory
bash: find Path -type f -size +Size -exec rm {} + <|endoftext|>
<|endoftext|> english: display the help of find command
bash: find Path --help <|endoftext|>
<|endoftext|> english: Find all the *.pl files (Perl files) beneath the current directory.
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Numerically sort file "files" by the second "-" separated value of each line ordered from least value to highest value
bash: tac File | sort -t Regex -k Number -n <|endoftext|>
<|endoftext|> english: Print unique lines of sorted "File 1" compared with sorted "File 2"
bash: comm -2 -3 File File <|endoftext|>
<|endoftext|> english: Find all *.data files under jcho directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Prints year-month-date format for given time
bash: date -d Regex '+%Y-%m-%d' <|endoftext|>
<|endoftext|> english: Print full date of yesterday
bash: echo $( date -v-1d +%F ) <|endoftext|>
<|endoftext|> english: Find all directories under current directory and change their permission to 755
bash: find Path -type d -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Find every file under the directory /home owned by the user joe.
bash: find Path -user Regex <|endoftext|>
<|endoftext|> english: Find all *.mp4 files under /working
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: Finds IP addresses of all network interfaces.
bash: ifconfig | grep -v Regex | sed -n Program <|endoftext|>
<|endoftext|> english: all the files that end with .mp3 and end with .jpg
bash: find Path -name Regex -name Regex -print <|endoftext|>
<|endoftext|> english: Output all lines in 'file' comparing the first 12 characters and discarding any adjascent lines where these characters are duplicates.
bash: uniq -w Quantity -c File <|endoftext|>
<|endoftext|> english: Print content of all files ending with '*.foo' in current directory recursively
bash: find Path -name Regex -exec cat {} \; <|endoftext|>
<|endoftext|> english: find not case sensitive all directories that names are 'apt' and display details
bash: find Path -type d -iname Regex -ls <|endoftext|>
<|endoftext|> english: display all the files in the current folder which are in the path "./sr*sc"
bash: find Path -path Regex <|endoftext|>
<|endoftext|> english: Read a line of standard input into variable "input_cmd" with prompt "command : "
bash: read -p Regex Regex <|endoftext|>
<|endoftext|> english: Counts all non-blank lines in the $i file.
bash: sed Program File | wc -l <|endoftext|>
<|endoftext|> english: Find all *.php (case insensitive) files and *.js files/directories (case insensitive) under /home/jul/here excluding $EXCLUDE/* paths
bash: find Path -type f -iname Regex ! -path Regex -or -iname Regex ! -path Regex <|endoftext|>
<|endoftext|> english: Find all 50MB files in file system
bash: find Path -size Size <|endoftext|>
<|endoftext|> english: Find and delete all files with a used disk size of 0
bash: rm $( du File | awk Program ) <|endoftext|>
<|endoftext|> english: Run 'top' in batch mode (don't accept user input) with delay of 1 second between updates, and duplicate the standard output to file 'output.log' in current directory.
bash: top -b -d Timespan | grep Regex | tee File <|endoftext|>
<|endoftext|> english: Recursively search for all files not ending in ".xml" under the current directory, append ".xml" to the end of each file name
bash: find Path -type f ! -name Regex -print0 | xargs -0 -I {} rename Regex {} <|endoftext|>
<|endoftext|> english: find all the directories in the different folders excluding search in the sub directories and create these folders in the current directory
bash: find Path -maxdepth Quantity -type d | xargs -0 -I {} mkdir -p {} <|endoftext|>
<|endoftext|> english: Search the current directory tree for files larger than 10MB but smaller than 50MB
bash: find Path -size +Size -size -Size -print <|endoftext|>
<|endoftext|> english: display all normal/regular files in a folder
bash: find Path -type f <|endoftext|>
<|endoftext|> english: grep for the last occurrence of text between two tags
bash: tac File | grep -m Quantity -o -P Regex <|endoftext|>
<|endoftext|> english: Recursively finds string 'class foo' in all *.c files from current folder.
bash: grep Regex File <|endoftext|>
<|endoftext|> english: find for lighttpd in /var
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: display all the empty files in the current folder( files of size 0 bytes)
bash: find Path -empty <|endoftext|>
<|endoftext|> english: Remove the passphrase from user's ssh key without prompting.
bash: echo | ssh-keygen -P Regex <|endoftext|>
<|endoftext|> english: search for all the regular files that have been changed in the last 48 hours and sync these to another folder
bash: find Path -ctime -Timespan -type f -printf "%P\n" | xargs -I {} rsync -a -v -R File File <|endoftext|>
<|endoftext|> english: Print the names and sizes of regular files residing in the "tmp" directory tree
bash: find Path -type f -printf "%s %p\n" | awk Program <|endoftext|>
<|endoftext|> english: Print the contents of "~/.ssh/config"
bash: cat File <|endoftext|>
<|endoftext|> english: find all the files in the current folder and display adding quotations to each file
bash: find Path -exec echo -n Regex \; <|endoftext|>
<|endoftext|> english: find md5sum of 401
bash: | md5 <|endoftext|>
<|endoftext|> english: Find all files/directories with space in their names under current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all 'test' directories in the current directory tree and remove them
bash: find Path -type d -and -name Regex | xargs -I {} rm -r {} <|endoftext|>
<|endoftext|> english: Calculate the md5 sum of "yourstring"
bash: echo -n Regex | md5sum <|endoftext|>
<|endoftext|> english: Count all directories under current directory
bash: find Path -type d -exec ls -d -l -r -t {} \; | wc --lines <|endoftext|>
<|endoftext|> english: display the change owner command for all the regular files in the current folder.
bash: find Path -type f -exec echo Regex Regex {} \; <|endoftext|>
<|endoftext|> english: copy all the log files in the current folder which have not been accessed in the last 30*24 hours to the folder old
bash: find Path -type f -mtime +Timespan -name Regex -exec cp {} File \; <|endoftext|>
<|endoftext|> english: display all the normal/regular files in the directory FOLDER1
bash: find Path -type f -print0 <|endoftext|>
<|endoftext|> english: Split a file ADDRESSS_FILE into pieces per 20 lines named with prefix "temp_file_ and numeric suffixes
bash: split -l Quantity File Regex <|endoftext|>
<|endoftext|> english: Replace "_" with newlines in "Testing\r_Tested" and display the named characters
bash: echo -e Regex | awk -v Program Program | od -a <|endoftext|>
<|endoftext|> english: Find all directories under current directory and set their permission to 775
bash: find Path -type d | xargs -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: Find all files/directories named 'date' under /usr
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: List all .svn files/directories under current directory
bash: find Path -name Regex -exec echo {} \; <|endoftext|>
<|endoftext|> english: Display the number of regular files under current directory tree
bash: find Path -type f -exec echo {} \; | wc -l <|endoftext|>
<|endoftext|> english: Find all files/directories named orm.properties under  /eserver6/share/system/config/cluster directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Append the contents of "file.txt" to the current in-memory history list
bash: history -r Quantity <|endoftext|>
<|endoftext|> english: display all the text files in current folder
bash: find Path -name Regex -printf "%f\n" <|endoftext|>
<|endoftext|> english: Find all regular files under current directory tree, prepend '#' at the beginning of the lines that contain 'abc' in those files and modify them in-place
bash: find Path -type f -exec sed -i Program {} \; <|endoftext|>
<|endoftext|> english: Search the 'tmp' directory for .mp3 files
bash: find Path -maxdepth Quantity -name Regex <|endoftext|>
<|endoftext|> english: Overwrite a file 'my-existing-file' with random data to hide its content
bash: shred File <|endoftext|>
<|endoftext|> english: Change onwer of "file" to "user_name"
bash: chown Regex File <|endoftext|>
<|endoftext|> english: search  in root  ( / ) directory downwards all files which have less than 2 links.
bash: find Path -links -Quantity -print <|endoftext|>
<|endoftext|> english: display all the jpg images in current folder
bash: find Path -type f -iregex Regex <|endoftext|>
<|endoftext|> english: Retrieve column number from column name "Target" in file "table"
bash: head - Quantity File | tr -s Regex Regex | nl -n ln | grep Regex | cut -f Number <|endoftext|>
<|endoftext|> english: Find all empty files in the current directory and delete them
bash: find Path -empty -maxdepth Quantity -exec rm {} \; <|endoftext|>
<|endoftext|> english: Assign permissions 644 to files in the current directory tree
bash: find Path -type f -print0 | xargs -0 -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: Find all files with name "file.ext" under the current working directory tree and print each full path directory name
bash: find Path $( pwd ) -name Regex | xargs -l Quantity -I {} dirname {} <|endoftext|>
<|endoftext|> english: Search directory $CURR_DIR for regular files that were changed, accessed, or modified $FTIME days ago
bash: find Path -type f \( -ctime Timespan -or -atime Timespan -or -mtime Timespan \) -printf "./%P\n" <|endoftext|>
<|endoftext|> english: Make directories to "$2" as needed
bash: mkdir -p Directory <|endoftext|>
<|endoftext|> english: Replace "foo" with "bar" in all files in the current directory tree except hidden ones
bash: find Path -type f -not -name Regex -print | xargs -I {} sed -i Program {} <|endoftext|>
<|endoftext|> english: Extract protocol and host name from URL.
bash: echo Regex | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: Print the 10 most used commands
bash: history | awk Program | awk Program | sort | uniq -c | sort -n | tail | sort -n -r <|endoftext|>
<|endoftext|> english: Recursively search for "string here" and write the output to the console followed by the number of matched lines
bash: grep -r Regex File | tee >( wc -l ) <|endoftext|>
<|endoftext|> english: Find all *.py files/directories under current directory
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: Test if a file named 'file' in the current directory is more than 1 hour old
bash: find Path -prune -cmin +Quantity -print | grep -q Regex <|endoftext|>
<|endoftext|> english: Print numbers from 1 to 30 with 0 padding to a width of 2
bash: seq -f "%02g" Number <|endoftext|>
<|endoftext|> english: Forcibly removes files  '/tmp/stored_exception', '/tmp/stored_exception_line', '/tmp/stored_exception_source'
bash: rm -f File File File <|endoftext|>
<|endoftext|> english: Archive showing progress "sourcefolder" to "/destinationfolder" excluding "thefoldertoexclude"
bash: rsync -a -v --progress File File --exclude Regex <|endoftext|>
<|endoftext|> english: List all regular files from the current directory tree that were modified less than 60 minutes ago
bash: find Path -type f -mmin -Quantity | xargs -r -I {} ls -l {} <|endoftext|>
<|endoftext|> english: Find files/directories in entire file system that were accessed in less than a day ago
bash: find Path -atime -Timespan <|endoftext|>
<|endoftext|> english: find all the files in the entire file system that have been accessed exactly  50 days ago
bash: find Path -atime Timespan <|endoftext|>
<|endoftext|> english: Check if "$file" contains DOS line endings
bash: od -t x2 -N File File | cut -c Number | grep -E -m Quantity -q Regex <|endoftext|>
<|endoftext|> english: search for all the files in the folder /usr/bin which have not been accessed in the last 100*24 hours
bash: find Path -type f -atime +Timespan <|endoftext|>
<|endoftext|> english: Creates 5-letter random file name and saves it in 'rand_str' variable.
bash: mktemp --dry-run Regex <|endoftext|>
<|endoftext|> english: Delete all filename* files under /dir directory
bash: find Path -name Regex -type f -print | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: Print full path of command "gradle"
bash: which Regex <|endoftext|>
<|endoftext|> english: Download "Louis Theroux's LA Stories" using rsync over ssh
bash: rsync -a -v -e File File <|endoftext|>
<|endoftext|> english: Extract any line in "file1" or "file2" which does not appear in the other
bash: comm -3 <( sort File ) <( sort File ) <|endoftext|>
<|endoftext|> english: Find all files under $d directory (no sub-directories) that are executable by owner and print only their names
bash: find Path -maxdepth Quantity -perm -Permission -type f | sed Program <|endoftext|>
<|endoftext|> english: Change permissions for all PHP files under the current directory tree to 755 and print the number of files changed
bash: find Path -name Regex -exec chmod Permission {} \; -exec echo {} \; | wc -l <|endoftext|>
<|endoftext|> english: Print file type of the executable file of command "python"
bash: file $( which Regex ) <|endoftext|>
<|endoftext|> english: Show manual of the find command
bash: man Regex <|endoftext|>
<|endoftext|> english: Copies 'libgtest_main.so' and 'libgtest.so' to '/usr/lib/', preserving all attributes, and copying symlinks as symlinks, without following in source files.
bash: cp -a File File File <|endoftext|>
<|endoftext|> english: Display hardware platform, ie. x86_64 even if current kernel uses 32-bit addressing.
bash: uname -i <|endoftext|>
<|endoftext|> english: Search the current directory tree for the files with extension "trc" and list them if they are more than three days old
bash: find Path -name Regex -ctime +Timespan -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: Expand bash array "myargs" as arguments to "mv"
bash: mv File <|endoftext|>
<|endoftext|> english: Recursively counts non-blank, non-comment lines in all *.c files in a current folder.
bash: find Path -type f -name Regex -exec cat {} \; | sed Program | wc -l <|endoftext|>
<|endoftext|> english: Find all directories under present working directory
bash: find Path -type d <|endoftext|>
<|endoftext|> english: force delete all the temp files which are of size 0 bytes and which have not been accessed in the last 10 days
bash: find Path -size Size -atime +Timespan -exec rm -f {} \; <|endoftext|>
<|endoftext|> english: display all the directories in the current folder which start with processor followed by digit and ends with .1 or .2
bash: find Path -type d -regextype posix-egrep -regex Regex <|endoftext|>
<|endoftext|> english: Print content of '1' file
bash: cat File <|endoftext|>
<|endoftext|> english: find all files in the current folder which end with macs
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find files/directories writable by group or others under the /path directory
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: Find files belonging to the given owner
bash: find Path -user Regex <|endoftext|>
<|endoftext|> english: create a symbolic link named "test" to file ".bashrc"
bash: ln -s File Regex <|endoftext|>
<|endoftext|> english: find all files in the current directory do not display the files which do not have read permission to all users
bash: find Path ! -perm -Permission -prune <|endoftext|>
<|endoftext|> english: find files in the home folder which have been modified in the last day. ( -daystart measures times from the beginning of today rather than from 24 hours ago.)
bash: find Path -daystart -type f -mtime Timespan <|endoftext|>
<|endoftext|> english: Delete file with inode number 314167125
bash: find Path -type f -inum Quantity -delete <|endoftext|>
<|endoftext|> english: Display the last colon-separated field of variable 'var'
bash: echo Regex | rev | cut -d Regex -f Number | rev <|endoftext|>
<|endoftext|> english: display long list of all the files in the folder /home/peter which belong to no user and change the owner,group of all these files (after user confirmation) to "peter","peter"
bash: find Path -nouser -exec ls -l {} \; -ok chown Regex {} \; <|endoftext|>
<|endoftext|> english: Find all the files without permission 777
bash: find Path -type f ! -perm Permission <|endoftext|>
<|endoftext|> english: Find all *.ogg files under the home directory ignoring the case
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: Do not mark variables and function which are modified or created for export to the environment of subsequent commands
bash: set Regex <|endoftext|>
<|endoftext|> english: find all the files in the file system which belong to the user "pat" and with the name "dateiname"
bash: find Path -user Regex -iname Regex <|endoftext|>
<|endoftext|> english: Find all .zip files starting from the current directory which are owned by user tommye
bash: find Path -type f -user Regex -iname Regex <|endoftext|>
<|endoftext|> english: Print a minimal set of differences between files in directories "a" and "b", ignore differences in whitespace, and print 0 lines of unified context
bash: diff File File File <|endoftext|>
<|endoftext|> english: Find all files beneath the current directory that end with the extension .java and contain the characters String ignoring case.  Print the name of the file where a match is found.
bash: find Path -type f -name Regex -exec grep -i -l Regex {} \; <|endoftext|>
<|endoftext|> english: change owner of the files into directory dir_to_start except directory dir_to_exclude to user owner
bash: find Path -name Regex -prune -or -print0 | xargs -0 -I {} chown Regex {} <|endoftext|>
<|endoftext|> english: List all files from the current directory tree that were modified less than 60 minutes ago
bash: find Path -mmin -Quantity -ls <|endoftext|>
<|endoftext|> english: Find all regular files in the current director and set their permissions to '644'.
bash: find Path -type f -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Find file `hosts'
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Print each line in "file1" and file2" separated by a space
bash: paste -d Regex File File | sed Program <|endoftext|>
<|endoftext|> english: Create directories "/tmp/x/y/z/" on remote host before copying "$source" to "user@remote:/tmp/x/y/z/"
bash: rsync -a --rsync-path Program File File <|endoftext|>
<|endoftext|> english: Print the IP addresses for the current host name
bash: hostname -i <|endoftext|>
<|endoftext|> english: Find all regular files under current directory tree excluding files from './dir1' (except './dir1/subdir1/) and './dir2' directories
bash: find Path \( -not -path Regex -and -not -path Regex -or -path Regex \) -type f <|endoftext|>
<|endoftext|> english: Display a sorted count of all the characters in "filename"
bash: fold -w Quantity File | sort | uniq -c | sort -n -r <|endoftext|>
<|endoftext|> english: Find all directories named postgis-2.0.0 under / directory
bash: find Path -type d -name Regex <|endoftext|>
<|endoftext|> english: Print "huzzah" if directory "/some/dir" is empty
bash: find Path -maxdepth Quantity -empty -exec echo Regex \; <|endoftext|>
<|endoftext|> english: Save all directories under the current directory as a comma separated list in variable "FOLDERS"
bash: find Path -type d | paste -d Regex -s <|endoftext|>
<|endoftext|> english: Find all files/directories named 'com.apple.syncedpreferences.plist' (case insensitive) under ~/Library directory tree
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: Move "tobecopied/tobeexcluded" to the current directory
bash: mv File File <|endoftext|>
<|endoftext|> english: Find all 15MB files
bash: find Path -size Size <|endoftext|>
<|endoftext|> english: Prints all child processes of a process with id 20238, separated with comma.
bash: pstree -p Regex | sed Program | grep Regex | sed Program | tr Regex Regex <|endoftext|>
<|endoftext|> english: Set the 'xtrace' shell option
bash: set -o xtrace <|endoftext|>
<|endoftext|> english: display all files which have been modified between two dates in current folder
bash: find Path -type f -newermt Regex ! -newermt Regex <|endoftext|>
<|endoftext|> english: Recursively set all permissions under "/opt/lampp/htdocs" to 755
bash: chmod Permission -R File <|endoftext|>
<|endoftext|> english: Count the number of files/directories with '.php' extension under current directory tree and change the permissions to 755
bash: find Path -name Regex -exec chmod Permission {} \; -exec echo {} \; | wc -l <|endoftext|>
<|endoftext|> english: Print every 3 characters of standard input as a line
bash: fold -w Quantity <|endoftext|>
<|endoftext|> english: Print file system disk space usage and grand total for the root file system with sizes in powers of 1000
bash: df -H --total File <|endoftext|>
<|endoftext|> english: sort based on size and display top ten largest normal/regular files in the current folder
bash: find Path -type f -exec ls -s {} \; | sort -n -r | head - Quantity <|endoftext|>
<|endoftext|> english: display all the files in the current folder.
bash: find Path <|endoftext|>
<|endoftext|> english: display all the text files in a folder
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: List the names of the directories in current directory without going into sub-directories
bash: find Path -mindepth Quantity -maxdepth Quantity -type d -printf "%P\n" <|endoftext|>
<|endoftext|> english: Find any files in the current directory and its sub-directories that were last accessed more than 7 days or are larger than 20480 blocks in size.
bash: find Path -atime +Timespan -or -size +Size -print <|endoftext|>
<|endoftext|> english: Find file names *blast* in specfied directory, case insensitive
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: Find all directories under /home/me/"$d"
bash: find Path -type d <|endoftext|>
<|endoftext|> english: Set variable 'vara' to 3
bash: source <( echo Regex ) <|endoftext|>
<|endoftext|> english: find files changed in the last 1 day
bash: find Path -mtime -Timespan -type f <|endoftext|>
<|endoftext|> english: find all the files in the current folder (handles files which contain newlines or only spaces in their names)
bash: find Path -print0 | xargs -0 -l -i -I {} echo {} {} <|endoftext|>
<|endoftext|> english: Rename all files matching "access.log.<number>.gz" incrementing <number>.
bash: find Path -name Regex | sort -V -r | rename Regex <|endoftext|>
<|endoftext|> english: Save the system host name into variable "HOST"
bash: hostname <|endoftext|>
<|endoftext|> english: Print the directory name of the real full path of "relative/path/to/file" where each symbolic link component must exist
bash: dirname $( readlink -e File ) <|endoftext|>
<|endoftext|> english: Search the current directory tree for files and directories whose names begin with "pro"
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all files/directories in current directory and execute the script itself with minimal invocation for those files/directories
bash: find Path -exec  + <|endoftext|>
<|endoftext|> english: Print the names of all the files from directory tree ~/some/directory whose names end in "rb"
bash: find Path -name Regex -exec basename {} \; <|endoftext|>
<|endoftext|> english: display all the files in the current folder which have been modified in the last 14*24 hours
bash: find Path -mtime -Timespan -print <|endoftext|>
<|endoftext|> english: Display the last space-separated field of each line in file.txt
bash: rev File | cut -d Regex -f Number | rev <|endoftext|>
<|endoftext|> english: Find directories that have "755" permissions and modify them to have "700" permissions
bash: find Path -type d -perm Permission -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Find all directories under /path/to/base/dir and change their permission to 755
bash: chmod Permission $( find Path -type d ) <|endoftext|>
<|endoftext|> english: Remove spaces from output of "echo aa | wc -l"
bash: echo Regex | wc -l | tr -d Regex <|endoftext|>
<|endoftext|> english: Find all files named 'new' under current directory tree and display their contents
bash: find Path -name Regex -print -exec cat {} \; <|endoftext|>
<|endoftext|> english: For each line of colon-separated information in files 'empsal' and 'empname' whose first field matches in both files, output: first field of empname, second field of empname, fourth field of empname, and third field of empsal.
bash: join -j Regex -t Regex -o 2.1,2.2,2.4,1.3 <( sort File ) <( sort File ) <|endoftext|>
<|endoftext|> english: Find all regular files with permissions 777 under and below /home/user/demo/
bash: find Path -type f -perm Permission -print <|endoftext|>
<|endoftext|> english: Creates temporary file and saves path to it in 'fif2' variable.
bash: $( mktemp -u ) <|endoftext|>
<|endoftext|> english: Count the number of lines in every regular .rb file in the current directory tree
bash: find Path -name Regex -type f -exec wc -l File \; <|endoftext|>
<|endoftext|> english: Display inputfile all on one line (replace newlines by spaces)
bash: awk Program Program <|endoftext|>
<|endoftext|> english: Use the octal form to find and print detailed information about all regular files in your home directory and below that have only the group permission set.
bash: find Path -perm Permission -type f -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: Change the owner of "process" to "root"
bash: chown Regex File <|endoftext|>
<|endoftext|> english: find all jpg files in the folder which are in the path "/201111/" and sort them based on name
bash: find Path -name Regex | sort -t Regex -n -k Number <|endoftext|>
<|endoftext|> english: Gets IP addresses of all active network interfaces.
bash: ifconfig | grep -o -P Regex <|endoftext|>
<|endoftext|> english: Find all directories under /var/www directory and set their permission to 755
bash: find Path -type d -print0 | xargs -0 -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: Copy /my/configfile to all empty directories of the $somedir directory tree
bash: find Path -type d -empty -exec cp File {} \; <|endoftext|>
<|endoftext|> english: Find all files/directories under '/directory_path' directory tree that have been modified within the last day
bash: find Path -mtime -Timespan -print <|endoftext|>
<|endoftext|> english: Find all directories under maximum 1 level down the /parent  directory and set their permission to 700 recursively
bash: find Path -maxdepth Quantity -type d -print0 | xargs -0 -I {} chmod -R Permission {} <|endoftext|>
<|endoftext|> english: Removes all files but 5 newest ones from current folder.
bash: ls -t -p | grep -v Regex | tail -n +Quantity | tr Regex Regex | xargs -0 -I {} rm -- {} <|endoftext|>
<|endoftext|> english: display the list of all the text files present in the current directory excluding the search in certain paths.
bash: find Path -type f -name Regex ! -path Regex ! -path Regex ! -path Regex -ls <|endoftext|>
<|endoftext|> english: find all the log files in the file system
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Search level 3 of the current directory tree for the directories whose pathnames contain "New Parts"
bash: find Path -mindepth Quantity -maxdepth Quantity -type d | grep Regex <|endoftext|>
<|endoftext|> english: Find all files under current directory with 755 permission and change their permission to 644
bash: find Path -type f -perm Permission -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Print DISPLAY of "orschiro" user
bash: who | awk -F Regex Program | grep -v Regex | uniq <|endoftext|>
<|endoftext|> english: Strips last section from the path $pathname, and prints basename of the rest part.
bash: echo $( basename $( dirname Regex ) ) <|endoftext|>
<|endoftext|> english: Find all files/drectories under '/u/bill' directory tree that have been accessed in the last 2 to 6 minutes
bash: find Path -amin +Quantity -amin -Quantity <|endoftext|>
<|endoftext|> english: Get a list of files and directories in the current directory tree
bash: find Path -print0 | xargs -0 -I {} echo {} <|endoftext|>
<|endoftext|> english: Find all *.php (case insensitive) files and *.js files/directories (case insensitive) under /home/jul/here excluding *.js files/directories under /home/jul/here/exclude/* paths
bash: find Path -type f -iname Regex -or -iname Regex ! -path Regex <|endoftext|>
<|endoftext|> english: Print "new.txt" with line numbers prepended and lines 3 and 4 deleted
bash: cat File | nl | sed Program <|endoftext|>
<|endoftext|> english: Enables shell option 'compat31'.
bash: shopt -s compat31 <|endoftext|>
<|endoftext|> english: Report file system containing path to /dir/inner_dir/ disk usage in kilobytes.
bash: df -k File <|endoftext|>
<|endoftext|> english: Copy all .txt files from the dir/ directory tree along with their parent directories hierarchy
bash: find Path -name Regex | xargs -I {} cp -a --target-directory Directory --parents {} <|endoftext|>
<|endoftext|> english: Print '-exec is an action so an implicit -print is not applied' for every file/directory found by the name 'file' under current directory tree
bash: find Path -name Regex -exec echo Regex \; <|endoftext|>
<|endoftext|> english: Prints $m latest modified files within the $d folder, using $f format for printing timestamp.
bash: find Path -type f -printf "%T@ :$f %p\n" | sort -n -r | cut -d Regex -f Number | head -n Quantity <|endoftext|>
<|endoftext|> english: Copy file or directory 'gtest' from directory 'include' in current directory to /usr/include, preserving ownerships and permissions.
bash: cp -a File File <|endoftext|>
<|endoftext|> english: Add read and execute permission to command "node"
bash: chmod +Permission $( which Regex ) <|endoftext|>
<|endoftext|> english: display all the doc files in the current folder ( files ending with ".doc" )
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: List all environment variables containing 'USER' in their name or value that would result in running a command with 'sudo env'.
bash: env | grep Regex <|endoftext|>
<|endoftext|> english: find all files in and under the current directory that have read, write and execute permissions set for all users.
bash: find Path -perm Permission -print <|endoftext|>
<|endoftext|> english: Find all files in the current directory tree whose size is greater than 1MB, and move them to the "files" folder
bash: find Path -size +Size -exec mv {} File + <|endoftext|>
<|endoftext|> english: Find all files/directories that have read, write, execution permission for user and belong to the user 'my_user' under current directory tree
bash: find Path -user Regex -perm -Permission <|endoftext|>
<|endoftext|> english: Find all files under current directory and print only the filenames (not paths)
bash: find Path -type f -printf "%f\n" <|endoftext|>
<|endoftext|> english: Find all Subscription.java files/directories under current directory and enter into the parent directory of the first one found
bash: cd $( find Path -name Regex -printf '%h\n' ) <|endoftext|>
<|endoftext|> english: Resolve symbolic link of path of "python2.7"
bash: readlink $( which Regex ) <|endoftext|>
<|endoftext|> english: find all the directories in current folder which start with test
bash: find Path -type d -name Regex <|endoftext|>
<|endoftext|> english: search for al cpp files in current folder and display distinct parent directory of these files in sorted order
bash: find Path -name Regex -exec dirname {} + | sort -u <|endoftext|>
<|endoftext|> english: Print a NULL-separated list of all directories of the current directory tree
bash: find Path -type d -print0 <|endoftext|>
<|endoftext|> english: Print last 10 commands in history with the first 7 characters removed
bash: history Quantity | cut -c Number <|endoftext|>
<|endoftext|> english: Remove files in the current directory tree modified more than 31 days ago recursively
bash: find Path -type f -mtime +Timespan -print0 | xargs -0 -r -I {} rm -f {} <|endoftext|>
<|endoftext|> english: Mount "/path/to/device" on "/path/to/mount/location" as a vfat filesystem and a loop back device
bash: mount Regex Regex -o loop -t vfat <|endoftext|>
<|endoftext|> english: Search the current directory tree for regular files changed on the 10th of September
bash: find Path -type f -ls | grep Regex <|endoftext|>
<|endoftext|> english: display all symbolic links in the folder "myfiles" and follow them
bash: find -L Path <|endoftext|>
<|endoftext|> english: Find all regular files under $SOURCE directory tree that were modified more than $KEEP days ago and show only the names without the paths
bash: find Path -type f -mtime +Timespan | sed Program <|endoftext|>
<|endoftext|> english: Rename "file001abc.txt" to "abc1.txt"
bash: mv File File <|endoftext|>
<|endoftext|> english: For each line in list.txt, output the line adding "FAIL" if the same line appears in fail.txt, and "PASS" otherwise - lines in fail.txt must be in the same order as they appear in list.txt.
bash: sed Program File | join -a Quantity -e Regex -j Regex -o 1.1,2.2 File File <|endoftext|>
<|endoftext|> english: Find all image.pdf files under ./polkadots
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: Remove all directories found in directory tree $LOGDIR that were modified more than 5 days ago
bash: find Path -type d -mtime +Timespan -exec rm -f {} \; <|endoftext|>
<|endoftext|> english: Find files in the /home/user directory tree changed exactly 10 minutes ago
bash: find Path -cmin Quantity -print <|endoftext|>
<|endoftext|> english: Find all files that contain the case insensitive regex 'stringtofind' in maximum 1 level down the / directory without descending into other partitions
bash: find Path -maxdepth Quantity -xdev -type f -exec grep -l -i Regex {} \; <|endoftext|>
<|endoftext|> english: Show version information of the find utility
bash: find Path -version <|endoftext|>
<|endoftext|> english: Archive files (not directories) in "sorce_dir" to "target_dir"
bash: rsync -a --filter Program File File <|endoftext|>
<|endoftext|> english: recursively delete, without prompting, directories under /data/bin/test, that are older than 10 days and where the name starts with a number
bash: find Path -type d -mtime +Timespan -name Regex -print | xargs -I {} rm -r -f {} <|endoftext|>
<|endoftext|> english: Create a symbolic link relative to link location named "$dest_dir/$orig_name" to "$orig_dest"
bash: ln -r -s File Regex <|endoftext|>
<|endoftext|> english: Print a list of symbolic links reachable from the current directory that do not resolve to accessible files
bash: find Path -L -type l <|endoftext|>
<|endoftext|> english: Find all files owned by group `group2'
bash: find Path -group Regex <|endoftext|>
<|endoftext|> english: search for a word in all the files in the entire filesystem and display the matched fline along with the file name
bash: find Path -type f -exec grep -H -i Regex {} + <|endoftext|>
<|endoftext|> english: Find SGID files
bash: find Path -perm +Permission <|endoftext|>
<|endoftext|> english: create directory /etc/cron.5minute
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: Find all $2 files in $1 path and search for the regex expanded by $3 in those files excluding the files with /proc in their paths
bash: find Path -name Regex | grep -v Regex | xargs -I {} grep -H -n Regex {} File {} <|endoftext|>
<|endoftext|> english: Print the most repeated line in "list2.txt" that exists in "list1.txt" prefixed by the number of occurrences
bash: grep -F -f Regex File | sort | uniq -c | sort -n | tail -n Quantity <|endoftext|>
<|endoftext|> english: Remove recursively Emacs backup files in the current directory
bash: find Path -name Regex -print0 | xargs -0 -I {} rm {} <|endoftext|>
<|endoftext|> english: Search for 'mystring' in all *.txt (case insensitive) files under current directory
bash: find Path -iname Regex -exec grep -E Regex File \; <|endoftext|>
<|endoftext|> english: Prints long recursive listing of all content of a root folder, saving output to 'output.file'.
bash: ls -l -R File | tee File <|endoftext|>
<|endoftext|> english: Find all SGID files in entire file system
bash: find Path -perm +Permission <|endoftext|>
<|endoftext|> english: Save the short system host name to variable "hostname"
bash: hostname -s <|endoftext|>
<|endoftext|> english: Print source directory of bash script
bash: dirname $( readlink -f File ) <|endoftext|>
<|endoftext|> english: Archive directory specified by variable "myFolder" to current directory.
bash: rsync -a -v File File <|endoftext|>
<|endoftext|> english: display a long listing of all the log files in the current folder which are bigger than 1MB
bash: find Path -size +Size -name Regex -print0 | xargs -0 -I {} ls -l -S -h {} <|endoftext|>
<|endoftext|> english: find the file "myfile.txt" in the folder /home/user/myusername/
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: Find recursively all files whose names begin with "foo"
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Make directories and parent directories as needed of "$1" with "\r" removed
bash: mkdir -p $( echo -e Regex | sed Program ) <|endoftext|>
<|endoftext|> english: Find all files/directories with '.js' extension under current directory tree without descending into './directory'
bash: find Path -path Regex -prune -or -name Regex -print <|endoftext|>
<|endoftext|> english: Print each line in "file", "file2", and "file3" and replace any tabs with spaces
bash: paste File File File | sed Program <|endoftext|>
<|endoftext|> english: search for all the files in the current folder which start with "my"
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find .jpg files owned by user daniel in the current directory and its sub-directories.
bash: find Path -user Regex -type f -name Regex <|endoftext|>
<|endoftext|> english: Filters out strings, using the extended regexp pattern '^#|^$|no crontab for|cannot use this program' from "$USERTAB"
bash: echo Regex | grep -v -E Regex <|endoftext|>
<|endoftext|> english: Find all files under /var/www directory and set their permission to 644
bash: find Path -type f -print0 | xargs -0 -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: Find all *.c files on the system and feed the output to wc
bash: find Path -name Regex | wc <|endoftext|>
<|endoftext|> english: Greps DNS zone transfer info on domain localdomain.com from NS @dc1.localdomain.com, finds strings with any-cased word 'Lawler' and strips last letter from each string.
bash: dig Regex Regex localdomain.com | grep -i Regex | awk Program <|endoftext|>
<|endoftext|> english: find all files in the current folder which have not been changed in the last 48 hours
bash: find Path -daystart -ctime +Timespan <|endoftext|>
<|endoftext|> english: Add group write permission to all files in the current directory
bash: find Path -maxdepth Quantity -type f -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Send one ping request to local machine.
bash: ping -c Quantity Regex <|endoftext|>
<|endoftext|> english: Remove ESC key bind
bash: bind -r Regex <|endoftext|>
<|endoftext|> english: Locates 'gcc' executable file, strips last two parts of the full path, adds '/lib' to the end and saves result in 'libdir' variable.
bash: dirname $( dirname $( which Regex ) ) <|endoftext|>
<|endoftext|> english: Search the current directory tree for TXT files skipping hidden ones
bash: find Path -type f \( -iname Regex ! -iname Regex \) <|endoftext|>
<|endoftext|> english: Find all *.php (case insensitive) and *.js files (case insensitive) under /home/jul/here excluding  /home/jul/here/exclude/* paths
bash: find Path -type f \( -iname Regex -or -iname Regex \) ! -path Regex <|endoftext|>
<|endoftext|> english: Counts lines in each of *.php files in a current folder and subfolders ignoring 'tests*' folders and prints total count as well.
bash: find Path -name Regex -not -path Regex | xargs -I {} wc -l {} <|endoftext|>
<|endoftext|> english: Report file systems disk usage, elide all entries insignificant to available space, and produce a grand total.
bash: df --total <|endoftext|>
<|endoftext|> english: Decompress "path/to/test/file.gz" to standard output and save all lines matching "my regex" to files with a 1000000 line limit
bash: gzip -d -c Regex | grep -P --regexp Regex | split -d -l Quantity File Regex <|endoftext|>
<|endoftext|> english: List level 2 subdirectories of the current directory
bash: find Path -mindepth Quantity -maxdepth Quantity -type d -ls <|endoftext|>
<|endoftext|> english: Return 0 if at least one "abc" file in the current directory tree contains text "xyz"
bash: find Path -name Regex -type f -exec grep -q Regex {} + <|endoftext|>
<|endoftext|> english: Count all the lines of code in all php files in current directory recursively
bash: find Path -name Regex | xargs -I {} grep -v -c Regex {} | awk Program <|endoftext|>
<|endoftext|> english: Find all files in the current directory tree that are not newer than some_file
bash: find Path ! -newer File <|endoftext|>
<|endoftext|> english: Copy *.txt files from the dir/ directory tree along with their parent directories
bash: find Path -name Regex | xargs -I {} cp -a --target-directory Directory --parents {} <|endoftext|>
<|endoftext|> english: Execute the first instance of "parallel" found in the PATH, passing it all parameters received by the script/function
bash: $( which Regex ) <|endoftext|>
<|endoftext|> english: Find all files/directories under '/home/exampleuser/' directory tree whose names end with 'conf' and were modified exactly 3 days ago
bash: find Path -name Regex -mtime Timespan <|endoftext|>
<|endoftext|> english: Display unique names of logged in users
bash: finger | sed Program | sed Program | awk Program | sort | uniq <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory tree whose paths start with './sr' and end with 'sc'
bash: find Path -path Regex <|endoftext|>
<|endoftext|> english: list all files under the current directory called cookies.txt
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Gets a job with defined number back to the foreground.
bash: fg Regex <|endoftext|>
<|endoftext|> english: change the owner and group of all the directories in the current folder and /home/admin/data/ to admin & admin
bash: find Path Path -type d -exec chown Regex {} \; <|endoftext|>
<|endoftext|> english: List all regular files residing in the current directory tree and containing string "/bin/ksh"
bash: find Path -type f -print | xargs -I {} grep -l -i Regex {} <|endoftext|>
<|endoftext|> english: Remove directories in /media/1Tb/videos modified more than 7 days ago
bash: find Path -maxdepth Quantity -type d -mtime +Timespan -exec rm -r -f {} \; <|endoftext|>
<|endoftext|> english: search for all the files with the name "dummy" in the current folder
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: Prints long recursive listing of all content of a current folder, saving output to 'output.file'.
bash: ls | tee File <|endoftext|>
<|endoftext|> english: forcibly create a symbolic link named "linkname" to file "new_destination"
bash: ln -s -f File Regex <|endoftext|>
<|endoftext|> english: Find files with the extension .conf in the /etc directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: display all the files in the current folder excluding those that are present in the sub directory aa and display those files that start with the word "file"
bash: find Path \( -type d -name Regex -prune \) -or \( -type f -name Regex -print \) <|endoftext|>
<|endoftext|> english: Display the biggest file sizes only
bash: find Path -type f -exec du -S -h {} + | sort -r -h | head -n Quantity <|endoftext|>
<|endoftext|> english: Print a randomly sorted list of numbers from 1 to 10 to file "/tmp/lst" and outputs "-------" followed by the reverse list to the screen
bash: seq Number Number | sort -R | tee File | cat <( cat File ) <( echo Regex ) | tac <|endoftext|>
<|endoftext|> english: Find files in the current directory tree that are named "some_pattern" and move them to directory "target_location"
bash: find Path -name Regex -print0 | xargs -0 -i -I {} mv {} File {} <|endoftext|>
<|endoftext|> english: Find all hidden files under /tmp
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: find all the mp3 files in the home folder which have been modified today
bash: find Path -type f -mtime Timespan -iname Regex <|endoftext|>
<|endoftext|> english: display the names without extensions of all the data files in current folder which have not been changed in the last 60 mins
bash: find Path -name Regex -type f -cmin +Quantity -exec basename {} \; <|endoftext|>
<|endoftext|> english: Print which files differ between dir1 and dir2, treating absent files as empty
bash: diff --brief -N -r File File <|endoftext|>
<|endoftext|> english: Find all .c, .h files in the current directory tree and search them for string "expr"
bash: find Path -name Regex | xargs -I {} grep -E Regex {} <|endoftext|>
<|endoftext|> english: display all the regular files in the current folder which have the permission 777
bash: find Path -type f -perm Permission <|endoftext|>
<|endoftext|> english: Find all directories under current directory and make them read, write, and executable for owner & group and remove read-write-execute permission for other
bash: find Path -type d -name Regex -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Generate a random 32 ASCII character password from /dev/urandom and save it to variable 'pass'
bash: tr -d Regex | fold -w Quantity | head -n Quantity <|endoftext|>
<|endoftext|> english: Recursively removes all files like '_*' and '.DS_Store' from /var/www/html/ folder.
bash: rm File File <|endoftext|>
<|endoftext|> english: Find files containing string "#!/bin/ksh" and append their names and matching strings to /tmp/allfiles
bash: find Path -type f -print | xargs -I {} grep -i -l Regex {} | tee File <|endoftext|>
<|endoftext|> english: find all c, cpp files in current folder
bash: find Path -name Regex -or -name Regex <|endoftext|>
<|endoftext|> english: List all regular files in the current directory tree
bash: find Path -type f | xargs -I {} ls -l {} <|endoftext|>
<|endoftext|> english: Print file information of command "bash"
bash: echo $( ls -l $( which Regex ) ) <|endoftext|>
<|endoftext|> english: Run the file command on every regular file under current directory
bash: find Path -type f -exec file {} \; <|endoftext|>
<|endoftext|> english: Unzip and untar "file.tar.gz"
bash: zcat Regex | tar File <|endoftext|>
<|endoftext|> english: Read a line from standard input into variable "text" with the prompt " Enter Here: "
bash: read -p Regex Regex <|endoftext|>
<|endoftext|> english: find all files in current folder which are exactly 300MB
bash: find Path -size Size <|endoftext|>
<|endoftext|> english: Remove all files named `junk' and `dummy'
bash: find Path \( -name Regex -or -name Regex \) -exec rm {} \; <|endoftext|>
<|endoftext|> english: Search for "1234567890" in every gzip file modified between 8:00 and 9:00 on 2014-04-30
bash: find Path -newermt Regex -not -newermt Regex | xargs -I {} gunzip -c {} | grep Regex <|endoftext|>
<|endoftext|> english: Copies all files like '*.txt' under the current directory to the './tmp/' directory.
bash: find Path -type f -name Regex | sed Program | sed Program | xargs -I {} cp -v {} File <|endoftext|>
<|endoftext|> english: List all php files below current directory whose full pathname name does not include "libs", "tmp", "tests", or "vendor", sorted by number of lines, letting the user page interactively through the output.
bash: find Path -name Regex -print0 | xargs -0 -I {} wc -l {} | sort -n -r | grep -E -v Regex | less <|endoftext|>
<|endoftext|> english: replaces the last occurrence of 'a' with 'c' in file
bash: tac File | awk Program | tac <|endoftext|>
<|endoftext|> english: Display the number of sub-directories for all directories under current directory tree, sort them according to the decreasing order of the number and show only the first 10 of them
bash: find Path -type d -ls | awk Program | sort -r -n | head <|endoftext|>
<|endoftext|> english: Search for files/directories which are writable by either their owner or their group
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: Search the /etc/apache-perl directory tree for files newer than /etc/apache-perl/httpd.conf
bash: find Path -newer File <|endoftext|>
<|endoftext|> english: Find all files under directory tree /path/to/dir whose permissions are not 644
bash: find Path ! -perm Permission <|endoftext|>
<|endoftext|> english: Move all directories in the current directory that match "some-dir" to "x/"
bash: find Path -maxdepth Quantity -name Regex -type d -print0 | xargs -0 -r -I {} mv -t Directory {} <|endoftext|>
<|endoftext|> english: Convert all characters in standard input to lower case
bash: sed Program <|endoftext|>
<|endoftext|> english: Copy all files below the current directory whose names contain "FooBar" to directory foo/bar/ in user's home directory.
bash: find Path | grep Regex | xargs -I {} cp {} File <|endoftext|>
<|endoftext|> english: display long listing of all the files in the folder "/myfiles"
bash: find Path -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: Display differences between directories dir1 and dir2.
bash: diff -r File File <|endoftext|>
<|endoftext|> english: Run script $2 on remote host $1 using interpreter $INTERPRETER with pseudo-terminal allocation
bash: cat File | grep -v Regex | ssh -t Regex command <|endoftext|>
<|endoftext|> english: Write "hello world" to the console and print number of bytes, symbols and strings in provided input.
bash: echo Regex | tee >( wc ) <|endoftext|>
<|endoftext|> english: Archive "directory" preserving hard links from host "remote" to the current local directory and keep partial files, handle sparse files efficiently, and itemize changes made
bash: rsync -a -P -S -H -i -v File File <|endoftext|>
<|endoftext|> english: Display a detailed listing of the current directory, pausing for user input after each page.
bash: ls -l | more <|endoftext|>
<|endoftext|> english: find all the files in the current folder which are exactly 1234 bytes
bash: find Path -size Size <|endoftext|>
<|endoftext|> english: Deletes folder like /tmp/*/* or deeper, older than +7 days if they don`t contain files or other folders.
bash: find Path -mtime +Timespan -type d -exec rmdir {} \; <|endoftext|>
<|endoftext|> english: Find file names *blast* in specfied directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all files under /home/mywebsite/public_html/sites/all/modules and set their permission to 640
bash: find Path -type f -exec chmod Permission {} + <|endoftext|>
<|endoftext|> english: Save long listing of all running processes in the 'log' file, and save number of process strings that contain 'cntps' in the 'cnt' variable.
bash: ps -e -f | tee File | grep Regex | grep -v Regex | wc -l <|endoftext|>
<|endoftext|> english: find all the files starting with "config" in the folder Symfony
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all files and directories under current directory without crossing over to other partitions
bash: find Path -xdev -print0 <|endoftext|>
<|endoftext|> english: Answer "n" to any prompts in the interactive recursive removal of "dir1", "dir2", and "dir3"
bash: yes Regex | rm -i -r File File File <|endoftext|>
<|endoftext|> english: Find all files under /path and calculate their md5sum
bash: find Path -type f -print0 | xargs -0 -I {} md5sum {} <|endoftext|>
<|endoftext|> english: List all regular files in entire file system
bash: find Path -type f -exec echo {} \; <|endoftext|>
<|endoftext|> english: Delete all empty directories in minimum 1 level down the directory 'directory'
bash: find Path -mindepth Quantity -type d -empty -delete <|endoftext|>
<|endoftext|> english: Change the owner of "destination_dir" to "user"
bash: chown Regex File <|endoftext|>
<|endoftext|> english: Find all files owned by group `root' in the current directory tree and change their user to `temp'
bash: find Path -group Regex -print | xargs -I {} chown Regex {} <|endoftext|>
<|endoftext|> english: Read a line from standard input into variable "message" with the prompt "Please Enter a Message: $cr"
bash: read -p Regex Regex <|endoftext|>
<|endoftext|> english: Join columns in "file1" and "file2" if their first field matches and format the output as a table
bash: awk Program Program Program | column -t <|endoftext|>
<|endoftext|> english: Display file.txt with lines numbered, and page interactively through the result.
bash: cat -n File | less <|endoftext|>
<|endoftext|> english: Find and remove all .core files
bash: find Path -name Regex | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: Find files in the current directory tree that match pattern "*sub*"
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Create an empty index.html in each directory under the current one, updating timestamps of already existing index.html files.
bash: find Path -type d -exec touch File \; <|endoftext|>
<|endoftext|> english: Print a list of all duplicate case insensitive file paths in the current directory tree
bash: find Path | sort -f | uniq -i -d <|endoftext|>
<|endoftext|> english: Counts lines of /etc/fstab file.
bash: cat File | wc -l <|endoftext|>
<|endoftext|> english: Change directory to the parent of the real path of the current script
bash: cd $( dirname $( readlink -f File ) ) <|endoftext|>
<|endoftext|> english: Save the current working directory to variable "CURRENT"
bash: pwd <|endoftext|>
<|endoftext|> english: Find *.html files in the current directory tree that were modified 7 days ago
bash: find Path -mtime Timespan -name Regex -print <|endoftext|>
<|endoftext|> english: Save absolute path of "/home/nohsib/dvc/../bop" in variable "absolute_path"
bash: readlink -m File <|endoftext|>
<|endoftext|> english: List all files in the /var directory tree whose size is greater than 10 megabytes
bash: find Path -size +Size -ls <|endoftext|>
<|endoftext|> english: Recursively change owner and group to "$JBOSS_AS_USER" of "$JBOSS_AS_DIR/"
bash: chown -R Regex File <|endoftext|>
<|endoftext|> english: Copy the directory hierarchy from "original" to "new"
bash: find Path -type d -exec mkdir Directory \; <|endoftext|>
<|endoftext|> english: find all files in the a direcotry which have been modified in exactly 1 day back
bash: find Path -mtime Timespan <|endoftext|>
<|endoftext|> english: Prints groups list that user 'el' belongs to.
bash: groups Regex Regex Regex Regex Regex Regex Regex Regex <|endoftext|>
<|endoftext|> english: Searches the manual page names and descriptions
bash: apropos <|endoftext|>
<|endoftext|> english: Removes all empty folders under current folder.
bash: find Path -type d -empty -exec rmdir {} \; <|endoftext|>
<|endoftext|> english: Create intermediate directories "b and "c" as required and directory "c"
bash: mkdir -p Directory <|endoftext|>
<|endoftext|> english: Find files/directories under '/dir' directory tree that are newer than 'yesterday.ref' file and older than 'today.ref' file by modification time
bash: find Path -newer File -and ! -newer File -print <|endoftext|>
<|endoftext|> english: find all files in the file system which have no user and no group
bash: find Path -nouser -nogroup <|endoftext|>
<|endoftext|> english: Run "./configure" with a new environment variable CC set to the full path of the command 'cc'
bash: which Regex <|endoftext|>
<|endoftext|> english: find all directories named build under the current directory
bash: find Path -type d -name Regex <|endoftext|>
<|endoftext|> english: search for the word error in all the xml files in the current folder
bash: find Path -name Regex -exec grep Regex File {} + <|endoftext|>
<|endoftext|> english: Remove all files under /home/user/Maildir/.SPAM/cur
bash: find Path -type f -exec rm {} + <|endoftext|>
<|endoftext|> english: Find all socket files in the current directory and its sub-directories.
bash: find Path -type s <|endoftext|>
<|endoftext|> english: Find directory "/some/dir" if it is empty
bash: find Path -maxdepth Quantity -empty <|endoftext|>
<|endoftext|> english: find all the files in the current folder and display adding quotations to each file and replace spaces with new line
bash: find Path -exec echo -n Regex \; | tr Regex Regex <|endoftext|>
<|endoftext|> english: Find all .sh files in the current directory tree and remove them
bash: find Path -name Regex -exec rm -r -f {} \; <|endoftext|>
<|endoftext|> english: Prints long listing of content in a root folder, including hidden files, with human-readable sizes, and stores output to '/root/test.out' file.
bash: echo Regex | bash <|endoftext|>
<|endoftext|> english: Find all .txt files except README.txt
bash: find Path -type f -name Regex ! -name Regex -print <|endoftext|>
<|endoftext|> english: Delete all files under '/home/backups' directory tree with '.tgz' or '.gz' extension (case insensitive) that were modified more thant 60 days ago
bash: find Path -type f -iregex Regex -mtime +Timespan -exec rm {} \; <|endoftext|>
<|endoftext|> english: Add executable permission to "rr.sh"
bash: chmod +Permission File <|endoftext|>
<|endoftext|> english: Overwirte file '/path/to/your/file' with zeroes and remove, showing progress while execution.
bash: shred -v -n File -z -u File <|endoftext|>
<|endoftext|> english: Find files with 002 permission in entire file system
bash: find Path -type f -perm -Permission <|endoftext|>
<|endoftext|> english: create directory ".hiddendir"
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: search for a word in all the regular files in the current folder without traversing the sub directories .
bash: find Path -maxdepth Quantity -type f | xargs -I {} grep -F Regex {} <|endoftext|>
<|endoftext|> english: remove all the files in the current folder which have not been changed in the last 30*24 hours
bash: find Path -ctime +Timespan -type f -exec rm -f {} \; <|endoftext|>
<|endoftext|> english: Print the compressed size, uncompressed size, compression ratio, and uncompressed filename of "file.zip"
bash: gunzip -l Regex <|endoftext|>
<|endoftext|> english: Find the file with inode number 211028 in the current dirrectory tree and move it to newname.dir
bash: find Path -inum Quantity -exec mv {} File \; <|endoftext|>
<|endoftext|> english: find all the php/javascript files in current folder using regular expressions
bash: find Path -regex Regex <|endoftext|>
<|endoftext|> english: Saves listing of a current folder in 'OUTPUT' variable.
bash: ls -1 <|endoftext|>
<|endoftext|> english: Remove all regular non-hidden files modified more than 7 days ago and residing in the /tmp directory tree
bash: find Path -type f -name Regex -mtime +Timespan -print0 | xargs -0 -I {} rm -f {} <|endoftext|>
<|endoftext|> english: Compress in parallel regular files in the current directory tree that were last modified more than 7 days ago
bash: find Path -type f -mtime +Timespan | tee File | xargs -I {} -P Quantity compress {} <|endoftext|>
<|endoftext|> english: Find all files/directories in all paths expanded by the glob pattern *
bash: find Path <|endoftext|>
<|endoftext|> english: delete all the regular files in the temp folder which have not been modified in the last 24 hours + at the end gives bulk input to the rm command
bash: find Path -type f -mtime +Timespan -exec rm {} + <|endoftext|>
<|endoftext|> english: display all the regular/normal files in the /root folder which are bigger than 500MB
bash: find Path -type f -size +Size -printf "The %p file is greater than 500MB\n" <|endoftext|>
<|endoftext|> english: Find all *.py (case insensitive) files/directories under dir directory ignoring .git path
bash: find Path -not -path Regex -iname Regex <|endoftext|>
<|endoftext|> english: Make directory "alpha_real"
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: Search the current directory recursively for files with the exact permissions u=rwx,g=rx,o=rx
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: Compress every file in the current directory tree with gzip and keep file extensions the same
bash: find Path -type f -exec gzip -9 {} \; -exec mv File {} \; <|endoftext|>
<|endoftext|> english: Raise an error if there is a reference to a non-existent environment variable and exit the shell immediately if there is any error
bash: set -e -u <|endoftext|>
<|endoftext|> english: prune all the files in the current directory, only current directory (.) is the output
bash: find Path -prune <|endoftext|>
<|endoftext|> english: Print a top 20 histogram of characters used from standard input showing backslash escapes for non-displayables
bash: od -c -v -A none -w Size | sort -b | uniq -c | sort -r -n | head -n Quantity <|endoftext|>
<|endoftext|> english: Find all *.rb and *.py files/directories under current directory
bash: find Path -name Regex -or -name Regex <|endoftext|>
<|endoftext|> english: Find files/directories named 'filename' in the entire filesystem
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: display all the .sh scripts in the folder /usr
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all directories under current directory and set their permission to 755
bash: find -type d Path Path Path {} + <|endoftext|>
<|endoftext|> english: Split "foo.txt" into files with 1 line each and use a suffix length of 5
bash: split --suffix-length Quantity --lines Quantity File <|endoftext|>
<|endoftext|> english: Check if "/path/to/dir" is a nfs mount point
bash: mount -l | grep Regex | sed Program | grep Regex <|endoftext|>
<|endoftext|> english: Report file system inodes usage in human readable format
bash: df -i -h <|endoftext|>
<|endoftext|> english: Decompresses file.
bash: bzip2 -d File <|endoftext|>
<|endoftext|> english: Rename all files in current directory to lowerase, overwriting any existing files.
bash: rename Regex Regex File <|endoftext|>
<|endoftext|> english: display all the files in the folder /home which do not belong to the group test
bash: find Path -not -group Regex <|endoftext|>
<|endoftext|> english: find files in the current directory and sub-directories, that were accessed within last hour
bash: find Path -amin -Quantity <|endoftext|>
<|endoftext|> english: Replace all occurrence of "log_errors = Off" with "log_errors = On" in all 'php.ini' files in the current directory tree
bash: find Path -name Regex -exec sed -i Program {} \; <|endoftext|>
<|endoftext|> english: search for the file, filename.txt in the folder /home
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Search all .c files from the current directory tree for "keyword", ignoring the case
bash: find Path -name Regex -exec grep -i Regex {} \; <|endoftext|>
<|endoftext|> english: Find files and directories newer than CompareFile under current directory
bash: find Path -newer File -print <|endoftext|>
<|endoftext|> english: Delete all files/directories with node number $inum under current directory tree
bash: find Path -inum Quantity -exec rm {} \; <|endoftext|>
<|endoftext|> english: find all the files (under root file system /) that were updated in the last 24 hours
bash: find Path -mtime -Timespan <|endoftext|>
<|endoftext|> english: Find all directories under /path/to/base/dir and change their permission to 755
bash: find Path -type d -print0 | xargs -0 -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: Print content of 'whatever' file
bash: cat File | grep -E Regex <|endoftext|>
<|endoftext|> english: Find all files/directories named 'document' in the root filesystem partition
bash: find Path -xdev -name Regex -print <|endoftext|>
<|endoftext|> english: Find files owned by nonexistent groups
bash: find Path -nogroup -print <|endoftext|>
<|endoftext|> english: Add a number prefix followed by ')' to each line in "$string"
bash: echo Regex | nl -b a -s Regex <|endoftext|>
<|endoftext|> english: Search for the string 'git' in all the files under current directory tree without traversing into '.git' folder and excluding files that have 'git' in their names
bash: find Path -path Regex -prune -or -not -name Regex -print | grep Regex <|endoftext|>
<|endoftext|> english: Find regular files under '/somefolder' directory tree satisfying the options/conditions/operations provided in ${ARGS[@]} array with find command
bash: find Path -type f Path <|endoftext|>
<|endoftext|> english: Write "2-1.1.1" to standard output and to file "/sys/bus/usb/drivers/usb/unbind"
bash: echo Regex | tee File <|endoftext|>
<|endoftext|> english: Find all the files in file system which are changed in last 1 hour
bash: find Path -cmin -Quantity <|endoftext|>
<|endoftext|> english: Find all *.txt files under current directory and copy them to ./tmp
bash: find Path -type f -name Regex | sed Program | sed Program | xargs -I {} cp -v {} File <|endoftext|>
<|endoftext|> english: Sort tab separated file "file" using a version sort for field 6 and a numeric sort for field 7
bash: sort -t Regex -k Number -k Number File <|endoftext|>
<|endoftext|> english: find all the files that are not modified in the last 7 days
bash: find Path -daystart -mtime +Timespan <|endoftext|>
<|endoftext|> english: dsisplay all files inthe current folder
bash: find Path <|endoftext|>
<|endoftext|> english: Find *.conf files/directories only upto 1 level down under /etc directory and show a few lines of output from the end
bash: find Path -maxdepth Quantity -name Regex | tail <|endoftext|>
<|endoftext|> english: Find all aliencoders.[0-9]+ files/directories under /home/jassi/ directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Case-insensitive search all existing environment variables and their values for "shell".
bash: env | grep -i Regex <|endoftext|>
<|endoftext|> english: show all the files in the current folder excluding those from the directories whose name starts with "git"
bash: find Path -type d -name Regex -prune -or -type f -print <|endoftext|>
<|endoftext|> english: Continuously send "y" to all prompts of command "rm"
bash: yes | rm <|endoftext|>
<|endoftext|> english: Archive "src" to "dst" updating files existing in "dst"
bash: rsync -a -v File File <|endoftext|>
<|endoftext|> english: Split "$ORIGINAL_FILE" into files of at most "$MAX_LINES_PER_CHUNK" lines each with a prefix "$CHUNK_FILE_PREFIX"
bash: split -l Quantity File Regex <|endoftext|>
<|endoftext|> english: find all the links in the current folder and following it to the pointed path
bash: find -L Path -type l <|endoftext|>
<|endoftext|> english: Recursively removes all files and folders named '.svn' in a current folder.
bash: find Path -name Regex -exec rm -r -f {} \; <|endoftext|>
<|endoftext|> english: find files in /usr directory which are modified after February 1 of the current year
bash: find Path -newermt Regex <|endoftext|>
<|endoftext|> english: Creates file by template 'aws-sync-XXXXX' in a current folder and stores file name in a 'dir' variable.
bash: mktemp Regex <|endoftext|>
<|endoftext|> english: Archive "/path/to/application.ini" on host "source_host" to current directory.
bash: rsync -a -v -v File File <|endoftext|>
<|endoftext|> english: Search the current directory tree for files whose names are not "a.txt"
bash: find Path ! -name Regex -print <|endoftext|>
<|endoftext|> english: Split "/path/to/large/file" into files with at most 50000 lines and use prefix "/path/to/output/file/prefix"
bash: split --lines Quantity File Regex <|endoftext|>
<|endoftext|> english: Find all directories under /home/username/public_html/sites/default/files and set their permission to 770
bash: find Path -type d -exec chmod Permission {} + <|endoftext|>
<|endoftext|> english: Add group write permission to all files and directories in the current directory including hidden files and excluding ".."
bash: chmod Permission File File <|endoftext|>
<|endoftext|> english: Print mount point of the file system containing $filename.
bash: df File | awk Program <|endoftext|>
<|endoftext|> english: Remove all regular files from the current directory tree that were modified a day ago
bash: find Path -type f -mtime Timespan -exec rm {} + <|endoftext|>
<|endoftext|> english: display all directories in the entire file system
bash: find Path -type d -print <|endoftext|>
<|endoftext|> english: search for the file "foobar.txt" in the folder "/home/mywebsite"
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: Fix permissions for a group of files with given extension
bash: find Path -name Regex -type f -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Compare sorted files 'f1.txt' and 'f2.txt' and print in three columns strings unique for first file, second file, and common ones
bash: comm <( sort File ) <( sort File ) <|endoftext|>
<|endoftext|> english: Report file systems disk space usage pretty formatted.
bash: df -P -h | column -t <|endoftext|>
<|endoftext|> english: Find the 5 largest regular files in the Downloads folder of tecmint's home directory.
bash: find Path -type f -exec du -S -h {} + | sort -r -h | head -n Quantity <|endoftext|>
<|endoftext|> english: Append *.java files from the current directory tree to tar archive `myfile.tar'
bash: find Path -type f -name Regex | xargs -I {} tar -r -v -f File {} <|endoftext|>
<|endoftext|> english: SSH using parameters in $@ in master mode in the background without executing any commands and set the ControlPath to "$MASTERSOCK"
bash: ssh -o ControlPath="$MASTERSOCK" -M -N -f Regex <|endoftext|>
<|endoftext|> english: List all *.txt files/directories under current directory
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: display long listing of first 10 directories in the current folder
bash: find Path -type d -ls | head <|endoftext|>
<|endoftext|> english: Set the permissions of all directories inside the current directory tree to ug=rwx,o=
bash: find Path -type d -name Regex -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Find '*prefs copy' files under /mnt/zip and delete them with confirmation prompt ensuring white space safety
bash: find Path -name Regex -print0 | xargs -0 -p -I {} rm {} <|endoftext|>
<|endoftext|> english: find all the files that have been modified today(from the strart of the day)
bash: find Path -type f -daystart -mtime Timespan <|endoftext|>
<|endoftext|> english: Create an empty index.html, or update its timestamp if it already exists.
bash: touch File <|endoftext|>
<|endoftext|> english: Find all first occurrences of directories named '.texturedata' under '/path/to/look/in' directory tree
bash: find Path -type d -name Regex -prune <|endoftext|>
<|endoftext|> english: Find all regular files with the group read permission set in your home directory and below and output detailed information about each file.
bash: find Path -perm -Permission -type f -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: Remove the "123_" prefix from all filenames of .txt files in current directory.
bash: find Path -name Regex -exec rename Regex {} \; <|endoftext|>
<|endoftext|> english: Search for symlinks pointing to anywhere within /mnt/oldname/
bash: find Path -type l -lname Regex <|endoftext|>
<|endoftext|> english: Search the files of the current directory tree for string "searched-string"
bash: find Path | xargs -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: search for a word in all the fies in the current folder
bash: find Path -type f -exec grep Regex {} \; <|endoftext|>
<|endoftext|> english: find all the files in the entire file system whose size is between 50Mb to 100MB
bash: find Path -size +Size -size -Size <|endoftext|>
<|endoftext|> english: remove all the files with the name "Trash" in the folder /home
bash: find Path -name Regex -exec rm {} \; <|endoftext|>
<|endoftext|> english: Search the current directory tree for .rb files ignoring .vendor directories
bash: find Path -name Regex -prune -or -name Regex -print <|endoftext|>
<|endoftext|> english: Request that the master ssh connection "officefirewall" exits
bash: ssh -O Regex Regex <|endoftext|>
<|endoftext|> english: Search the current directory and its sub-directories for any file that has "bsd" somewhere in its name.
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: Print the contents of "filename"
bash: cat File <|endoftext|>
<|endoftext|> english: Create a symbolic link named "foo" to "/var/cache/apt/archives/bash_4.3-14ubuntu1_amd64.deb"
bash: ln -s File Regex <|endoftext|>
<|endoftext|> english: Convert "1199092913" to dotted decimal IPv4 address
bash: ping -c Quantity Regex | head -n Quantity | grep -E -o -w Regex <|endoftext|>
<|endoftext|> english: Find all files/directories under $TARGET_DIR directory tree matching the posix extended regular expression \".*/$now.*\" (where $now is a variable) and save the output in file $FILE_LIST
bash: find Path -regextype posix-extended -regex Regex -fprint File <|endoftext|>
<|endoftext|> english: Print the list of files and directories of the /etc directory
bash: find Path ! -name Regex <|endoftext|>
<|endoftext|> english: Recursively find all files in the directory "posns" and split each one into files of at most 10000 lines each
bash: find Path -type f -exec split -l Quantity {} \; <|endoftext|>
<|endoftext|> english: Change directory to the directory containing the "oracle" executable
bash: cd $( dirname $( which Regex ) ) <|endoftext|>
<|endoftext|> english: Print the list of all regular files residing in the current directory and below
bash: find Path -type f -print <|endoftext|>
<|endoftext|> english: Print 1 to 10 by separating them with colon (':')
bash: echo Regex Regex | tr -d Regex <|endoftext|>
<|endoftext|> english: Find all files/directories under whatever and ... directory and copy them to /var/tmp
bash: find Path Path | xargs -d Regex -I {} cp -t Directory {} <|endoftext|>
<|endoftext|> english: Compress from standard input with gzip
bash: gzip <|endoftext|>
<|endoftext|> english: Print '111 22 3\n4 555 66\n' by replacing the spaces with tabs and '\n' with newlines
bash: echo -e -n Regex | tr Regex Regex <|endoftext|>
<|endoftext|> english: Force delete all the regular/normal files in the current folder and do not search in the sub folders   (print0 is used to handle files which have newlines in their names or files with the name only as spaces )
bash: find Path -maxdepth Quantity -type f -print0 | xargs -I {} rm -f {} <|endoftext|>
<|endoftext|> english: Find all files/directories with '.txt' extension under '/home' directory tree that are greater than 100KB in size
bash: find Path -name Regex -size +Size <|endoftext|>
<|endoftext|> english: Report available space on the file system containing /tmp in kilobytes.
bash: df -k File | tail - Quantity | tr -s Regex | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: Ping the broadcast address "10.10.0.255"
bash: ping -b Regex <|endoftext|>
<|endoftext|> english: display all the java script files in the current folder
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: List all environment variables whose name or value contains current user's login name.
bash: env | sed -n Program <|endoftext|>
<|endoftext|> english: Save the short host name appended with ".mysqldb" in variable "DBPREFIX"
bash: hostname -s <|endoftext|>
<|endoftext|> english: Print content of /etc/passwd and /etc/group files
bash: cat File File <|endoftext|>
<|endoftext|> english: search for a shell script in the current folder and display the current folder path but search from the sub directories
bash: find Path -name Regex -execdir pwd \; <|endoftext|>
<|endoftext|> english: Print content of all files found regarding seach options '[whatever]'
bash: find Path -print0 | xargs -0 -I {} cat {} <|endoftext|>
<|endoftext|> english: Find all regular files in the current directory and search them for "example"
bash: find Path -maxdepth Quantity -type f | xargs -I {} grep -F Regex {} <|endoftext|>
<|endoftext|> english: Display all files in a folder
bash: find Path -print <|endoftext|>
<|endoftext|> english: Calculate the md5 sum of the output of "du -csxb /path" and compare it against the md5 sum saved in "file"
bash: du -c -s -x -b File | md5sum -c File <|endoftext|>
<|endoftext|> english: Recursively finds all files and prints all strings with 'text-to-find-here' from that files, preceding matched string with filename.
bash: find Path -type f -exec grep -H Regex {} \; <|endoftext|>
<|endoftext|> english: Calculate the md5sum of each ".py" file under "/path/to/dir/", sort the output, and calculate the md5sum of that
bash: find Path -type f -name Regex -exec md5sum {} + | awk Program | sort | md5sum <|endoftext|>
<|endoftext|> english: Create 6-letter named temporary directory in a folder path that is provided as the first positional parameter, and save the path to it in a variable 'tmp'
bash: mktemp -d $( dirname Regex ) <|endoftext|>
<|endoftext|> english: Find all aliencoders.[0-9]+ files under /home/jassi/ directory
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: Delete all regular files with inode number 314167125 under current directory tree
bash: find Path -type f -inum Quantity -delete <|endoftext|>
<|endoftext|> english: Archive "source" to "destination" via ssh on port "PORT_NUMBER"
bash: rsync -a -z -P -e ssh -p Regex File File <|endoftext|>
<|endoftext|> english: Find all files/directories in entire file system with 644 permission
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: delete all text files in the entire file system
bash: find Path -type f -name Regex -print | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: Find all $1 files/directories under current directory and enter into the parent directory of the first one found
bash: cd $( dirname $( find Path -name Regex | sed Program ) ) <|endoftext|>
<|endoftext|> english: Count the number of total files and folders under current directory tree
bash: find Path -print0 | tr -c -d Regex | wc -c <|endoftext|>
<|endoftext|> english: display a long listing of all regular files  in current folder which have been modified in the last 60 minutes
bash: find Path -mmin -Quantity -type f | xargs -I {} ls -l {} <|endoftext|>
<|endoftext|> english: Set permissions to 660 for all regular files in the current directory tree
bash: find Path -type f -exec chmod Permission {} + <|endoftext|>
<|endoftext|> english: Save the full path of command "f" to variable "full_f"
bash: which Regex <|endoftext|>
<|endoftext|> english: Find all files accessed on the 29th of September, 2008, starting from the current directory
bash: find Path -type f -newerat Regex ! -newerat Regex <|endoftext|>
<|endoftext|> english: Display name and value of 'variable' if it exists.
bash: env | grep Regex <|endoftext|>
<|endoftext|> english: Send ping requests to "yourhostname.local"
bash: ping Regex <|endoftext|>
<|endoftext|> english: Compress all files in the "$FILE" directory tree that were last modified 30 days ago
bash: find Path -type f -mtime Timespan -exec gzip {} \; <|endoftext|>
<|endoftext|> english: Display standard input as octal bytes
bash: cat | od -b <|endoftext|>
<|endoftext|> english: Changes group ownership of 'myprog' to 'groupb'.
bash: chgrp Regex File <|endoftext|>
<|endoftext|> english: Print full path of command "python2.7"
bash: which Regex <|endoftext|>
<|endoftext|> english: Find all Subscription.java files/directories under current directory and enter into the parent directory of the first one found
bash: cd $( find Path -name Regex | xargs -I {} dirname {} ) <|endoftext|>
<|endoftext|> english: Find all directories under /myfiles directory
bash: find Path -type d <|endoftext|>
<|endoftext|> english: Find the passwd file under root and two levels down
bash: find Path -maxdepth Quantity -name Regex <|endoftext|>
<|endoftext|> english: find all files with pattern` '*song*abc2009*.jpg' and replace "abc2009" with "def2010"
bash: find Path -name Regex | sed Program | sh <|endoftext|>
<|endoftext|> english: Check if current shell is running within a 'screen' process.
bash: pstree --show-parents -p Regex | head -n Quantity | sed Program | wc -l <|endoftext|>
<|endoftext|> english: display a list of all the files in the file system which do not belong to any group and search only in jfs and jfs2 file systems
bash: find Path -nogroup \( -fstype jfs -or -fstype jfs2 \) -ls <|endoftext|>
<|endoftext|> english: Find all *.sh files owned by user vivek
bash: find Path -user Regex -name Regex <|endoftext|>
<|endoftext|> english: Sort all directories under current directory placing the file with least modification time at first
bash: find Path -type d -printf '%T+ %p\n' | sort <|endoftext|>
<|endoftext|> english: List all .jpg files in the home directory tree in a fast way
bash: find Path -name Regex -exec ls {} + <|endoftext|>
<|endoftext|> english: Print file type of the executable file of command "foo"
bash: file $( which Regex ) <|endoftext|>
<|endoftext|> english: search for a word in all the php files in the current folder and display the matching lines.
bash: find Path -name Regex -type f -print0 | xargs -0 -n Quantity -I {} grep -H -n Regex {} <|endoftext|>
<|endoftext|> english: Create intermediate directories as required and directory project/{lib/ext,bin,src,doc/{html,info,pdf},demo/stat/a}
bash: mkdir -p Directory <|endoftext|>
<|endoftext|> english: Add a line number to every line in "long-file"
bash: nl -b a File <|endoftext|>
<|endoftext|> english: Print second field from semicolon-seprated line <line>.
bash: echo Regex | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: Find directory "your/dir" if it is empty
bash: find Path -prune -empty <|endoftext|>
<|endoftext|> english: Gets IP addresses of all active network interfaces on host.
bash: ifconfig | grep Regex | grep -v Regex | awk Program | sed Program <|endoftext|>
<|endoftext|> english: create a zip of log files in the current directory which have not been accessed in the last 3 days (-p is for parallel processing for a 4 cpu machine, -n is for maximum work units)
bash: find Path -name Regex -mtime +Timespan -print0 | xargs -0 -n Quantity -P Quantity -I {} bzip2 {} <|endoftext|>
<|endoftext|> english: Remove leading and trailing spaces or tabs from "$string"
bash: echo Regex | sed -e Program | sed -e Program <|endoftext|>
<|endoftext|> english: Recursively changes group ownership of everything within a current directory to 'repogroup'.
bash: chgrp -R Regex File <|endoftext|>
<|endoftext|> english: Print right aligned numbers from 11 to 24
bash: yes Regex | nl -b a | sed -n -e Program -e Program <|endoftext|>
<|endoftext|> english: Change the owner to "owner" and group to "nobody" of "public_html"
bash: chown Regex File <|endoftext|>
<|endoftext|> english: Calculate and show md5 sums for every files under current directory tree
bash: find Path -type f -exec md5sum File \; <|endoftext|>
<|endoftext|> english: display all the ip addresses in all the files that are present in /etc folder
bash: find Path -type f -exec cat {} \; | tr -c Regex Regex | grep Regex <|endoftext|>
<|endoftext|> english: search for the file "filename" in the entire file system
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Read a line from standard input into variable "REPLY" with prompt "> $line (Press Enter to continue)"
bash: read -p Regex <|endoftext|>
<|endoftext|> english: Print the path names of all regular .rb files prefixing them with string "Hello, "
bash: find Path -name Regex -type f | xargs -I {} echo Regex {} Regex <|endoftext|>
<|endoftext|> english: Find all directories under current directory excluding  directories (along with their contents) that start with a . (dot) in their names
bash: find Path -type d -and ! -name Regex -or ! -prune <|endoftext|>
<|endoftext|> english: Remove empty directories from the current directory tree
bash: find Path -depth -empty -type d -delete <|endoftext|>
<|endoftext|> english: Write output of "ls -a" to standard output and to "output.file"
bash: ls -a | tee File <|endoftext|>
<|endoftext|> english: find all the files in the current folder which belong to the user root.
bash: find Path -user Regex -perm -Permission -print <|endoftext|>
<|endoftext|> english: Takes path list from '.exportfiles.text' file, cuts off first two path segments and last one.
bash: cut -d Regex -f Number File | xargs -n Quantity -I {} dirname {} <|endoftext|>
<|endoftext|> english: find regular files under the current directory, whose name ends in .mbox and using awk run multiple system commands to rename each matched file, to the same name without .mbox at the end
bash: find Path -wholename Regex | awk Program <|endoftext|>
<|endoftext|> english: Print "new.txt" with line numbers prepended and line 2 or any line containing "2" deleted
bash: cat File | nl | sed Program <|endoftext|>
<|endoftext|> english: Save the current time formatted according to the format string "%Y-%m-%d %H:%M:%S" to the variable 'CDATE'
bash: date "+%Y-%m-%d %H:%M:%S" <|endoftext|>
<|endoftext|> english: find all the files in the current directory and change the permissions to 775.
bash: find Path -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Print the empty files/directories among empty1, empty2 and not_empty
bash: find Path Path Path -prune -empty <|endoftext|>
<|endoftext|> english: List all files in a current folder, separating names with semicolon
bash: ls -1 -b | tr Regex Regex <|endoftext|>
<|endoftext|> english: Print whether the sorted contents of "set1" and "set2" differ
bash: diff -q <( sort File ) <( sort File ) <|endoftext|>
<|endoftext|> english: Find all regular files whose names contain a case insensitive pattern composed of space separated positional arguments and display a long listing of them
bash: find Path -type f -iname Regex -ls <|endoftext|>
<|endoftext|> english: display all files in current folder excluding text files
bash: find Path ! -name Regex <|endoftext|>
<|endoftext|> english: Sets 'globstar' shell option.
bash: shopt -s globstar <|endoftext|>
<|endoftext|> english: Remove lines matching "kpt#" from "data.txt" and add left-justified line numbers
bash: grep -v Regex File | nl -n ln <|endoftext|>
<|endoftext|> english: Discard the first letter from every line in $line and calculate the md5 sum of the remaining
bash: echo Regex | cut -c Number | md5sum <|endoftext|>
<|endoftext|> english: Print lines that only unique ones in 'set1' and 'set2' files
bash: cat <( grep -v -x -F -f File Regex ) <( grep -v -x -F -f File Regex ) <|endoftext|>
<|endoftext|> english: Search for 'string_to_find' in all files under current directory
bash: find Path -type f | sed Program | xargs -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: search for files starting with memo and which belong to the user ann in the folder /work
bash: find Path -name Regex -user Regex -print <|endoftext|>
<|endoftext|> english: Print out ln commands for each file in /home/folder1/*.txt that can be run to create symlinks appending '_CUSTOM_TEXT.txt' in their names
bash: find Path -type f | awk -F Regex Program <|endoftext|>
<|endoftext|> english: Find all files with the name "MyProgram.c" in the current directory and its sub-directories while ignoring the case of the file name.
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: List subdirectories in the current directory
bash: find Path -maxdepth Quantity -type d -print0 | xargs -0 -I {} ls -d {} <|endoftext|>
<|endoftext|> english: List all files in the current directory tree that were modified less than 60 minutes ago
bash: find Path -mmin -Quantity | xargs -I {} ls -l {} <|endoftext|>
<|endoftext|> english: find all the files that have been modified in the last 2 days
bash: find Path -type f -daystart -mtime -Timespan <|endoftext|>
<|endoftext|> english: Create new crontab set including $job and only jobs from current crontab that don`t contain $command
bash: cat <( grep -F -i -v Regex <( crontab -l ) ) <( echo Regex ) | crontab File <|endoftext|>
<|endoftext|> english: Prints calendar of February, 1900.
bash: cal DateTime DateTime <|endoftext|>
<|endoftext|> english: Set the 'xtrace' shell option
bash: set -x <|endoftext|>
<|endoftext|> english: delete all empty files in the current directory ( empty file = size 0 bytes )
bash: find Path -empty -exec rm {} \; <|endoftext|>
<|endoftext|> english: Changes group ownership of '/var/run/fcgiwrap.socket' to 'forge'.
bash: chgrp Regex File <|endoftext|>
<|endoftext|> english: Lists all files in a current folder, separating names with comma.
bash: ls -m <|endoftext|>
<|endoftext|> english: Set permission of "file" to read only for the owner
bash: chmod Permission File <|endoftext|>
<|endoftext|> english: List all files in the current directory tree larger than 1000 kb
bash: find Path -size +Size <|endoftext|>
<|endoftext|> english: search for all the files in the current folder which are bigger than 10KB and display them biggest file
bash: find Path -size +Size -exec ls -l -s {} + | sort -n | tail - Quantity <|endoftext|>
<|endoftext|> english: Compare files in "/tmp/dir1" and "/tmp/dir2", treat absent files as empty and all files as text, and print 3 lines of unified context
bash: diff -N -a -u Quantity File File <|endoftext|>
<|endoftext|> english: display the count of all normal/regular files in current directory
bash: find Path -type f | wc -l <|endoftext|>
<|endoftext|> english: search for the pattern in all the regular/normal files in the entire file system
bash: find Path -type f -print0 | xargs -0 -I {} grep -i Regex {} <|endoftext|>
<|endoftext|> english: Get the path of running Apache
bash: ps -e -f | grep Regex <|endoftext|>
<|endoftext|> english: find all the links in somedirectory and print them in a single line (to avoid the problem of files having newline in their names)
bash: find Path -type l -print0 <|endoftext|>
<|endoftext|> english: Find all files in and below the home directory that have been modified in the last 90 minutes
bash: find Path -mmin -Quantity <|endoftext|>
<|endoftext|> english: Save a space separated list of process ids of currently running jobs to variable 'bgxjobs'
bash: jobs -p -r | tr Regex Regex <|endoftext|>
<|endoftext|> english: Recursively find the latest modified file in the current directory and print the modification time and filename
bash: find Path -type f -printf '%T@ %p\n' | sort -n | tail - Quantity | cut -f Number -d Regex | sed Program | xargs -I {} ls -l {} <|endoftext|>
<|endoftext|> english: Remove all vmware-*.log files under current directory
bash: find Path -name Regex | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: List all .svn files/directories under current directory
bash: find Path -name Regex -exec ls {} \; <|endoftext|>
<|endoftext|> english: Find all the files whose permissions are 777 under current directory
bash: find Path -type f -perm Permission -print <|endoftext|>
<|endoftext|> english: Search the .cs files of the current directory tree for string "content pattern"
bash: find Path -type f -iname Regex -print0 | xargs -0 -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: Print position number of day '9' in fourth line of calendar output for September, 2009.
bash: cal DateTime DateTime | awk Program <|endoftext|>
<|endoftext|> english: find all the files in current directory of size smaller than 10KB.
bash: find Path -size -Size <|endoftext|>
<|endoftext|> english: display all the files in the current folder which have the permissions 777 and which have been modified in the last 24 hours.
bash: find Path -perm Permission -and -mtime Timespan -and -print <|endoftext|>
<|endoftext|> english: Find all files/directories named 'top' in the entire filesystem
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Removes all empty folders that ends with any-cased '*.bak' under '/Users/' path.
bash: find Path -type d -iname Regex -print0 | xargs -0 -I {} rmdir {} <|endoftext|>
<|endoftext|> english: Find all files matching pattern '.#*' in the current directory tree
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: search for the files with the name "temp" and which have not been accessed in the last 7*24 hours in the /usr folder
bash: find Path -name Regex -atime +Timespan -print <|endoftext|>
<|endoftext|> english: Finds shell options like 'checkjobs' with their state.
bash: shopt -p | grep Regex <|endoftext|>
<|endoftext|> english: check find version
bash: find Path --version <|endoftext|>
<|endoftext|> english: Finds pattern text ignoring letter case in all .js files, prints matched strings and name of file with that strings.
bash: find Path -name Regex -exec grep -i Regex {} \; -print <|endoftext|>
<|endoftext|> english: Find all empty directories under current directory
bash: find Path -type d -empty <|endoftext|>
<|endoftext|> english: Print the names of all hidden regular files from the current directory
bash: find Path -maxdepth Quantity -type f -name Regex -exec basename {} \; <|endoftext|>
<|endoftext|> english: Count the number of regular files in the current directory tree
bash: find Path -type f | wc -l <|endoftext|>
<|endoftext|> english: Md5sum the last 5 files in /directory1/directory2/
bash: find Path -maxdepth Quantity -type f | sort | tail -n Quantity | xargs -I {} md5sum {} <|endoftext|>
<|endoftext|> english: Find all files changed on the 29th of September, 2008, starting from the current directory
bash: find Path -type f -newerct Regex ! -newerct Regex <|endoftext|>
<|endoftext|> english: find all text files in the current directory
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: Set the read bit for "other" on all *rc.conf files in the current directory tree
bash: find Path -name Regex -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Find files which are more than 2 days old under  ${userdir}/${i}/incoming directory
bash: find Path -mtime +Timespan -type f -ls <|endoftext|>
<|endoftext|> english: Print the full path of a 'file.txt' file in the current folder.
bash: ls $( pwd ) <|endoftext|>
<|endoftext|> english: Find all regular files under $DIR/tmp/daily/, sort them in reverse numerical order and copy the first two files to $DIR/tmp/weekly/
bash: find Path -type f -printf "%p\n" | sort -r -n | head -n Quantity | xargs -I {} cp {} File <|endoftext|>
<|endoftext|> english: Search the current directory tree for files whose names begin with "my" and end with "p" followed by any character
bash: find Path -regex Regex <|endoftext|>
<|endoftext|> english: Replace spaces in directory names with underscores for all directories in the current directory tree
bash: find Path -name Regex -type d | rename Regex <|endoftext|>
<|endoftext|> english: Recursively change the owner and group of "/opt/antoniod/" to "antoniod"
bash: chown -R Regex File <|endoftext|>
<|endoftext|> english: Sort and display the file name and creation month of top 11 files in the entire file system (Sort in the order of month )
bash: find Path -type f -printf "\n%Ab %p" | head -n Quantity | sort -k Number <|endoftext|>
<|endoftext|> english: Recursively change the ownership of all directories in the current directory excluding "foo" to "Camsoft"
bash: ls -d File | grep -v Regex | xargs -d Regex -I {} chown -R Regex {} <|endoftext|>
<|endoftext|> english: Finds the folder where temporary files would be written to.
bash: dirname $( mktemp -u -t Regex ) <|endoftext|>
<|endoftext|> english: Tmux configuration to enable mouse support within tmux
bash: set Regex Regex Regex <|endoftext|>
<|endoftext|> english: Find all files/directories with 755 permission under current directory tree
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: Recursively finds all '*.png' files older than 50 days in a current folder and removes them.
bash: find Path -name Regex -mtime +Timespan -exec rm {} \; <|endoftext|>
<|endoftext|> english: Search the current directory tree for regular files modified within the past 24 hours whose names do not end with ".DS_Store"
bash: find Path -mtime -Timespan ! -name Regex -type f -printf '%f\n' <|endoftext|>
<|endoftext|> english: Find all directories in the current directory tree with "music_files" in their names
bash: find Path -type d -iname Regex <|endoftext|>
<|endoftext|> english: Print the commands that would execute "myfile" on all .ogv files from the current directory tree
bash: find Path -name Regex -exec echo Regex {} \; <|endoftext|>
<|endoftext|> english: Set variable "finalName" to the second-to-last slash-separated path component of variable "path"
bash: basename -- $( dirname -- Regex ) <|endoftext|>
<|endoftext|> english: Find empty files and directories
bash: find Path -empty <|endoftext|>
<|endoftext|> english: Format output of 'file' content to columns with wide not less than 80 pixels
bash: cat File | column -c Quantity <|endoftext|>
<|endoftext|> english: get md5sum of an iso file without displaying the filename, save value to 'md5' variable
bash: $( md5sum File | awk Program ) <|endoftext|>
<|endoftext|> english: Save the FQDN host name of the system in variable "fhost"
bash: hostname -f <|endoftext|>
<|endoftext|> english: Prints long listing of file 'file.ext'.
bash: ls -a -l File <|endoftext|>
<|endoftext|> english: find all the text files in the current directory which have been modified in the last 4 days and not today and copy them to another folder
bash: find Path -name Regex -type f -daystart -mtime -Timespan -mtime +Timespan | xargs -i -I {} cp {} File {} <|endoftext|>
<|endoftext|> english: display all files in the directory "dir" which have been changed in the last 60 minutes
bash: find Path -cmin -Quantity <|endoftext|>
<|endoftext|> english: Count the number of .java files in all folders rooted in the current folder
bash: find Path -name Regex | wc -l <|endoftext|>
<|endoftext|> english: Find all *~ files/directories under dir and  print an rm command for each of them for deletion
bash: find Path -name Regex | xargs -I {} echo Regex {} <|endoftext|>
<|endoftext|> english: list all the drectories present in the current directory and do not search in the sub directories.
bash: find Path -maxdepth Quantity -type d <|endoftext|>
<|endoftext|> english: Delete all hidden files under $some_directory
bash: find Path -type f -name Regex -delete <|endoftext|>
<|endoftext|> english: search for the word "nutshell" or "Nutshell" in all the files in the folder book
bash: find Path -print | xargs -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: search for *.log files starting from /
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: search for the file "abc" in the current folder or display all the directories
bash: find Path -name Regex -or -type d <|endoftext|>
<|endoftext|> english: Find all the regular files under current directory tree that have not been modified in the last 31 days and delete them
bash: find Path -type f -mtime +Timespan -print0 | xargs -0 -r -I {} rm -f {} <|endoftext|>
<|endoftext|> english: Make directories a, b, c, ..., z under path2 as needed.
bash: mkdir -p Directory <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory tree excluding hidden files/directories
bash: find Path -not -path Regex <|endoftext|>
<|endoftext|> english: Search the current directory tree for executable files and searchable directories
bash: find Path <|endoftext|>
<|endoftext|> english: Prints path location of $BASH_SOURCE file.
bash: echo Regex Regex $( dirname Regex ) <|endoftext|>
<|endoftext|> english: List path/filename of all PHP files under current directory whose file type description or path/name contains "CRLF"
bash: find Path -type f -iname Regex -exec file {} + | grep Regex <|endoftext|>
<|endoftext|> english: Create intermediate directoriy path2 as required and directories a..z
bash: mkdir -p Directory <|endoftext|>
<|endoftext|> english: Save $line line in history
bash: history -s Quantity <|endoftext|>
<|endoftext|> english: Delete all files not owned by valid users
bash: find Path -nouser | xargs -0 -I {} rm {} <|endoftext|>
<|endoftext|> english: Copy directory hierarchy from the current working directory to "/path/to/backup/"
bash: find Path -type d -exec mkdir -p -- Directory \; <|endoftext|>
<|endoftext|> english: Replace the occurrences of "HOGE" with "MOGA" once per each line of the files from the current directory tree
bash: find Path -type f -print0 | xargs -0 -I {} sed -i -e Program {} <|endoftext|>
<|endoftext|> english: Search the home directory tree for .tar.gz files newer than file "filename"
bash: find Path -name Regex -newer File <|endoftext|>
<|endoftext|> english: Show long listing of current directory by deleting all digits from the output
bash: ls -l -t | tr -d Regex <|endoftext|>
<|endoftext|> english: Finds $a pattern in a $b string, and returns exit code 0 if found, suppressing any visible output.
bash: echo Regex | grep -q Regex <|endoftext|>
<|endoftext|> english: Remount "/dev/sda7" partition as executable
bash: mount -o remount -o exec Regex <|endoftext|>
<|endoftext|> english: Exclude directory from find . command
bash: find Path -not \( -path Regex -prune \) -name Regex <|endoftext|>
<|endoftext|> english: Find all mysong.ogg files/directories under your home directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: remove all the core files in the current directory
bash: find Path -name Regex -exec rm {} \; <|endoftext|>
<|endoftext|> english: Set permissions to ug=rw,o= for files under the $d directory tree
bash: find Path -type f -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Find all files/directories that are owned by user 'dave' under current user's home directory tree
bash: find Path -user Regex -print <|endoftext|>
<|endoftext|> english: Create an empty file (or update timestamp of file) specified by variable "correctFilePathAndName"
bash: touch File <|endoftext|>
<|endoftext|> english: find all files in the current folder which have not been accessed in the last 7 days or which are bigger than 20KB
bash: find Path -atime +Timespan -or -size +Size -print <|endoftext|>
<|endoftext|> english: Find all python files (.py files) in $topdir directory tree and search for 'Makefile' in all these folders and display all distinct folders having 'Makefile'
bash: find Path -name Regex -printf '%h\0' | xargs -0 -I {} find {} -mindepth Quantity -maxdepth Quantity -name Regex -printf '%h\n' | sort -u <|endoftext|>
<|endoftext|> english: Remount "/dev/shm" with a maximum size of "40G"
bash: mount -o remount,size=40G Regex <|endoftext|>
<|endoftext|> english: List all regular files under the current directory and below it
bash: find Path -type f | xargs -I {} ls -l {} <|endoftext|>
<|endoftext|> english: Find all files named 'Makefile' in the /usr/ports directory tree and count the number of lines in them matching regular expression '^MASTER_SITE_SUBDIR.*\.\./.*authors'
bash: find Path -name Regex -exec grep Regex {} + | wc -l <|endoftext|>
<|endoftext|> english: Mount the "vboxsf" filesystem "D:\share_folder_vm" on "\share_folder"
bash: mount -t vboxsf Regex Regex <|endoftext|>
<|endoftext|> english: Search for 'text' in all regular files under current directory tree
bash: find Path -type f -exec grep Regex {} File \; <|endoftext|>
<|endoftext|> english: Find StringBuffer in all *.java files
bash: find Path -type f -name Regex -exec grep -l Regex {} \; <|endoftext|>
<|endoftext|> english: find all the files in the entire file system which belong to the user "roger"
bash: find Path -user Regex -print <|endoftext|>
<|endoftext|> english: Search the current directory recursively for *.txt files with lines that match regular expression "^string"
bash: find Path -name Regex -exec grep -E -l Regex {} \; <|endoftext|>
<|endoftext|> english: List all files/directories under current directory using comma (,) as the delimiter for different fields in the output
bash: find Path -ls | awk Program <|endoftext|>
<|endoftext|> english: Find all files under directory tree /path/to/dir whose permissions are not 644
bash: find Path ! -perm Permission <|endoftext|>
<|endoftext|> english: Print current shell using process ID
bash: ps -e -f | grep Regex | grep -v Regex <|endoftext|>
<|endoftext|> english: Find all regular files under current directory tree that were accessed $FTIME days ago
bash: find Path -type f -atime Timespan <|endoftext|>
<|endoftext|> english: Find all files/directories under /path/to/dir/* paths and print the timestamp in YmdHMS format along with their paths and object of symlinks
bash: find Path -printf "%TY%Tm%Td%TH%TM%TS|%p|%l\n" <|endoftext|>
<|endoftext|> english: Places current job to background.
bash: bg Regex Regex Regex Regex Regex Regex Regex Regex <|endoftext|>
<|endoftext|> english: Find files in the current directory tree whose names are of the form "cxx_data.txt" where xx is a number from 40 to 70
bash: find Path -regextype posix-egrep -regex Regex <|endoftext|>
<|endoftext|> english: Get the base filename from variable 'path', similar to using the basename command.
bash: echo Regex | rev | cut -d Regex -f Number | rev <|endoftext|>
<|endoftext|> english: Change permissions of all directories in the ~/dir_data directory tree in accordance with mode `a+xr,u+w'
bash: find Path -type d -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Finds strings like "texthere" recursively in all files of a current folder regarding all symlinks.
bash: grep -R Regex File <|endoftext|>
<|endoftext|> english: Find all regular files whose names contain "@" in directory tree ~/$folder
bash: find Path -name Regex -type f <|endoftext|>
<|endoftext|> english: Find all *.p[lm] files under /users/tom directory that matches both the regex '->get(' and '#hyphenate' in their contents
bash: find Path -name Regex -exec grep -l -- Regex {} + | xargs -I {} grep -l Regex {} <|endoftext|>
<|endoftext|> english: find all the files in the entire file system whose size is exactly 15MB
bash: find Path -size Size <|endoftext|>
<|endoftext|> english: Search the ~/Books directory recursively for files named "Waldo"
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: display list of all the files in the current directory (print0 handles file names with newlines or spaces)
bash: find Path -print0 | xargs -0 -I {} ls {} <|endoftext|>
<|endoftext|> english: Print comma separated gaps in file "file" that contains new line separated ordered numbers
bash: seq $( tail - Quantity File ) | diff File File | grep -P -o Regex <|endoftext|>
<|endoftext|> english: Find all files/directories excluding paths that match '.git' or '.gitignore'
bash: find Path -print0 | grep -v -E -z -Z Regex <|endoftext|>
<|endoftext|> english: Split "infile" into 2 files of about equal size
bash: split -n Quantity File <|endoftext|>
<|endoftext|> english: display all regular files in the folder image-folder
bash: find Path -type f <|endoftext|>
<|endoftext|> english: Print files created/modified in the last day
bash: find Path -newermt $( date +%Y-%m-%d -d Regex ) -type f -print <|endoftext|>
<|endoftext|> english: Take a file path from standard input and remove it.
bash: xargs -i -I {} rm {} {} <|endoftext|>
<|endoftext|> english: find all the files in current folder which end with a speicifc regular expression and display their count
bash: find Path -type f -regex Regex | wc -l <|endoftext|>
<|endoftext|> english: find all the files in the current folder which have been accessed in the last 24 hours
bash: find Path -type f -atime Timespan <|endoftext|>
<|endoftext|> english: find files which full path name like '*f' at current directory and print
bash: find Path -path Regex <|endoftext|>
<|endoftext|> english: Find all files called "INPUT.txt" in the current directory tree and remove lines starting with # in them, saving backup copies as INPUT.txt.bak
bash: find Path -type f -name Regex -print0 | xargs -0 -I {} sed -i Regex Program {} <|endoftext|>
<|endoftext|> english: Replace "," with "\r\n" in "a,b"
bash: echo Regex | sed Program <|endoftext|>
<|endoftext|> english: Find all files named "filename"
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Counts number of occurences of all ip addresses in 'ip_addresses' file, and prints all addresses with number of occurences in a descending order.
bash: cat File | sort | uniq -c | sort -n -r | awk Program <|endoftext|>
<|endoftext|> english: sort and display top 11 files along with the last access date for all the files in the file system ( sort based on the timestamp )
bash: find Path -type f -printf "\n%AD %AT %p" | head -n Quantity | sort -k Number -k Number -k Number <|endoftext|>
<|endoftext|> english: display a long listing of all the files in the current folder which have been modified in the last 24 hours
bash: find Path -mtime -Timespan -ls <|endoftext|>
<|endoftext|> english: Lists all subdirectories in the current directory with the trailing slash removed
bash: ls -d -1 File | tr -d Regex <|endoftext|>
<|endoftext|> english: Print the names and sizes of regular files residing in the "dir" directory tree
bash: find Path -type f -printf "f %s %p\n" <|endoftext|>
<|endoftext|> english: Print the given file name's extensions.
bash: echo Regex | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: Create intermediate directories "full", "path" as required and directory "to"
bash: mkdir -p $( dirname Regex ) <|endoftext|>
<|endoftext|> english: Returns 0 if user $1 belongs to group $2.
bash: groups Regex | grep -q Regex <|endoftext|>
<|endoftext|> english: Find all directories with space in their names under current directory and rename them by replacing all spaces with _
bash: find Path -name Regex -type d | rename Regex <|endoftext|>
<|endoftext|> english: Delete all ".DS_Store" files/directories under test directory
bash: find Path -name Regex -delete <|endoftext|>
<|endoftext|> english: Returns exit code 1.
bash: false <|endoftext|>
<|endoftext|> english: Truncate all non-empty regular files under the current directory
bash: find Path -type f -maxdepth Quantity -not -empty -print0 | xargs -0 -i -I {} cp File {} {} <|endoftext|>
<|endoftext|> english: Find all files in /dir1 and print only the filenames (not paths)
bash: find Path -type f -exec basename {} \; <|endoftext|>
<|endoftext|> english: find all the files in the current folder that have not been modified in the last 24*3 hours
bash: find Path -mtime +Timespan <|endoftext|>
<|endoftext|> english: Find all files and directories that do not match the pattern given as the $controlchars variable
bash: find Path ! -name Regex <|endoftext|>
<|endoftext|> english: Recursively removes all files like '4' under folder './a' and removes folders with such files if they become empty.
bash: find Path -type f -name Regex -delete -printf "%h\0" | xargs -0 -r -I {} rmdir {} <|endoftext|>
<|endoftext|> english: Find files on the system created during the last 50 days
bash: find Path -ctime -Timespan <|endoftext|>
<|endoftext|> english: find all the files which start with the name "Metallica" in the folder "/mp3-collection" and which are bigger than 10MB
bash: find Path -name Regex -and -size +Size <|endoftext|>
<|endoftext|> english: List all environment variables whose name contains 'ipo', showing only the names of the variables and not their values.
bash: env | grep Regex | awk Program <|endoftext|>
<|endoftext|> english: Save number of processors in system to 'NP' variable
bash: cat File | grep Regex | wc -l <|endoftext|>
<|endoftext|> english: change the permissions of all regular/normal files in the file system
bash: chmod Permission $( find Path -type f -print ) <|endoftext|>
<|endoftext|> english: Numerically sort file "file.dat" by the second word of each line and output from greatest value to least value
bash: sort -n -k File File | tac <|endoftext|>
<|endoftext|> english: Read a line from standard input in an interactive shell with prompt in variable "myprompt" interpreted as PS1 is interpreted
bash: read -e -p Regex <|endoftext|>
<|endoftext|> english: Create a hard link named "my-hard-link" to "myfile.txt"
bash: ln File Regex <|endoftext|>
<|endoftext|> english: Print the sorted uniqe list of folders in compressed archive nginx-1.0.0.tar.gz
bash: tar -t -f File | xargs -I {} dirname {} | sort | uniq <|endoftext|>
<|endoftext|> english: Find all files in the current directory recursively with "linkin park" in their names and copy them to /Users/tommye/Desktop/LP, preserving path hierarchy
bash: find Path -type f -iname Regex | cpio -p -v -d -m -u Regex <|endoftext|>
<|endoftext|> english: Find all PHP files under current directory that contain only one non-blank line
bash: find Path -type f -name Regex -exec grep -H -c -m Quantity Regex {} + | sed -n Program <|endoftext|>
<|endoftext|> english: display all the files in the current folder excluding those that are present in the path "./etc"
bash: find Path ! -wholename Regex <|endoftext|>
<|endoftext|> english: Find all files with the extension jpg regardless of case
bash: find Path -type f -iname Regex -print0 <|endoftext|>
<|endoftext|> english: Fetch 'stackoverflow.com' domain IP addresses from dig DNS lookup
bash: dig Regex | grep -e Regex | tr -s Regex Regex | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: find all the file which name end with c or h and content contain 'thing'
bash: find Path -name Regex | xargs -I {} grep -l Regex {} <|endoftext|>
<|endoftext|> english: Print the first word followed by the rest of the line formatted to fit in 100 characters for every line in "input"
bash: sed Program File | fold -w Quantity <|endoftext|>
<|endoftext|> english: display all the tex files in the current folder
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Use "$BYTES" amount of RAM with no output
bash: yes | tr Regex Regex | head -c Quantity | grep Regex <|endoftext|>
<|endoftext|> english: find all the file which name (name can contains space) end with c or h and content contain 'thing'
bash: find Path -name Regex -print0 | xargs -r -0 -I {} grep -l Regex {} <|endoftext|>
<|endoftext|> english: Search /usr/bin for regular files that were last accessed more than 100 days ago
bash: find Path -type f -atime +Timespan <|endoftext|>
<|endoftext|> english: Remove all regular files under $DIR directory tree that were accessed more than 5 days ago
bash: find Path -type f -atime +Timespan -exec rm {} \; <|endoftext|>
<|endoftext|> english: List all files except for those in directory SCCS
bash: find Path -print -or -name Regex -prune <|endoftext|>
<|endoftext|> english: Find all file which have more the 2 hard link
bash: find Path -type f -links +Quantity -exec ls -l -r -t {} \; <|endoftext|>
<|endoftext|> english: Count files in the current path by modification month
bash: find Path -maxdepth Quantity -type f -printf '%TY-%Tm\n' | sort | uniq -c <|endoftext|>
<|endoftext|> english: list all active jobs and its IDs
bash: jobs -l <|endoftext|>
<|endoftext|> english: Find all files/directories that contain 'target' (case insensitive) in their names under current directory no-recursively
bash: find Path -maxdepth Quantity -iname Regex <|endoftext|>
<|endoftext|> english: Delete all __temp__* files/directories under current directory tree
bash: find Path -name Regex -exec rm -r -f {} \; <|endoftext|>
<|endoftext|> english: Find all regular files that reside in the current directory tree and were last modified more than 4 days ago
bash: find Path -type f -mtime +Timespan <|endoftext|>
<|endoftext|> english: Find all files in the current directory tree whose pathnames match pattern '*/1/lang/en.css'
bash: find Path -path Regex -print <|endoftext|>
<|endoftext|> english: Find and delete all hard links in the /home directory to file1
bash: find Path -xdev -samefile Regex -exec rm {} + <|endoftext|>
<|endoftext|> english: Find all *.pdf.marker files under ${INPUT_LOCATION} and move them to ${OUTPUT_LOCATION} also move any *.pdf files with the same name under current directory to ${OUTPUT_LOCATION}
bash: find Path -name Regex | xargs -I {} mv {} $( basename {} Regex ) File <|endoftext|>
<|endoftext|> english: Find all files and directories in the current directory recursively that contain spaces in their names
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: list the regular files in your home directory that were modified yesterday
bash: find Path -daystart -type f -mtime Timespan <|endoftext|>
<|endoftext|> english: change the ownership of all the files in the file system from edwarda to earnestc
bash: find Path -user Regex -exec chown Regex {} \; <|endoftext|>
<|endoftext|> english: Find all files under current directory whose status was changed less than 3 days ago, sort them and show last 5 lines of output with only their paths
bash: find Path -type f -ctime -Timespan -printf "%C@ %p\n" | sort | tail -n Quantity | sed Program <|endoftext|>
<|endoftext|> english: Count the number of files named 'job.history' under '/data/SpoolIn' directory tree that match 'FAIL' in their contents
bash: find Path -name Regex -exec grep -l Regex {} + | wc -l <|endoftext|>
<|endoftext|> english: create a symbolic link named "$ORACLE_HOME/include" to file "/usr/include/oracle/11.2/client"
bash: ln -s File Regex <|endoftext|>
<|endoftext|> english: Find all executable symlinks or upvoter-* files under maximum 1 level down the {} directory
bash: find {} -name Regex -type f -or -type l -maxdepth Quantity -perm +Permission <|endoftext|>
<|endoftext|> english: Search current directory for any directory named "config" and go to first match found.
bash: cd $( find Path -name Regex -type d | sed Program ) <|endoftext|>
<|endoftext|> english: search for the regular/normal file "myfile" in the current folder excluding search in the paths of "work" and "home" sub directories
bash: find Path \( -name Regex -or -name Regex \) -prune -or -name Regex -type f -print <|endoftext|>
<|endoftext|> english: show all regular/normal the files in the current folder whose size is bigger than 0 bytes excluding everything
bash: find Path -prune -type f -size +Size -print <|endoftext|>
<|endoftext|> english: Find all directories under /path/to/base/cache, /path/to/base/tmp, /path/to/base/logs  and change their permission to 755
bash: find Path Path Path -type d -exec chmod Permission {} + <|endoftext|>
<|endoftext|> english: Print equal lines in compressed files "number.txt" and "xxx.txt"
bash: comm -1 -2 <( zcat Regex ) <( zcat Regex ) <|endoftext|>
<|endoftext|> english: Set the modification timestamp of file 'filename' to specified date/time.
bash: touch -m --date Regex File <|endoftext|>
<|endoftext|> english: Find all *.m4a files/directories under /home/family/Music directory
bash: find Path -name Regex -print0 <|endoftext|>
<|endoftext|> english: Print standard input to standard output line by line, discarding any adjascent duplicate lines.
bash: uniq <|endoftext|>
<|endoftext|> english: Suffix all files and folders in the current directory with "_SUF"
bash: ls | xargs -I {} mv {} File <|endoftext|>
<|endoftext|> english: search for all empty directories in the folder /home
bash: find Path -type d -empty <|endoftext|>
<|endoftext|> english: Find all directories under $root and replace all newlines with : (colon) in the output
bash: find Path -type d | tr Regex Regex <|endoftext|>
<|endoftext|> english: Move all regular files under current directory to ./newdir
bash: find Path -type f -print | xargs -l Quantity -I {} mv -f {} File <|endoftext|>
<|endoftext|> english: Finds all php processes running in system.
bash: pstree | grep Regex <|endoftext|>
<|endoftext|> english: Count the number of files/directories named file1 under current directory
bash: find Path -name Regex | wc -l <|endoftext|>
<|endoftext|> english: Print a summary of the command-line usage of find
bash: find Path --help <|endoftext|>
<|endoftext|> english: Recursively copy /path/foo on host "prod" to local directory "/home/user/Desktop", connecting as ssh username corresponding to local username.
bash: scp -r File File <|endoftext|>
<|endoftext|> english: Search for the string 'magic' in all regular files under current directory tree and display long listing of them
bash: find Path -type f -exec grep Regex {} \; -ls <|endoftext|>
<|endoftext|> english: Find all files under /path/to/input/ that match the case insensitive string literal 'spammer@spammy.com' in their contents
bash: find Path -type f -exec grep -q -i -F Regex File \; -print <|endoftext|>
<|endoftext|> english: Find all files on the system that are world writable
bash: find Path -wholename Regex -prune -or -type f -perm -Permission -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: find all regular files exclude .o and exclude *.swp and output line number of soc_attach if it has
bash: find Path \( ! -path Regex \) -and -type f -and \( ! -name Regex \) -and \( ! -name Regex \) | xargs -I {} grep -n Regex {} <|endoftext|>
<|endoftext|> english: Create a symbolic link named "wh" to "$wh"
bash: ln -s File Regex <|endoftext|>
<|endoftext|> english: Recursively find strings in all files under current directory, that matching with comma-separated patterns list in file 'searches-txt'
bash: cat File | xargs -I {} -d Regex -n Quantity grep -r {} <|endoftext|>
<|endoftext|> english: Find all .gif and .jpg files in the /var/www directory tree
bash: find Path -name Regex -or -name Regex <|endoftext|>
<|endoftext|> english: Display all symlinks and their targets in the current directory tree
bash: find -P Path -type l -exec echo -n Regex \; -exec readlink {} \; <|endoftext|>
<|endoftext|> english: Run 'join' on file1 and file2, using a literal tab character as field separator.
bash: join -t Regex File File <|endoftext|>
<|endoftext|> english: Remove all files with '.js' extension from the 'js' directory tree
bash: find Path -type f -name Regex | xargs -I {} rm -f {} <|endoftext|>
<|endoftext|> english: Search for the regex '->get(\|#hyphenate' in all files with '.pl' or '.pm' extension under '/users/tom' directory tree and only show the filenames
bash: find Path -name Regex -exec grep -l -- Regex {} + <|endoftext|>
<|endoftext|> english: Delete all files in the "${S}/bundled-libs" folder except "libbass.so"
bash: find Path ! -name Regex -delete <|endoftext|>
<|endoftext|> english: find all the files older than 30 days
bash: find Path -mtime +Timespan -print <|endoftext|>
<|endoftext|> english: display all the configuration files in "/etc" folder along with their last access and modified timestamps
bash: find Path -name Regex -printf "%f accessed %AF %Ar, modified %TF %Tr\n" <|endoftext|>
<|endoftext|> english: Find all files in the current directory tree whose size is greater than 1MB, and move them to the "files" folder with confirmation
bash: find Path -size +Size -ok mv {} File File \; <|endoftext|>
<|endoftext|> english: Copies file 'test' to each of directories like './fs*/*'.
bash: echo Regex | xargs -n Quantity -I {} cp File {} <|endoftext|>
<|endoftext|> english: Find all files in the home directory tree that are owned by another user and change their ownership to the current user
bash: find Path ! -user Regex -exec chown Regex \; <|endoftext|>
<|endoftext|> english: Delete all .svn subdirectories under current directory
bash: rm -r -f $( find Path -type d -name Regex ) <|endoftext|>
<|endoftext|> english: find all files that do not have read permission to all
bash: find Path -type f ! -perm -Permission <|endoftext|>
<|endoftext|> english: Find all files under /somefolder matching the extended case insensitive regex '\./(.*\.error.*|second.*log|.*FFPC\.log)$' in their paths
bash: find -E Path -type f -iregex Regex <|endoftext|>
<|endoftext|> english: Reversibly sorts content of the '${TMP}/${SCRIPT_NAME}.name' file
bash: cat File | sort -r <|endoftext|>
<|endoftext|> english: Find all executable upvoter-* files/symlinks under maximum 1 level down the {} directory
bash: find {} -name Regex \( -type f -or -type l \) -maxdepth Quantity -perm +Permission <|endoftext|>
<|endoftext|> english: display list of all the files in the /tmp folder
bash: find Path -exec ls {} + <|endoftext|>
<|endoftext|> english: Remove all *.doc files from the current directory tree
bash: find Path -name Regex -exec rm {} \; <|endoftext|>
<|endoftext|> english: Creates temporary folder and saves path to it in 'td' variable.
bash: mktemp -d <|endoftext|>
<|endoftext|> english: create directory /etc/cron.minute
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: Find and delete the file with inode number 1316256
bash: find Path -inum Quantity -delete <|endoftext|>
<|endoftext|> english: Read a single character from standard input into variable "ans"
bash: read -n Quantity Regex <|endoftext|>
<|endoftext|> english: Enables shell option 'direxpand'.
bash: shopt -s direxpand <|endoftext|>
<|endoftext|> english: Set permissions for directories in `foldername' and its subdirectories to 755
bash: find Path -type d -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Display hostname.
bash: uname -n <|endoftext|>
<|endoftext|> english: display all the tex files in the current folder
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Force decompress all files into '/etc'
bash: gzip -d --force Regex Regex <|endoftext|>
<|endoftext|> english: Print content of 'domains.txt' with removed first one of dot-delimited fields
bash: rev File | cut -d Regex -f Number | rev <|endoftext|>
<|endoftext|> english: Open "charm" executable file in vim
bash: vim $( which Regex ) <|endoftext|>
<|endoftext|> english: Find all regular non-hidden files in the current directory and its subdirectories
bash: find Path -not -path Regex -type f \( ! -iname Regex \) <|endoftext|>
<|endoftext|> english: Search for 'specific string' in all files matching the name pattern '“*.[txt|TXT]”' under current directory tree
bash: find Path -name Regex -print | xargs -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: List files ending in .html and residing in the current directory tree
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: split a file "list.txt" into pieces per 600 lines
bash: split -l Quantity File <|endoftext|>
<|endoftext|> english: Change the owner of all files in "/empty_dir/" to "root" using at most 10 files at a time
bash: ls File | xargs -L Quantity -I {} chown Regex {} <|endoftext|>
<|endoftext|> english: Search the /path tree for all executables
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: Find the "param1" string in regular files under and below /var
bash: find Path -type f -exec grep Regex {} \; -print <|endoftext|>
<|endoftext|> english: Output success.txt omitting lines whose first field appears in fail.txt - lines in fail.txt must appear in the same order as they do in success.txt.
bash: join -v Quantity File File <|endoftext|>
<|endoftext|> english: search for all the regular/normal mp3 files in the file system and move them to the folder /mnt/mp3
bash: find Path -iname Regex -type f | xargs -I {} mv {} File <|endoftext|>
<|endoftext|> english: Recursively change the user and group of all files in "/var/cache/jenkins" to "root"
bash: chown -R Regex File <|endoftext|>
<|endoftext|> english: Compare each .xml file under the current directory with a file of the same name in "/destination/dir/2"
bash: find Path -name Regex -exec diff {} File \; <|endoftext|>
<|endoftext|> english: Pushes current folder to the directory stack.
bash: pushd Directory <|endoftext|>
<|endoftext|> english: Search the current directory and directories below for .sql files
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: find the oldest normal file in the current directory and display with its timestamp
bash: find Path ! -type d -printf "%T@ %p\n" | sort -n | head -n Quantity <|endoftext|>
<|endoftext|> english: find all the text files in the file system and search only in the disk partition of the root.
bash: find Path -xdev -name Regex <|endoftext|>
<|endoftext|> english: Move all directories in the current directory tree that have been modified in the last day to "/path/to/target-dir"
bash: find Path -type d -mtime -Timespan -print0 | xargs -0 -I {} mv -t Directory {} <|endoftext|>
<|endoftext|> english: find all the files from root folder which have nogroup or noname and dispaly their details.
bash: find Path \( -nogroup -or Path \) -ls <|endoftext|>
<|endoftext|> english: recursively change owner of the directory /tmp to the current user
bash: chown -R Regex File <|endoftext|>
<|endoftext|> english: Format the date represented by time string @1267619929 according to default format and print it
bash: date -u -d @1267619929 <|endoftext|>
<|endoftext|> english: Search the current directory tree for files whose names do not end in ".exe" and ".dll"
bash: find Path -not -name Regex -not -name Regex -type f <|endoftext|>
<|endoftext|> english: Find symbolic links in directory /etc and below
bash: find Path -type l <|endoftext|>
<|endoftext|> english: display all files in current folder
bash: find Path <|endoftext|>
<|endoftext|> english: Remove the regular files from the current directory tree that were last modified on November, 21
bash: find Path -type f -newermt Regex ! -newermt Regex -delete <|endoftext|>
<|endoftext|> english: Get the actual find exectuable path
bash: which Regex <|endoftext|>
<|endoftext|> english: Locate all files in the current directory and below that do not have "testfileasdf" in their names
bash: find Path -not -name Regex <|endoftext|>
<|endoftext|> english: Make directory "/etc/cron.minute"
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: Print every two lines in "file" on a single line separated by a space
bash: cat File | paste -d Regex File File <|endoftext|>
<|endoftext|> english: Find the empty directories and files under current directory
bash: find Path -empty <|endoftext|>
<|endoftext|> english: display all the .sh scripts and perl files in the current folder
bash: find Path -type f \( -name Regex -or -name Regex \) <|endoftext|>
<|endoftext|> english: show all files in the current directory and all subdirectories
bash: find Path -print <|endoftext|>
<|endoftext|> english: Calculate the md5sum of the executable file of command 'c++'
bash: md5sum $( which Regex ) <|endoftext|>
<|endoftext|> english: Find files newer than `tmpfile' starting from the current directory
bash: find Path -newer File <|endoftext|>
<|endoftext|> english: Change directory to the basename of "$1" with ".tar.gz" removed
bash: cd $( basename Regex Regex ) <|endoftext|>
<|endoftext|> english: Prints the length and contents of the longest line in filename
bash: cat File | awk Program | sort -n -r | head - Quantity <|endoftext|>
<|endoftext|> english: Search all *.c files from the current directory tree for "hogehoge"
bash: find Path -name Regex -exec grep Regex {} \; <|endoftext|>
<|endoftext|> english: Find the passwd file under root and one level down.
bash: find Path -maxdepth Quantity -name Regex <|endoftext|>
<|endoftext|> english: Remove trailing white spaces from all files under dir directory
bash: find Path -type f -exec sed -i Program {} \; <|endoftext|>
<|endoftext|> english: Print output of script 'trap.sh'
bash: | cat <|endoftext|>
<|endoftext|> english: Create a symbolic link named "$HOME/bin/" to "$HOME/downloads/fnord"
bash: ln -s File Regex <|endoftext|>
<|endoftext|> english: Copy file in current directory of local host to host "remote", connecting as ssh user matching current local username, and copying the file in home directory on remote host - enable compression during transfer.
bash: scp -C File File <|endoftext|>
<|endoftext|> english: Find all 1.txt, 2.txt and 3.txt files under current directory and change the permission to 444
bash: find Path \( -name Regex -or -name Regex -or -name Regex \) -print | xargs -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: Compare sorted files 'f1.txt' and 'f2.txt' and print in three columns strings unique for first file, second file, and common ones
bash: comm <( sort -n File ) <( sort -n File ) <|endoftext|>
<|endoftext|> english: Find all *.txt and *.json files in current directory
bash: find Path -type f \( -name Regex -or -name Regex \) <|endoftext|>
<|endoftext|> english: Find recursively all files in /path that end in "txt" and copy them to /tmp/
bash: find Path -type f -name Regex -printf "cp '%p' '/tmp/test_%f'\n" | bash <|endoftext|>
<|endoftext|> english: find the path of a specfic video file in the current directory
bash: find Path -name Regex -printf "%h\n" <|endoftext|>
<|endoftext|> english: Search the current directory recursively for regular files last modified less than 2 days ago
bash: find Path Path -f -mtime -Timespan <|endoftext|>
<|endoftext|> english: Print short DNS lookup for each domain name in a file 'list'
bash: dig Regex -f File <|endoftext|>
<|endoftext|> english: search files  in the file system excluding those in the paths "10_Recommended" and "/export/repo"
bash: find Path -name Regex -not -path Regex -not -path Regex <|endoftext|>
<|endoftext|> english: Print the largest 20 files under current directory
bash: find Path -type f -printf '%s %p\n' | sort -r -n | head - Quantity <|endoftext|>
<|endoftext|> english: Search "input.txt" for regex patterns only matching those listed in "ignore.txt", list the unique lines and prefix with the number of occurrences
bash: grep -o -f Regex File | sort | uniq -c <|endoftext|>
<|endoftext|> english: find all the files in the /usr folder that have been modified after the file /usr/FirstFile.
bash: find Path -newer File -print <|endoftext|>
<|endoftext|> english: Run an awk program on every TXT file found in the current directory tree
bash: find Path -name Regex -print -exec awk Program {} \; <|endoftext|>
<|endoftext|> english: Find all files starting from the current directory which are owned by the user tommye
bash: find Path -user Regex <|endoftext|>
<|endoftext|> english: display all the regular/normal files in the current directory
bash: find Path -type f <|endoftext|>
<|endoftext|> english: Split "your_file" into files with at most 9 lines each
bash: split -l Quantity File <|endoftext|>
<|endoftext|> english: Display standard input as printable characters or backslash escapes with no addressing radix
bash: od -c -A n <|endoftext|>
<|endoftext|> english: display the version of find command
bash: find Path -version <|endoftext|>
<|endoftext|> english: Find all files/directories containing 'blah' (case insensitive) in their names that were modified in less than 2 days ago uder current directory tree
bash: find Path -iname Regex -mtime -Timespan <|endoftext|>
<|endoftext|> english: Report file system containing /example disk usage in kilobytes.
bash: df -k File <|endoftext|>
<|endoftext|> english: Print a unique list of characters from standard input showing backslash escapes for non-displayables
bash: od -c -v -A none -w Size | sort -b -u <|endoftext|>
<|endoftext|> english: Find the passwd file in the current directory and one level down
bash: find Path -maxdepth Quantity -name Regex <|endoftext|>
<|endoftext|> english: Find a directory named 'project.images' in the entire filesystem and show it in long listing format
bash: find Path -type d -name Regex -ls <|endoftext|>
<|endoftext|> english: Search the current directory tree for regular files that contain "string"
bash: find Path -type f -printf '"%p"\n' | xargs -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: display a long listing of all the files in the current folder which are bigger than 10KB
bash: find Path -size +Size -exec ls -l -h {} + <|endoftext|>
<|endoftext|> english: Find all *.tex regular files in maximum 2 levels down the current directory
bash: find Path -type f -maxdepth Quantity -name Regex <|endoftext|>
<|endoftext|> english: Replace 'company' with 'newcompany' in all files under current directory
bash: find Path -type f -exec sed -i Program {} \; <|endoftext|>
<|endoftext|> english: prints last part of a logfile since timestamp 423
bash: tac File | awk Program | tac <|endoftext|>
<|endoftext|> english: Change directory to "$dir1" and resolve any symlinks in the resulting path
bash: cd -P Directory <|endoftext|>
<|endoftext|> english: search for "specified string" in all the php files in the current folder
bash: find Path -name Regex -print | xargs -I {} grep -H -n -T Regex {} <|endoftext|>
<|endoftext|> english: Delete all directories under '.cache/chromium/Default/Cache/' directory tree that are bigger than 100MB and are at least 1 level deep
bash: find Path -mindepth Quantity -type d -size +Size -exec rm -r -f {} \; <|endoftext|>
<|endoftext|> english: Find all regular files under ${S} directory
bash: find Path -type f <|endoftext|>
<|endoftext|> english: Print a single line of numbers from "001" to "100"
bash: yes | head -n Quantity | awk Program <|endoftext|>
<|endoftext|> english: List environment variables whose name matches '^\w*X\w*'
bash: set | grep -o -P Regex <|endoftext|>
<|endoftext|> english: Search for all directories named foo, FOO, or any other combination of uppercase and lowercase characters beneath the current directory.
bash: find Path -iname Regex -type d <|endoftext|>
<|endoftext|> english: Find all the files which are modified in last 1 hour in entire file system
bash: find Path -mmin -Quantity <|endoftext|>
<|endoftext|> english: Run "command" on server "host" as user "user"
bash: echo Regex | ssh Regex <|endoftext|>
<|endoftext|> english: Print lines in "foo.txt" that are found only once
bash: sort File | uniq <|endoftext|>
<|endoftext|> english: Lists all files in a current folder, separating names with comma.
bash: ls -1 | paste -s -d File File <|endoftext|>
<|endoftext|> english: Disables shell option 'dotglob'.
bash: shopt -u dotglob <|endoftext|>
<|endoftext|> english: Print the current directory
bash: find Path -prune <|endoftext|>
<|endoftext|> english: Find all regular files starting from / that have permissions 777
bash: find Path -type f -perm Permission <|endoftext|>
<|endoftext|> english: Find all files under current directory with their size and paths, reverse sort them numerically, then print the first 4 entries by removing all matches to the regex [0-9]+\s from each line of the output
bash: find Path -type f -printf "%s %p\n" | sort -n -r | head -n Quantity | sed -r Program <|endoftext|>
<|endoftext|> english: find the depth of all the files in current folder and display the depth and file name
bash: find Path -depth -type f -printf "%d\t%p\n" <|endoftext|>
<|endoftext|> english: display all the ".mov" files in the current folder
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: display the three largest files by size in current folder
bash: find Path -type f -exec ls -s {} + | sort -n -r | head - Quantity <|endoftext|>
<|endoftext|> english: Find all directories under 'A' directory tree excluding paths containing the directory 'a'
bash: find Path -type d \( ! -wholename Regex \) <|endoftext|>
<|endoftext|> english: Set the permissions of all directories inside the current directory tree to u=rwx,g=rx,o=x
bash: find Path -type d -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Find files/directories under /users/tom that matches both the pattern "*.pl" and  "*.pm"
bash: find Path -name Regex -name Regex <|endoftext|>
<|endoftext|> english: Removes all files from current folder but 5 newest ones.
bash: ls -C -1 -t | awk Program | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: Count the number of lines in every regular .rb file in the current directory tree
bash: find Path -name Regex -type f -print0 | xargs -0 -I {} wc -l {} <|endoftext|>
<|endoftext|> english: display list of all the hidden files in the directory "/dir/to/search/"
bash: find Path -name Regex -ls <|endoftext|>
<|endoftext|> english: display the count of total number of empty files in the current folder
bash: find Path -type f -empty | wc -l <|endoftext|>
<|endoftext|> english: Create a symbolic link named the basename of "$file" to "$file"
bash: ln -s File $( basename Regex ) <|endoftext|>
<|endoftext|> english: Remove all the files and directories that are in /dir1 but not in /dir2.
bash: diff -r -q File File | grep -E Regex | sed -n Program | awk Program Program Program {} Program Program {} <|endoftext|>
<|endoftext|> english: Replace "foo" with "bar" in all PHP files in the current directory tree
bash: find Path -name Regex -exec sed -i Program {} \; <|endoftext|>
<|endoftext|> english: Print all directories under $root appending a : (colon) at the end of each path
bash: find Path -type d -printf '%p:' <|endoftext|>
<|endoftext|> english: Search the ~/Books directory recursively for regular files named "Waldo"
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: find md5sum of 'string to be hashed'
bash: md5 File File <|endoftext|>
<|endoftext|> english: display in a list of all the files that are bigger than 10KB in current folder
bash: find Path -size +Size -ls <|endoftext|>
<|endoftext|> english: Find all files/directories named 'document' in maximum 4 levels down the '/usr' directory
bash: find Path -maxdepth Quantity -name Regex -print <|endoftext|>
<|endoftext|> english: recursively change owner and group of the directory and group of the directory and all files into it to user and group dev_user
bash: chown Regex -R File <|endoftext|>
<|endoftext|> english: Compress from standard input and print the byte count preceded with 'gzip.'
bash: echo Regex $( gzip | wc -c ) <|endoftext|>
<|endoftext|> english: Recursively changes group ownership of everything within a '/path/to/repo' to 'GROUP'.
bash: chgrp -R Regex File <|endoftext|>
<|endoftext|> english: Search the .VER files from the current directory tree for string "Test_Version='
bash: find Path -name Regex -exec grep Regex {} \; -print <|endoftext|>
<|endoftext|> english: Change directory to the alphabetically last path under the current directory
bash: cd $( find Path -print0 | sort -z | tr Regex Regex | tail - Quantity ) <|endoftext|>
<|endoftext|> english: Find regular files that are bigger than 500 MB in size under current directoryt tree
bash: find Path -type f -size +Size <|endoftext|>
<|endoftext|> english: Mount "ext4" filesystem "/dev/xvdf" on "/vol"
bash: mount Regex Regex -t ext4 <|endoftext|>
<|endoftext|> english: find all the regular/normal files in the current directory which do not have the extension comment and and redirect the output to /tmp/list
bash: find Path -type f ! -name Regex ! -name Regex -print | tee -a File <|endoftext|>
<|endoftext|> english: Find all directories under current directory and change their permission to 644
bash: find Path -type d -print0 | xargs -0 -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: Search the file hierarchy for files larger than 100000 KB without searching any mounted removable media
bash: find Path -path Regex -prune -or -size +Size -print <|endoftext|>
<|endoftext|> english: list files that the user does not have permissions to read, do not try to descend into directories that cannot be read.
bash: find Path ! Path -prune <|endoftext|>
<|endoftext|> english: Force create a symbolic link to "$f" in "~/my-existing-links/" with name the basename of "$f"
bash: ln -s -f File $( basename Regex ) <|endoftext|>
<|endoftext|> english: Search directory tree $DIR for *.txt files
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Display 798 backwards
bash: echo Regex | rev <|endoftext|>
<|endoftext|> english: find all the files in the home folder which have been modified after a file
bash: find Path -newer File <|endoftext|>
<|endoftext|> english: Prints strings with MAC address configuration of each network interface in system.
bash: ifconfig | grep Regex <|endoftext|>
<|endoftext|> english: Search the current directory tree for *bash* files
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Display differences between directories dir1 and dir2.
bash: diff -r File File <|endoftext|>
<|endoftext|> english: Create an empty file in each directory named "mydir" under current directory.
bash: find Path -type d -name Regex -exec touch File \; <|endoftext|>
<|endoftext|> english: find all empty files in home directory
bash: find Path -empty <|endoftext|>
<|endoftext|> english: Calculate md5 sum of file ${my_iso_file} and save it to variable 'md5'
bash: $( md5sum File ) <|endoftext|>
<|endoftext|> english: Remove all *.txt files, except robots.txt, under the given directory modified more than 5 minutes ago
bash: find Path -name Regex -or -maxdepth Quantity -mmin +Quantity -type f -name Regex -delete <|endoftext|>
<|endoftext|> english: search for all the directories in the current directory and do not search in sub directories
bash: find Path -mindepth Quantity -maxdepth Quantity -type d <|endoftext|>
<|endoftext|> english: replace the word foo to bar in the current folder in all the regular/normal files containing the word "baz" in their name (does not update the file)
bash: find Path -type f -name Regex -exec sed -i Program {} + <|endoftext|>
<|endoftext|> english: Find files/directories under '/usr' directory tree that are newer than /tmp/stamp$$ by modification time
bash: find Path -newer File <|endoftext|>
<|endoftext|> english: Find all regular files under $DIRECTORY_TO_PROCESS matching the case insensitive regex ".*\.$FILES_TO_PROCES" where $FILES_TO_PROCES is a variable and not matching the name pattern '$find_excludes' where $find_excludes is another variable, then print the files with null delimiter instead of newline
bash: find Path -type f -iregex Regex ! -name Regex -print0 <|endoftext|>
<|endoftext|> english: List files greater than 1024KB under /path/to/directory and print the time and size on stdout
bash: find Path -type f -size +Size -exec ls -l -h {} \; | awk Program <|endoftext|>
<|endoftext|> english: Save the last modified time of file 'file_name' to variable 'STAMP'
bash: date -r File <|endoftext|>
<|endoftext|> english: Count files in $DIR_TO_CLEAN that are older than $DAYS_TO_SAVE days
bash: find Path -mtime +Timespan | wc -l <|endoftext|>
<|endoftext|> english: list all files in /home/bozo/projects directory tree that were modified exactly one day ago.
bash: find Path -mtime Timespan <|endoftext|>
<|endoftext|> english: Get A record for domain $domain
bash: dig -t A Regex <|endoftext|>
<|endoftext|> english: Prints long listing of "$dir/$file" file.
bash: ls -l -- File <|endoftext|>
<|endoftext|> english: Search for files/directories with the case insensitive pattern anaconda.* in var/log directory and create an archive (file.tar) of all the files found
bash: find Path -iname Regex -exec tar -r -v -f File {} \; <|endoftext|>
<|endoftext|> english: List all files and directories from the current directory tree
bash: find Path -print | xargs -I {} ls {} <|endoftext|>
<|endoftext|> english: Changes group ownership of 'target_directory' to 'target_group'.
bash: chgrp Regex File <|endoftext|>
<|endoftext|> english: Search in the current directory and all sub-directories except ./D for the file named hi.dat
bash: find Path -path Regex -prune -or -name Regex -print <|endoftext|>
<|endoftext|> english: change the permissions of all regular/normal files in the current directory, print0 is used for handling files with newlines in their file name
bash: find Path -type f -print0 | xargs -0 -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: Prints all business days in a current month.
bash: cal -h | cut -c Number <|endoftext|>
<|endoftext|> english: Exclude directory from find . command
bash: find Path -iname Regex | grep -v Regex <|endoftext|>
<|endoftext|> english: Print a sorted list of *.so files in the bla directory tree
bash: find Path -name Regex -print0 | sort -r -z <|endoftext|>
<|endoftext|> english: Display the 'bash' manpage, going to the first occurence of \' sequence of characters.
bash: man Regex | less -I -p File <|endoftext|>
<|endoftext|> english: Recursively change the owner and group of "/workspace" and "775" to "your_user_name"
bash: chown -R Regex File File <|endoftext|>
<|endoftext|> english: create symbolic links in directory "/your/dest/dir/" to all files located in "/your/source/dir/" and have filename extension "txt.mrg"
bash: find Path -iname Regex -exec ln -s {} Regex \; <|endoftext|>
<|endoftext|> english: Move all lines starting with "Ca" to the beginning of the file
bash: nl -n rz File | awk -v Program Program | sort -k Number | cut -f Number <|endoftext|>
<|endoftext|> english: Remove the path $1 from the PATH environment variable
bash: echo Regex | tr Regex Regex | grep -v Regex | tr Regex Regex <|endoftext|>
<|endoftext|> english: Strip all '\' and newlines from $output and save the result to variable 'output'
bash: echo Regex | tr -d Regex | tr -d Regex <|endoftext|>
<|endoftext|> english: Find all files with '.txt' (case insensitive) extension under $dir directory non-recursively and sort them numerically
bash: find Path -maxdepth Quantity -type f -iname Regex | sort -n <|endoftext|>
<|endoftext|> english: Finds all the log* files in /myDir recursively that are more than 7 days older, skipping already created .bz2 archives and compresses them.
bash: find Path -name Regex -and -not -name Regex -ctime +Timespan -exec bzip2 -z -v {} \; <|endoftext|>
<|endoftext|> english: Find all files, folders, symlinks, etc in the current directory recursively
bash: find Path <|endoftext|>
<|endoftext|> english: find all files with pattern` '*.mp3' and send output into nameoffiletoprintto file
bash: find Path -name Regex -fprint File <|endoftext|>
<|endoftext|> english: Find absolute path of command with PID "$pid"
bash: readlink -f $( ls --dereference File ) <|endoftext|>
<|endoftext|> english: Find all *.ogg files on the system ignoring the case
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: Find all files and directories starting from the current directory and excluding hidden files and directories
bash: find Path \( ! -regex Regex \) | sed Program <|endoftext|>
<|endoftext|> english: Search the /tmp/ directory recursively for regular files
bash: find Path -type f <|endoftext|>
<|endoftext|> english: Print the list of all directories in the /myfiles directory tree
bash: find Path -type d <|endoftext|>
<|endoftext|> english: calculate the disk usage for all the files which have been modified in the last 24 hours in ~/tmp folder and display the file sizes
bash: find Path -mtime Timespan -exec du -k -s {} \; | cut -f Number <|endoftext|>
<|endoftext|> english: Read a line of standard input with prompt "Enter your choice: " in an interactive shell and save the response to variable "choice"
bash: read -e -p Regex Regex <|endoftext|>
<|endoftext|> english: find all regular files in current directory and replace the word searc to replace in them.
bash: find Path -type f -exec sed -i Program {} \; <|endoftext|>
<|endoftext|> english: Report file system containing /tmp disk usage in kilobytes.
bash: df -k File <|endoftext|>
<|endoftext|> english: Print first word of lines unique for 'file1' file
bash: grep -o Regex <( comm File File ) <|endoftext|>
<|endoftext|> english: search for the file "process.txt" in the entire file system (case insensitive search)
bash: find Path -iname Regex -print <|endoftext|>
<|endoftext|> english: Invoke a trusted X11 forwarding SSH connection with server "192.168.0.14" on port 222 as user "phil"
bash: ssh -v -Y Regex -p Regex <|endoftext|>
<|endoftext|> english: Delete and count files in $DIR_TO_CLEAN that are older than $DAYS_TO_SAVE days
bash: find Path -type f -mtime +Timespan -print0 | awk -v Program -v Program Program | xargs -0 -I {} rm {} <|endoftext|>
<|endoftext|> english: Report file systems inodes usage.
bash: df -i <|endoftext|>
<|endoftext|> english: Find all directories starting from the current directory
bash: find Path -type d <|endoftext|>
<|endoftext|> english: Find all files under /somefolder matching the case insensitive regex '\(.*error.*\)\|\(^second.*\log$\)\|\(.*FFPC\.log$\)' in their paths
bash: find Path -type f | grep -i Regex <|endoftext|>
<|endoftext|> english: Replace all newlines from standard input except the last with spaces
bash: sed Program <|endoftext|>
<|endoftext|> english: Search for all files in the current directory recursively whose names begin with "Linkin Park"
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Count the number of files in the /usr/ports directory tree whose names begin with 'pkg-plist' and which contain 'dirrmtry'
bash: find Path -name Regex -exec grep Regex {} + | wc -l <|endoftext|>
<|endoftext|> english: Find all empty files starting from the current directory and delete them
bash: find Path -type f -empty -delete <|endoftext|>
<|endoftext|> english: Save list of groups which user $line belongs to and not matching pattern "_unknown|sciences|everyone|netaccounts" in 'results' variable
bash: groups Regex | tr Regex Regex | grep -E -v Regex <|endoftext|>
<|endoftext|> english: find all the text files in the folder /home/calvin which are atleast below 2 levels
bash: find Path -mindepth Quantity -name Regex <|endoftext|>
<|endoftext|> english: Extract any line in "fileA" which does not appear as the first word of any line in "fileB"
bash: comm -2 -3 <( sort File ) <( cut -d Regex -f Number File | sort -u ) <|endoftext|>
<|endoftext|> english: replace the word apple with orange in all the files in the current folder
bash: find Path -exec sed -i Program {} \; <|endoftext|>
<|endoftext|> english: list the details of all the directories in the current folder
bash: find Path -type d -exec ls -l -d {} \; <|endoftext|>
<|endoftext|> english: Find all *.txt files under /foo and print their total size
bash: find Path -name Regex -exec du -h -c {} + | tail -n Quantity <|endoftext|>
<|endoftext|> english: Sort file "a.csv" by the first comma separated value of each line and print only unique entries
bash: tac File | sort -u -t Regex -r -k Number | tac <|endoftext|>
<|endoftext|> english: Recursively change owner and group to "tomcat7" of "webapps", "temp", "logs", "work", and "conf"
bash: chown -R Regex File File File File File <|endoftext|>
<|endoftext|> english: Locate files that reside in the home directory and have not been accessed in the past 30 days
bash: find Path -atime +Timespan <|endoftext|>
<|endoftext|> english: Find files newer than start.txt but not newer than end.txt
bash: find Path -newer File -and ! -newer File <|endoftext|>
<|endoftext|> english: Unzip "path/to/test/file.gz" to standard output and save all lines matching "my regex" to files with a 1000000 limit
bash: gzip -c -d Regex | awk Program <|endoftext|>
<|endoftext|> english: Print all files that exceed 1000 blocks and were modified at least a month ago
bash: find Path -size +Size -mtime +Timespan -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: count amount of jobs running
bash: jobs | wc -l <|endoftext|>
<|endoftext|> english: Delete all hidden files/directories under $some_directory including $some_directory
bash: find Path Path -delete <|endoftext|>
<|endoftext|> english: Decompress "path/to/test/file.gz" to standard output and save all lines matching "my regex" and not matching "other regex" to files with a 1000000 line limit
bash: gzip -d -c Regex | grep -P Regex | grep -v -P Regex | split -d -l Quantity File Regex <|endoftext|>
<|endoftext|> english: Page through the contents of yourFile, adding a $ at the end of each line.
bash: cat -e File | less <|endoftext|>
<|endoftext|> english: Calculate the md5 sum of the contents of "$FILES"
bash: cat File | md5sum <|endoftext|>
<|endoftext|> english: split the first 100 lines of the file "datafile" per lines with size 1700 bytes
bash: sed Program File | split -C Size File <|endoftext|>
<|endoftext|> english: Archive "_vim/" to "~/.vim" suppressing non-error messages and compressing data during transmission
bash: rsync -a -q -z File File <|endoftext|>
<|endoftext|> english: display all the files ending with ".foo" including those that are in the directory ".snapshot", this is the wrong way of using prune.
bash: find Path \( -name Regex -prune -or -name Regex \) -print <|endoftext|>
<|endoftext|> english: display all the jpg files in the current folder and do not search in sub directories
bash: find Path -maxdepth Quantity -mindepth Quantity -iname Regex -type f <|endoftext|>
<|endoftext|> english: Find all regular files under /home/www and replace every occurrences of 'subdomainA.example.com' with 'subdomainB.example.com' in those files
bash: find Path -type f -print0 | xargs -0 -I {} sed -i Program {} <|endoftext|>
<|endoftext|> english: Set permissions of all directories under "/opt/lampp/htdocs" to 755
bash: find Path -type d -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: For each line in file2 whose first field appears as a first field in file1, print an output line constructed following the specified -o format.
bash: join -1 Regex -2 Regex -o 1.1,1.2,1.3,2.3 File File <|endoftext|>
<|endoftext|> english: Find all files/directories under current directory tree excluding files/directories with name 'query_to_avoid'
bash: find Path -not -name Regex <|endoftext|>
<|endoftext|> english: Print line number of each line in /etc/passwd file, where current user name is found
bash: cat File -n | grep $( whoami ) | cut -f Number <|endoftext|>
<|endoftext|> english: print all lines after the last match of 'string match'
bash: tac File | sed Program | tac <|endoftext|>
<|endoftext|> english: Search the /path directory tree for files having permissions 777
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: Recursively find all files ending with '*.txt' and print they names and content
bash: find Path -name Regex -print -exec cat {} \; <|endoftext|>
<|endoftext|> english: Count all the lines of all '*.c' files in current directory recursively
bash: find Path -name Regex -print0 | xargs -0 -I {} cat {} | wc -l <|endoftext|>
<|endoftext|> english: Read a line of standard input with prompt "My prompt: " and save it to variable "varname"
bash: read -e -p Regex Regex <|endoftext|>
<|endoftext|> english: Find all directories under ~/code excluding hidden directories and their subdirectories and replace all newlines with : in the output then remove the last :
bash: find Path -type d | sed Program | tr Regex Regex | sed Program <|endoftext|>
<|endoftext|> english: Read a single character from standard input into variable "key" without backslash escapes and using an interactive shell with the prompt $'Are you sure (Y/n) : ' and default value $'Y'
bash: read -r -p Regex -e -i Regex Regex <|endoftext|>
<|endoftext|> english: Execute `somecommand' on each file from the current directory tree with the environment variable f set to the filename
bash: find Path -exec env Program Program \; <|endoftext|>
<|endoftext|> english: create a gzip of all the files in the current folder excluding the already gzipped files
bash: gzip $( find Path ! -name Regex -print ) <|endoftext|>
<|endoftext|> english: find all the html files in the current folder and delete a line
bash: find Path -type f -name Regex | xargs -I {} sed -i Program {} <|endoftext|>
<|endoftext|> english: display all files in current folder excluding those that have the word "git" in their name and display files that have git in their path names
bash: find Path ! -name Regex | grep Regex <|endoftext|>
<|endoftext|> english: Find all files in entire file system which are larger than 20000KB
bash: find Path -type f -size +Size <|endoftext|>
<|endoftext|> english: Recursively copy "original_dir" to "copy_dir" preserving file/dir timestamps, displaying progress, and skipping files which match in size, keeps partially transferred files.
bash: rsync -P -r -t --size-only File File <|endoftext|>
<|endoftext|> english: Show find's version
bash: find Path --version <|endoftext|>
<|endoftext|> english: Search the home directory tree for files last modified more than a year ago
bash: find Path -mtime +Timespan <|endoftext|>
<|endoftext|> english: Find all broken symlinks under current directory
bash: find Path -xtype l <|endoftext|>
<|endoftext|> english: Set the 'pipefail' shell variable causing bash to return true only if all commands in a pipeline return true.
bash: set -o pipefail <|endoftext|>
<|endoftext|> english: Copy recursively "tata/" to "tata2/" and remove read, write, and execute permission for other
bash: rsync -a -v -z --chmod o-rwx -p File File <|endoftext|>
<|endoftext|> english: Find recursively all regular files in the current directory tree ending in .dll or .exe
bash: find Path -type f | grep -P Regex <|endoftext|>
<|endoftext|> english: Recursively copies all files in the current directory but ones that names match pattern "dirToExclude|targetDir" to the 'targetDir' directory, printing info message on each operation.
bash: cp -r -v $( ls -A | grep -v -E Regex ) File <|endoftext|>
<|endoftext|> english: search for text files in the current folder which have write access to others
bash: find Path -type f \( -iname Regex -and -perm -Permission \) <|endoftext|>
<|endoftext|> english: display all scala files in the directory "src/main"
bash: find Path -type f -regex Regex <|endoftext|>
<|endoftext|> english: Print the text file paths that match 'needle text' in their contents under 'my_folder' recursively
bash: grep -r -l Regex File | tr Regex Regex | xargs -r -0 -I {} file {} | grep -e Regex | grep -v -e Regex <|endoftext|>
<|endoftext|> english: create directory /var/svn as user root
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: split the file "/path/to/large/file" into pieces per 50000 lines named as /path/to/output/file/prefixNNN
bash: split --lines Quantity File Regex <|endoftext|>
<|endoftext|> english: Remove all text files in the home directory with confirmation
bash: find Path -name Regex -ok rm {} \; <|endoftext|>
<|endoftext|> english: Rename the *.so files at level 2 of the current directory tree prepending their names with "lib"
bash: find Path -mindepth Quantity -maxdepth Quantity -name Regex -printf "mv '%h/%f' '%h/lib%f'\n" | sh <|endoftext|>
<|endoftext|> english: List all existing environment variables in the current shell.
bash: env | awk -F Regex Program | sort | uniq <|endoftext|>
<|endoftext|> english: Exit the shell on the first error encountered
bash: set -o errexit <|endoftext|>
<|endoftext|> english: Removes all empty folders under current path, aged between 'first' and 'last' timestamps.
bash: find Path -newer File -not -newer File -type d -print0 | xargs -0 -I {} rmdir {} <|endoftext|>
<|endoftext|> english: Copy "/home/username/path/on/server/" to "username@your.ip.address.here:/Users/username/path/on/machine/" and convert encoding from UTF-8 to UTF-8-MAC
bash: rsync --iconv UTF-8,UTF-8-MAC File File <|endoftext|>
<|endoftext|> english: Copy all files below the current directory whose names contain "foobar" (case-insensitive) to directory foo/bar/ in user's home directory.
bash: find Path -iname Regex -exec cp {} File \; <|endoftext|>
<|endoftext|> english: find all txt files under the current folder except ./misc folder
bash: find Path -path Regex -prune -or -name Regex -print <|endoftext|>
<|endoftext|> english: Search the /var/www/ tree for files not owned by user `apache'
bash: find Path ! -user Regex -print0 | xargs -0 <|endoftext|>
<|endoftext|> english: search  character special files called ' backup '  from  /usr directory downwards and print them .
bash: find Path -type c -name Regex -print <|endoftext|>
<|endoftext|> english: Print every two lines in "num.txt" on a single line separated by a space
bash: paste -d Regex <( sed -n Program File ) <( sed -n Program File ) <|endoftext|>
<|endoftext|> english: display a long listing of the files all non emoty files in current folder which have been modified 60 minutes ago
bash: find Path -mmin Quantity -print0 | xargs -0 -r -I {} ls -l {} <|endoftext|>
<|endoftext|> english: Adjust the timestamp of 'filename' by subtracting 2 hours from it.
bash: touch -d $( date -r File ) File <|endoftext|>
<|endoftext|> english: find all text files in the folder "FFF" and find the md5sum for them
bash: find Path -name Regex -exec md5sum {} \; <|endoftext|>
<|endoftext|> english: Display a long listing of all the regular files in the file system which belong to user 'root' and which have suid bit set
bash: find Path -type f -user Regex -perm -Permission -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: find all the files (under root file system /) that were changed within the last 24 hours
bash: find Path -ctime -Timespan <|endoftext|>
<|endoftext|> english: Change permissions of all directories residing under and below ./debian to 755
bash: find Path -type d | xargs -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: Find all files under current directory whose file type description contains "image", display the paths to files and file type descriptions.
bash: find Path -name Regex -exec file {} \; | grep -o -P Regex <|endoftext|>
<|endoftext|> english: List recursively all files and directories in /var/www
bash: find Path <|endoftext|>
<|endoftext|> english: Change permissions to 644 recursively only for files
bash: find Path -type f -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: find all the files in the current directory and print them excluding those that have the name SCCS.
bash: find Path -print -or -name Regex -prune <|endoftext|>
<|endoftext|> english: Search the home directory tree for video files
bash: find Path -type f -name Regex -or -name Regex -or -name Regex -or -name Regex -or -name Regex -or -name Regex <|endoftext|>
<|endoftext|> english: Find files with inode number 199053
bash: find Path -inum Quantity <|endoftext|>
<|endoftext|> english: search for the word "mysql" in all the files in the current containing the word "notes" in their name
bash: find Path -iname Regex | xargs -I {} grep -i Regex {} <|endoftext|>
<|endoftext|> english: Print the grand total file system disk space usage with block sizes in units of TiB
bash: df --total -B Size | tail -n Quantity <|endoftext|>
<|endoftext|> english: Show manual page of find utility
bash: man Regex <|endoftext|>
<|endoftext|> english: Change permissions to 700 for files and directories deeper than the current directory
bash: find Path -mindepth Quantity | xargs -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: Read a line from standard input into variable "REPLY" with prompt "$1 ([y]es or [N]o): "
bash: read -p Regex <|endoftext|>
<|endoftext|> english: search for the file chapter1 in the folder /work
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Gets MAC addresses of all active network interfaces.
bash: ifconfig | awk Program <|endoftext|>
<|endoftext|> english: Print the directory name of the full real path to the current script
bash: echo $( dirname $( readlink -f File ) ) <|endoftext|>
<|endoftext|> english: Count total number of lines in all *txt files  in current directory
bash: wc -l $( find Path -type f -name Regex ) <|endoftext|>
<|endoftext|> english: Print type of the file system containing path $dir.
bash: df -T File | tail - Quantity | awk Program <|endoftext|>
<|endoftext|> english: Recursively lists all *.py and *.html files in a current folder.
bash: ls File File <|endoftext|>
<|endoftext|> english: Print which files differ in "folder1" and "folder2" excluding "node_modules" recursively, output in two columns, and paginate the output
bash: diff -r -q -y -l File File --exclude Regex <|endoftext|>
<|endoftext|> english: Find all the files in file system which are modified more than 50 days back and less than 100 days
bash: find Path -mtime +Timespan -mtime -Timespan <|endoftext|>
<|endoftext|> english: display all the symbolic links in the current folder
bash: find Path -type l <|endoftext|>
<|endoftext|> english: create a symbolic link named "www" to file "www1"
bash: ln -s File Regex <|endoftext|>
<|endoftext|> english: Print the number of entries (files, directories, symlinks, etc.) in the subdirectories of the current directory, stopping search at any device mount points.
bash: find Path -xdev -type f | cut -d Regex -f Number | sort | uniq -c | sort -n <|endoftext|>
<|endoftext|> english: search for all text files in the folder /home
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: delete all the regular files in the temp folder which have not been modified in the last 24 hours
bash: find Path -type f -mtime +Timespan -exec rm {} \; <|endoftext|>
<|endoftext|> english: search for MP3 files in the current folder and subfolders exclude dir1 AND dir2
bash: find Path ! -path Regex ! -path Regex -iname Regex <|endoftext|>
<|endoftext|> english: List all files/directories under current directory
bash: find Path <|endoftext|>
<|endoftext|> english: Recursively finds strings like "texthere"  in all "*.txt" files of a current folder.
bash: grep -r --include Regex Regex File <|endoftext|>
<|endoftext|> english: Create a symbolic link named ".bash_profile" to ".bashrc"
bash: ln -s File Regex <|endoftext|>
<|endoftext|> english: Read lookup requests from text file '1.txt' and uses them to fetch TXT records.
bash: dig Regex -f File <|endoftext|>
<|endoftext|> english: Run 'otherscript.sh' script with all environment variables specified in the file 'xxxx'
bash: env $( cat File ) Program <|endoftext|>
<|endoftext|> english: Execute `find -type f | egrep -i "(jpg|bmp|png|gif)$"` every 300 seconds and display without title
bash: watch -n Quantity -t $( find Path -type f | grep -E -i Regex ) <|endoftext|>
<|endoftext|> english: Find all files/directories named 'test' under current directory tree
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: display all text files in the folder /tmp/1 excluding those which do not have spaces in their names
bash: find Path -iname Regex -not -iname Regex <|endoftext|>
<|endoftext|> english: Archive "src/bar" on host "foo" to local directory "/data/tmp"
bash: rsync -a -v -z File File <|endoftext|>
<|endoftext|> english: Move all hidden files in "wordpress" to the current directory
bash: mv File File <|endoftext|>
<|endoftext|> english: Mount "/path/to/device" on "/path/to/mount/location" as a loop back device
bash: mount Regex Regex -o loop <|endoftext|>
<|endoftext|> english: display all the regular/normal files in the current directory which are atleast 2 levels deep
bash: find Path -mindepth Quantity -type f <|endoftext|>
<|endoftext|> english: find all the files in the current directory which have been modified in the last 30 days and display the contents.
bash: find Path -atime +Timespan -exec ls \; <|endoftext|>
<|endoftext|> english: Find all *.ogg (case insensitive) files under your home directory that are less than 100MB in size
bash: find Path -iname Regex -type f -size -Size <|endoftext|>
<|endoftext|> english: Change directory to the directory containing file path "$1"
bash: cd $( dirname Regex ) <|endoftext|>
<|endoftext|> english: Force delete all files in the temp folder which have not been accesses in the last 240 hours
bash: find Path -atime +Timespan -exec rm -f {} \; <|endoftext|>
<|endoftext|> english: find all the files in the file system which have been changed in the last 24 hours.
bash: find Path -ctime -Timespan <|endoftext|>
<|endoftext|> english: Split "/usr/bin/firefox" into 1000 files of about equal size
bash: split -n Quantity File <|endoftext|>
<|endoftext|> english: Unzip and untar "myarchive.tar.gz" and check for corruption
bash: gunzip -c Regex | tar -t -v -f File <|endoftext|>
<|endoftext|> english: Find all files and directories that have been modified in the last seven days.
bash: find Path -mtime -Timespan <|endoftext|>
<|endoftext|> english: Lists all subdirectories in a current folder, removing trailing slash.
bash: ls -d File | cut -f Number -d Regex <|endoftext|>
<|endoftext|> english: List in detail regular files from the current directory tree whose names match Perl regular expression '\w+-\d+x\d+\.\w+$'
bash: find Path -type f | grep -P Regex | sed -r -e Program | xargs -I {} ls -l {} <|endoftext|>
<|endoftext|> english: Execute "script.awk" on "file" and format the output as a table
bash: awk -f File Program | column -t <|endoftext|>
<|endoftext|> english: Change all "JPG" filename suffixes in current directory to "jpeg".
bash: rename -v Regex Regex <|endoftext|>
<|endoftext|> english: Read a line from standard input into variable "a" without backslash escapes
bash: read -r Regex <|endoftext|>
<|endoftext|> english: find the file with the name "esxcfg-firewall" in the current folder
bash: find Path -print | grep Regex <|endoftext|>
<|endoftext|> english: find  files which full path name is foo/bar under foo directory and print
bash: find Path -path Regex -print <|endoftext|>
<|endoftext|> english: Search the current directory for HTML files whose names begin with "a"
bash: find Path -maxdepth Quantity -name Regex <|endoftext|>
<|endoftext|> english: Find all files named "MyCProgam.c" (ignoring the case) and calculate each file's md5sum.
bash: find Path -iname Regex -exec md5sum {} \; <|endoftext|>
<|endoftext|> english: Reverse the space separated words in "aaaa eeee bbbb ffff cccc"
bash: echo Regex | tr Regex Regex | tac | tr Regex Regex <|endoftext|>
<|endoftext|> english: Set permissions to 500 for directories under the current directory
bash: find Path -type d -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Remove the first 7 characters of every line in the output of "history"
bash: history | cut -c Number <|endoftext|>
<|endoftext|> english: Search directory tree `MyApp.app' for directories whose name is 'Headers' and delete them in an optimized way
bash: find -d Path -name Regex -type d -print0 | xargs -0 -I {} rm -r -f {} <|endoftext|>
<|endoftext|> english: Delete all files under /path/to/files that are not newer than dummyfile
bash: find Path -type f ! -newer File -delete <|endoftext|>
<|endoftext|> english: find all the ".c" files in the folder /home/david which have been modified in the last 48 hours
bash: find Path -mtime -Timespan -name Regex <|endoftext|>
<|endoftext|> english: find all the regular/normal files in the current folder and do not search in the sub directories
bash: find Path -maxdepth Quantity -type f <|endoftext|>
<|endoftext|> english: searching for all files with the extension mp3
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Print all lines from the last occurrence of the regex 'pattern' to the end of the file 'file'
bash: tac File | awk Program | tac <|endoftext|>
<|endoftext|> english: Find all files/directories under '/usr' directory tree that have been modified exactly 5 minutes ago
bash: find Path -mmin Quantity <|endoftext|>
<|endoftext|> english: Decompress ${set1[@]} files with gzip
bash: gzip -d Regex <|endoftext|>
<|endoftext|> english: Search the path given as the $absolute_dir_path variable for regular files
bash: find Path -type f -print0 <|endoftext|>
<|endoftext|> english: Finds all logged in users.
bash: w | awk Program <|endoftext|>
<|endoftext|> english: Archive "/source" and all files under "folder/" to "/dstfolder/" on host "remoteserver" as user "user" without copying files that already exist
bash: rsync -a -v -z --ignore-existing File File File <|endoftext|>
<|endoftext|> english: count the total number of lines that are present in all the normal/regular files
bash: find Path -type f -exec wc -l {} \; | awk Program <|endoftext|>
<|endoftext|> english: Find all *.ogg and *.mp3 (case insensitive) files/directories under your home directory
bash: find Path -iname Regex -or -iname Regex <|endoftext|>
<|endoftext|> english: find all files and directories under the current directory and display the inode of each one, using printf
bash: find Path -printf "%i \n" <|endoftext|>
<|endoftext|> english: Show all variables whose name or value contains "PATH", sorted in reverse alphabetical order.
bash: env | uniq | sort -r | grep Regex <|endoftext|>
<|endoftext|> english: Find files starting with the word "file" in the current directory tree
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: display a long listing of all the files in the home folder which are bigger than 200MB
bash: find Path -size +Size -exec ls -s -h {} \; <|endoftext|>
<|endoftext|> english: Find all files/directories named 'fprintf.c' under '/usr/src' directory tree
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all Executable files in the file system
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: Removes empty folder 'edi' and 'edw'.
bash: rmdir Directory Directory <|endoftext|>
<|endoftext|> english: Find all directories in 1 level down the current directory
bash: find Path -mindepth Quantity -maxdepth Quantity -type d <|endoftext|>
<|endoftext|> english: Find .rmv files in the current directory recursively
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all files/directories with '.c' or '.h' extension under current directory tree and search for the regex provided by first positional argument and show the output by paging through one screenful at a time
bash: find Path -name Regex | xargs -I {} grep Regex {} | less <|endoftext|>
<|endoftext|> english: List all unique parent directories of .class files found under the current directory
bash: find Path -name Regex -printf '%h\n' | sort -u <|endoftext|>
<|endoftext|> english: Count the number of characters in the list of regular files from the current directory tree
bash: find Path -type f | xargs | wc -c <|endoftext|>
<|endoftext|> english: Print login name and full name of all users currently logged in and delete instances of "of group.*"
bash: finger -l | awk Program | sed Program <|endoftext|>
<|endoftext|> english: Set variable "filename" to only the name of document specified by URL, in this case "pic.jpg"
bash: basename Regex <|endoftext|>
<|endoftext|> english: Prints listing of a root folder including hidden files, and saves output to 'output.file'.
bash: ls -a | tee File <|endoftext|>
<|endoftext|> english: Find all Perl source code files
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Delete all the .c files present in the current directory and below
bash: find Path -name Regex | xargs -I {} rm -f {} <|endoftext|>
<|endoftext|> english: Remove containing directories from variable 'path' ie. "/some/specific/directory" becomes "directory".
bash: basename Regex <|endoftext|>
<|endoftext|> english: SSH into server "app1" as the current user
bash: ssh Regex <|endoftext|>
<|endoftext|> english: Returns the single most recent file in a directory
bash: ls -t | head -n Quantity <|endoftext|>
<|endoftext|> english: Remove files in current directory according to the filenames found in ~/clang+llvm-3.3/bin/
bash: find Path -type f -exec basename {} \; | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: Display the number of regular files under current directory tree
bash: find Path -type f -print0 | tr -d -c Regex | wc -c <|endoftext|>
<|endoftext|> english: find all the files in the current folder which have been modified for the ffiles that are at least one week old (7 days) but less then 30 days old
bash: find Path -mtime +Timespan -and -mtime -Timespan -print0 <|endoftext|>
<|endoftext|> english: Read standard input until a null character is found and save the result in variable "f2"
bash: read -r -d Regex Regex <|endoftext|>
<|endoftext|> english: Recursively prints all folders in a current folder that contain files like "*.class".
bash: find Path -name Regex -print0 | xargs -0 -n Quantity -I {} dirname {} | sort --unique <|endoftext|>
<|endoftext|> english: Find all files that contain the case insensitive regex 'stringtofind' in maximum 1 level down the / directory without descending into other partitions
bash: find Path -maxdepth Quantity -xdev -type f -exec grep -Z -l -i Regex {} + <|endoftext|>
<|endoftext|> english: Find image files and move them to the pictures directory
bash: find Path -name Regex -or -name Regex -or -name Regex -print0 | xargs -0 -I {} mv --target-directory Directory {} <|endoftext|>
<|endoftext|> english: Copies all files with "FooBar" in the path under the current directory to the '~/foo/bar' directory.
bash: find Path | grep Regex | xargs -I {} cp {} File <|endoftext|>
<|endoftext|> english: Search the files under and below /directory/containing/files for "pattern_to_search"
bash: find Path -type f -exec grep -H Regex {} + <|endoftext|>
<|endoftext|> english: display long listing of all the empty files in the current folder
bash: find Path -empty -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: Get a detailed listing of all symbolic links in /usr/bin starting with "z"
bash: find Path -type l -name Regex -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: Print "deb-src http://ppa.launchpad.net/webupd8team/java/ubuntu precise main" and append to file "/etc/apt/sources.list"
bash: echo Regex | tee -a File <|endoftext|>
<|endoftext|> english: find all the text files in the current folder expect those which are in the path "sk"
bash: find Path -path Regex -prune -or -name Regex -print <|endoftext|>
<|endoftext|> english: Infinitely ping every host listed in "file-of-ips" with at most 50 processes at once
bash: cat File | xargs -n Quantity -I {} -P Quantity ping {} <|endoftext|>
<|endoftext|> english: search for the word LOG in all the files in the folder ~/jsmith
bash: find Path -exec grep Regex {} File \; -print <|endoftext|>
<|endoftext|> english: Search the local subdirectory tree of the current working directory and the /tmp directory tree for directories named mydir
bash: find Path Path -name Regex -type d -print <|endoftext|>
<|endoftext|> english: Find all *.rb (regular) files under current directory and print them on stdout putting the file name/path in-between two string literals 'Hello,' and '!'
bash: find Path -name Regex -type f | xargs -I {} echo Regex {} Regex <|endoftext|>
<|endoftext|> english: display all files in the current folder that have been modified in the last 24 hours whose name has only 1 letter
bash: find Path -name Regex -mtime -Timespan <|endoftext|>
<|endoftext|> english: Print numbers from 1 to 10 with 2 values per line
bash: seq Number | sed Program | awk -v Program Program <|endoftext|>
<|endoftext|> english: Print out every command that is executed in the script
bash: set -x <|endoftext|>
<|endoftext|> english: Infinitely print "no" to the screen
bash: yes Regex <|endoftext|>
<|endoftext|> english: Print space separated list of numbers from "$start" to "$end"
bash: echo $( seq Number Number ) <|endoftext|>
<|endoftext|> english: Remove files that are less than 1MB in size under current directory
bash: find Path -size -Size -exec rm {} \; <|endoftext|>
<|endoftext|> english: Find all *.java files under current directory and archive them to myfile.tar
bash: find Path -type f -name Regex | xargs -I {} tar -r -v -f File {} <|endoftext|>
<|endoftext|> english: Find all files and directories with permissions 664
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: Set permission of all files in "img", "js", and "html" to 644
bash: chmod Permission File File File <|endoftext|>
<|endoftext|> english: Non-recursively finds all '*.pdf' files in a current folder and removes them.
bash: find Path -maxdepth Quantity -name Regex -exec rm {} \; <|endoftext|>
<|endoftext|> english: Find all files under $root_dir
bash: find Path -type f <|endoftext|>
<|endoftext|> english: Open all files named 'filename' with 'nano' editor in the entire filesystem
bash: find Path -name Regex -exec nano {} \; <|endoftext|>
<|endoftext|> english: Replace any blank character from standard input with a tab
bash: tr Regex Regex <|endoftext|>
<|endoftext|> english: Interpret backslash sequences and delete whitespace characters in variable $FOO and save the result to variable 'FOO_NO_WHITESPACE'
bash: echo -e Regex | tr -d Regex <|endoftext|>
<|endoftext|> english: display all the "C" files in the current folder
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all directories in the current directory tree that are not accessible by all
bash: find Path -type d ! -perm -Permission <|endoftext|>
<|endoftext|> english: find all the ".c" files in the folder "/home/you" which have been accessed in the last 30*24 hours
bash: find Path -iname Regex -atime -Timespan -type -f <|endoftext|>
<|endoftext|> english: Find all regular files with '.r' and '.c' in their names under current directory tree
bash: find Path -type f \( -name Regex -or -name Regex \) -print <|endoftext|>
<|endoftext|> english: find all the html, javascript and text files in the current folder
bash: find Path -type f -name Regex -or -name Regex -or -name Regex <|endoftext|>
<|endoftext|> english: Display the contents of 'your_file' wrapping lines to maximum 80 characters, and waiting for user interaction after each page.
bash: fold File File | more <|endoftext|>
<|endoftext|> english: Find regular files that are larger than 2GB
bash: find Path -type f -size +Size <|endoftext|>
<|endoftext|> english: Rename "new" to "old" and make a backup if "old" exists
bash: mv File File -b <|endoftext|>
<|endoftext|> english: Search the current directory tree for all files matching pattern "*.rb"
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Dump "testscript.sh" as 2 byte hexadecimale, printable characters, and octal values
bash: od -x -c -b File <|endoftext|>
<|endoftext|> english: list all the files in the file system excluding proc folder and excluding symbolic links which have write permission for the user
bash: find Path -path Regex -prune -or -perm -Permission ! -type l -ls <|endoftext|>
<|endoftext|> english: Recursively changes group ownership of everything in 'files' to 'apache_user'.
bash: chgrp -R Regex File <|endoftext|>
<|endoftext|> english: find all the directories  with the name "c" in the current folder which are at least 3 levels deep and which are not present in the path "/p/".
bash: find Path -mindepth Quantity -type d -path Regex -prune -or -name Regex -print <|endoftext|>
<|endoftext|> english: Find files that were accessed in less than a day ago
bash: find Path -atime -Timespan <|endoftext|>
<|endoftext|> english: Find how many directories are in a path (counts current directory)
bash: find Path -type d -exec basename {} \; | wc -l <|endoftext|>
<|endoftext|> english: Find files owned by nonexistent users
bash: find Path -nouser -print <|endoftext|>
<|endoftext|> english: Delete all hard links to the physical file with inode number 2655341
bash: find Path -xdev -inum Quantity | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: Remove all files with a txt extension under current directory
bash: find Path -type f -name Regex -print | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: Search the current directory tree for file "a.txt"
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: Recursively finds all files older than 7 minutes under the current directory, saves list of found files, and compresses them, executing at most 10 compress process at a time.
bash: find Path -type f -mtime +Timespan | tee File | xargs -I {} -P Quantity compress {} <|endoftext|>
<|endoftext|> english: Find all files/directories named 'my.txt' in the entire filesystem
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: change the permission of all the regular/normal files in the current folder from 777 to 755
bash: find Path -type f -perm Permission -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Merge each line of standard input into a single comma separated line
bash: paste -s -d Regex <|endoftext|>
<|endoftext|> english: ssh into localhost on port 4444
bash: ssh -p Regex Regex <|endoftext|>
<|endoftext|> english: List ".java" files that have the same filename and contents
bash: md5sum File | sort | uniq -d <|endoftext|>
<|endoftext|> english: Read a line from standard input and save each word in the bash array variable "first"
bash: read -a Regex <|endoftext|>
<|endoftext|> english: Find all directories under $1/.hg and set their SGID bit
bash: find Path -type d -print0 | xargs -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: Read a line from standard input
bash: read <|endoftext|>
<|endoftext|> english: find all regular/normal files in the current folder whose name has the word photo or picture and which have been modified in the last 30 minutes
bash: find Path \( -iname Regex -or -name Regex \) -and ! -type d -and -mmin -Quantity <|endoftext|>
<|endoftext|> english: display all the files in the current folder which start with either "fileA_" or "fileB_"
bash: find Path -name Regex -or -name Regex <|endoftext|>
<|endoftext|> english: Find & Substitute Only 2nd Occurrence of a Word Using sed s//2 in all .txt files
bash: find Path -type f -name Regex -exec sed Program File \; <|endoftext|>
<|endoftext|> english: Prepend date to ping output to google.com
bash: ping Regex | xargs -L Quantity -I {} date '+%+: {}' <|endoftext|>
<|endoftext|> english: search all the files in the folder "myfiles" which have the word "blue" in their name
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Get the sizes (and total size) of all files under dir1 directory
bash: find Path ! -type d | xargs -I {} wc -c {} <|endoftext|>
<|endoftext|> english: display all the regular files in the folder "$(FOLDER)" which are modified in the last $(RETENTION)*24 hours and excluding hidden files
bash: find Path -type f ! -name Regex -mtime -Timespan <|endoftext|>
<|endoftext|> english: search for a word in all the files in the current directory
bash: find Path -exec grep Regex {} + <|endoftext|>
<|endoftext|> english: split file "your_file" into pieces per 9 lines
bash: split -l Quantity File <|endoftext|>
<|endoftext|> english: Gets IP addresses of all active network interfaces.
bash: ifconfig | grep -o -P Regex <|endoftext|>
<|endoftext|> english: Searches manual pages which descriptions contain 'postscript', and prints name and description of only ones that contain any-cased 'png' pattern.
bash: apropos Regex | grep -i Regex <|endoftext|>
<|endoftext|> english: Login in 'whatever.com' as user 'whoever' with X11 forwarding to enable GUI programs on remote to be run
bash: ssh -X Regex <|endoftext|>
<|endoftext|> english: Send 5 ping requests to address 12.34.56.78 and print only the last 2 lines of the summary output.
bash: ping -c Quantity -q Regex | tail -n Quantity <|endoftext|>
<|endoftext|> english: Recursively add user write permission to all files under "/path/to/git/repo/objects"
bash: chmod -R -f Permission File <|endoftext|>
<|endoftext|> english: Search the /tmp directory tree for files owned by user `ian'
bash: find Path -user Regex <|endoftext|>
<|endoftext|> english: List the drive of each "/dev/" disk mount point
bash: mount | grep Regex | sed Program File <|endoftext|>
<|endoftext|> english: Unzip all ".gz" files in the current directory tree excluding files containing "dvportgroups", "nsanity", "vcsupport", "viclient", and "vsantraces"
bash: find Path -name Regex ! -name Regex ! -name Regex ! -name Regex ! -name Regex ! -name Regex -exec gunzip -v -f {} \; <|endoftext|>
<|endoftext|> english: Find all files/directories named 'openssl' under current directory tree without printing 'Permission denied' error messages
bash: find Path -name Regex | sed Program <|endoftext|>
<|endoftext|> english: search for the host "slc02oxm.us.oracle.com" in all the xml files in the current folder and display the files which has the matched content
bash: find Path -name Regex -exec grep -l Regex {} \; <|endoftext|>
<|endoftext|> english: Resolve all symlinks in path to "firefox" binary if it exists in path, resulting in absolute path with no symlinks.
bash: readlink -f $( which Regex ) <|endoftext|>
<|endoftext|> english: Prevent ssh from reading from standard input and execute "touch /home/user/file_name.txt" on "$R_HOST" as "$R_USER"
bash: ssh -n Regex touch File <|endoftext|>
<|endoftext|> english: find all the files in the current folder which have a set uid set
bash: find Path -perm -Permission -print <|endoftext|>
<|endoftext|> english: Replace all spaces (' ') with comma (',') in ${TO_IGNORE[@]}, append with '--ignore ' and save the resultant string to variable 'ARGS'
bash: echo Regex | tr Regex Regex <|endoftext|>
<|endoftext|> english: Print yesterday's date
bash: date -j -v-1d <|endoftext|>
<|endoftext|> english: Display source and mount point of the file system containing /some/path.
bash: df File | awk Program <|endoftext|>
<|endoftext|> english: Search all the .c and .h files in the current directory tree for "expr"
bash: find Path -name Regex | xargs -I {} grep -E Regex {} <|endoftext|>
<|endoftext|> english: Finds recursively all folders named 'a' within current folder and removes only ones without files and another folders within.
bash: find Path -name Regex -type d | xargs -I {} rmdir {} <|endoftext|>
<|endoftext|> english: Find files starting with the word "file" in the current directory tree, ignoring the case
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: File "files.txt" contains a list of files, copy all files listed to host "remote", connecting as ssh user "user", and copying the files to this user's home directory - this will not work with files/directory names containing spaces.
bash: cat File | xargs -I {} scp File {} <|endoftext|>
<|endoftext|> english: Print each line in "set1" and "set2" that does not exist in the other
bash: sort File File | uniq <|endoftext|>
<|endoftext|> english: Search the "your/dir" directory for empty subdirectories
bash: find Path -mindepth Quantity -prune -empty <|endoftext|>
<|endoftext|> english: List the current directory recursively ignoring the "dir1" subdirectory
bash: find Path -path Regex -prune -or -print <|endoftext|>
<|endoftext|> english: Search everywhere for hidden file `.profile'
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: find all the text files in the home folder
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: Mount a partition in "$IMAGE" with offset "$OFFSET" to "media/$DEST" as read only using a loop device
bash: mount -o ro,loop,offset=$OFFSET -t auto Regex Regex <|endoftext|>
<|endoftext|> english: Find recursively the latest modified file in the current directory
bash: find Path -type f -printf '%TY-%Tm-%Td %TH:%TM: %Tz %p\n' | sort -n | tail -n Quantity <|endoftext|>
<|endoftext|> english: Find all *.* files not within .git directory and run $SED_CMD -i "s/$1/$2/g" on each of them
bash: find Path -type f -name Regex -not -path Regex -print0 | xargs -0 <|endoftext|>
<|endoftext|> english: Print A record for domain 'domain.' from 'ns1.newnameserver' nameserver
bash: dig Regex Regex a <|endoftext|>
<|endoftext|> english: display the directory name along with the modified time  for all the files /var
bash: find Path -maxdepth Quantity -type d -printf "%p %TY-%Tm-%Td %TH:%TM:%TS %Tz\n" <|endoftext|>
<|endoftext|> english: Continuously convert "20131202" into "2013 12 02" and print the result
bash: yes Regex | sed -e Program -e Program <|endoftext|>
<|endoftext|> english: Find all files under current directory and set read permission for group and other for these files
bash: find Path -type f -print0 | xargs -0 -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: display all instances of "foo.cpp" file in the current folder which are not in the sub directory tree ".svn"
bash: find Path -name Regex ! -path Regex <|endoftext|>
<|endoftext|> english: find all files in the file system whose size is exactly 2KB
bash: find Path -size Size <|endoftext|>
<|endoftext|> english: Change the ownership to the user daisy for all directories under current directory that are owned by harry
bash: find Path -type d -user Regex -exec chown Regex {} \; <|endoftext|>
<|endoftext|> english: Forward port 12345 bound on 'localhost' to port 12345 on 'otherHost' as user 'otherUser'
bash: ssh -f -N -L Regex Regex <|endoftext|>
<|endoftext|> english: Print the current directory name without full path
bash: echo Regex | sed Program <|endoftext|>
<|endoftext|> english: Counts all files in a current folder and subfolders.
bash: find Path -type f | wc -l <|endoftext|>
<|endoftext|> english: display the name and size of all the regular/normal files  in the current folder which are bigger than 50MB
bash: find Path -type f -size +Size -exec ls -l -h {} \; | awk Program <|endoftext|>
<|endoftext|> english: Copy "6.3.3/6.3.3/macosx/bin/mybinary" to "~/work/binaries/macosx/6.3.3/" and create directory "~/work/binaries/macosx/6.3.3/" if "~/work/binaries/macosx/" exists
bash: rsync File File <|endoftext|>
<|endoftext|> english: Get IP address of your SSH session
bash: who File Regex --ips | awk Program <|endoftext|>
<|endoftext|> english: Move "tobecopied/tobeexclude" to "tobeexclude"
bash: mv File File <|endoftext|>
<|endoftext|> english: find directories under the $LOGDIR directory where there has been no modifications within the last 24 hours and compresses the files.
bash: find Path -type d -mtime +Timespan -exec compress File {} \; <|endoftext|>
<|endoftext|> english: Read a line from standard input into variable "message" with escaped prompt "Please Enter a Message: \n\b"
bash: read -p $( echo -e Regex ) Regex <|endoftext|>
<|endoftext|> english: files all files which expect directories and display count of them
bash: find Path ! -type d Path Path <|endoftext|>
<|endoftext|> english: Find all regular files under test directory
bash: find Path -type f <|endoftext|>
<|endoftext|> english: Get the total sizes of all files under current directory
bash: find Path -type f -printf '%s\n' | awk Program <|endoftext|>
<|endoftext|> english: List all files in a current folder, separating names with comma
bash: ls -1 | tr Regex Regex <|endoftext|>
<|endoftext|> english: Display all regular files under current directory tree ignoring files in './dir1' and './dir2' directories
bash: find Path -type f | sed Program <|endoftext|>
<|endoftext|> english: Find all regular files in the current directory tree that have been modified within the last 10 minutes
bash: find Path -type f -mmin -Quantity <|endoftext|>
<|endoftext|> english: change the group of all the files in the file system which belong to the group with the gid 999
bash: find Path -group Regex -exec chgrp Regex {} \; <|endoftext|>
<|endoftext|> english: Calculate md5 sum of file $ecriv
bash: md5sum File <|endoftext|>
<|endoftext|> english: Save the user name of the current user to variable "me"
bash: whoami <|endoftext|>
<|endoftext|> english: Print the PIDs of the current user's instances of "firefox"
bash: ps -u $( whoami ) | grep Regex | awk Program <|endoftext|>
<|endoftext|> english: Find all *fink* files/directories in entire file system
bash: find Path \( -type f -or -type d \) -name Regex -print <|endoftext|>
<|endoftext|> english: Remove all files that are not newer than Jul 01 by modification time
bash: find Path ! -newermt Regex -type f -print0 | xargs -0 -I {} rm {} <|endoftext|>
<|endoftext|> english: Print source of the file system containing $path.
bash: df -P File | tail - Quantity | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: List all regular files under the current directory and below it
bash: find Path -type f -print0 | xargs -0 -I {} ls -l {} <|endoftext|>
<|endoftext|> english: Search for files whose size is between 100 kilobytes and 500 kilobytes
bash: find Path -size +Size -and -size -Size <|endoftext|>
<|endoftext|> english: Finds all users logged in via ssh.
bash: w | grep Regex <|endoftext|>
<|endoftext|> english: display list of all the files in the current directory
bash: find | xargs -I {} ls {} <|endoftext|>
<|endoftext|> english: Find *.html files in the current directory tree that were last modified more than 7 days ago
bash: find Path -mtime +Timespan -name Regex -print <|endoftext|>
<|endoftext|> english: Print file name without the last two extensions assuming the file name doesn't contain any other dots.
bash: echo Regex | rev | cut -d Regex -f Number | rev <|endoftext|>
<|endoftext|> english: Find all files and directories whose names end in ".rpm", ignoring removable media, such as cdrom, floppy, etc.
bash: find Path -xdev -name Regex <|endoftext|>
<|endoftext|> english: Archive "./dir" to "user@host:/path" via ssh on port 2222 and display progress
bash: rsync -r -v -z -e ssh -p Regex --progress File File <|endoftext|>
<|endoftext|> english: Find links to file path/to/foo.txt
bash: find -L Path -samefile Regex <|endoftext|>
<|endoftext|> english: Print common lines of files "file1", "file2", "file3", and "file4"
bash: comm -1 -2 <( comm -1 -2 <( comm -1 -2 <( sort File ) <( sort File ) ) <( sort File ) ) <( sort File ) <|endoftext|>
<|endoftext|> english: Delete files with inode number specified by [inode-number] under current directory
bash: find Path -inum Quantity -exec rm -i {} \; <|endoftext|>
<|endoftext|> english: Remove all files under /home/user/Maildir/.SPAM/cur
bash: find Path -type f | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: List environment variables and their values whose name matches '^\w*X\w*'
bash: set | grep -P Regex <|endoftext|>
<|endoftext|> english: List all aliencoders.[0-9]+ files/directories under /home/jassi/ directory
bash: find Path -name Regex | xargs -I {} ls -l -r -t {} | awk Program Program <|endoftext|>
<|endoftext|> english: Make a new directory "new-dir" in every directory in the current working directory non-recursively
bash: find Path -maxdepth Quantity -type d | xargs -I {} mkdir Directory <|endoftext|>
<|endoftext|> english: Search for files with "sitesearch" in their names and "demo" in their path names
bash: find Path -iname Regex | grep Regex <|endoftext|>
<|endoftext|> english: Find recursively all Emacs backup files in the current directory and remove them
bash: find Path -name Regex | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: Prints process tree of the current command process.
bash: pstree -p Regex <|endoftext|>
<|endoftext|> english: Remove files that are less than 1MB in size under current directory
bash: find Path -type f -size -Size -exec rm {} + <|endoftext|>
<|endoftext|> english: Display machine architecture, ie. x86_64
bash: uname -m <|endoftext|>
<|endoftext|> english: delete all the files ending with "~" in current folder
bash: find Path -name Regex -print0 | xargs -0 -I {} rm {} <|endoftext|>
<|endoftext|> english: Search the current directory tree for *.conf and *.txt files
bash: find Path -type f \( -name Regex -or -name Regex \) -print <|endoftext|>
<|endoftext|> english: Print all file/directory names with white space safety under the /proc directory
bash: find Path -print0 | xargs -0 <|endoftext|>
<|endoftext|> english: Split "input.txt" into files with 1 line each and use a prefix "output." and a suffix length of 5
bash: split --lines Quantity --suffix-length Quantity File Regex <|endoftext|>
<|endoftext|> english: Search for files/directories which are writable by somebody (their owner, or their group, or anybody else)
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: Search the current directory tree for regular files lacking read permissions for user, group, or others
bash: find Path -type f ! -perm -Permission <|endoftext|>
<|endoftext|> english: find all files in the current folder which have been modified in the last 24 hours
bash: find Path -mtime -Timespan -print <|endoftext|>
<|endoftext|> english: Send SIGWINCH process to current shell, causing it to update the LINES and COLUMNS variables which describe the size of the screen/window in characters.
bash: kill -s Regex Regex <|endoftext|>
<|endoftext|> english: Set the variable "me" to the name of the running script, or shell, login shells have a hyphen appended to the beginning of the name, such as "-bash".
bash: basename -- Regex <|endoftext|>
<|endoftext|> english: Print which files differ in "dir1" and "dir2" recursively
bash: diff -r -q File File <|endoftext|>
<|endoftext|> english: Change permission to 000 of all directories named '.texturedata' under '/path/to/look/in/' directory tree
bash: find Path -type d -name Regex -prune -print0 | xargs -0 -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: display all the files in the entire file system which begin with "apache-tomcat"
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Display differences between /destination/dir/1 and /destination/dir/2 excluding XML files.
bash: diff File File -r -x Regex <|endoftext|>
<|endoftext|> english: Print only common strings in sorted content of files 'file1' and 'file2'
bash: comm -1 -2 <( sort File ) <( sort File ) <|endoftext|>
<|endoftext|> english: Merge file1 and file2 by outputting all lines where the first comma-separated field of both files matches, followed by extra fields in file1 and those in file2
bash: join -t Regex <( sort File ) <( sort File ) <|endoftext|>
<|endoftext|> english: Print the kernel configuration options found in "/proc/config.gz"
bash: cat File | gunzip <|endoftext|>
<|endoftext|> english: search all undo files(ending with .undo) in the current folder and calculate the total size of them
bash: find Path -name Regex -exec wc -c {} + | tail -n Quantity <|endoftext|>
<|endoftext|> english: Print lines in the sorted contents of "file2" that are not in the sorted contents of "file1"
bash: comm -1 -3 <( sort File ) <( sort File ) <|endoftext|>
<|endoftext|> english: Find files/directories under current directory without descending into it
bash: find Path -prune <|endoftext|>
<|endoftext|> english: Find all *.foo files under current directory and print their contents
bash: find Path -name Regex -exec cat {} + <|endoftext|>
<|endoftext|> english: Print the input "hello world" followed by a swap of the first two awk fields
bash: echo Regex Regex | tee >( awk Program ) <|endoftext|>
<|endoftext|> english: Print string "123" once with '1' replaced by 'a' and second time replaced by 'b'
bash: echo Regex | tee >( tr Regex Regex ) | tr Regex Regex <|endoftext|>
<|endoftext|> english: Create a symbolic link in the current directory to "$file"
bash: ln -s File <|endoftext|>
<|endoftext|> english: Prompt the user with a question "This is the question I want to ask?" and save "y" or "n" in variable "REPLY" in zsh
bash: read Regex <|endoftext|>
<|endoftext|> english: find all the core files in the temp folder and force delete them
bash: find Path -name Regex -type f -print | xargs -I {} rm -f {} <|endoftext|>
<|endoftext|> english: Pushes current folder to the directory stack.
bash: pushd Directory <|endoftext|>
<|endoftext|> english: Find text files modified less than 5 days ago
bash: find Path -name Regex -mtime Timespan <|endoftext|>
<|endoftext|> english: Archive the entire file system into tarfile.tar.bz2
bash: find Path -print0 | xargs -0 -I {} tar -c -j -f File {} <|endoftext|>
<|endoftext|> english: Print the number of regular files found in the current directory tree
bash: find Path -type f | wc -l <|endoftext|>
<|endoftext|> english: Join comma-separated information in 4 files
bash: join -t Regex <( sort File ) <( sort File ) | join -t Regex File <( sort File ) | join -t Regex File <( sort File ) <|endoftext|>
<|endoftext|> english: Finds out what groups a given user has.
bash: groups Regex <|endoftext|>
<|endoftext|> english: display all the directories in the current folder excluding those that are present in the aa directory tree
bash: find Path -type d -name Regex -prune -or -print <|endoftext|>
<|endoftext|> english: Search the /myfiles directory tree for files last accessed more than 30 days ago
bash: find Path -atime +Timespan <|endoftext|>
<|endoftext|> english: Save a line of 100 random characters either "." or " " in variable "foo"
bash: cat File | tr -d -c Regex | fold -w Quantity | head - Quantity <|endoftext|>
<|endoftext|> english: Print the current working directory with resolved symbolic links
bash: pwd -P <|endoftext|>
<|endoftext|> english: find files in home directory that names are game
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all PHP files under current directory that contain only one line
bash: find Path -type f -name Regex -exec wc -l {} \; | grep -E Regex <|endoftext|>
<|endoftext|> english: Find all the files whose name is tecmint.txt and contains both capital and small letters in /home directory
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: Split "/etc/gconf/schemas/gnome-terminal.schemas" into 1000000 files of about equal size
bash: split -n Quantity File <|endoftext|>
<|endoftext|> english: Execute "ps -C java -o pcpu,state,cputime,etimes" every second
bash: watch -n Quantity ps -C java -o pcpu,state,cputime,etimes <|endoftext|>
<|endoftext|> english: change the permissions of all the directories  to 775 in the current folder
bash: find Path -type d -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Find all files named 'file' in 1 level down the current directory whose status were changed more than 1 day ago
bash: find Path -maxdepth Quantity -ctime +Timespan -name Regex <|endoftext|>
<|endoftext|> english: Removes all files from current folder but 5 newest ones.
bash: rm $( ls -t | awk Program ) <|endoftext|>
<|endoftext|> english: Find all fglrx-libGL* files under and below debian/fglrx/
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Search the current directory tree for regular files whose names begin with "orapw"
bash: find Path -name Regex -type f <|endoftext|>
<|endoftext|> english: Find files that have been modified within the last month and copy them somewhere
bash: find Path -mtime -Timespan | xargs -0 -I {} cp File {} <|endoftext|>
<|endoftext|> english: Search for files/directories with the case insensitive pattern anaconda.* in /var/log directory and create an archive (file.tar) of the last file found
bash: find Path -iname Regex -exec tar -c -v -f File {} \; <|endoftext|>
<|endoftext|> english: Prints path to folder that contains target of the symbolic link ../../../../etc/passwd.
bash: $( dirname $( readlink -e File ) ) <|endoftext|>
<|endoftext|> english: Find *.c and *.sh files
bash: find Path -type f \( -name Regex -or -name Regex \) <|endoftext|>
<|endoftext|> english: Recursively copies everything from '/source/path/*' to the '/destination/path/', preserving from overwriting existing files, and printing info message on each operation.
bash: cp -R -v -n File File <|endoftext|>
<|endoftext|> english: Find all php files whose name is tecmint.php in the current directory
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: Print 2 lines of "123456789"
bash: yes Regex | head - Quantity <|endoftext|>
<|endoftext|> english: Find all .txt files of user Tecmint under /home directory
bash: find Path -user Regex -iname Regex <|endoftext|>
<|endoftext|> english: Gets string with MAC address of eth0 network interface.
bash: ifconfig Regex | grep Regex <|endoftext|>
<|endoftext|> english: Search core files in current direcory and delete .
bash: find Path -name Regex -exec rm {} \; <|endoftext|>
<|endoftext|> english: find all the normal/regular files in /etc/sysconfig which have been accesses in the last 30 minutes
bash: find Path -amin -Quantity -type f <|endoftext|>
<|endoftext|> english: List regular files in current directory with read, write and execute permission for all users and also show the permissions
bash: find Path -type f -perm Permission -exec ls -l {} \; <|endoftext|>
<|endoftext|> english: Find files on the system that are bigger than 20 megabytes
bash: find Path -type f -size +Size -exec ls -l -h {} \; | awk Program <|endoftext|>
<|endoftext|> english: Print the current working directory prepended by "pwd: "
bash: echo Regex $( pwd ) <|endoftext|>
<|endoftext|> english: display all files in the current folder with the name test excluding those that are present in the sub folders of the test folder
bash: find Path -name Regex -prune <|endoftext|>
<|endoftext|> english: Search the home directory tree for files owned by sam
bash: find Path -user Regex <|endoftext|>
<|endoftext|> english: Check md5sum of directory /path against the checksum saved in file 'file'
bash: du -c -s -x -b File | md5sum -c File <|endoftext|>
<|endoftext|> english: find all the javascript files in current folder using regular expressions
bash: find Path -regex Regex <|endoftext|>
<|endoftext|> english: Gets MAC address of 'eth0' network interface.
bash: ifconfig Regex | grep -E -o Regex <|endoftext|>
<|endoftext|> english: Find all files under $source_dir that match the regex expanded by $input_file_type in their paths
bash: find Path -type f | grep -E Regex <|endoftext|>
<|endoftext|> english: Search the entire system for SUID or SGID files
bash: find Path -path Regex -prune -or -type f -perm +Permission -ls <|endoftext|>
<|endoftext|> english: Search the home directory tree for files last modified less than 2 days ago or newer than file "filename"
bash: find Path -mtime -Timespan -or Path Path <|endoftext|>
<|endoftext|> english: search for a word in all the files in the current directory and display the list of matched files.
bash: find Path -type f -exec grep -l Regex {} \; <|endoftext|>
<|endoftext|> english: Remount "/system" with read and write permission
bash: mount -o remount,rw Regex <|endoftext|>
<|endoftext|> english: Recursively removes all files and folders like 'FILE-TO-FIND' from current folder.
bash: find Path -name Regex -exec rm -r -f {} \; <|endoftext|>
<|endoftext|> english: Find all *company* files/directories under /root/of/where/files/are directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Find all files under var/ directory and change their permission to 600
bash: find Path -type f -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Find all the files which are modified 50 days back
bash: find Path -mtime Timespan <|endoftext|>
<|endoftext|> english: Use the output of "ping google.com" as input to awk script "packet_loss.awk"
bash: ping Regex | awk -f File <|endoftext|>
<|endoftext|> english: Find all files under /path/to/base/dir and change their permission to 644
bash: chmod Permission $( find Path -type f ) <|endoftext|>
<|endoftext|> english: Search for 'class Pool' in all *.java (case insensitive) files under current directory
bash: find Path -iname Regex | xargs -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: Find every JavaScript file in the wordpress directory tree
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Print the first line of output after alphabetically sorting the file "set"
bash: head - Quantity <( sort File ) <|endoftext|>
<|endoftext|> english: Search the files residing in the current directory tree whose names contain "bills" for "put"
bash: find Path -name Regex -exec grep Regex {} \; <|endoftext|>
<|endoftext|> english: Find all files on the system whose names are 'composer.json' and search them for "drush"
bash: find Path -name Regex -exec grep -n Regex {} File \; <|endoftext|>
<|endoftext|> english: display all the ".c" files in the current folder excluding those that are present in all the sub directories
bash: find Path \( ! -name Regex -prune \) -name Regex -print <|endoftext|>
<|endoftext|> english: Serach  in root directory all files which  have more than 2 links.
bash: find Path -links +Quantity -print <|endoftext|>
<|endoftext|> english: Remove all files/directories in the current directory without '.git' and '.gitignore'
bash: find Path -mindepth Quantity -depth -print0 | grep -v -E -z -Z Regex | xargs -0 -I {} rm -r -v -f {} <|endoftext|>
<|endoftext|> english: Search directory trees /usr/share/doc, /usr/doc, and /usr/locale/doc for files named 'instr.txt'
bash: find Path Path Path -name Regex <|endoftext|>
<|endoftext|> english: Change permissions to 644 for all regular files in and below the current directory
bash: find Path -type f -print | sed -e Program -e Program | xargs -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: Find all 1US* files/directories under current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Archive the list of 1st level subdirectories in /fss/fin to /fss/fi/outfile.tar.gz
bash: tar -c -z -f File $( find Path -d Path -type d -name Regex -print ) <|endoftext|>
<|endoftext|> english: Return the depth of the current directory tree
bash: find Path -type d -printf '%d:%p\n' | sort -n | tail - Quantity <|endoftext|>
<|endoftext|> english: find all of the files that are readable
bash: find Path Path <|endoftext|>
<|endoftext|> english: Make a new directory "new-dir" in every directory in the current directory tree
bash: find Path -type d | xargs -I {} mkdir Directory <|endoftext|>
<|endoftext|> english: file1 and file2 contain lines of comma-separated information, for each line whose first field matches, and where 3rd field of file1 matches 2nd field of file2, 6th field of file1 matches 3rd field of file2, and 7th field of file1 matches 4th field of file2, output: fields 1, 2, 3, 4, 6, and 7 of file1.
bash: join -t Regex File File | awk -F Regex Program <|endoftext|>
<|endoftext|> english: create directory aaa
bash: mkdir Directory <|endoftext|>
<|endoftext|> english: Find all directories in the /path/to/base/dir tree
bash: find Path -type d <|endoftext|>
<|endoftext|> english: search for a word in all the php files in the current folder and display the count of all matching lines.
bash: find Path -name Regex -type f -exec grep -H -n Regex {} \; | wc -l <|endoftext|>
<|endoftext|> english: Find all files/directories in entire file system for which owner has read/write/execute permissions, or the group has at least execute permission, or others have at least execute permission
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: Gets domain name from dig reverse lookup and save in variable 'go'.
bash: dig -x Regex | awk Program <|endoftext|>
<|endoftext|> english: get year-month-day from date
bash: date +%Y-%m-%d <|endoftext|>
<|endoftext|> english: Find files named 'fileName.txt' under '/path/to/folder' directory tree ignoring 'ignored_directory'
bash: find Path -name Regex -not -path Regex <|endoftext|>
<|endoftext|> english: Find all *.jpg files and copy them to /
bash: find Path -type f -name Regex -exec cp {} File \; <|endoftext|>
<|endoftext|> english: Search the first 300 commands in history containing "scp" and ending in "important"
bash: history Quantity | grep Regex | grep Regex <|endoftext|>
<|endoftext|> english: Find all files/directories named 'имя_файла' in the entire filesystem
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: find all the files in current folder which have been updated in the last 60 minutes
bash: find Path -mmin -Quantity <|endoftext|>
<|endoftext|> english: Wrap each line in "file.txt" to fit in 80 characters
bash: fold -w Quantity File <|endoftext|>
<|endoftext|> english: Replace all spaces with underscores in directory paths under current directory.
bash: find Path -name Regex -type d | rename Regex <|endoftext|>
<|endoftext|> english: Find *.scm files recursively in the current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: change the permissions of all the normal files in a directory
bash: find Path -type f -print0 | xargs -0 -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: Replace all instances of "STRING_TO_REPLACE" with "STRING_TO_REPLACE_IT" in file "index.html" and make a backup with suffix ".bak"
bash: sed -i Regex Program File <|endoftext|>
<|endoftext|> english: move files accessed more than one day ago to directory TMP
bash: find Path -atime +Timespan -type f -exec mv {} File \; <|endoftext|>
<|endoftext|> english: Find files matching the pattern "./sr*sc" in their paths under current directory
bash: find Path -path Regex <|endoftext|>
<|endoftext|> english: Search the current directory tree for files whose names end in "rb" or "js" and which contain string "matchNameHere"
bash: find Path -regextype posix-ergep -regex Regex -exec grep -l Regex {} \; <|endoftext|>
<|endoftext|> english: Search *.txt files under and below /directory/containing/files for "pattern_to_search"
bash: find Path -type f -name Regex -exec grep -H Regex {} + <|endoftext|>
<|endoftext|> english: Print the list of all regular files from the current directory tree that contain "confirm", case insensitive
bash: find Path -type f -exec grep -i -l Regex {} \; <|endoftext|>
<|endoftext|> english: Remove all files containing 'sample' (case insensitive) in their names under '/home/user/Series' directory tree
bash: find Path -iname Regex -exec rm {} \; <|endoftext|>
<|endoftext|> english: Assigns MAC address 00:80:48:BA:d1:30 to interface eth0.
bash: ifconfig Regex Regex Regex Regex <|endoftext|>
<|endoftext|> english: Find files named 'core' in or below the directory /tmp and delete them
bash: find Path -depth -name Regex -type f -delete <|endoftext|>
<|endoftext|> english: Set the executable bit for all users on all .sh scripts from directory trees lib, etc, debian
bash: find Path Path Path -name Regex -type f | xargs -I {} chmod +Permission {} <|endoftext|>
<|endoftext|> english: Recursively prints .txt files in current directory
bash: find Path $( pwd ) -name Regex -print <|endoftext|>
<|endoftext|> english: Find all regular files under and below /root that match pattern "*linux*", case insensitive
bash: find Path -type f -iname Regex <|endoftext|>
<|endoftext|> english: Find all the files recursively in directories or files taken from the glob pattern /tmp/test/* that have been modified today
bash: find Path -mtime -Timespan <|endoftext|>
<|endoftext|> english: Print A record for domain 'domain.' from 'ns2.newnameserver' nameserver
bash: dig Regex Regex a <|endoftext|>
<|endoftext|> english: Find all *.[ch] files under current directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Creates temporary folder in TMPDIR (if defined) or in '/tmp/', and stores path to created folder in 'tmpdir' variable.
bash: mktemp -d <|endoftext|>
<|endoftext|> english: Find all files named "test2" in the current directory
bash: find Path -name Regex -prune <|endoftext|>
<|endoftext|> english: Find all .txt files in current  directory and rename with  .html .
bash: find Path -type f -name Regex -exec mv {} $( basename {} Regex ) File \; <|endoftext|>
<|endoftext|> english: Move all files and directories in the current directory to "/tmp/blah/"
bash: mv File File <|endoftext|>
<|endoftext|> english: Keep the last 4 ASCII characters (bytes) of a string.
bash: echo Regex | rev | cut -b Number | rev <|endoftext|>
<|endoftext|> english: Search the *.code files from the current directory tree for string 'pattern'
bash: find Path -name Regex -exec grep -H Regex {} + <|endoftext|>
<|endoftext|> english: Find all files/directories that are owned by user 'eric' under current directory tree
bash: find Path -user Regex -print <|endoftext|>
<|endoftext|> english: Recursively change the owner of all files in "upload_directory" to "nobody"
bash: chown -R Regex File <|endoftext|>
<|endoftext|> english: Search the current directory tree for files whose name is ".note", case insensitive
bash: find Path -iname Regex <|endoftext|>
<|endoftext|> english: Print DISPLAY of "orschiro" user
bash: who | sed -e Program | head -n Quantity <|endoftext|>
<|endoftext|> english: Print content of all files found regarding seach options '[whatever]'
bash: find Path -exec cat {} \; <|endoftext|>
<|endoftext|> english: Print the full name of "$USER"
bash: finger Regex | head -n Quantity | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: find all the files in the file system which are bigger than 3 bytes
bash: find Path -size +Size -print <|endoftext|>
<|endoftext|> english: Find all files/directories  under  /eserver6 directory and follow symlinks if needed
bash: find Path -L <|endoftext|>
<|endoftext|> english: find all empty files
bash: find Path -empty <|endoftext|>
<|endoftext|> english: display all normal/regular files in current folder in sorted order
bash: find Path -type f Path | sort -r <|endoftext|>
<|endoftext|> english: Count the toal number of lines in all .py files in current directory tree
bash: find Path -name Regex -exec wc -l {} \; | awk Program <|endoftext|>
<|endoftext|> english: read all history lines not already read from the history file
bash: history -n <|endoftext|>
<|endoftext|> english: Count the number of .gz files in directory tree /home/user1/data1/2012/mainDir
bash: find Path -name Regex | wc -l <|endoftext|>
<|endoftext|> english: display all regular/normal files in a directory
bash: find Path -type f <|endoftext|>
<|endoftext|> english: Search the /mnt/raid/upload directory tree for files that have not been modified within the last 5 days
bash: find Path -mtime +Timespan -print <|endoftext|>
<|endoftext|> english: List files with C-style escape sequences for non-alphanumeric characters
bash: ls -b <|endoftext|>
<|endoftext|> english: Print all the file/directory paths under current directory
bash: find | xargs <|endoftext|>
<|endoftext|> english: Finds users with X session in system and puts the result into USERS variable
bash: awk Program <( w ) <|endoftext|>
<|endoftext|> english: Find all PHP files under current directory that contain only one line
bash: find Path -type f -name Regex -exec grep -H -c -m Quantity Regex {} + | sed -n Program <|endoftext|>
<|endoftext|> english: Make directories for each line in "folder_list.txt"
bash: cat File | xargs -I {} mkdir {} <|endoftext|>
<|endoftext|> english: Find all .gz archives in the current directory tree and check if they are valid
bash: find Path -name Regex -exec gunzip {} \; <|endoftext|>
<|endoftext|> english: Search the CSS files found in the current directory tree for string "foo"
bash: find Path -name Regex -print0 | xargs -0 -I {} grep -n -H Regex {} <|endoftext|>
<|endoftext|> english: Find all files/directories under '/usr/share/data' directory tree that match the posix extended regex ".*/20140624.*" in their paths and save the list to '/home/user/txt-files/data-as-of-20140624.txt'
bash: find Path -regextype posix-extended -regex Regex -fprint File <|endoftext|>
<|endoftext|> english: File 'save_pid.txt' contains a process ID, instantly kill this process with SIGKILL signal.
bash: kill - Regex $( cat File ) <|endoftext|>
<|endoftext|> english: Finds files in 'directory' folder with the same name and location but different content than files in 'directory.original' folder and prints location of such files.
bash: diff -q -r File File | cut -d Regex -f Number | xargs -I {} dirname {} | uniq <|endoftext|>
<|endoftext|> english: Find files ending in "*macs"
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Recursively copy directories "A" and "D" to directory "/path/to/target/directory" on host "anotherhost", connecting as ssh user matching current user on local host, via default TCP port for ssh (22).
bash: scp -r File File File <|endoftext|>
<|endoftext|> english: Prints process tree of a current process with id numbers and parent processes.
bash: pstree -s -p Regex <|endoftext|>
<|endoftext|> english: Find all the files in file system which are greater than 50MB and less than 100MB
bash: find Path -size +Size -size -Size <|endoftext|>
<|endoftext|> english: Modify interval to 0.1 seconds for the watch command
bash: watch -n Quantity <|endoftext|>
<|endoftext|> english: Replace all occurrences of 'previousword' with 'newword' in all regular files with '.cpp' extension under '/myprojects' directory tree and modify them in-place
bash: find Path -type f -name Regex -print0 | xargs -0 -I {} sed -i Program {} <|endoftext|>
<|endoftext|> english: Number each line in "foobar" as right-justified zero padded to a width of 9
bash: nl -n rz -w Quantity File <|endoftext|>
<|endoftext|> english: Connect to host "${HOSTNAME}" as user "${USERNAME}" and execute "${SCRIPT}" non-interactively
bash: ssh -l Regex Regex command <|endoftext|>
<|endoftext|> english: search for all the text files in the folder /foo and delete them
bash: find Path -name Regex -exec rm -v {} \; <|endoftext|>
<|endoftext|> english: Show the list of directories in the /mnt/raid directory tree
bash: find Path -type d -print <|endoftext|>
<|endoftext|> english: Read one character from standard input into variable "REPLY"
bash: read -n Quantity <|endoftext|>
<|endoftext|> english: Find all directories under current directory and set read-write-execute permission for owner and group and no permission for other for those directories
bash: find Path -type d -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Find and remove all .mp3 regular files under the current directory and below
bash: find Path -type f -name Regex -exec rm -f {} \; <|endoftext|>
<|endoftext|> english: find file end with  '.txt' in current directory.
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Count the number of files in the directory trees whose pathnames match pattern '/dev/sd*[a-z]'
bash: find Path -printf . | wc -c <|endoftext|>
<|endoftext|> english: show all the files in the entire file system which are bigger than 1.1GB
bash: find Path -size +Size <|endoftext|>
<|endoftext|> english: Search all the *.pl files in the current directory and subdirectories, and print the names of any that don't have a line starting with 'use strict'
bash: find Path -name Regex | xargs -I {} grep -L Regex {} <|endoftext|>
<|endoftext|> english: Create intermediate directories "tmp" as required and directories real_dir1 and real_dir2
bash: mkdir -p Directory Directory <|endoftext|>
<|endoftext|> english: Recursively finds all files in root folder and prints all strings with 'text-to-find-here' from that files, ignoring binary files.
bash: find Path -type f -exec grep -l Regex {} \; <|endoftext|>
<|endoftext|> english: search for the word hello in all the text files in the temp folder and delete them
bash: find Path -type f -name Regex | sed -e Program | xargs -n Quantity -I {} grep -l Regex {} | sed -e Program | xargs -n Quantity -I {} rm -f {} <|endoftext|>
<|endoftext|> english: Remove trailing white spaces from all files under dir directory and keep backups of the originals
bash: find Path -type f -print0 | xargs -0 -I {} sed -i Program File File {} <|endoftext|>
<|endoftext|> english: find all files in current folder which are bigger than 1 MB and move them to another folder after user confirmation
bash: find Path -size +Size -ok mv {} File File \; <|endoftext|>
<|endoftext|> english: Remove all files with a txt extension under current directory
bash: find Path -type f -name Regex -exec rm {} \; -print <|endoftext|>
<|endoftext|> english: Print a hex dump of "$DIREC" as characters
bash: echo Regex | od -c <|endoftext|>
<|endoftext|> english: display all the regular files in the current folder excluding those that are present in the path "git"
bash: find Path -path Regex -prune -or -type f -print <|endoftext|>
<|endoftext|> english: display all text files in current folder
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: recursively change user of the direct public_html and all files into it to user owner
bash: chown -R Regex File <|endoftext|>
<|endoftext|> english: Find all files in current directory and search for 'searchName' in those files
bash: find Path -name Regex | xargs -I {} grep Regex {} <|endoftext|>
<|endoftext|> english: Counts the number of lines in *.php and *.inc files in a current folder and subfolders.
bash: find Path -name Regex -or -name Regex | xargs -I {} wc -l {} <|endoftext|>
<|endoftext|> english: replaces the last occurrence of 'a' with 'c' in file
bash: tac File | sed Program | tac <|endoftext|>
<|endoftext|> english: List the unique second "/" delimited field of every line from standard input prefixed by the number of occurrences
bash: cut -d Regex -f Number | cut -d Regex -f Number | sort | uniq -c <|endoftext|>
<|endoftext|> english: List ".java" files that have the same contents
bash: md5sum File | sort | uniq -d -w Quantity <|endoftext|>
<|endoftext|> english: find all the xml files in the current folder except those that are present in the workspace folder and create a tarball of these files
bash: find Path -name Regex | grep -v Regex | tr Regex Regex | xargs -0 -I {} tar -c -f File {} <|endoftext|>
<|endoftext|> english: Search the current directory recursively for files with the exact permissions u=rwx,g=rx,o=rx
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: Find all files named "file.ext" in the current directory tree and print the path names of the directories they are in
bash: find Path $( pwd ) -name Regex -exec echo $( dirname {} ) \; <|endoftext|>
<|endoftext|> english: search for the word "slrn" in all the files in the folder $HOME/html/andrews-corner
bash: find Path -exec grep -q Regex {} \; -print <|endoftext|>
<|endoftext|> english: Wrap each line in "longline" to a maximum of 30 characters breaking at spaces
bash: fold -w Quantity -s File <|endoftext|>
<|endoftext|> english: Show all lines as they are executed and stop at the first command returning nonzero
bash: set -e -x <|endoftext|>
<|endoftext|> english: List all directories in current directory, works even if they have weird names or names starting with a dash.
bash: find Path -maxdepth Quantity -type d | awk -F Regex Program <|endoftext|>
<|endoftext|> english: Change user to "amzadm" and group to "root" of "/usr/bin/aws"
bash: chown Regex File <|endoftext|>
<|endoftext|> english: Find files in the current directory tree whose status was changed within the last 60 minutes
bash: find Path -cmin -Quantity <|endoftext|>
<|endoftext|> english: sort based on size and display top ten small normal/regular files in the current folder
bash: find Path -type f -exec ls -s {} \; | sort -n | head - Quantity <|endoftext|>
<|endoftext|> english: change the group to "new_group" and permissions to 770 for all the files in the current folder
bash: find Path -name Regex -exec chgrp -v Regex {} \; -exec chmod -v Permission {} \; <|endoftext|>
<|endoftext|> english: delete all the empty in the current folder do not search in sub directories
bash: find Path -maxdepth Quantity -type d -empty -exec rm {} \; <|endoftext|>
<|endoftext|> english: Count the number of directories in the current directory and below
bash: find Path -type f -exec basename {} \; | wc -l <|endoftext|>
<|endoftext|> english: Sets 'extglob' shell variable.
bash: shopt -s extglob <|endoftext|>
<|endoftext|> english: Force create a symbolic link as a file named "/usr/lib/jvm/default-java" to "$default_java_dir" with verbose output
bash: ln -s -T -f -v File Regex <|endoftext|>
<|endoftext|> english: List only the non-hidden empty files only in the current directory.
bash: find Path -maxdepth Quantity -empty -not -name Regex <|endoftext|>
<|endoftext|> english: Find all files/directories named 'java' under /usr directory
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: View manual page of the find command
bash: man Regex <|endoftext|>
<|endoftext|> english: Change directory to the current user's home directory
bash: cd $( whoami ) <|endoftext|>
<|endoftext|> english: find the count of all the charcters of the list of regular files present in the current folder
bash: find Path -type f | xargs | wc -c <|endoftext|>
<|endoftext|> english: Remove all files from the current directory tree whose names do not end with ".tex" or ".bib"
bash: find Path | grep -E -v Regex | xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: change the permissions of all the directories in the folder "/path/to/someDirectory" to 755
bash: find Path -type d -print0 | xargs -0 -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: In the current shell, interpret 'incl.sh' which is in the directory pointed by variable DIR
bash: source File <|endoftext|>
<|endoftext|> english: Clear the in-memory history and read from the current history file
bash: history -c -r <|endoftext|>
<|endoftext|> english: Display inputfile all on one line (replace newlines by spaces)
bash: awk Program Program <|endoftext|>
<|endoftext|> english: Find all directories under minimum 2 levels down the mydir directory
bash: find Path -mindepth Quantity -type d <|endoftext|>
<|endoftext|> english: List an empty environment (prints nothing)
bash: env -i <|endoftext|>
<|endoftext|> english: Find all directories under minimum 1 level down the current directory excluding  directories (along with their contents) that start with a . (dot) in their names
bash: find Path -mindepth Quantity -name Regex -prune -or \( -type d -print \) <|endoftext|>
<|endoftext|> english: Recursively copy directory "/path/to/data/myappdata" to "user@host:/remote/path/to/data/myappdata"
bash: rsync -r -v -v File File <|endoftext|>
<|endoftext|> english: Search the current directory for all files with no 'read' privilege for 'others'
bash: find Path -maxdepth Quantity ! -perm -Permission <|endoftext|>
<|endoftext|> english: Connect to port 1234 of specified IP address or hostname as ssh user "user", and copy all visible files in /var/www/mywebsite/dumps/ on this host to local directory /myNewPathOnCurrentLocalMachine - this directory must already exist on local host.
bash: scp -P Regex File File File File File File <|endoftext|>
<|endoftext|> english: List and sort all leaf directories (directories which don't contain any sub-directory) under current directory
bash: find Path -type d | sort | awk Program <|endoftext|>
<|endoftext|> english: Sort strings of 'test.txt' file by second from the end field
bash: rev File | sort -k Number | rev <|endoftext|>
<|endoftext|> english: Count the number of .gz files in the current directory tree
bash: find Path -name Regex | wc -l <|endoftext|>
<|endoftext|> english: find the regular js files which path does not contains '*/test/*'  and name does not contains '*-min-*' or '*console*'
bash: find Path ! -path Regex -type f -name Regex ! -name Regex ! -name Regex <|endoftext|>
<|endoftext|> english: Remove each unique item listed on standard input and do nothing if empty
bash: sort | uniq -u | xargs -r -I {} rm {} <|endoftext|>
<|endoftext|> english: Take a file path from standard input and remove it.
bash: xargs -I {} rm {} <|endoftext|>
<|endoftext|> english: Save the contents of "numbers.txt" to variable "f"
bash: cat File <|endoftext|>
<|endoftext|> english: find any files or directories called ".svn" under the current directory and run a recursive delete (without prompting) command on each one.
bash: find Path -iname Regex -exec bash -c rm -r -f {} \; <|endoftext|>
<|endoftext|> english: List files named "accepted_hits.bam" in the current directory tree prefixing their names with "somecommand"
bash: find Path $( pwd ) -name Regex | xargs -i -I {} echo Regex {} {} <|endoftext|>
<|endoftext|> english: Display inputfile all on one line (replace newlines by spaces)
bash: awk Program Program <|endoftext|>
<|endoftext|> english: Gets IP address of 'en1' network interface.
bash: ifconfig Regex | awk Program | grep -E -o Regex <|endoftext|>
<|endoftext|> english: Display only first and second dot-separated numbers of kernel version, ie. 4.4
bash: uname -r | sed Program <|endoftext|>
<|endoftext|> english: Find all files in the current directory аргумент and its sub-directories with the optional constraints of опция_поиска, значение and/or значение.
bash: find Path Path Path Path <|endoftext|>
<|endoftext|> english: Prints out all the logged-in users along with their group information.
bash: groups $( who | cut -d Regex -f Number ) <|endoftext|>
<|endoftext|> english: find all posix-extended regex  "[a-f0-9\-]\{36\}\.jpg" files
bash: find Path -regextype posix-extended -regex Regex <|endoftext|>
<|endoftext|> english: Remove everything in the current directory except files matching regular expression "exclude these"
bash: find Path -maxdepth Quantity | grep -v Regex | xargs -I {} rm -r {} <|endoftext|>
<|endoftext|> english: find .gif files in /var/www and below that were last changed between 90 and 180 days ago
bash: find Path -name Regex -ctime +Timespan -ctime -Timespan <|endoftext|>
<|endoftext|> english: Recursively copies "$1" to "$2".
bash: cp -R File File <|endoftext|>
<|endoftext|> english: change the ownership of all directories in the current folder
bash: find Path -type d -exec chown Regex {} \; <|endoftext|>
<|endoftext|> english: Change the owner of all files in the directory tree "dir_to_start" excluding directory "dir_to_exclude" to "owner"
bash: find Path -name Regex -prune -or -print0 | xargs -0 -I {} chown Regex {} <|endoftext|>
<|endoftext|> english: Print out the contents of all *.txt files in the home directory
bash: find Path -name Regex -print0 | xargs -0 -I {} cat {} <|endoftext|>
<|endoftext|> english: Delete all files/directories taken by the glob pattern * except the ones with the name 'b'
bash: find Path -maxdepth Quantity -name Regex -prune -or -exec rm -r -f {} \; <|endoftext|>
<|endoftext|> english: Print all user names and terminals of users who are logged in
bash: who | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: Find files with SGID (2000) and SUID(4000) permssions set in the file system
bash: find Path \( -perm -Permission -or -perm -Permission \) -ls <|endoftext|>
<|endoftext|> english: delete all the php files in the folder /var/www
bash: find Path -type f -exec rm {} \; <|endoftext|>
<|endoftext|> english: Replace "_" with newlines in "Testing\r\nTested_Hello_World" and display the named characters
bash: echo -e Regex | awk -v Program Program | od -a <|endoftext|>
<|endoftext|> english: Mount all filesystems in /etc/fstab
bash: mount -a <|endoftext|>
<|endoftext|> english: Make directories "3/foo", "3/bar", and "3/baz"
bash: mkdir Directory Directory Directory <|endoftext|>
<|endoftext|> english: Recursively changes group ownership of everything within current folder to 'git'.
bash: chgrp -R Regex File <|endoftext|>
<|endoftext|> english: Find all hidden regular files starting from the current directory
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: Find '.java' files with checksum 0bee89b07a248e27c83fc3d5951213c1 in the current directory
bash: md5sum File | grep Regex <|endoftext|>
<|endoftext|> english: recursively change owner of the directory and all files into it to user  nobody
bash: chown -R Regex File <|endoftext|>
<|endoftext|> english: Change group ownership to `foo' for files with GID=2000
bash: find Path -group Regex -exec chgrp -h Regex {} \; <|endoftext|>
<|endoftext|> english: display all files ending with "ini" in current folder
bash: find Path -type f -name Regex <|endoftext|>
<|endoftext|> english: Save full path of command "mktemp" to variable "MKTEMP"
bash: which Regex <|endoftext|>
<|endoftext|> english: Search the current directory tree for files containing "album" and "vacations" in their names and not containing "2015"
bash: find Path -name Regex -and -name Regex -and -not -name Regex <|endoftext|>
<|endoftext|> english: Change to the directory containing the "oracle" executable
bash: cd $( dirname $( which Regex ) ) <|endoftext|>
<|endoftext|> english: Find all files/directories that do not contain 'photo' in their names under current directory tree
bash: find Path ! -name Regex <|endoftext|>
<|endoftext|> english: Delete current cron job list, and use those in yourFile.text
bash: crontab File <|endoftext|>
<|endoftext|> english: Save the md5 sum hash of "${my_iso_file}" to variable "md5"
bash: $( md5sum File | awk Program ) <|endoftext|>
<|endoftext|> english: kill all background processes
bash: kill - Regex $( jobs -p ) <|endoftext|>
<|endoftext|> english: Reports count of characters in the value of ${FOO_NO_EXTERNAL_SPACE} variable as follows:  "length(FOO_NO_EXTERNAL_SPACE)==<counted number of characters>"
bash: echo -e $( echo -n -e Regex | wc -m ) <|endoftext|>
<|endoftext|> english: Find all .txt files under the current directory and below
bash: find Path -name Regex -print0 <|endoftext|>
<|endoftext|> english: Gets IP address of 'en0' selected network interface.
bash: ifconfig Regex | awk Program <|endoftext|>
<|endoftext|> english: Find all files under current directory whose file type description contains "image", display only path to each file.
bash: find Path -type f -exec file {} \; | grep -o -P Regex <|endoftext|>
<|endoftext|> english: Change the permissions of the current directory and all its subdirectories to 755.
bash: find Path -type d -exec chmod Permission {} \; <|endoftext|>
<|endoftext|> english: Correct permissions for directories in the web directory
bash: find Path -type d -print0 | xargs -0 -I {} chmod Permission {} <|endoftext|>
<|endoftext|> english: display all the files in current folder which have write permission to all the users
bash: find Path -perm Permission <|endoftext|>
<|endoftext|> english: Find all files/directories under directory '.cache/chromium/Default/Cache/' which are bigger than 100MB and which are atleast 1 level deep and delete them
bash: find Path -mindepth Quantity -size +Size -delete <|endoftext|>
<|endoftext|> english: Find files patching "pattern"
bash: find Path -name Regex -print <|endoftext|>
<|endoftext|> english: find all files in the entire file system whose size is more than 100MB
bash: find Path -size +Size <|endoftext|>
<|endoftext|> english: Search directories called ' backup ' from /usr directory downwards and print them.
bash: find Path -type d -name Regex -print <|endoftext|>
<|endoftext|> english: List all files from the current directory tree that were modified less than 60 minutes ago
bash: find Path -mmin -Quantity | xargs -r -I {} ls -l -d {} <|endoftext|>
<|endoftext|> english: List all nfs mounts
bash: mount -l -t nfs4 <|endoftext|>
<|endoftext|> english: Find all files/directories under '/etc' directory tree that are greater than 5MB and print their sizes and names
bash: find Path -size +Size -exec ls -s -h {} + <|endoftext|>
<|endoftext|> english: find all the files in the current directory that have the word "lib" in them
bash: find Path -wholename Regex <|endoftext|>
<|endoftext|> english: Count number of occurences of "123" in the string "123 123 123" (ie. 3)
bash: echo Regex | grep -o Regex | wc -l <|endoftext|>
<|endoftext|> english: Find all loadable modules for current kernel, whose name includes "perf"
bash: find Path $( uname -r ) -regex Regex <|endoftext|>
<|endoftext|> english: Gives the primary group of $USERNAME.
bash: groups Regex | cut -d Regex -f Number <|endoftext|>
<|endoftext|> english: List first 20 files under current directory
bash: find Path -type f | xargs -I {} ls -l -S {} | head - Quantity <|endoftext|>
<|endoftext|> english: Send one ping request to host with local address in the 192.168.1.x range, with last number specified by variable "COUNTER", and output only lines containing "ms" to standard output.
bash: ping -c Quantity Regex | grep Regex <|endoftext|>
<|endoftext|> english: Print the current directory
bash: find Path -mindepth Quantity -maxdepth Quantity <|endoftext|>
<|endoftext|> english: Print the list of files and directories of the current directory
bash: find Path ! -name Regex -prune <|endoftext|>
<|endoftext|> english: Print only first line of 'file' content, formatted as 29-symbol wide column
bash: cat File | fold -w Quantity | head - Quantity <|endoftext|>
<|endoftext|> english: Search the current directory tree for .rb files ignoring the "./vendor" subdirectory
bash: find Path -name Regex ! -wholename Regex -print <|endoftext|>
<|endoftext|> english: create an archive using 7zhelper.sh as a compress program
bash: tar -I File -c -f File File <|endoftext|>
<|endoftext|> english: Find all files named 'test' in the current directory tree, not descending into "test" directories
bash: find Path -name Regex -prune <|endoftext|>
<|endoftext|> english: find all the directories starting with the name "someNamePrefix" which have not been modified in the last 10 days and force delete them
bash: find Path -type d -name Regex -mtime +Timespan -print | xargs -I {} rm -r -f {} <|endoftext|>
<|endoftext|> english: split file input.txt into pieces per 1 line named output.NNNNN
bash: split --lines Quantity --suffix-length Quantity File Regex <|endoftext|>
<|endoftext|> english: Find the top 25 files according to their size in the current directory and its subdirectories
bash: find Path -type f -exec ls -a -l {} \; | sort -n -r -k Number | head -n Quantity <|endoftext|>
<|endoftext|> english: Find all files/directories with '.err' extension under '/home/username' directory tree
bash: find Path -name Regex <|endoftext|>
<|endoftext|> english: Print the path names of all files and directories in the current directory tree
bash: find Path -printf '"%h/%f" ' <|endoftext|>
<|endoftext|> english: Find all directories under ~/code excluding hidden directories and replace all newlines with : in the output then remove the last :
bash: find Path -type d -name Regex | tr Regex Regex | sed Program <|endoftext|>
<|endoftext|> english: List all files/directories under current directory with their inode numbers, disk space, permission, number of hard links, user name, group name, size, status change time in Y-m-d format and name filed,  then write the outptut to /tmp/files.txt
bash: find Path -type f -fprintf File "%i,%b,%M,%n,%u,%g,%s,%CY-%Cm-%Cd %CT,%p\n" <|endoftext|>
<|endoftext|> english: change the word "GHBAG" to "stream-agg" in all the file names in current folder which have the word "-GHBAG-" in their name
bash: find Path -name Regex -exec rename Regex {} + <|endoftext|>
<|endoftext|> english: Add cron lists from "filename" to list of cron jobs, giving errors for any lines that cannot be parsed by crontab.
bash: crontab File <|endoftext|>
<|endoftext|> english: search for all the files in the current directory which have been modified in the last 24 hours.
bash: find Path -mtime -Timespan <|endoftext|>
<|endoftext|> english: search for a word in all the shell scripts in the current folder and display the matched files.
bash: find Path -type f -name Regex -exec grep -l Regex {} \; <|endoftext|>
<|endoftext|> english: Convert Unix `cal` output to latex table code.
bash: cal -h DateTime DateTime | cut -c Number | sed -r Program | sed Program | head -n -Quantity | tail -n +Quantity <|endoftext|>
<|endoftext|> english: Save the first two letters of the system host name to variable "DC"
bash: hostname | cut -b Number <|endoftext|>
<|endoftext|> english: Print numerically sorted list of unique strings from 'ip_addresses' file, with number of occurrences of each string.
bash: sort -n File | uniq -c <|endoftext|>
<|endoftext|> english: Push the directory containing the first existing command found in all arguments to the directory stack.
bash: pushd $( dirname $( which Regex ) ) <|endoftext|>
<|endoftext|> english: find all the files in the folder /opt which have been modified between 20 to 50 days ago
bash: find Path -mtime +Timespan -mtime -Timespan <|endoftext|>
<|endoftext|> english: Print '-okdir is an action so an implicit -print is not applied' for each file/directory found by the name 'file' under current directory tree
bash: find Path -name Regex -okdir echo Regex \; <|endoftext|>
<|endoftext|> english: Find all regular files under current directory
bash: find Path -type f <|endoftext|>
<|endoftext|> english: display all the regular/normal files in the home folder that have been modified in the last 1 day (from the start of day ie, from 00:00 )
bash: find Path -daystart -type f -mtime Timespan <|endoftext|>
<|endoftext|> english: Recursively set all permissions under "/folder" to 755
bash: chmod Permission File -R <|endoftext|>
<|endoftext|> english: List the last modified file under "$DIR"
bash: find Path -type f -printf "%T@ %p\n" | sort -n | cut -d Regex -f Number | tail -n Quantity <|endoftext|>
<|endoftext|> english: Search for the regex "+\S\+" in file 'in.txt' and print the matches by replacing newlines with comma (',')
bash: grep -o Regex File | tr Regex Regex <|endoftext|>
<|endoftext|> english: find files in home directory which are modified yesterday
bash: find Path -daystart -type f -mtime Timespan <|endoftext|>
<|endoftext|> english: Find all *foo* files/directories under current directory and copy them to /your/dest
bash: find Path -name Regex | sed -e Program -e Program -e Program | xargs -I {} cp File {} <|endoftext|>
<|endoftext|> english: show all files in /usr/tom and display only files ending with ".pl" or ".pm"
bash: find Path | grep -E Regex <|endoftext|>
<|endoftext|> english: List all files in the current directory tree that were last modified more than 60 minutes ago
bash: find Path -mmin +Quantity <|endoftext|>
<|endoftext|> english: Find files that were modified more than 7 days ago but less than 14 days ago and archive them
bash: find Path -type f -mtime +Timespan -mtime -Timespan | xargs -I {} tar -c -v -f $( date '+%d%m%Y'_archive.tar ) {} <|endoftext|>
<|endoftext|> english: Force create a hard link named "non_secret_file.txt" to "secret_file.txt"
bash: ln -f File Regex <|endoftext|>
<|endoftext|> english: only get md5sum of a file
bash: md5 File File <|endoftext|>
<|endoftext|> english: Remove all files in and below the current directory whose names begin with "not"
bash: find Path -name Regex | tr Regex Regex | xargs -0 -I {} rm {} <|endoftext|>
<|endoftext|> english: Display differences between /tmp/test1 and /tmp/test2.
bash: diff File File <|endoftext|>
<|endoftext|> english: List all files under current directory matching the regex '.*\(c\|h\|cpp\)'
bash: find Path -type f -regex Regex -exec ls {} \; <|endoftext|>
<|endoftext|> english: Copy an entire file structure, creating empty files in the copy instead of copying the actual files.
bash: find Path -type d -exec mkdir -p Directory \; -or -type f -exec touch File \; <|endoftext|>
<|endoftext|> english: Convert standard input into a dump of octal bytes without the first 8 bytes of address and count the unique results
bash: od | cut -b Number | xargs -n Quantity | sort | uniq | wc -l <|endoftext|>
<|endoftext|> english: Print file information of command "studio"
bash: ls -l $( which Regex ) <|endoftext|>
<|endoftext|> english: display all the files only in the path "./sr*sc"
bash: find Path -path Regex <|endoftext|>
<|endoftext|> english: Read a line from standard input into the first argument ("$1") using an interactive shell with prompt "> "
bash: read -e -p Regex Regex <|endoftext|>
<|endoftext|> english: Get domain names from file '1.txt' and request TXT DNS record for each one
bash: cat File | xargs -I {} dig Regex {} <|endoftext|>
<|endoftext|>