{
  "1.0": [
    {
      "source": "display all the html files in the current folder excluding search in the path ./foo",
      "target": "find Path -path Regex -prune -or -type f -name Regex",
      "prediction": "<|endoftext|> <|source|> display all the html files in the current folder excluding search in the path./foo <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of a series of interactive interactive interactive interactive interactive interactive web pages, \"The World\" is a unique interactive interactive interactive web page that is accessed by all users.\n <|source|> find Path -name Regex -exec tee -a -v -v"
    },
    {
      "source": "Read a line from standard input into variable \"response\" ignoring backslash escapes and using the prompt \"${1:-Are you sure? [y/N]} \"",
      "target": "read -r -p Regex Regex",
      "prediction": "<|endoftext|> <|source|> Read a line from standard input into variable \"response\" ignoring backslash escapes and using the prompt \"${1:-Are you sure? [y/N]} \" <|target|> read -p Regex   -p Regex                                            "
    },
    {
      "source": "Finds strings with dot-separated sequence of numbers, and prints part of that sequence before the first dot.",
      "target": "echo Regex | grep -E -o Regex | cut -d Regex -f Number",
      "prediction": "<|endoftext|> <|source|> Finds strings with dot-separated sequence of numbers, and prints part of that sequence before the first dot. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first time a user's home directory is accessed by the user 'user' is logged in as user 'user' on the system.\n <|target|> find Path -user Regex -user Regex -exec grep -H Regex {} \\; "
    },
    {
      "source": "Compare files in \"/tmp/dir1\" and \"/tmp/dir2\", treating absent files as empty and all files as text",
      "target": "diff -N -a -r File File",
      "prediction": "<|endoftext|> <|source|> Compare files in \"/tmp/dir1\" and \"/tmp/dir2\", treating absent files as empty and all files as text <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of the largest and most-favoured files in the entire file system, the file system contains the largest file system.\n <|target|> find Path -type f -name Regex -print0 | xargs -0 -I {} ls -"
    },
    {
      "source": "display all symbolic links in current folder",
      "target": "find Path -lname Regex",
      "prediction": "<|endoftext|> <|source|> display all symbolic links in current folder <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is the first of a series of files from the current directory tree that are not in the current directory.\n <|source|> find all the files in the current directory and below that are not in the current directory and below directory <|target|> find Path"
    },
    {
      "source": "List the files from the current directory tree that contain lines matching regular expression '^From:.*unique sender', ignoring ~/src and ~/bin",
      "target": "find Path -name Regex -prune -or -name Regex -prune -or -type f -print | xargs -I {} grep -E -i -l Regex {}",
      "prediction": "<|endoftext|> <|source|> List the files from the current directory tree that contain lines matching regular expression '^From:.*unique sender', ignoring ~/src and ~/bin <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first day of the year is a long time ago. <|source|> Find all the files in the current directory and below that are at least 100 days old and delete them. <|target|> find Path -type f -name Regex -exec rm"
    },
    {
      "source": "Print common lines of files \"file1\", \"file2\", \"file3\", and \"file4\"",
      "target": "comm -1 -2 <( comm -1 -2 <( comm -1 -2 <( sort File ) <( sort File ) ) <( sort File ) ) <( sort File )",
      "prediction": "<|endoftext|> <|source|> Print common lines of files \"file1\", \"file2\", \"file3\", and \"file4\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first time a user of the name \"K\" is found in the current directory tree, it will be found in the directory \"dir1\" <|target|> find Path -name Regex -type f -printf \"%f\\n\" | xargs -"
    },
    {
      "source": "Remount \"/home/evgeny\" with the \"suid\" flag set",
      "target": "mount Regex -o remount,suid Regex",
      "prediction": "<|endoftext|> <|source|> Remount \"/home/evgeny\" with the \"suid\" flag set <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first time you read a line in a text file, you are logged in to the user's home directory.\n <|target|> find Path -name Regex -exec echo Regex | wc -l          "
    },
    {
      "source": "Show the last 10 .conf files found by `find' in the /etc directory",
      "target": "find Path -maxdepth Quantity -name Regex | tail",
      "prediction": "<|endoftext|> <|source|> Show the last 10.conf files found by `find' in the /etc directory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of two new jobs for the current user to create and delete.\n <|source|> find Path -name Regex -print0 | xargs -0 -I {} rm -r -f {}  -n -f {}     "
    },
    {
      "source": "display all the files on the current folder excluding those that are present in the folder \"./src/emacs\"",
      "target": "find Path -path Regex -prune -or -print",
      "prediction": "<|endoftext|> <|source|> display all the files on the current folder excluding those that are present in the folder \"./src/emacs\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of two jobs to be created in the current directory tree is the one that is created by the user \"user\" and the other is created by the user.\n <|source|> find Path -user Regex -exec ls -l -d -s"
    },
    {
      "source": "search for all the regular/normal mp3 files in the file system and move them to the folder /mnt/mp3",
      "target": "find Path -iname Regex -type f -print0 | xargs -0 -I {} mv {} File",
      "prediction": "<|endoftext|> <|source|> search for all the regular/normal mp3 files in the file system and move them to the folder /mnt/mp3 <|target|><|endoftext|>The first time I read a word in a file, I have to find the word \"test\" in the file.txt. <|target|> find Path -type f -print0 | xargs -0 -I {} sed -i Program {}          "
    },
    {
      "source": "find all files in the home folder which are modified in the last 2 days.",
      "target": "find Path -type f -mtime -Timespan",
      "prediction": "<|endoftext|> <|source|> find all files in the home folder which are modified in the last 2 days. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of the year's largest and most popular jobs in the world is in the top 10th place.\n <|source|> Find all the files in the current directory tree that are bigger than 100MB and below the current directory tree <|target|> find Path -size +Size -size"
    },
    {
      "source": "Find *.conf files/directories only upto 1 level down under /etc directory and show a few lines of output from the end",
      "target": "find Path -maxdepth Quantity -name Regex | tail",
      "prediction": "<|endoftext|> <|source|> Find *.conf files/directories only upto 1 level down under /etc directory and show a few lines of output from the end <|target|> find Path -name Regex -print0 | xargs -0 -I {} grep -H Regex {}                                       "
    },
    {
      "source": "Find all files owned by the user daniel in the current directory and below.",
      "target": "find Path -user Regex",
      "prediction": "<|endoftext|> <|source|> Find all files owned by the user daniel in the current directory and below. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of two new jobs in the current day, the first one is to create a new directory in the current directory and the second one is to create a new directory in the current directory.\n <|target|> find Path -type d -name Regex -execdir -pwd {} +"
    },
    {
      "source": "count all the html files having a specifc word in a folder.",
      "target": "find Path -name Regex -exec grep -l Regex {} \\; | wc -l",
      "prediction": "<|endoftext|> <|source|> count all the html files having a specifc word in a folder. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of two files from the current directory tree, the first one is the one with the name \"file\" and the other one is the one with the name \"file\" and the second one is the one with the name \"file\" and the third one is the one with the name \"file\""
    },
    {
      "source": "List all cron jobs which contain \"word\".",
      "target": "crontab -l | grep -E Regex",
      "prediction": "<|endoftext|> <|source|> List all cron jobs which contain \"word\". <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new and long overdue file system has been created for the file system of the current user.\n <|target|> find Path -name Regex -exec ls -l -l -s -t -t -t -t -t -t -i -t -i -t -i"
    },
    {
      "source": "long list al the files in the current directory which have read permission to the group",
      "target": "find Path -perm -Permission -type f -exec ls -l {} \\;",
      "prediction": "<|endoftext|> <|source|> long list al the files in the current directory which have read permission to the group <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The latest version of the GNU Emacs shell is available today.\n <|source|> find Path -name Regex -exec grep -i Regex {} \\;                            "
    },
    {
      "source": "Display all lines containing \"IP_MROUTE\" in the current kernel's compile-time config file.",
      "target": "cat $( uname -r ) | grep Regex",
      "prediction": "<|endoftext|> <|source|> Display all lines containing \"IP_MROUTE\" in the current kernel's compile-time config file. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first time a user of the command \"sh\" finds all the files in the current directory and prints the list of them. <|target|> find Path -name Regex -exec grep -H Regex {} +                "
    },
    {
      "source": "Remove all regular non-hidden files modified more than 7 days ago and residing in the /tmp directory tree",
      "target": "find Path -type f -name Regex -mtime +Timespan -print0 | xargs -0 -I {} rm -f {}",
      "prediction": "<|endoftext|> <|source|> Remove all regular non-hidden files modified more than 7 days ago and residing in the /tmp directory tree <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first two days of the 2014-2015 regular season are the last two weeks of the regular season.\n <|source|> Find all the regular/normal files in the current directory tree and below <|target|> find Path -type f -name Regex -ls  -d -l"
    },
    {
      "source": "Unzip every \".gz\" file in the current directory tree",
      "target": "find Path -name Regex -exec gunzip {} \\;",
      "prediction": "<|endoftext|> <|source|> Unzip every \".gz\" file in the current directory tree <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of two new jobs in the current directory tree is the one that is accessed by the user of the command'setuid' <|source|> find Path -type f -name Regex -exec chmod Permission {} +             "
    },
    {
      "source": "change permission of all the files in the entire file system which have the permissions 777.",
      "target": "find Path -type f -perm Permission -print -exec chmod Permission {} \\;",
      "prediction": "<|endoftext|> <|source|> change permission of all the files in the entire file system which have the permissions 777. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and below and delete them <|target|> find Path -type f -exec rm -r -f {} +   -P Regex | xargs -0 -I {} rm -r -f {}  -P {}   "
    },
    {
      "source": "Prints information about active network interfaces in system.",
      "target": "echo $( ifconfig )",
      "prediction": "<|endoftext|> <|source|> Prints information about active network interfaces in system. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of two new files from the current directory tree are to be accessed by the user 'user' and not 'other' <|source|> find Path -user Regex -print0 | xargs -0 -I {} du -s -I {} ls -l {}       "
    },
    {
      "source": "find all the reguar/normal php files in current directory.",
      "target": "find Path -type f -name Regex",
      "prediction": "<|endoftext|> <|source|> find all the reguar/normal php files in current directory. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first question in the world is \"Are you sure you want to join the group?\" and the answer is \"yes\"\n <|source|> find all the files in the current folder which have been modified in the last 24 hours <|target|> find Path -type f -mtime Timespan -exec"
    },
    {
      "source": "search  in root  ( / ) directory downwards all files which have less than 2 links.",
      "target": "find Path -links -Quantity -print",
      "prediction": "<|endoftext|> <|source|> search  in root  ( / ) directory downwards all files which have less than 2 links. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of the new jobs to be created in the next month will be in the \"new\" directory tree, and will be in the \"old\" directory tree. <|target|> find Path -name Regex -type f -printf \"%p\\n\" | sort -u | head -n -d"
    },
    {
      "source": "Find all files/directories under current directory",
      "target": "find Path -print0 | xargs -0",
      "prediction": "<|endoftext|> <|source|> Find all files/directories under current directory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new file system is created with the name \"file\" in the current directory tree and the name \"file\" in the current directory.\n\n <|target|> find Path -name Regex -exec grep -H Regex {} +     | grep -v Regex     "
    },
    {
      "source": "display all regular/normal files in the folder \"dir\" and display the filename along with file size",
      "target": "find Path -type f -printf \"f %s %p\\n\"",
      "prediction": "<|endoftext|> <|source|> display all regular/normal files in the folder \"dir\" and display the filename along with file size <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first two days of the current year are the time of the first day of the month of the year.\n <|target|> find Path -type f -daystart -mtime -Timespan -print0 | xargs -0 -I {} ls -l {} | tail -n -s -d"
    },
    {
      "source": "find regular file named foo.txt under root / directory.",
      "target": "find Path -name Regex -type f -print",
      "prediction": "<|endoftext|> <|source|> find regular file named foo.txt under root / directory. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|source|> Find all files/directories under current directory and below that have been modified in the last 24 hours and print them to the user <|target|> find Path -type d -mtime Timespan -mtime Timespan -exec ls -l -t {} +     "
    },
    {
      "source": "Evaluate the output of recursively changing the owner and group of \"/data/*\" to \"mongodb\"",
      "target": "$( chown -R Regex File )",
      "prediction": "<|endoftext|> <|source|> Evaluate the output of recursively changing the owner and group of \"/data/*\" to \"mongodb\" <|target|> chown -R Regex File                                                          "
    },
    {
      "source": "find all files  that names are 'apt'",
      "target": "find Path -name Regex",
      "prediction": "<|endoftext|> <|source|> find all files  that names are 'apt' <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The latest in a long line of new and expanded jobs for the current and future of the current user.\n\nThis week, the first jobs are listed in the current directory tree.\n <|source|> find Path -name Regex -type f -exec grep -i Regex {} +    "
    },
    {
      "source": "Print a sorted list of *.so files in the bla directory tree",
      "target": "find Path -name Regex -print0 | sort -r -z",
      "prediction": "<|endoftext|> <|source|> Print a sorted list of *.so files in the bla directory tree <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first two-letter word in the history of the word \"crony\" is a word that is used in all the regular/normal files in the current directory tree. <|target|> find Path -type f -name Regex -exec grep -H Regex {} \\;     "
    },
    {
      "source": "Find all .core files on the system starting from / and delete them",
      "target": "find Path -name Regex | xargs -I {} rm {}",
      "prediction": "<|endoftext|> <|source|> Find all.core files on the system starting from / and delete them <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The latest release of the \"new\" file system contains a long list of files that are newer than the current one.\n <|source|> find Path -newer File -newer File                        "
    },
    {
      "source": "Find all files/directories that start with 'screen' (case insensitive) in their names under user's home directory tree",
      "target": "find Path -iname Regex",
      "prediction": "<|endoftext|> <|source|> Find all files/directories that start with'screen' (case insensitive) in their names under user's home directory tree <|target|> find Path -name Regex -exec grep -i Regex {} +                                                 "
    },
    {
      "source": "Print characters 2 through 4 of \"abcdefg\"",
      "target": "echo Regex | tail -c +Quantity | head -c Quantity",
      "prediction": "<|endoftext|> <|source|> Print characters 2 through 4 of \"abcdefg\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is the first of a long series of images from the last day of the last day of the month of the current month.\n <|source|> Prints the last day of the month of the current month. <|target|> cal -d -mtime -Timespan | grep -E Re"
    },
    {
      "source": "Find files/directories under /users/tom that matches both the pattern \"*.pl\" and  \"*.pm\"",
      "target": "find Path -name Regex -name Regex",
      "prediction": "<|endoftext|> <|source|> Find files/directories under /users/tom that matches both the pattern \"*.pl\" and  \"*.pm\" <|target|> find Path -name Regex -print0 | xargs -0 -I {} grep Regex {}                                           "
    },
    {
      "source": "forcibly create a symbolic link named \"linkname\" to file \"new_destination\"",
      "target": "ln -s -f File Regex",
      "prediction": "<|endoftext|> <|source|> forcibly create a symbolic link named \"linkname\" to file \"new_destination\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>\"I have been working on a new app for the last few days and have been waiting for the last one to be created. <|source|> Find all the files in the current directory and search for the file name which match the regex pattern '.*foo' in their names. <|target|> find"
    },
    {
      "source": "Report file systems disk usage using POSIX output format.",
      "target": "df -P",
      "prediction": "<|endoftext|> <|source|> Report file systems disk usage using POSIX output format. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of the new year, the first of the year, the first of the year, the first of the year, the first of the year, the first of the year, the first of the year, the first of the year, the first of the year, the first of the year, the first of"
    },
    {
      "source": "Compress every file in the current directory tree with gzip and keep file extensions the same",
      "target": "find Path -type f -exec gzip -9 {} \\; -exec mv File {} \\;",
      "prediction": "<|endoftext|> <|source|> Compress every file in the current directory tree with gzip and keep file extensions the same <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first word in \"Foo\" is \"Foo\" and \"Foo\" in \"Foo\" and \"Foo\" and \"Foo\" in \"Foo\" and \"Foo\" and \"Foo\" in \"Foo\" and \"Foo\" and \"Foo\" in"
    },
    {
      "source": "Find all *.csv files under /foo/bar and move them to some_dir",
      "target": "find Path -name Regex -print0 | xargs -0 -I {} mv -t Directory {}",
      "prediction": "<|endoftext|> <|source|> Find all *.csv files under /foo/bar and move them to some_dir <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first time a new user logged in to the home directory of the current user, the user must be logged in to the home directory of the current user.\n <|source|> find Path -user Regex -exec chmod Permission {} \\;           "
    },
    {
      "source": "Check if a drive is mounted to nfs",
      "target": "mount | grep Regex",
      "prediction": "<|endoftext|> <|source|> Check if a drive is mounted to nfs <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first and second of the two largest files in the current directory tree, the file system is the one that contains the file system containing the file system containing the file system containing the file system containing the file system containing the file system containing the file system containing the file system containing the file system containing the file system containing the"
    },
    {
      "source": "display all the files in the folder \"/dev\" which belong to the user \"peter\"",
      "target": "find Path -user Regex | more",
      "prediction": "<|endoftext|> <|source|> display all the files in the folder \"/dev\" which belong to the user \"peter\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of two new jobs for the first of two new jobs, and the first of two new jobs for the second of two new jobs for the first of two new jobs.\n <|source|> Find all the files in the current directory tree that are bigger than 100MB and bigger than 100MB and delete"
    },
    {
      "source": "Move all directories from the `sourceDir' directory tree to the `destDir' directory",
      "target": "find Path -mindepth Quantity -type d -exec mv -t Directory {} +",
      "prediction": "<|endoftext|> <|source|> Move all directories from the `sourceDir' directory tree to the `destDir' directory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of two new jobs for the current and future of the current directory tree.\n <|source|> find Path -type d -exec mv -v Regex {} +                   "
    },
    {
      "source": "Search the files residing in the current directory tree whose names contain \"bills\" for \"put\"",
      "target": "find Path -name Regex -print0 | xargs -0 -I {} grep Regex {}",
      "prediction": "<|endoftext|> <|source|> Search the files residing in the current directory tree whose names contain \"bills\" for \"put\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long list of all the files in the current directory which are not in the current directory tree.\n <|source|> find Path -name Regex -type f -print0 | xargs -0 -I {} grep -E Regex {}   "
    },
    {
      "source": "Print a colon-separated list of all directories from the ~/code directory tree, except hidden ones and those below them",
      "target": "find Path -type d | sed Program | tr Regex Regex | sed Program",
      "prediction": "<|endoftext|> <|source|> Print a colon-separated list of all directories from the ~/code directory tree, except hidden ones and those below them <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>\"I have been a long time traveller for the last two days. I have been in the shop, and have been waiting for the last minute. I have been waiting for the last minute for the last word in the shop. I have been waiting for the last minute for the last"
    },
    {
      "source": "Remove all *.tmp files from the /tmp directory tree",
      "target": "find Path -name Regex -print0 | xargs -0 -I {} rm {}",
      "prediction": "<|endoftext|> <|source|> Remove all *.tmp files from the /tmp directory tree <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree which are modified within the last day.\n <|source|> find Path -mtime Timespan -print0 | xargs -0 -I {} ls -l {}      | tail"
    },
    {
      "source": "Find all regular files under $d directory tree and change their permissions to 777",
      "target": "find Path -type f -print0 | xargs -0 -I {} chmod Permission {}",
      "prediction": "<|endoftext|> <|source|> Find all regular files under $d directory tree and change their permissions to 777 <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of the year's biggest and most unique content from the current year's release of the latest release of the latest release of the latest release of the latest release of the latest release of the latest release of the latest release of the latest release of the latest release of the latest release"
    },
    {
      "source": "Replace newline with \"_\" in \"file\" then search for \"_foo_\" and output with \"_\" characters deleted",
      "target": "grep -o Regex <( paste -s -d Regex File ) | tr -d Regex",
      "prediction": "<|endoftext|> <|source|> Replace newline with \"_\" in \"file\" then search for \"_foo_\" and output with \"_\" characters deleted <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The latest release of the latest release of the latest release of the latest release of the latest release of the latest release of the latest release of the latest release of the latest release of the latest release of the latest release of the latest release of the latest release of the latest release of the"
    },
    {
      "source": "Find all directories under ${1:-.} directory without descending into any sub-directories",
      "target": "find Path -mindepth Quantity -maxdepth Quantity -type d",
      "prediction": "<|endoftext|> <|source|> Find all directories under ${1:-.} directory without descending into any sub-directories <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of the largest and most detailed files in the current directory tree, the file system contains the largest file system with the largest file system.\n <|source|> find Path -size Size -print0 | xargs -0 -I {} ls -l -d -"
    },
    {
      "source": "Print only name and login columns of the currently logged in users",
      "target": "finger -s | awk Program",
      "prediction": "<|endoftext|> <|source|> Print only name and login columns of the currently logged in users <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first word in \"The Simpsons\" is a word that is used to describe the first two lines of the first two lines of the second line of the third line of the fourth line of the fourth line of the fourth line of the fourth line of the fourth line of the fourth line"
    },
    {
      "source": "Prints all NS servers of domain google.com.",
      "target": "dig Regex Regex | awk Program",
      "prediction": "<|endoftext|> <|source|> Prints all NS servers of domain google.com. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long list of all the files in the current directory tree that are bigger than 100MB.\n <|source|> find Path -size Size -size Size -ls   -exec ls -l {} \\;          "
    },
    {
      "source": "Copy \"source\" recursively to \"destination\" excluding \"path1/to/exclude\" and \"path2/to/exclude\"",
      "target": "rsync -a -v --exclude Regex --exclude Regex File File",
      "prediction": "<|endoftext|> <|source|> Copy \"source\" recursively to \"destination\" excluding \"path1/to/exclude\" and \"path2/to/exclude\" <|target|> rsync -r -v -v -z -v -z -z -z -z -z -z -z -z -z -z -z -z -z -z -z -z -z -z -z -z -z -z -"
    },
    {
      "source": "Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.",
      "target": "sort File | uniq | cut -f Number -d Regex | uniq -c | rev",
      "prediction": "<|endoftext|> <|source|> Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first day of the year, the first day of the year, the first day of the month, the first day of the month, the first day of the month, the first day of the month, the first day of the month, the first day of the month"
    },
    {
      "source": "list PID of a group leader",
      "target": "jobs -l -p",
      "prediction": "<|endoftext|> <|source|> list PID of a group leader <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of the three files in the current directory tree 'file' are sorted by size and size.\n <|source|> find Path -type f -size Size -exec ls -l -l {} + | sort -r -k -r | head -"
    },
    {
      "source": "Search for files/directories with the case insensitive pattern anaconda.* in var/log directory and create an archive (file.tar) of all the files found",
      "target": "find Path -iname Regex -exec tar -r -v -f File {} \\;",
      "prediction": "<|endoftext|> <|source|> Search for files/directories with the case insensitive pattern anaconda.* in var/log directory and create an archive (file.tar) of all the files found <|target|> find Path -iname Regex -iname Regex -exec tar -c -v -f File {} \\;                              "
    },
    {
      "source": "Copy all .txt files from the dir/ directory tree along with their parent directories hierarchy",
      "target": "find Path -name Regex | xargs -I {} cp -a --target-directory Directory --parents {}",
      "prediction": "<|endoftext|> <|source|> Copy all.txt files from the dir/ directory tree along with their parent directories hierarchy <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first time I read a word in a long time, I have to find out which word is the first word in all the regular files in the current directory and below.\n <|source|> find Path -type f -name Regex -exec sed Program {}"
    },
    {
      "source": "Find all foo.mp4 files in the current directory tree and print the pathnames of their parent directories",
      "target": "find Path -name Regex -printf '%h\\n'",
      "prediction": "<|endoftext|> <|source|> Find all foo.mp4 files in the current directory tree and print the pathnames of their parent directories <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is the first of a long list of all the files in the current directory tree which are not in the current directory and which are not in the current directory.\n <|source|> find Path -type f -name Regex -print0 | xargs -"
    },
    {
      "source": "Display non-hidden files in the current directory with the given output format",
      "target": "find Path -maxdepth Quantity -name Regex -printf 'Name: %16f Size: %6s\\n'",
      "prediction": "<|endoftext|> <|source|> Display non-hidden files in the current directory with the given output format <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of the 'new' jobs in the history of the world.\n <|source|> Find all the files in the current directory and below which are bigger than 100MB and have been modified in the last 24 hours. <|target|> find Path -"
    },
    {
      "source": "Find all files/directories under current directory with null character as the delimiter",
      "target": "find Path -print0",
      "prediction": "<|endoftext|> <|source|> Find all files/directories under current directory with null character as the delimiter <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of two new jobs in the current directory tree, and the first of two jobs in the current directory tree.\n <|source|> find Path -name Regex -type f -print0 | xargs -0 -I {} dirname {}  "
    },
    {
      "source": "Numberically sort content of file 'files', using for sorting part of second one of dash separated fields beginning from second letter.",
      "target": "cat File | sort -t Regex -k Number -n",
      "prediction": "<|endoftext|> <|source|> Numberically sort content of file 'files', using for sorting part of second one of dash separated fields beginning from second letter. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of the year's biggest jobs in the world has been created in the last month.\n <|source|> Find all the files in the current directory tree that are bigger than 100MB and smaller than 100MB <|target|> find Path -size Size"
    },
    {
      "source": "Find recursively the files named \"file\" in the current directory ignoring the .git subdirectory",
      "target": "find Path -path Regex -prune -or -name Regex -print",
      "prediction": "<|endoftext|> <|source|> Find recursively the files named \"file\" in the current directory ignoring the.git subdirectory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of the largest files in the current directory tree is the file 'file' and contains the file name.txt.\n <|source|> find Path -name Regex -type f -print0 | xargs -0 -I {} ls -l -"
    },
    {
      "source": "Find all .java files starting from the current folder",
      "target": "find Path -name Regex",
      "prediction": "<|endoftext|> <|source|> Find all.java files starting from the current folder <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The latest version of the \"CVS\" shell, the latest version of the \"CVS\" shell, is the latest version of the \"CVS\" shell, which is the latest version of the \"CVS\" shell, which is the latest version of the \""
    },
    {
      "source": "Remove the file with inode number 752010",
      "target": "find Path -inum Quantity -exec rm {} \\;",
      "prediction": "<|endoftext|> <|source|> Remove the file with inode number 752010 <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new file in the current directory tree is a file named \"file1\" and contains the first line of output from the command \"ls -l\" <|target|> ls -l -l File | grep -v Regex       | head -n Quantity   "
    },
    {
      "source": "Find all files/directories named 'Desktop' under current directory",
      "target": "find Path -name Regex",
      "prediction": "<|endoftext|> <|source|> Find all files/directories named 'Desktop' under current directory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of two new jobs in the history of the world's largest and largest digital media network.\n <|source|> Find all the files in the current directory and below that are bigger than 100MB and contain the word \"file\" in their names. <|target|> find Path -size"
    },
    {
      "source": "delete recursively, without prompting, any files or directories under the current directory that case insensitively match the filename \".svn\"",
      "target": "find Path -iname Regex -exec rm -r -f {} \\;",
      "prediction": "<|endoftext|> <|source|> delete recursively, without prompting, any files or directories under the current directory that case insensitively match the filename \".svn\" <|target|> find Path -iname Regex -print0 | xargs -0 -I {} rm -r -i {}                                      "
    },
    {
      "source": "Print the input \"hello world\" to the console followed by a swap of the first two awk fields",
      "target": "echo Regex Regex | tee File | awk Program",
      "prediction": "<|endoftext|> <|source|> Print the input \"hello world\" to the console followed by a swap of the first two awk fields <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of two new jobs to be created in the last two weeks of the current year.\n <|source|> Find all the files in the current directory tree that are at least 100MB and delete them. <|target|> find Path -size Size -size -size -Size -Size"
    },
    {
      "source": "Filter contents of 'file' through awk commands written in script.awk, display the result.",
      "target": "awk -f File Program",
      "prediction": "<|endoftext|> <|source|> Filter contents of 'file' through awk commands written in script.awk, display the result. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The latest release of the \"new\" file system is the latest release of the \"old\" file system.\n <|target|> find Path -name Regex -print0 | xargs -0 -I {} grep -i Regex {}           "
    },
    {
      "source": "delete all the normal/regular files in the current folder",
      "target": "find Path -type f -print -delete",
      "prediction": "<|endoftext|> <|source|> delete all the normal/regular files in the current folder <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of two files in the current directory tree are sorted alphabetically.\n\nThe first file in the current directory tree is sorted alphabetically.\n <|target|> find Path -type f -name Regex -exec ls -l -t {} + | sort -n | head -n"
    },
    {
      "source": "Search the current directory tree for all files except SVN ones",
      "target": "find Path | grep -v Regex",
      "prediction": "<|endoftext|> <|source|> Search the current directory tree for all files except SVN ones <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first time a user of the name \"new\" name of a file or directory is logged in, the user must first login to the user's home directory and the directory \"/home/username/Desktop\" <|target|> find Path -name Regex -exec grep -i Regex {} \\"
    },
    {
      "source": "Find all files residing in /home/dm/Video or below that were last changed at least 10 days ago",
      "target": "find Path -mtime +Timespan",
      "prediction": "<|endoftext|> <|source|> Find all files residing in /home/dm/Video or below that were last changed at least 10 days ago <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of the many new jobs in the current directory tree.\n <|target|> find Path -name Regex -type f -printf '%p\\n' | head -n -s Regex                  "
    },
    {
      "source": "Find all files/directories that are not newer than Jul 01 by modification time",
      "target": "find Path ! -newermt Regex",
      "prediction": "<|endoftext|> <|source|> Find all files/directories that are not newer than Jul 01 by modification time <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first time a man in the world has been named the first person to be named the first person to be named the first person to be named the first person to be named the first person to be named the first person to be named the first person to be named the first person to be named the first person"
    },
    {
      "source": "Find all *.txt files/directories under current directory",
      "target": "find Path -name Regex",
      "prediction": "<|endoftext|> <|source|> Find all *.txt files/directories under current directory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of two files from the current directory tree that are not present in the current directory tree.\n\nThe first file is the file that is not present in the current directory tree.\n <|target|> find Path -type f -name Regex -print0 | xargs -0 -"
    },
    {
      "source": "Change the ownership of all files in the current directory tree from root to www-data",
      "target": "find Path -user Regex -exec chown Regex {} \\;",
      "prediction": "<|endoftext|> <|source|> Change the ownership of all files in the current directory tree from root to www-data <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first two files in the current directory tree are sorted alphabetically.\n <|source|> find Path -name Regex -type f -printf \"%h\\n\" | sort -n | tail -n | grep -v Re"
    },
    {
      "source": "Find all files/directories named 'query' under current directory tree",
      "target": "find Path -name Regex",
      "prediction": "<|endoftext|> <|source|> Find all files/directories named 'query' under current directory tree <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first time I read a line in a file, I have to read it in the current directory.\n <|source|> readlink Regex                  "
    },
    {
      "source": "search for text files in the current folder which have write access to others",
      "target": "find Path -type f \\( -iname Regex -and -perm -Permission \\)",
      "prediction": "<|endoftext|> <|source|> search for text files in the current folder which have write access to others <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|source|> Find all the files/directories in the current directory and below that are at least one level below the current directory and below the directory tree <|target|> find Path -maxdepth Quantity -name Regex -"
    },
    {
      "source": "Change every file under \"/var/www/html/\" to have permissions 664",
      "target": "find Path -type f -exec chmod Permission {} \\;",
      "prediction": "<|endoftext|> <|source|> Change every file under \"/var/www/html/\" to have permissions 664 <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of the two files in the current directory tree to be accessed by the user \"root\" and \"other\" is accessed by the user \"other\" and \"other\" and \"other\" and the user \"root\" and \"root"
    },
    {
      "source": "Infinitely print \"1\" then \"0\"",
      "target": "yes Regex | sed Program",
      "prediction": "<|endoftext|> <|source|> Infinitely print \"1\" then \"0\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first time a user has logged in to the system, it is the first user to login.\n <|source|> login | tee -a -a File               "
    },
    {
      "source": "List the current directory recursively ignoring ./src/emacs/ and all its contents",
      "target": "find Path -path Regex -prune -or -print",
      "prediction": "<|endoftext|> <|source|> List the current directory recursively ignoring./src/emacs/ and all its contents <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long list of all the files in the current directory tree that are not readable by the user and are not readable by the user.\n <|source|> find Path -path Regex -type f -not -user Re"
    },
    {
      "source": "Remount \"extX\" filesystem \"/dev/hdaX\" on \"/\" without writing in \"/etc/mtab\"",
      "target": "mount -n -o remount -t extX Regex Regex",
      "prediction": "<|endoftext|> <|source|> Remount \"extX\" filesystem \"/dev/hdaX\" on \"/\" without writing in \"/etc/mtab\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>\"I have been working on this for the last two weeks and have been waiting for the last one to be taken. <|source|> Find all files in the current directory tree that are bigger than 100MB and below and delete them."
    },
    {
      "source": "create a zip of log files in the current directory which have not been accessed in the last 3 days (-p is for parallel processing for a 4 cpu machine, -n is for maximum work units)",
      "target": "find Path -name Regex -mtime +Timespan -print0 | xargs -0 -n Quantity -P Quantity -I {} bzip2 {}",
      "prediction": "<|endoftext|> <|source|> create a zip of log files in the current directory which have not been accessed in the last 3 days (-p is for parallel processing for a 4 cpu machine, -n is for maximum work units) <|target|> find Path -type f -atime -Timespan -print0 | xargs -0 -I {} zip {}                         "
    },
    {
      "source": "Numerically sort standard input by the second word of each line",
      "target": "sort -n -k Number",
      "prediction": "<|endoftext|> <|source|> Numerically sort standard input by the second word of each line <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of the three files in the current directory tree are named \"file1\" and \"file2\" and are named \"file1\" and \"file2\" and are named \"file3\" and \"file3\" and are named"
    },
    {
      "source": "display a long listing of all the java files in the current folder in sorted order",
      "target": "find Path -type f -name Regex -ls | sort -k +Number -r",
      "prediction": "<|endoftext|> <|source|> display a long listing of all the java files in the current folder in sorted order <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new file with the name \"file.txt\" in the current directory \"/tmp/file\" is found in the current directory and prints the path to it.\n <|target|> find Path -name Regex -execdir file"
    },
    {
      "source": "Find all regular files that contain 'linux' (case insensitive) in their names under '/root' directory tree",
      "target": "find Path -type f -iname Regex",
      "prediction": "<|endoftext|> <|source|> Find all regular files that contain 'linux' (case insensitive) in their names under '/root' directory tree <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first word in \"The Times\" is a word that has been used for a long time in the history of the world. <|source|> Search the entire file system for the word \"todo\" <|target|> find Path -type f -name Regex -exec grep -"
    },
    {
      "source": "Find all files under and below /dir that were changed or created less than 60 minutes ago",
      "target": "find Path -cmin -Quantity",
      "prediction": "<|endoftext|> <|source|> Find all files under and below /dir that were changed or created less than 60 minutes ago <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first word in \"The Simpsons\" is \"I'm a man\" and \"I'm a man\" is \"I'm a man\" and \"I'm a man\" in the same way that \"I'm a man\" is \"I'm a man\" and \"I'm a man\""
    },
    {
      "source": "Print the date formatted with \"%a %x %X\" followed by the host name",
      "target": "echo $( date +\"%a %x %X\" ) $( hostname )",
      "prediction": "<|endoftext|> <|source|> Print the date formatted with \"%a %x %X\" followed by the host name <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new file of the latest release of the \"new\" file system.\n <|source|> find Path -name Regex -exec grep -i -v Regex {} +                       "
    },
    {
      "source": "Print the list of files in the home directory tree whose names begin with \"Foto\"",
      "target": "find Path -name Regex",
      "prediction": "<|endoftext|> <|source|> Print the list of files in the home directory tree whose names begin with \"Foto\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first time I read a word in a text file, I have to find the first word in the file. <|target|> find Path -name Regex -print0 | grep -E Regex                  "
    },
    {
      "source": "Recursively removes all files like '_*' and '.DS_Store' from /var/www/html/ folder.",
      "target": "rm File File",
      "prediction": "<|endoftext|> <|source|> Recursively removes all files like '_*' and '.DS_Store' from /var/www/html/ folder. <|target|><|endoftext|>The current directory tree contains all the files in the current directory tree that are present in the current directory tree and are present in the current directory tree <|target|> find Path -name Regex -exec rm {} \\;               "
    },
    {
      "source": "Filters only directories from long file listing of the current directory.",
      "target": "ls -l | grep Regex",
      "prediction": "<|endoftext|> <|source|> Filters only directories from long file listing of the current directory. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first time a user logged in to the web interface, the user name is logged in as user 'user' and the user 'user' is logged in as user 'user' and the user 'user' respectively.\n\nThis is the first time the user 'user' is logged in as"
    },
    {
      "source": "Find all the regular files under '/your/dir' directory tree which are bigger than 5 MB and display them in decreasing order of their sizes",
      "target": "find Path -type f -size +Size -exec du -h {} + | sort -h -r",
      "prediction": "<|endoftext|> <|source|> Find all the regular files under '/your/dir' directory tree which are bigger than 5 MB and display them in decreasing order of their sizes <|target|> find Path -size +Size -type f -print0 | xargs -0 -I {} ls -l -d {}                                   "
    },
    {
      "source": "Prints line count of each file within current directory.",
      "target": "find Path -type f -print | xargs -L Quantity -I {} wc -l {}",
      "prediction": "<|endoftext|> <|source|> Prints line count of each file within current directory. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file is a long listing of all the files in the current directory tree.\n <|source|> find Path -type f -name Regex -exec ls -l -l {} +     | head -n Quantity | grep -v Regex      "
    },
    {
      "source": "Reverse the text in $input by taking each 4 characters as each units and save the result in variable 'output'",
      "target": "echo Regex | fold -w Quantity | tac | tr -d Regex",
      "prediction": "<|endoftext|> <|source|> Reverse the text in $input by taking each 4 characters as each units and save the result in variable 'output' <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first and last lines of \"The Last of the World\" are a long list of the most common and least common files in the current directory tree. <|source|> find Path -type f -name Regex -exec ls -l {} \\;        "
    },
    {
      "source": "Find the largest files in a particular location",
      "target": "find Path -type f -exec du -S -h {} + | sort -r -h | head -n Quantity",
      "prediction": "<|endoftext|> <|source|> Find the largest files in a particular location <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of two new jobs in the history of the world is to be created by the user \"user\" and the user \"admin\" with the permission \"user\" of the current user.\n <|source|> find Path -user Regex -perm -Permission -exec chmod Per"
    },
    {
      "source": "List all regular files from the current directory tree that were modified less than 60 minutes ago",
      "target": "find Path -type f -mmin -Quantity -print0 | xargs -r -0 -I {} ls -l {}",
      "prediction": "<|endoftext|> <|source|> List all regular files from the current directory tree that were modified less than 60 minutes ago <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first word in every word in the current directory is \"FooBar\" and the second word in every file in the current directory is \"foo\" and the last word is \"bar\" and the last word is \"bar\" in the file \"file1\" and"
    },
    {
      "source": "Show directory sizes in KB and sort to give the largest at the end",
      "target": "du -s -k $( find Path -type d ) | sort -n -k Number",
      "prediction": "<|endoftext|> <|source|> Show directory sizes in KB and sort to give the largest at the end <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file is a bit of a bit of a long-running process. For each file in the current directory tree, it is sorted by the number of lines in each file. For each line in the file, it is sorted by the number of lines in the file."
    },
    {
      "source": "List all regular files under current directory ensuring white space safety",
      "target": "find Path -type f -print0 | xargs -0 -n Quantity",
      "prediction": "<|endoftext|> <|source|> List all regular files under current directory ensuring white space safety <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first two files in the current directory tree are sorted by the number of lines in the file 'file1' and 'file2' and 'file2' and are sorted by the number of lines in the file 'file1' and file2' and are sorted"
    },
    {
      "source": "find all the files in current folder which have been updated in the last 60 minutes",
      "target": "find Path -mmin -Quantity",
      "prediction": "<|endoftext|> <|source|> find all the files in current folder which have been updated in the last 60 minutes <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of the year's largest and largest files are available for download from the home directory tree.\n <|source|> find all the files in the current directory and below which are bigger than 100MB and below <|target|> find Path -size +Size"
    },
    {
      "source": "Copies all files like 'lib*.so' to '~/usr/gtest/lib/' directory.",
      "target": "cp File File",
      "prediction": "<|endoftext|> <|source|> Copies all files like 'lib*.so' to '~/usr/gtest/lib/' directory. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of two files from the current directory tree to be accessed by the user 'user' are to be accessed by the user 'user' and 'other' respectively.\n <|source|> find Path -user Regex -atime Timespan -exec grep"
    },
    {
      "source": "Copies defined file to the target folder without overwriting existing files.",
      "target": "cp -n",
      "prediction": "<|endoftext|> <|source|> Copies defined file to the target folder without overwriting existing files. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of two files from the current directory tree are sorted alphabetically.\n <|source|> find Path -type f -printf '%T@%p\\n' | sort -n -r | head -n Quantity | head -n Quantity | head"
    },
    {
      "source": "display all the html files in the current folder that have been modified exactly 7*24 hours ago",
      "target": "find Path -mtime Timespan -name Regex -print",
      "prediction": "<|endoftext|> <|source|> display all the html files in the current folder that have been modified exactly 7*24 hours ago <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first two lines of the file \"file.txt\" are the first two lines of the file \"file.txt\" and the second two lines are the first two lines of \"file.txt\" and the third line of \"file.txt\" <|target|"
    },
    {
      "source": "Look for regular files in the directory trees 'deferred', 'active', 'maildrop', 'incoming' under /var/spool/postfix/",
      "target": "find Path -type f",
      "prediction": "<|endoftext|> <|source|> Look for regular files in the directory trees 'deferred', 'active','maildrop', 'incoming' under /var/spool/postfix/ <|target|> find Path -type f -name Regex -print0 | xargs -I {} grep -v Regex {}                               "
    },
    {
      "source": "Search for 'some string' in all *js files under current directory and show the matched lines with line numbers",
      "target": "find Path -name Regex | grep -n Regex",
      "prediction": "<|endoftext|> <|source|> Search for'some string' in all *js files under current directory and show the matched lines with line numbers <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of the year's biggest jobs in the world are in the top 10 jobs in the top 10 jobs in the world.\n <|source|> Find all the jobs in the current directory and below <|target|> find Path -type f -name Re"
    },
    {
      "source": "display all the files in the file system which belong to the group lighttpd",
      "target": "find Path -group Regex -print",
      "prediction": "<|endoftext|> <|source|> display all the files in the file system which belong to the group lighttpd <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first time a user has logged in to the system, the user must first authenticate with the user and password of the user.\n <|target|> ssh -i -P Regex -o Regex -o Regex -o Regex -o Re"
    },
    {
      "source": "Search directory lpi104-6 for files with inode number 1988884",
      "target": "find Path -inum Quantity",
      "prediction": "<|endoftext|> <|source|> Search directory lpi104-6 for files with inode number 1988884 <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of the three jobs to be created in the current directory tree is the one that is created after the first one is created.\n <|source|> find Path -name Regex -print0 | xargs -0 -I {} grep Regex {}     "
    },
    {
      "source": "Find files/directories under current directory that are modified exactly one hour ago",
      "target": "find Path -mtime Timespan",
      "prediction": "<|endoftext|> <|source|> Find files/directories under current directory that are modified exactly one hour ago <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first time a user of the name \"user\" is logged in to the system, the user name is the user name and the user name is the user name.\n <|source|> find Path -user Regex -name Regex -user Regex -print0 | x"
    },
    {
      "source": "Get the number of \"use\" statements in all PHP files, ordered",
      "target": "find Path -type f -name Regex -exec grep --with-filename -c Regex {} \\; | sort -t Regex -k Number -n -r",
      "prediction": "<|endoftext|> <|source|> Get the number of \"use\" statements in all PHP files, ordered <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first time a user of the name \"my_user\" is logged in, the first time a user of the name \"my_user\" is logged in, the first time a user of the name \"my_user\" is logged in, the first time a user of the name"
    },
    {
      "source": "Finds file 'Subscription.java' and changes to containing folder.",
      "target": "cd $( find Path -name Regex | xargs -I {} dirname {} )",
      "prediction": "<|endoftext|> <|source|> Finds file 'Subscription.java' and changes to containing folder. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of the year's biggest names to join the 'F1' group of the world's largest names, the 'F1' group of the world's largest names, the 'F2' group of the world's largest names, the 'F2' group of the world's"
    },
    {
      "source": "Enables 'nullglob' shell option.",
      "target": "shopt -s nullglob",
      "prediction": "<|endoftext|> <|source|> Enables 'nullglob' shell option. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of the many files in the current directory tree that are not readable by the user and others.\n <|target|> find Path -type f -not -user Regex -not -path Regex -not -path Regex -not -path Regex -path Re"
    },
    {
      "source": "Find all .java files whose name contains \"Message\"",
      "target": "find Path -print | grep Regex",
      "prediction": "<|endoftext|> <|source|> Find all.java files whose name contains \"Message\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new file of the year is the year. <|source|> Find all files in the current directory tree that are newer than the current one and below the current directory <|target|> find Path -newer File -newer File         "
    },
    {
      "source": "Move all files from the `sourceDir' directory tree to the `destDir' directory",
      "target": "find Path -mindepth Quantity -exec mv {} --target-directory Directory \\;",
      "prediction": "<|endoftext|> <|source|> Move all files from the `sourceDir' directory tree to the `destDir' directory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of two jobs in the current directory tree is the one that is currently in the directory /home/user/dir1/directory2/directory3/directory4/directory5/directory6/directory7/directory7/directory8/directory9/directory10/directory11"
    },
    {
      "source": "Search for first match of the case insensitive regex 'oyss' in all *.txt files under current directory and print the file paths along with the matches",
      "target": "find Path -name Regex | xargs -I {} grep -m Quantity -r -i Regex {}",
      "prediction": "<|endoftext|> <|source|> Search for first match of the case insensitive regex 'oyss' in all *.txt files under current directory and print the file paths along with the matches <|target|> find Path -iname Regex -exec grep -H Regex {} + | xargs -I {} grep -H Regex {}                               "
    },
    {
      "source": "Find all PHP files under current directory that contain only one line",
      "target": "find Path -type f -name Regex -exec wc -l {} \\; | grep -E Regex",
      "prediction": "<|endoftext|> <|source|> Find all PHP files under current directory that contain only one line <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first word in the word \"word\" file is \"word\" and the second word in the \"word\" file is \"word\"\n <|source|> find Path -name Regex -print0 | xargs -0 -I {} grep Regex {}    "
    },
    {
      "source": "list all *.txt files in the user's home directory.",
      "target": "find Path -name Regex",
      "prediction": "<|endoftext|> <|source|> list all *.txt files in the user's home directory. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of two files in the current directory tree are not sorted, but are sorted by the number of lines in the file system.\n <|source|> find Path -type f -iname Regex -exec ls -l -l -d -h {} + | sort |"
    },
    {
      "source": "Replace the first occurrence of \"foo\" with \"bar\" on every line in .txt files from the current directory tree",
      "target": "find Path -type f -name Regex | xargs --replace Regex -I {} sed --in-place Regex Program {}",
      "prediction": "<|endoftext|> <|source|> Replace the first occurrence of \"foo\" with \"bar\" on every line in.txt files from the current directory tree <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>\"I have been waiting for a long time for a new job. <|source|> I have been waiting for a long time for a new job. <|target|> find Path -name Regex -exec grep Regex {} \\;   "
    },
    {
      "source": "Print the full path of command \"cc\"",
      "target": "which Regex",
      "prediction": "<|endoftext|> <|source|> Print the full path of command \"cc\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of the largest and most common files in the home directory tree is the file system. This file system is accessed by the user and group root.\n <|target|> find Path -type f -exec ls -l -t File | xargs -"
    },
    {
      "source": "Write contents of \"/sys/kernel/debug/tracing/trace_pipe\" to standard output and to \"tracelog.txt\" executing as a root user",
      "target": "cat File | tee File",
      "prediction": "<|endoftext|> <|source|> Write contents of \"/sys/kernel/debug/tracing/trace_pipe\" to standard output and to \"tracelog.txt\" executing as a root user <|target|> tee -a -v -f File File                                             "
    },
    {
      "source": "Recursively finds all 'STATUS.txt' files containing text 'OPEN' and prints containing folder of them.",
      "target": "find Path -type f -name Regex -exec grep -q Regex {} \\; -exec dirname {} \\;",
      "prediction": "<|endoftext|> <|source|> Recursively finds all 'STATUS.txt' files containing text 'OPEN' and prints containing folder of them. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of a long list of all the files in the current directory tree that are bigger than 100MB.\n <|source|> find Path -size +Size -exec ls -l -l -t -d -h -d -v -z -"
    },
    {
      "source": "Compress the file 'file' with 'bzip2' and append all output to the file 'logfile' and stdout",
      "target": "bzip2 File | tee -a File",
      "prediction": "<|endoftext|> <|source|> Compress the file 'file' with 'bzip2' and append all output to the file 'logfile' and stdout <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first word in the first line of the file 'file' is a word with a number.\n <|target|> find Path -name Regex -exec grep -i Regex {} \\;     | grep -v Regex  "
    },
    {
      "source": "Search PATH for utilities called \"rename\", display the type of file (script, executable, ...) for each match found.",
      "target": "which -a Regex | xargs -I {} file -L {}",
      "prediction": "<|endoftext|> <|source|> Search PATH for utilities called \"rename\", display the type of file (script, executable,...) for each match found. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first and second of two new jobs in the current directory tree are in the current directory tree.\n <|source|> find Path -name Regex -type f -exec grep -H Regex {} +          "
    },
    {
      "source": "Search the current directory tree for files whose names begin with \"my\" and end with \"p\" followed by any character",
      "target": "find Path -regex Regex",
      "prediction": "<|endoftext|> <|source|> Search the current directory tree for files whose names begin with \"my\" and end with \"p\" followed by any character <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first part of a long list of the most common files in the current directory tree.\n <|target|> find Path -type f -name Regex -exec grep Regex {} +              "
    },
    {
      "source": "Find files newer than start.txt but not newer than end.txt",
      "target": "find Path -newer File -and ! -newer File",
      "prediction": "<|endoftext|> <|source|> Find files newer than start.txt but not newer than end.txt <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is the first of a long list of all the files in the current directory tree that are not in the current directory tree.\n <|source|> find Path -name Regex -type f -print0 | xargs -0 -I {} ls -"
    },
    {
      "source": "Display all symlinks and their targets in the current directory tree",
      "target": "find -P Path -type l -exec echo -n Regex \\; -exec readlink {} \\;",
      "prediction": "<|endoftext|> <|source|> Display all symlinks and their targets in the current directory tree <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of the files in the current directory tree are named \"file1\" and \"file2\" and \"file2\" and are accessed by the user \"user\" and \"user\" as well.\n <|target|> find Path -name Regex"
    },
    {
      "source": "Find all the *.txt files in the current directory older than 48 hours",
      "target": "find Path -maxdepth Quantity -name Regex -mtime +Timespan",
      "prediction": "<|endoftext|> <|source|> Find all the *.txt files in the current directory older than 48 hours <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first part of the file system that contains all the files in the current directory and below.\n <|source|> find Path -name Regex -exec grep -v Regex {} +              "
    },
    {
      "source": "get the root user access",
      "target": "su",
      "prediction": "<|endoftext|> <|source|> get the root user access <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first two lines of the file 'file' are separated by a comma and a space.\n <|source|> find Path -name Regex -print0 | xargs -0 -I {} grep -v Regex"
    },
    {
      "source": "display all files in the current folder which end with extension \"myfile\" followed by one digit or two digits",
      "target": "find Path \\( -name Regex -or -name Regex \\)",
      "prediction": "<|endoftext|> <|source|> display all files in the current folder which end with extension \"myfile\" followed by one digit or two digits <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first time a user of the current directory has been accessed for more than 100 days, the user is logged in and logged out.\n <|source|> find Path -user Regex -atime +Timespan -exec"
    },
    {
      "source": "List the files in \"archive.tar.gz\"",
      "target": "gzip -l Regex",
      "prediction": "<|endoftext|> <|source|> List the files in \"archive.tar.gz\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first two lines of the file 'file' file are sorted by the first two lines of the file 'file' and the third line of the file 'file' file.\n <|source|> sort File File | sort"
    },
    {
      "source": "Create directorie(s) 'some/path' as required in the current directory",
      "target": "mkdir -p Directory",
      "prediction": "<|endoftext|> <|source|> Create directorie(s)'some/path' as required in the current directory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new file in the home directory tree of the current directory tree is a file named \"file1\" which contains the path to the current directory. File1 is the path to the current directory. File2 is the path to the"
    },
    {
      "source": "find all the files in the folder /home which are exactly of size 10MB",
      "target": "find Path -size Size",
      "prediction": "<|endoftext|> <|source|> find all the files in the folder /home which are exactly of size 10MB <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of a series of \"new\" files in the current directory tree, and the first of a series of \"old\" files in the directory tree.\n <|target|> find Path -type f -name Regex"
    },
    {
      "source": "find all the perl files in the current folder and search for a pattern",
      "target": "find Path -name Regex | xargs -I {} grep -L Regex {}",
      "prediction": "<|endoftext|> <|source|> find all the perl files in the current folder and search for a pattern <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The current directory directory is the directory of the current directory.\n <|source|> find Path -type d -name Regex -execdir dirname Regex -execdir -execdir dirname Regex   "
    },
    {
      "source": "Recursively copy /path/foo on host \"prod\" to local directory \"/home/user/Desktop\", connecting as ssh username corresponding to local username.",
      "target": "scp -r File File",
      "prediction": "<|endoftext|> <|source|> Recursively copy /path/foo on host \"prod\" to local directory \"/home/user/Desktop\", connecting as ssh username corresponding to local username. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of the world renowned \"new\" files in the current directory tree is the first file in the current directory tree. <|source|> find Path -type f -name Regex -exec dirname {} + | grep"
    },
    {
      "source": "Move \"tobecopied/tobeexclude\" to \"tobeexclude\"",
      "target": "mv File File",
      "prediction": "<|endoftext|> <|source|> Move \"tobecopied/tobeexclude\" to \"tobeexclude\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of three new jobs for the current user is today.\n <|source|> find Path -name Regex -type f -exec grep -H Regex {} +          "
    },
    {
      "source": "Find all files/directories with 'my key phrase' in their names under current directory",
      "target": "find Path -name Regex",
      "prediction": "<|endoftext|> <|source|> Find all files/directories with'my key phrase' in their names under current directory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first time I logged in to the 'MyApp' app, I was logged in to the 'MyApp' app.\n <|target|> log In | login | ssh-key       "
    },
    {
      "source": "Delete all regular files that start with 'sess_' in their names, are at least 1 level deep and were modified more than $gc_maxlifetime minutes ago under $save_path directory tree",
      "target": "find Path Path -depth -mindepth Quantity -name Regex -ignore_readdir_race -type f -cmin Quantity -delete",
      "prediction": "<|endoftext|> <|source|> Delete all regular files that start with'sess_' in their names, are at least 1 level deep and were modified more than $gc_maxlifetime minutes ago under $save_path directory tree <|target|> find Path -type f -name Regex -mmin +Quantity -delete  -delete  -delete  -delete  -delete  -delete  -delete  -delete  -delete  -delete  -delete "
    },
    {
      "source": "Move \"file.txt\" to docker container \"$COUNTAINER_ID\" in path \"/var/lib/docker/aufs/mnt/$CONTAINER_ID/rootfs/root/file.txt\"",
      "target": "mv -f File File",
      "prediction": "<|endoftext|> <|source|> Move \"file.txt\" to docker container \"$COUNTAINER_ID\" in path \"/var/lib/docker/aufs/mnt/$CONTAINER_ID/rootfs/root/file.txt\" <|target|> mv $( pstree ) File                                  "
    },
    {
      "source": "Count all the lines of all '*.c' files in current directory recursively",
      "target": "find Path -name Regex -print0 | xargs -0 -I {} cat {} | wc -l",
      "prediction": "<|endoftext|> <|source|> Count all the lines of all '*.c' files in current directory recursively <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first time a new file in the current directory is accessed, it will be accessed by the user.\n\nThis is the first time that the user has accessed the file 'file' in the current directory"
    },
    {
      "source": "Prints long listing of content in a root folder, including hidden files, with human-readable sizes, and stores output to '/root/test.out' file.",
      "target": "echo Regex | bash",
      "prediction": "<|endoftext|> <|source|> Prints long listing of content in a root folder, including hidden files, with human-readable sizes, and stores output to '/root/test.out' file. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of a long lines of text file 'file1' is a long line of text file 'file2' which is a long line of text file.\n <|source|> Print the lines"
    },
    {
      "source": "Recursively change owner to \"amzadm\" and group to \"root\" of all files in \"/usr/lib/python2.6/site-packages/\"",
      "target": "chown Regex -R File",
      "prediction": "<|endoftext|> <|source|> Recursively change owner to \"amzadm\" and group to \"root\" of all files in \"/usr/lib/python2.6/site-packages/\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The latest in a long line drawn series of new jobs for the top 10 jobs in the current month.\n <|source|> Search for jobs in the current month and below <|target|> find"
    },
    {
      "source": "Check if \"\\[$VLABEL\\]\" is mounted and save the result in variable \"AMV\"",
      "target": "mount -l | grep Regex",
      "prediction": "<|endoftext|> <|source|> Check if \"\\[$VLABEL\\]\" is mounted and save the result in variable \"AMV\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new and expanded version of the current directory tree of the current directory tree is available for download from the current directory tree. <|source|> find Path -type f -name Regex -exec bas"
    },
    {
      "source": "Finds pattern text ignoring letter case in all .js files, prints matched strings and name of file with that strings.",
      "target": "find Path -name Regex -exec grep -i Regex {} \\; -print",
      "prediction": "<|endoftext|> <|source|> Finds pattern text ignoring letter case in all.js files, prints matched strings and name of file with that strings. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first two files in the current directory tree are the same file, but the first one is a file named \"file.txt\" and the second one is named \"file.txt\" and the third one"
    },
    {
      "source": "Prints total count of lines of all *.php files in a current folder and subfolders.",
      "target": "find Path -name Regex -type f -exec cat -- {} + | wc -l",
      "prediction": "<|endoftext|> <|source|> Prints total count of lines of all *.php files in a current folder and subfolders. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of the largest and most frequent jobs in the world is at the end of September.\n <|source|> Find all the jobs in the entire file system which are at least 100MB and less"
    },
    {
      "source": "Print the current directory name without full path",
      "target": "echo Regex | sed Program",
      "prediction": "<|endoftext|> <|source|> Print the current directory name without full path <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file contains all the files in the current folder which are not in the current folder.\n <|source|> find Path -name Regex -type f -print0 | grep -v Regex"
    },
    {
      "source": "Find all *.c files under and below the current directory that contain \"wait_event_interruptible\"",
      "target": "find Path -name Regex -print | xargs -I {} grep Regex File {}",
      "prediction": "<|endoftext|> <|source|> Find all *.c files under and below the current directory that contain \"wait_event_interruptible\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long list of all the files in the current directory tree that are bigger than 100MB.\n <|source|> find Path -size +Size -size -Size -size -Size -"
    },
    {
      "source": "Find files containing string \"#!/bin/ksh\" and append their names and matching strings to /tmp/allfiles",
      "target": "find Path -type f -execdir grep -i -H Regex {} \\; | tee File",
      "prediction": "<|endoftext|> <|source|> Find files containing string \"#!/bin/ksh\" and append their names and matching strings to /tmp/allfiles <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The latest in a long line of new jobs for the current and future of the current user.\n <|source|> Find all files under current directory and below that are at least one level down the current"
    },
    {
      "source": "Print information of the root mount point",
      "target": "mount -v | grep Regex",
      "prediction": "<|endoftext|> <|source|> Print information of the root mount point <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|source|> Find all the files in the current directory tree that are bigger than 100MB and have at least one of them in their names and below. <|target|> find Path -size +Size -print0 | xargs -0 -I {} mount -t wc"
    },
    {
      "source": "Search /path/to/your/directory for *.avi and *.flv files",
      "target": "find Path -regex Regex",
      "prediction": "<|endoftext|> <|source|> Search /path/to/your/directory for *.avi and *.flv files <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of two new jobs to be created in the history of the current directory tree of the current directory, the directory tree of the current directory, and the directory of the current directory.\n <|source|> find Path -name Regex -execdir {} \\;    "
    },
    {
      "source": "Source \"lib/B\" relative to the directory of the executing shell script, will fail if currently running script is not in PATH.",
      "target": "source $( dirname $( which Regex ) )",
      "prediction": "<|endoftext|> <|source|> Source \"lib/B\" relative to the directory of the executing shell script, will fail if currently running script is not in PATH. <|target|><|endoftext|><|endoftext|>\"I have been working for the last 7 years to create a unified unified file system for all the files in the current directory tree. <|source|> find Path -name Regex -exec dirname {} \\;               "
    },
    {
      "source": "Print a count of each unique line from standard input sorted from least frequent to most frequent",
      "target": "sort | uniq -c | sort -n",
      "prediction": "<|endoftext|> <|source|> Print a count of each unique line from standard input sorted from least frequent to most frequent <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of two new jobs in the current month is a new job for the user \"j\" and the second job is a new job for \"j\" and \"j\" and the third job is a new job for \"j\" and \"j\" and the fourth job is a new job"
    },
    {
      "source": "search for soft links in current folder and display those links which are not pointed to files in current folder",
      "target": "find Path -type l -exec readlink -f {} \\; | grep -v $( readlink -f File )",
      "prediction": "<|endoftext|> <|source|> search for soft links in current folder and display those links which are not pointed to files in current folder <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first time a user of the web interface finds a file named \"file.txt\" in the current directory tree, it will search for the file \"file.txt\" in the current directory and display the file's contents.\n <|source|> find Path -name Regex -exec"
    },
    {
      "source": "Remove files from the home directory tree that were last accessed more than 100 days ago",
      "target": "find Path -atime +Timespan -delete",
      "prediction": "<|endoftext|> <|source|> Remove files from the home directory tree that were last accessed more than 100 days ago <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of the largest and most frequent files in the entire file system, the file system is accessed by the user and the user.\n <|source|> find Path -type f -exec ls -l -s {} + | grep Regex | xargs -I {} rm -r"
    },
    {
      "source": "Find all aliencoders.[0-9]+ files under /home/jassi/ directory",
      "target": "find Path -type f -name Regex",
      "prediction": "<|endoftext|> <|source|> Find all aliencoders.[0-9]+ files under /home/jassi/ directory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of two new jobs in the current directory tree is the one that is not found in the current directory tree.\n <|source|> find Path -type f -name Regex -exec grep -i -l Regex {} \\;         "
    },
    {
      "source": "Processes all files recursively in /var/spool/cron/tabs folder and filters out all strings with '#'.",
      "target": "grep -v Regex -R File",
      "prediction": "<|endoftext|> <|source|> Processes all files recursively in /var/spool/cron/tabs folder and filters out all strings with '#'. <|target|> find Path -name Regex -print0 | grep -v Regex | xargs -I {} grep -v Regex {}                                 "
    },
    {
      "source": "Print lines in \"file1.txt\" that do not exist in \"file2.txt\"",
      "target": "sort <( sort -u File ) File File | uniq -u",
      "prediction": "<|endoftext|> <|source|> Print lines in \"file1.txt\" that do not exist in \"file2.txt\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first time a user's home directory is accessed by a user, user, the user's home directory, the user's home directory, and the user's home directory, the user's home directory.\n <|target|> find Path -user Regex -user Regex -user Re"
    },
    {
      "source": "display all the regular files in current folder that belong to the user \"tom\"",
      "target": "find Path -type f -user Regex",
      "prediction": "<|endoftext|> <|source|> display all the regular files in current folder that belong to the user \"tom\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new report from the US Department of Justice finds that the US has the largest number of files in the /home/dir directory tree and the /home/dir directory tree.\n <|source|> find Path -type f -name Regex -exec grep -H -v Regex"
    },
    {
      "source": "Move all directories in the current directory tree that have been modified in the last day to \"/path/to/target-dir\"",
      "target": "find Path -type d -mtime -Timespan -print0 | xargs -0 -I {} mv -t Directory {}",
      "prediction": "<|endoftext|> <|source|> Move all directories in the current directory tree that have been modified in the last day to \"/path/to/target-dir\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of two new jobs for the current day.\n <|source|> Find all files under current directory and change their permission to 755 <|target|> find Path -type f -exec chmod Permission {} +    -perm -Permission"
    },
    {
      "source": "Rename \"www_new\" to \"www\" even if \"www\" directory exists",
      "target": "mv -T File File",
      "prediction": "<|endoftext|> <|source|> Rename \"www_new\" to \"www\" even if \"www\" directory exists <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of two new jobs in the history of the world's largest and most-read websites, the search for the first job in the history of the world's largest website is today.\n <|source|> Search for the word \"new\" in all the regular/"
    },
    {
      "source": "Search the current directory tree for symbolic links to files matching pattern '*/test*'",
      "target": "find -P Path -lname Regex",
      "prediction": "<|endoftext|> <|source|> Search the current directory tree for symbolic links to files matching pattern '*/test*' <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of a long list of all the files in the current directory tree which have been modified in the last 24 hours.\n <|source|> find Path -mtime Timespan -mtime Timespan -print  -mtime Timespan   -print "
    },
    {
      "source": "Print the current date followed by ' doing stuff'",
      "target": "echo $( date ) Regex Regex",
      "prediction": "<|endoftext|> <|source|> Print the current date followed by'doing stuff' <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|source|> Find all the files in the current directory and below that are bigger than 100MB and have been accessed in the last 24 hours. <|target|> find Path -size +Size -atime Timespan -exec grep -H Regex {} +"
    },
    {
      "source": "Read a line from standard input with prompt \"Are you alright? (y/n) \" and save the response to variable \"RESP\"",
      "target": "read -p Regex Regex",
      "prediction": "<|endoftext|> <|source|> Read a line from standard input with prompt \"Are you alright? (y/n) \" and save the response to variable \"RESP\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of the year's biggest names to join the list of the top 100 list of the top 100 list of the top 100 list of the top 100 list of the top 100 list of the top 100 list of the top 100 list of the top 100 list of the top 100"
    },
    {
      "source": "create a symbolic link named \"/usr/bin/my-editor\" to file \"/usr/share/my-ditor/my-editor-executable\"",
      "target": "ln -s File Regex",
      "prediction": "<|endoftext|> <|source|> create a symbolic link named \"/usr/bin/my-editor\" to file \"/usr/share/my-ditor/my-editor-executable\" <|target|> ln -s File                                                   "
    },
    {
      "source": "Find all empty directories in the current one and delete them",
      "target": "find Path -type d -maxdepth Quantity -empty -print0 | xargs -0 -I {} rmdir {}",
      "prediction": "<|endoftext|> <|source|> Find all empty directories in the current one and delete them <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is the first in a series of columns from the latest release of the latest release of the latest release of the latest release of the latest release of the latest release of the latest release of the latest release of the latest release of the latest release of the latest release of the latest"
    },
    {
      "source": "search for all the regular/normal files  in the /etc folder which have been modified in the last 24 hours",
      "target": "find Path -type f -mtime -Timespan",
      "prediction": "<|endoftext|> <|source|> search for all the regular/normal files  in the /etc folder which have been modified in the last 24 hours <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first two files in the current directory are empty.\n <|source|> find Path -empty -type f -name Regex -print0 | xargs -0 -I {} ls -l -l {}           "
    },
    {
      "source": "Print the last mounted drive",
      "target": "mount | tail - Quantity | sed Program",
      "prediction": "<|endoftext|> <|source|> Print the last mounted drive <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of a long series of files from the current directory tree that are not present in the current directory tree.\n <|source|> find Path -name Regex -type f -exec ls -l -l -d -h -m -d -v -"
    },
    {
      "source": "Find all *.c files under /home",
      "target": "find Path -name Regex",
      "prediction": "<|endoftext|> <|source|> Find all *.c files under /home <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of the year's biggest jobs in the world, the largest jobs are in the world.\n <|source|> Find all the jobs in the current directory and below and delete them <|target|> find Path -type f -name Regex -exec grep"
    },
    {
      "source": "Find all file in current directory with have .c extenstion & have 777 permission . delete then",
      "target": "find Path -name Regex -and -perm -Permission | xargs -I {} rm -r -f {}",
      "prediction": "<|endoftext|> <|source|> Find all file in current directory with have.c extenstion & have 777 permission. delete then <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of a long series of \"new\" files from the current directory tree that are not present in the current directory tree.\n <|target|> find Path -type f -name Regex -print0 | xargs -0 -I {} ls -l {} | head -"
    },
    {
      "source": "Remove \"\\r\" at the end of each line in \"infile\" and display the result as printable characters or backslash escapes",
      "target": "cat File | sed Program | od -c",
      "prediction": "<|endoftext|> <|source|> Remove \"\\r\" at the end of each line in \"infile\" and display the result as printable characters or backslash escapes <|target|><|endoftext|><|endoftext|>\"I'm not going to do anything to the other. <|source|> Find all the files in the current directory and below <|target|> find Path -name Regex -print0 | xargs -0 -I {} grep Regex {}      "
    },
    {
      "source": "Search the path given as the $absolute_dir_path variable for regular files",
      "target": "find Path -type f -print0",
      "prediction": "<|endoftext|> <|source|> Search the path given as the $absolute_dir_path variable for regular files <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|source|> Search for the file 'file' in the current directory tree and below and replace it with 'file' in the output of 'file' <|target|> find Path -type f -print0 | xargs -0 -I {} sed -i Program {}"
    },
    {
      "source": "Send SIGHUP (hangup) signal to nginx master process, causing it to re-read its configuration and restart child processes if necessary.",
      "target": "kill - Regex $( cat File )",
      "prediction": "<|endoftext|> <|source|> Send SIGHUP (hangup) signal to nginx master process, causing it to re-read its configuration and restart child processes if necessary. <|target|> ssh -H Regex Regex                                                    "
    },
    {
      "source": "find all PDFs owned by user \u201cseamstress\u201d",
      "target": "find Path -user Regex -iname Regex",
      "prediction": "<|endoftext|> <|source|> find all PDFs owned by user \u201cseamstress\u201d <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first time a user of the name \"google\" is logged in to the system, the user is logged in to the system.\n <|source|> find Path -user Regex -iname Regex -print      | grep Regex    "
    },
    {
      "source": "Change to directory 'xyz' and resolve any symlinks in the resulting path, making the physical path the current one.",
      "target": "cd -P Directory",
      "prediction": "<|endoftext|> <|source|> Change to directory 'xyz' and resolve any symlinks in the resulting path, making the physical path the current one. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of the year's biggest jobs in the world, the first of the year's biggest jobs in the world, and the biggest jobs in the world's largest.\n <|source|> Find all the jobs in the current directory tree and below and search for the jobs in the files"
    },
    {
      "source": "Find all files under the current directory whose filenames are not \"file.txt\", ignoring the case",
      "target": "find Path -maxdepth Quantity -not -iname Regex",
      "prediction": "<|endoftext|> <|source|> Find all files under the current directory whose filenames are not \"file.txt\", ignoring the case <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of two new jobs in the current directory tree is the one that is used to create a new job.\n <|source|> find Path -name Regex -exec grep -H Regex {} +               "
    },
    {
      "source": "Find all files under $x directory and set read-write permission for owner and group and no permission for other for those files",
      "target": "find Path -type f -exec chmod Permission {} \\;",
      "prediction": "<|endoftext|> <|source|> Find all files under $x directory and set read-write permission for owner and group and no permission for other for those files <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of the year, the year of the year, the year of the year, the year of the year, the year of the year, the year of the year, the year of the year, the year of the year, the year of the year, the year of the year"
    },
    {
      "source": "Search the current directory tree for files whose name is \".note\", case insensitive",
      "target": "find Path -iname Regex | sort",
      "prediction": "<|endoftext|> <|source|> Search the current directory tree for files whose name is \".note\", case insensitive <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The latest version of the \"FooBar\" app for the current user is available for download today.\n <|source|> Find all files/directories under current directory and below and below and change their permission to 755 <|target|> find Path -type f -name"
    },
    {
      "source": "Print newline, word, and byte counts of each '*.java' file within current directory, and total newline, word, and byte counts",
      "target": "find Path -name Regex | tr Regex Regex | xargs -0 -I {} wc {}",
      "prediction": "<|endoftext|> <|source|> Print newline, word, and byte counts of each '*.java' file within current directory, and total newline, word, and byte counts <|target|> comm -1 -2 -3 -3 -4 -5 -5 -6 -7 -8 -9 -9 -9 -10 -10 -11 -11 -11 -12 -12 -13 -14 -15 -16 -17 -18 -19 -20 -21"
    },
    {
      "source": "Sets shell option 'nounset'.",
      "target": "shopt -s -o nounset",
      "prediction": "<|endoftext|> <|source|> Sets shell option 'nounset'. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|source|> Find all the files in the current directory tree and below that are bigger than 100MB and have been modified in the last 24 hours <|target|> find Path -size +Size -mtime Timespan -exec"
    },
    {
      "source": "Find all *.[ch] files under current directory",
      "target": "find Path -name Regex",
      "prediction": "<|endoftext|> <|source|> Find all *.[ch] files under current directory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new and expanded version of the current version of the current version of the PHP file system.\n <|target|> find Path -name Regex -print0 | xargs -0 -I {} grep -i -v Regex"
    },
    {
      "source": "Find all regular files on the system whose names are 'myfile'",
      "target": "find Path -name Regex -type f -print",
      "prediction": "<|endoftext|> <|source|> Find all regular files on the system whose names are'myfile' <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new file system for the current user, which is a bit of a long list, but it's not a long list.\n <|target|> find Path -type f -printf '%p\\n' | xargs -"
    },
    {
      "source": "List all files under the current working directory tree",
      "target": "find Path $( pwd ) -type f",
      "prediction": "<|endoftext|> <|source|> List all files under the current working directory tree <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of two files from the current directory tree that are not in the directory tree \"dir1\" and are not in the directory \"dir2\" <|source|> find Path -name Regex -type f -print0 |"
    },
    {
      "source": "search for all the files in the current directory which have been modified in the last 24 hours.",
      "target": "find Path -mtime -Timespan",
      "prediction": "<|endoftext|> <|source|> search for all the files in the current directory which have been modified in the last 24 hours. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of a series of images from the last 10 days of the current calendar.\n <|source|> find Path -type f -mtime Timespan -exec grep -H -i -l -v -d Regex {}"
    },
    {
      "source": "Find all *.py files/directories under current directory",
      "target": "find Path -name Regex",
      "prediction": "<|endoftext|> <|source|> Find all *.py files/directories under current directory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of the new jobs in the current directory tree is the one that is the most common in the current directory tree.\n <|source|> find Path -type f -name Regex -exec grep -v Regex {} +"
    },
    {
      "source": "Force create a symbolc link named \"/usr/local/bin/fpdf\" to \"/usr/local/bin/findpdftext\"",
      "target": "ln -s -f File Regex",
      "prediction": "<|endoftext|> <|source|> Force create a symbolc link named \"/usr/local/bin/fpdf\" to \"/usr/local/bin/findpdftext\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first word in \"The Times\" is \"I\" and the second word in \"The Times\" is \"I\" and the last word in \"The Times\" is \"I\" and the last word in \"The Times\" is \""
    },
    {
      "source": "Find all the files which are modified in last 1 hour in entire file system",
      "target": "find Path -mmin -Quantity",
      "prediction": "<|endoftext|> <|source|> Find all the files which are modified in last 1 hour in entire file system <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is the first of a series of interactive interactive interactive interactive interactive interactive web sites that are not only for the user but also for the group.\n <|source|> Find all the files in the current directory and below and search for the"
    },
    {
      "source": "search for a shell script in the current folder and display the current folder path but search from the sub directories",
      "target": "find Path -name Regex -execdir pwd \\;",
      "prediction": "<|endoftext|> <|source|> search for a shell script in the current folder and display the current folder path but search from the sub directories <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of two new jobs in the current month.\n <|source|> Find all files/directories under current directory and search for the word \"new\" in them. <|target|> find Path -name Regex -"
    },
    {
      "source": "Find files matching pattern $2 in the $1 directory recursively and search them for text $3, where $1, $2, $3 are the command line arguments to the Bash script",
      "target": "find Path -path Regex -prune -or -name Regex -print -exec grep -H -n Regex {} \\;",
      "prediction": "<|endoftext|> <|source|> Find files matching pattern $2 in the $1 directory recursively and search them for text $3, where $1, $2, $3 are the command line arguments to the Bash script <|target|> find Path -name Regex -print0 | grep -v Regex                                  "
    },
    {
      "source": "Find all files/directories with '.log' extension that belong to the group 'adm' under '/var/log' directory tree",
      "target": "find Path -group Regex -name Regex",
      "prediction": "<|endoftext|> <|source|> Find all files/directories with '.log' extension that belong to the group 'adm' under '/var/log' directory tree <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of two new jobs in the current year, the first of two new jobs in the current year.\n <|source|> Find all the regular/all files in the current directory tree that are not owned by the"
    },
    {
      "source": "delete all the files in the current folder which end with \".bak\" or \".backup\" and which have not been accessed in the last 30 days",
      "target": "find Path \\( -name Regex -or -name Regex \\) -type f -atime +Timespan -exec rm {} \\;",
      "prediction": "<|endoftext|> <|source|> delete all the files in the current folder which end with \".bak\" or \".backup\" and which have not been accessed in the last 30 days <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first time a user logged in to the system was changed to user \"user@yourdomain.com\" is logged in to the system.\n <|source|> change user to user@yourdomain.com and group"
    },
    {
      "source": "Print the path of all the network mounts",
      "target": "mount | sed -n -e Program",
      "prediction": "<|endoftext|> <|source|> Print the path of all the network mounts <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long list of all the files in the current directory tree that are not in the current directory tree.\n <|source|> find Path -type f -name Regex -exec ls -l {} \\;"
    },
    {
      "source": "find all text files in user/directory/ which have been modified today and display the last line of these files",
      "target": "find Path -name Regex -mtime Timespan -type f -printf '%p: ' -exec tail - Quantity {} \\;",
      "prediction": "<|endoftext|> <|source|> find all text files in user/directory/ which have been modified today and display the last line of these files <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new app for the home automation and home automation users.\n <|source|> find all the files in the current directory and display the list of them <|target|target|> find Path -name Regex -"
    },
    {
      "source": "Verbosely compresses all files on fifth and sixth depth level keeping original files in place.",
      "target": "bzip2 -k -v File",
      "prediction": "<|endoftext|> <|source|> Verbosely compresses all files on fifth and sixth depth level keeping original files in place. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of the new year's new year's new year's new year's new year's new year's new year's new year's new year's new year's new year's new year's new year's new year's"
    },
    {
      "source": "Use the first non-zero exit code (if any) of a set of piped commands as the exit code of the full set of commands",
      "target": "set -o pipefail",
      "prediction": "<|endoftext|> <|source|> Use the first non-zero exit code (if any) of a set of piped commands as the exit code of the full set of commands <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first and last word of the day of the month of the month of the month of the month of the month of the month of the month of the month of the month of the month of the month of the month of the"
    },
    {
      "source": "Prints all child processes of a process with id 20238.",
      "target": "pstree -p Regex | sed Program | grep Regex | sed Program",
      "prediction": "<|endoftext|> <|source|> Prints all child processes of a process with id 20238. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|source|> Find all files/directories under current directory and below that are at least 100MB and less than 100MB and delete them. <|target|> find Path -size Size -size -Size -"
    },
    {
      "source": "Split \"/usr/bin/firefox\" into 1000 files of about equal size",
      "target": "split -n Quantity File",
      "prediction": "<|endoftext|> <|source|> Split \"/usr/bin/firefox\" into 1000 files of about equal size <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of a series of files from the current directory tree that are not in the directory tree /home/to/dir/ and /home/to/dir/ are modified in the last 24 hours.\n <|source"
    },
    {
      "source": "Set the executable bit for all users on all regular files from directories arch/x86/usr/sbin, arch/x86/usr/X11R6/bin, usr/sbin/",
      "target": "find Path Path Path -type f | xargs -I {} chmod Permission {}",
      "prediction": "<|endoftext|> <|source|> Set the executable bit for all users on all regular files from directories arch/x86/usr/sbin, arch/x86/usr/X11R6/bin, usr/sbin/ <|target|> find Path -type f -exec chmod Permission {} +                                 "
    },
    {
      "source": "find all the files in the entire file system which belong to the group \"staff\"",
      "target": "find Path -group Regex -print",
      "prediction": "<|endoftext|> <|source|> find all the files in the entire file system which belong to the group \"staff\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The latest release of the latest release of the latest release of the latest release of the latest release of the latest release of the latest release of the latest release of the latest release of the latest release of the latest release of the latest"
    },
    {
      "source": "find all the html files in the current folder and replace the end of each line with a pattern",
      "target": "find Path -type f -name Regex | xargs -I {} sed -i Program {}",
      "prediction": "<|endoftext|> <|source|> find all the html files in the current folder and replace the end of each line with a pattern <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of the largest and most frequent files in the current directory tree is the file \"file1\" and contains the file name of the file \"file2\" <|source|> find Path -type f -name Regex -exec grep -H Regex {} + | head -n Quantity"
    },
    {
      "source": "search for all the files in current folder and display all the file names separated by space",
      "target": "find Path | awk Program",
      "prediction": "<|endoftext|> <|source|> search for all the files in current folder and display all the file names separated by space <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first time a user's name is found in the current directory, the user name is found in the file system.\n <|target|> find Path -name Regex -exec grep -F Regex {} \\;               "
    },
    {
      "source": "Replace all newlines from the contents of \"file\" except the last with spaces",
      "target": "sed Program File",
      "prediction": "<|endoftext|> <|source|> Replace all newlines from the contents of \"file\" except the last with spaces <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of two new files from the current directory tree that are not in the current directory tree are present in the current directory tree.\n <|source|> find Path -name Regex -exec grep -v Regex {} \\;            "
    },
    {
      "source": "Find all .gz archives in the current directory tree and check if they are valid",
      "target": "find Path -name Regex -exec gunzip {} \\;",
      "prediction": "<|endoftext|> <|source|> Find all.gz archives in the current directory tree and check if they are valid <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first word in \"The Simpsons Movie\" is \"I'm a man\"\n <|source|> Find all the files in the current directory and below that are bigger than 100MB and print them to the console. <|target|> find Path -size Size -print    "
    },
    {
      "source": "find all files in the current folder which are bigger than 10bytes",
      "target": "find Path -size +Size -print",
      "prediction": "<|endoftext|> <|source|> find all files in the current folder which are bigger than 10bytes <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of the three-part series of \"The Last of Us\" to be broadcast on the network on Tuesday, November 7.\n <|source|> Find all files in the current directory tree that are at least 100 bytes in size and print the names of the files in the directories that are"
    },
    {
      "source": "display the count of number html files in the current folder",
      "target": "find Path -name Regex -print | xargs -l -i -I {} wc {} {}",
      "prediction": "<|endoftext|> <|source|> display the count of number html files in the current folder <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first time a new user has logged in to the system, the user's home directory is accessed by the user's home directory.\n <|source|> find Path -user Regex -atime Timespan -exec ls -l -t -t -t -t -t -t"
    },
    {
      "source": "find and image in current folder (case insensitive search)",
      "target": "find Path -iname Regex",
      "prediction": "<|endoftext|> <|source|> find and image in current folder (case insensitive search) <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of the two files in the current directory tree that are not owned by the user 'user' are not owned by the user 'user' and are not accessed by the user 'other' in the current directory tree.\n <|target|> find Path -user Regex -or -"
    },
    {
      "source": "Find all files/directories under current directory tree whose names start with 'test' followed by two digits and end with '.txt' extension",
      "target": "find Path -regextype sed -regex Regex",
      "prediction": "<|endoftext|> <|source|> Find all files/directories under current directory tree whose names start with 'test' followed by two digits and end with '.txt' extension <|target|> find Path -name Regex -print0 | xargs -0 -I {} grep Regex {}                                        "
    },
    {
      "source": "change the ownership of all directories in the current folder",
      "target": "find Path -type d -exec chown Regex {} \\;",
      "prediction": "<|endoftext|> <|source|> change the ownership of all directories in the current folder <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of the many files in the current directory tree that are not owned by the user and are not accessed by the user.\n <|source|> find Path -user Regex -perm -Permission                  "
    },
    {
      "source": "Change ownership of \"/data/db\" to the current user",
      "target": "chown $( whoami ) File",
      "prediction": "<|endoftext|> <|source|> Change ownership of \"/data/db\" to the current user <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of two jobs to be created in the current directory tree for the current user is the current user.\n <|target|> find Path -user Regex -exec chmod Permission {} +                   "
    },
    {
      "source": "Get a detailed list of all files on the system larger than 10MB",
      "target": "find Path -size +Size -printf \"%12s %t %h/%fn\"",
      "prediction": "<|endoftext|> <|source|> Get a detailed list of all files on the system larger than 10MB <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new and improved version of the current version of the standard input file system.\n <|source|> find Path -name Regex -exec grep -H Regex {} + | grep -E Regex | xargs -I {} grep -E -E"
    },
    {
      "source": "Remove the last two alphanumeric file extensions from \"mpc-1.0.1.tar.gz\"",
      "target": "echo Regex | sed -r Program",
      "prediction": "<|endoftext|> <|source|> Remove the last two alphanumeric file extensions from \"mpc-1.0.1.tar.gz\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of the new year's new year's long-running, and long-running jobs, the first of the new year's new year's long running jobs, is the day of the first of the new year's long running, and the day of the first"
    },
    {
      "source": "display all the home folder which end with the extension \"sxw\" and which have been accessed in the last 3*24 hours and which belong to the user bruno",
      "target": "find Path -type f -name Regex -atime -Timespan -user Regex",
      "prediction": "<|endoftext|> <|source|> display all the home folder which end with the extension \"sxw\" and which have been accessed in the last 3*24 hours and which belong to the user bruno <|target|> find Path -name Regex -atime +Timespan -exec ls -l {} \\;                                  "
    },
    {
      "source": "Find all the files which are accessed in last 1 hour in entire file system",
      "target": "find Path -amin -Quantity",
      "prediction": "<|endoftext|> <|source|> Find all the files which are accessed in last 1 hour in entire file system <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of the new year is a time for the first of the year.\n <|source|> Find all the files in the current directory and below and below that are bigger than 100MB and have been accessed in the last 24 hours <|target|>"
    },
    {
      "source": "Find all *.sql file that are not newer than  $oldest_to_keep excluding the  $oldest_to_keep file",
      "target": "find Path -name Regex -not -samefile Regex -not -newer File",
      "prediction": "<|endoftext|> <|source|> Find all *.sql file that are not newer than  $oldest_to_keep excluding the  $oldest_to_keep file <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of two new jobs for the current and future of the \"new\" jobs in the current directory tree is set to expire today.\n <|source|> find Path -type f -exec sed -i Program File | xargs -I {} dirname"
    },
    {
      "source": "execute command \"who\" when key \"\\eW\" is pressed",
      "target": "bind -x Regex",
      "prediction": "<|endoftext|> <|source|> execute command \"who\" when key \"\\eW\" is pressed <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of the year, the first of the year, the year, the year, the year, the year, the year, the year, the year, the year, the year, the year, the year, the year, the year, the year,"
    },
    {
      "source": "Print unique lines in sorted \"file1\" compared to sorted file \"file2\"",
      "target": "comm -2 -3 File File",
      "prediction": "<|endoftext|> <|source|> Print unique lines in sorted \"file1\" compared to sorted file \"file2\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first time I found the word \"crony\" in the file \"file1\" was in the file2 folder, I found it in the file1 and file2 in the folder \"file2\" and found it in the folder \"file1\" and"
    }
  ],
  "2.0": [
    {
      "source": "display all the html files in the current folder excluding search in the path ./foo",
      "target": "find Path -path Regex -prune -or -type f -name Regex",
      "prediction": "<|endoftext|> <|source|> display all the html files in the current folder excluding search in the path./foo <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A man who is a man, but not a woman, is a man.\n <|source|> Find all the files in the current directory tree and search for the word \"f\" in them. <|target|> find Path -type f -name Re"
    },
    {
      "source": "Read a line from standard input into variable \"response\" ignoring backslash escapes and using the prompt \"${1:-Are you sure? [y/N]} \"",
      "target": "read -r -p Regex Regex",
      "prediction": "<|endoftext|> <|source|> Read a line from standard input into variable \"response\" ignoring backslash escapes and using the prompt \"${1:-Are you sure? [y/N]} \" <|target|> read -r -p Regex                                                "
    },
    {
      "source": "Finds strings with dot-separated sequence of numbers, and prints part of that sequence before the first dot.",
      "target": "echo Regex | grep -E -o Regex | cut -d Regex -f Number",
      "prediction": "<|endoftext|> <|source|> Finds strings with dot-separated sequence of numbers, and prints part of that sequence before the first dot. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Print the names of all files in the current directory tree and its sub-directories. <|target|> find Path -type f -exec echo Regex {} \\; | sed -e Program        | sed"
    },
    {
      "source": "Compare files in \"/tmp/dir1\" and \"/tmp/dir2\", treating absent files as empty and all files as text",
      "target": "diff -N -a -r File File",
      "prediction": "<|endoftext|> <|source|> Compare files in \"/tmp/dir1\" and \"/tmp/dir2\", treating absent files as empty and all files as text <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>\"I have a question for the owner of the file 'file' <|source|> find Path -type f -name Regex -exec file -i Regex {} \\;                 "
    },
    {
      "source": "display all symbolic links in current folder",
      "target": "find Path -lname Regex",
      "prediction": "<|endoftext|> <|source|> display all symbolic links in current folder <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all files in the current directory tree that are newer than the file 'file' and older than 'file' and contain only the first field. <|source|> find Path -newer File -print | xargs -I {} ls"
    },
    {
      "source": "List the files from the current directory tree that contain lines matching regular expression '^From:.*unique sender', ignoring ~/src and ~/bin",
      "target": "find Path -name Regex -prune -or -name Regex -prune -or -type f -print | xargs -I {} grep -E -i -l Regex {}",
      "prediction": "<|endoftext|> <|source|> List the files from the current directory tree that contain lines matching regular expression '^From:.*unique sender', ignoring ~/src and ~/bin <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first word in \"Hello, World\" is a word. <|source|> Prints first word of each word in a file. <|target|> echo Regex | rev | cut -d Regex -f Number       "
    },
    {
      "source": "Print common lines of files \"file1\", \"file2\", \"file3\", and \"file4\"",
      "target": "comm -1 -2 <( comm -1 -2 <( comm -1 -2 <( sort File ) <( sort File ) ) <( sort File ) ) <( sort File )",
      "prediction": "<|endoftext|> <|source|> Print common lines of files \"file1\", \"file2\", \"file3\", and \"file4\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new and unique set of data files from the current directory tree are stored in the /home directory and are not accessible to anyone except the user.\n <|target|> find Path -type f -exec ls -l -r -f File \\;  "
    },
    {
      "source": "Remount \"/home/evgeny\" with the \"suid\" flag set",
      "target": "mount Regex -o remount,suid Regex",
      "prediction": "<|endoftext|> <|source|> Remount \"/home/evgeny\" with the \"suid\" flag set <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Prints last modified file of file 'file' in a current folder. <|target|> ls -l -t File | sed Program | grep Regex | awk Program | head -n Quantity        "
    },
    {
      "source": "Show the last 10 .conf files found by `find' in the /etc directory",
      "target": "find Path -maxdepth Quantity -name Regex | tail",
      "prediction": "<|endoftext|> <|source|> Show the last 10.conf files found by `find' in the /etc directory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory and below that are owned by the user'myusername' and not by anyone. <|source|> find Path -user Regex -user Regex -print0 | xargs -0 -I"
    },
    {
      "source": "display all the files on the current folder excluding those that are present in the folder \"./src/emacs\"",
      "target": "find Path -path Regex -prune -or -print",
      "prediction": "<|endoftext|> <|source|> display all the files on the current folder excluding those that are present in the folder \"./src/emacs\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of two files in the current directory tree is a file named \"file1\" and file2.txt. <|source|> find Path -name Regex -print0 | xargs -0 -I {} ls -l {}     |"
    },
    {
      "source": "search for all the regular/normal mp3 files in the file system and move them to the folder /mnt/mp3",
      "target": "find Path -iname Regex -type f -print0 | xargs -0 -I {} mv {} File",
      "prediction": "<|endoftext|> <|source|> search for all the regular/normal mp3 files in the file system and move them to the folder /mnt/mp3 <|target|><|endoftext|> <|source|> Search the current directory tree for regular files whose names end in \".mp3\" <|target|> find Path -type f -name Regex -exec mv {} File \\;                   "
    },
    {
      "source": "find all files in the home folder which are modified in the last 2 days.",
      "target": "find Path -type f -mtime -Timespan",
      "prediction": "<|endoftext|> <|source|> find all files in the home folder which are modified in the last 2 days. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new version of the \"new\" command \"new\" is available for all users to run.\n <|source|> find Path -type f -name Regex -exec sed -i Program {} \\;             | awk Program  "
    },
    {
      "source": "Find *.conf files/directories only upto 1 level down under /etc directory and show a few lines of output from the end",
      "target": "find Path -maxdepth Quantity -name Regex | tail",
      "prediction": "<|endoftext|> <|source|> Find *.conf files/directories only upto 1 level down under /etc directory and show a few lines of output from the end <|target|> find Path -mindepth Quantity -name Regex -exec sed -i Program {} \\;                                          "
    },
    {
      "source": "Find all files owned by the user daniel in the current directory and below.",
      "target": "find Path -user Regex",
      "prediction": "<|endoftext|> <|source|> Find all files owned by the user daniel in the current directory and below. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are newer than the file \"file.txt\" <|source|> find Path -type f -newer File -print | xargs -I {} ls -l {} | xargs -I {} ls -l {} "
    },
    {
      "source": "count all the html files having a specifc word in a folder.",
      "target": "find Path -name Regex -exec grep -l Regex {} \\; | wc -l",
      "prediction": "<|endoftext|> <|source|> count all the html files having a specifc word in a folder. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <| Source Directory | grep -v Regex | grep -v Regex | cut -d Regex -f Number            | tr Regex Regex                    "
    },
    {
      "source": "List all cron jobs which contain \"word\".",
      "target": "crontab -l | grep -E Regex",
      "prediction": "<|endoftext|> <|source|> List all cron jobs which contain \"word\". <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|source|> Search for the word \"cron\" in all the files in the current directory and below <|target|> find Path -type f -exec grep Regex {} \\; -print0 | xargs -0 -I {} grep Regex {}      "
    },
    {
      "source": "long list al the files in the current directory which have read permission to the group",
      "target": "find Path -perm -Permission -type f -exec ls -l {} \\;",
      "prediction": "<|endoftext|> <|source|> long list al the files in the current directory which have read permission to the group <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|target|> Print the current date and time of the current date <|target|> date -d Regex                                   "
    },
    {
      "source": "Display all lines containing \"IP_MROUTE\" in the current kernel's compile-time config file.",
      "target": "cat $( uname -r ) | grep Regex",
      "prediction": "<|endoftext|> <|source|> Display all lines containing \"IP_MROUTE\" in the current kernel's compile-time config file. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>\"I have been in the business for 10 years and have been a long time user of the web. I have been a long time user of the web for over 10 years. <|target|> shopt -s http://www.google.com/ <|target|> shopt -s"
    },
    {
      "source": "Remove all regular non-hidden files modified more than 7 days ago and residing in the /tmp directory tree",
      "target": "find Path -type f -name Regex -mtime +Timespan -print0 | xargs -0 -I {} rm -f {}",
      "prediction": "<|endoftext|> <|source|> Remove all regular non-hidden files modified more than 7 days ago and residing in the /tmp directory tree <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of the new regular-access files from the current directory tree is the file \"file1.txt\" <|target|> find Path -type f -name Regex -mtime +Timespan -print0 | xargs -0 -I {} ls -l {}   | grep"
    },
    {
      "source": "Unzip every \".gz\" file in the current directory tree",
      "target": "find Path -name Regex -exec gunzip {} \\;",
      "prediction": "<|endoftext|> <|source|> Unzip every \".gz\" file in the current directory tree <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new file with the name \"file.txt\" is created in the current directory and is only accessible to users who are logged in.\n <|source|> find Path -type f -name Regex -exec file {} \\;    -print        "
    },
    {
      "source": "change permission of all the files in the entire file system which have the permissions 777.",
      "target": "find Path -type f -perm Permission -print -exec chmod Permission {} \\;",
      "prediction": "<|endoftext|> <|source|> change permission of all the files in the entire file system which have the permissions 777. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Search the current directory tree for files whose names do not end in \"file1\" or \"file2\" <|target|> find Path -name Regex -exec chmod Permission {} \\;                  "
    },
    {
      "source": "Prints information about active network interfaces in system.",
      "target": "echo $( ifconfig )",
      "prediction": "<|endoftext|> <|source|> Prints information about active network interfaces in system. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new file in the current directory tree contains a long listing of all files in the current directory. <|source|> find Path -type f -exec ls -l {} \\; | awk Program           | sort | uniq        "
    },
    {
      "source": "find all the reguar/normal php files in current directory.",
      "target": "find Path -type f -name Regex",
      "prediction": "<|endoftext|> <|source|> find all the reguar/normal php files in current directory. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Print the current directory name and its contents. <|target|> find Path -type f -exec dirname {} \\;      | awk Program                         "
    },
    {
      "source": "search  in root  ( / ) directory downwards all files which have less than 2 links.",
      "target": "find Path -links -Quantity -print",
      "prediction": "<|endoftext|> <|source|> search  in root  ( / ) directory downwards all files which have less than 2 links. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Search the current directory tree for files whose names end in \"foo\" <|target|> find Path -name Regex -print           | grep Regex                   "
    },
    {
      "source": "Find all files/directories under current directory",
      "target": "find Path -print0 | xargs -0",
      "prediction": "<|endoftext|> <|source|> Find all files/directories under current directory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the files in the current directory tree that are modified within the last 60 minutes.\n <|target|> find Path -mmin Quantity -type f -name Regex -exec ls -l -s {} \\;    | tail -n -r     "
    },
    {
      "source": "display all regular/normal files in the folder \"dir\" and display the filename along with file size",
      "target": "find Path -type f -printf \"f %s %p\\n\"",
      "prediction": "<|endoftext|> <|source|> display all regular/normal files in the folder \"dir\" and display the filename along with file size <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first part of the file \"file\" is the first part of the file, and the second part is the second part. <|target|> find Path -type f -print0 | xargs -0 -I {} basename {}               "
    },
    {
      "source": "find regular file named foo.txt under root / directory.",
      "target": "find Path -name Regex -type f -print",
      "prediction": "<|endoftext|> <|source|> find regular file named foo.txt under root / directory. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Search for the regex '^' in all the regular/normal files in the current directory tree and below <|target|> find Path -type f -exec grep Regex {} \\; -print0 | xargs -0 -I {} grep Regex {}      "
    },
    {
      "source": "Evaluate the output of recursively changing the owner and group of \"/data/*\" to \"mongodb\"",
      "target": "$( chown -R Regex File )",
      "prediction": "<|endoftext|> <|source|> Evaluate the output of recursively changing the owner and group of \"/data/*\" to \"mongodb\" <|target|> chown -R Regex File         File                                                 "
    },
    {
      "source": "find all files  that names are 'apt'",
      "target": "find Path -name Regex",
      "prediction": "<|endoftext|> <|source|> find all files  that names are 'apt' <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>\"I have a question for you. Why do you have to be a human? Why do you have to be a human?\"\n <|source|> find Path -name Regex -type f -exec echo Regex Regex Regex Regex Regex Regex Regex Regex Regex Regex Re"
    },
    {
      "source": "Print a sorted list of *.so files in the bla directory tree",
      "target": "find Path -name Regex -print0 | sort -r -z",
      "prediction": "<|endoftext|> <|source|> Print a sorted list of *.so files in the bla directory tree <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new and unique file system with a unique name and a unique name.\n <|target|> find Path -type f | xargs -I {} ls -l -d -s -d -u -t Regex                  "
    },
    {
      "source": "Find all .core files on the system starting from / and delete them",
      "target": "find Path -name Regex | xargs -I {} rm {}",
      "prediction": "<|endoftext|> <|source|> Find all.core files on the system starting from / and delete them <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of the two new regular files in the current directory tree, the first one is the first one. <|target|> find Path -type f -name Regex -exec rm -r -f {} \\;   | sort | uniq         | xargs"
    },
    {
      "source": "Find all files/directories that start with 'screen' (case insensitive) in their names under user's home directory tree",
      "target": "find Path -iname Regex",
      "prediction": "<|endoftext|> <|source|> Find all files/directories that start with'screen' (case insensitive) in their names under user's home directory tree <|target|> find Path -iname Regex                                                         "
    },
    {
      "source": "Print characters 2 through 4 of \"abcdefg\"",
      "target": "echo Regex | tail -c +Quantity | head -c Quantity",
      "prediction": "<|endoftext|> <|source|> Print characters 2 through 4 of \"abcdefg\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|source|> Search the current directory tree for files that are newer than the file 'file.txt' <|target|> find Path -newer File -type f -print0 | xargs -0 -I {} ls -l -t -r -t {} | tail -n"
    },
    {
      "source": "Find files/directories under /users/tom that matches both the pattern \"*.pl\" and  \"*.pm\"",
      "target": "find Path -name Regex -name Regex",
      "prediction": "<|endoftext|> <|source|> Find files/directories under /users/tom that matches both the pattern \"*.pl\" and  \"*.pm\" <|target|> find Path -name Regex                                                          "
    },
    {
      "source": "forcibly create a symbolic link named \"linkname\" to file \"new_destination\"",
      "target": "ln -s -f File Regex",
      "prediction": "<|endoftext|> <|source|> forcibly create a symbolic link named \"linkname\" to file \"new_destination\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Search the current directory tree for files whose names begin with \"test\" and end with \"test\" <|target|> find Path -name Regex -exec basename {} \\;                     "
    },
    {
      "source": "Report file systems disk usage using POSIX output format.",
      "target": "df -P",
      "prediction": "<|endoftext|> <|source|> Report file systems disk usage using POSIX output format. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the current working directory. <|source|> find Path -type f -exec ls -l -d -r {} \\;                | head              "
    },
    {
      "source": "Compress every file in the current directory tree with gzip and keep file extensions the same",
      "target": "find Path -type f -exec gzip -9 {} \\; -exec mv File {} \\;",
      "prediction": "<|endoftext|> <|source|> Compress every file in the current directory tree with gzip and keep file extensions the same <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of the three new jobs in the current directory tree is the one that is the first one that is not the first one. <|target|> find Path -type f -name Regex -exec gzip -c -d Regex {} \\;        | grep Re"
    },
    {
      "source": "Find all *.csv files under /foo/bar and move them to some_dir",
      "target": "find Path -name Regex -print0 | xargs -0 -I {} mv -t Directory {}",
      "prediction": "<|endoftext|> <|source|> Find all *.csv files under /foo/bar and move them to some_dir <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Search the current directory tree for files whose names end in \"~/foo/bar\" and \"~/bar/baz\" <|target|> find Path -name Regex -exec mv {} File \\;             "
    },
    {
      "source": "Check if a drive is mounted to nfs",
      "target": "mount | grep Regex",
      "prediction": "<|endoftext|> <|source|> Check if a drive is mounted to nfs <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory and its sub-directories. <|source|> find Path -type f -name Regex -exec ls -l {} \\;     | grep Regex              "
    },
    {
      "source": "display all the files in the folder \"/dev\" which belong to the user \"peter\"",
      "target": "find Path -user Regex | more",
      "prediction": "<|endoftext|> <|source|> display all the files in the folder \"/dev\" which belong to the user \"peter\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>\"I have been a long time waiting for this. <|source|> Find all the files in the current directory and change their permission to 755 <|target|> chmod Permission File                       "
    },
    {
      "source": "Move all directories from the `sourceDir' directory tree to the `destDir' directory",
      "target": "find Path -mindepth Quantity -type d -exec mv -t Directory {} +",
      "prediction": "<|endoftext|> <|source|> Move all directories from the `sourceDir' directory tree to the `destDir' directory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>Search for 'file' in all the files in the current directory tree and display the matched lines in the output.\n <|target|> find Path -type f -exec sed -e Program File \\;     | grep -v Regex    "
    },
    {
      "source": "Search the files residing in the current directory tree whose names contain \"bills\" for \"put\"",
      "target": "find Path -name Regex -print0 | xargs -0 -I {} grep Regex {}",
      "prediction": "<|endoftext|> <|source|> Search the files residing in the current directory tree whose names contain \"bills\" for \"put\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Search the current directory tree for files containing the string \"test\" <|target|> find Path -type f -exec grep Regex {} \\;    -print        | grep Regex     "
    },
    {
      "source": "Print a colon-separated list of all directories from the ~/code directory tree, except hidden ones and those below them",
      "target": "find Path -type d | sed Program | tr Regex Regex | sed Program",
      "prediction": "<|endoftext|> <|source|> Print a colon-separated list of all directories from the ~/code directory tree, except hidden ones and those below them <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first word of \"Hello\" is a word in the current directory. <|target|> find Path -name Regex | xargs -I {} echo Regex {}             | grep Regex     "
    },
    {
      "source": "Remove all *.tmp files from the /tmp directory tree",
      "target": "find Path -name Regex -print0 | xargs -0 -I {} rm {}",
      "prediction": "<|endoftext|> <|source|> Remove all *.tmp files from the /tmp directory tree <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory and its sub-directories.\n <|source|> find Path -type f -exec ls -l {} \\;   | grep Regex            "
    },
    {
      "source": "Find all regular files under $d directory tree and change their permissions to 777",
      "target": "find Path -type f -print0 | xargs -0 -I {} chmod Permission {}",
      "prediction": "<|endoftext|> <|source|> Find all regular files under $d directory tree and change their permissions to 777 <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new and expanded version of the \"new\" file system, which is named \"new\" in the current directory tree.\n <|source|> find Path -type f -name Regex -exec chmod Permission {} \\;        "
    },
    {
      "source": "Replace newline with \"_\" in \"file\" then search for \"_foo_\" and output with \"_\" characters deleted",
      "target": "grep -o Regex <( paste -s -d Regex File ) | tr -d Regex",
      "prediction": "<|endoftext|> <|source|> Replace newline with \"_\" in \"file\" then search for \"_foo_\" and output with \"_\" characters deleted <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>\"I have a question about the size of the file 'file' in the current directory. <|source|> find Path -type f -exec sed -i Program {} \\; | awk Program        | sed -n Program   "
    },
    {
      "source": "Find all directories under ${1:-.} directory without descending into any sub-directories",
      "target": "find Path -mindepth Quantity -maxdepth Quantity -type d",
      "prediction": "<|endoftext|> <|source|> Find all directories under ${1:-.} directory without descending into any sub-directories <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new and unique set of numbers from the last 100 days of the year.\n <|source|> find all the files in the current folder and display the file name <|target|> find Path -type f -exec ls -l -t {} + | xargs"
    },
    {
      "source": "Print only name and login columns of the currently logged in users",
      "target": "finger -s | awk Program",
      "prediction": "<|endoftext|> <|source|> Print only name and login columns of the currently logged in users <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and change their permission to 644 <|target|> find Path -type f -exec chmod Permission {} \\;           | grep -v Regex "
    },
    {
      "source": "Prints all NS servers of domain google.com.",
      "target": "dig Regex Regex | awk Program",
      "prediction": "<|endoftext|> <|source|> Prints all NS servers of domain google.com. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are newer than the file 'file' and are newer than the file 'file' in the current directory. <|source|> find Path -newer File -type f -newer File  -"
    },
    {
      "source": "Copy \"source\" recursively to \"destination\" excluding \"path1/to/exclude\" and \"path2/to/exclude\"",
      "target": "rsync -a -v --exclude Regex --exclude Regex File File",
      "prediction": "<|endoftext|> <|source|> Copy \"source\" recursively to \"destination\" excluding \"path1/to/exclude\" and \"path2/to/exclude\" <|target|> rsync -a -v -v -r -v -f File File                                         "
    },
    {
      "source": "Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.",
      "target": "sort File | uniq | cut -f Number -d Regex | uniq -c | rev",
      "prediction": "<|endoftext|> <|source|> Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of two files from the current directory tree that contains the current user's home directory, and which are not modified in the last 24 hours.\n <|target|> find Path -type f -name Regex -exec ls -l -r -t {}"
    },
    {
      "source": "list PID of a group leader",
      "target": "jobs -l -p",
      "prediction": "<|endoftext|> <|source|> list PID of a group leader <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file is a long listing of all the files in the current directory tree.\n <|source|> find Path -type f -exec ls -l -s {} \\;       | sed Program         "
    },
    {
      "source": "Search for files/directories with the case insensitive pattern anaconda.* in var/log directory and create an archive (file.tar) of all the files found",
      "target": "find Path -iname Regex -exec tar -r -v -f File {} \\;",
      "prediction": "<|endoftext|> <|source|> Search for files/directories with the case insensitive pattern anaconda.* in var/log directory and create an archive (file.tar) of all the files found <|target|> find Path -iname Regex -exec tar -c -v -z -f File \\;                                  "
    },
    {
      "source": "Copy all .txt files from the dir/ directory tree along with their parent directories hierarchy",
      "target": "find Path -name Regex | xargs -I {} cp -a --target-directory Directory --parents {}",
      "prediction": "<|endoftext|> <|source|> Copy all.txt files from the dir/ directory tree along with their parent directories hierarchy <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the latest release of the \"new\" release. <|source|> Find all files in the current directory and below <|target|> find Path -type f -name Regex -exec ls -l -r -t {} \\"
    },
    {
      "source": "Find all foo.mp4 files in the current directory tree and print the pathnames of their parent directories",
      "target": "find Path -name Regex -printf '%h\\n'",
      "prediction": "<|endoftext|> <|source|> Find all foo.mp4 files in the current directory tree and print the pathnames of their parent directories <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of the year's biggest jobs in the world are in the last minute. <|source|> Find all files/directories under current directory and change their permission to 755 <|target|> find Path -type f -exec chmod Permission {}"
    },
    {
      "source": "Display non-hidden files in the current directory with the given output format",
      "target": "find Path -maxdepth Quantity -name Regex -printf 'Name: %16f Size: %6s\\n'",
      "prediction": "<|endoftext|> <|source|> Display non-hidden files in the current directory with the given output format <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|source|> Print the names of all files in the current directory tree that are newer than the file \"file.txt\" <|target|> find Path -newer File -type f -print0 | xargs -0 -I {} ls -l"
    },
    {
      "source": "Find all files/directories under current directory with null character as the delimiter",
      "target": "find Path -print0",
      "prediction": "<|endoftext|> <|source|> Find all files/directories under current directory with null character as the delimiter <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long-running, multi-part file system.\n <|source|> Find all files/directories under current directory and change their permission to 755. <|target|> find Path -type f -exec chmod Permission {} + "
    },
    {
      "source": "Numberically sort content of file 'files', using for sorting part of second one of dash separated fields beginning from second letter.",
      "target": "cat File | sort -t Regex -k Number -n",
      "prediction": "<|endoftext|> <|source|> Numberically sort content of file 'files', using for sorting part of second one of dash separated fields beginning from second letter. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first word in the name of \"myfile\" is a word. <|source|> Prints first word of a word. <|target|> echo Regex | sed Program | sort | uniq           "
    },
    {
      "source": "Find recursively the files named \"file\" in the current directory ignoring the .git subdirectory",
      "target": "find Path -path Regex -prune -or -name Regex -print",
      "prediction": "<|endoftext|> <|source|> Find recursively the files named \"file\" in the current directory ignoring the.git subdirectory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long list of all the files in the current directory tree that are modified within the last 24 hours. <|source|> find Path -type f -name Regex -exec ls -l {} \\;      | grep Regex "
    },
    {
      "source": "Find all .java files starting from the current folder",
      "target": "find Path -name Regex",
      "prediction": "<|endoftext|> <|source|> Find all.java files starting from the current folder <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is the first in a series of files from the current directory tree that are sorted from most frequent to least frequent. <|source|> find Path -type f -exec basename {} \\; | sort | uniq | uniq -c  | sort |"
    },
    {
      "source": "Remove the file with inode number 752010",
      "target": "find Path -inum Quantity -exec rm {} \\;",
      "prediction": "<|endoftext|> <|source|> Remove the file with inode number 752010 <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are not owned by the user \"user\" and are not modified in the last 24 hours. <|source|> find Path -user Regex -type f -exec ls -l {} \\;      "
    },
    {
      "source": "Find all files/directories named 'Desktop' under current directory",
      "target": "find Path -name Regex",
      "prediction": "<|endoftext|> <|source|> Find all files/directories named 'Desktop' under current directory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory and its sub-directories.\n <|source|> find Path -name Regex -exec ls -l -d -r -t {} \\;     | sort | xargs -n Quantity    "
    },
    {
      "source": "delete recursively, without prompting, any files or directories under the current directory that case insensitively match the filename \".svn\"",
      "target": "find Path -iname Regex -exec rm -r -f {} \\;",
      "prediction": "<|endoftext|> <|source|> delete recursively, without prompting, any files or directories under the current directory that case insensitively match the filename \".svn\" <|target|> find Path -type f -exec rm -r -f {} \\;                                               "
    },
    {
      "source": "Print the input \"hello world\" to the console followed by a swap of the first two awk fields",
      "target": "echo Regex Regex | tee File | awk Program",
      "prediction": "<|endoftext|> <|source|> Print the input \"hello world\" to the console followed by a swap of the first two awk fields <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first part of the \"new\" file of the current directory is the last. <|target|> find Path -name Regex -type f -exec basename {} \\;         | sed -n Program           "
    },
    {
      "source": "Filter contents of 'file' through awk commands written in script.awk, display the result.",
      "target": "awk -f File Program",
      "prediction": "<|endoftext|> <|source|> Filter contents of 'file' through awk commands written in script.awk, display the result. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|source|> Print the current date and time of the current date and time of the current date <|target|> date -d Regex +%Y-%m-%d Regex                  "
    },
    {
      "source": "delete all the normal/regular files in the current folder",
      "target": "find Path -type f -print -delete",
      "prediction": "<|endoftext|> <|source|> delete all the normal/regular files in the current folder <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A long-awaited file-to-file file is a file that contains all the files in the current directory and contains the last two lines of the file. <|target|> find Path -type f -exec sed -i Program {} \\; -exec rm -r -f {} \\; "
    },
    {
      "source": "Search the current directory tree for all files except SVN ones",
      "target": "find Path | grep -v Regex",
      "prediction": "<|endoftext|> <|source|> Search the current directory tree for all files except SVN ones <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Search for a word in all the files in the current directory tree and display the matched lines in sorted order of their names <|target|> find Path -type f -name Regex -exec grep Regex {} \\; | sort | uniq -c | sort -n"
    },
    {
      "source": "Find all files residing in /home/dm/Video or below that were last changed at least 10 days ago",
      "target": "find Path -mtime +Timespan",
      "prediction": "<|endoftext|> <|source|> Find all files residing in /home/dm/Video or below that were last changed at least 10 days ago <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and print the names of the files/directories <|target|> find Path -type f -name Regex -exec basename {} +        | sed -n Program      "
    },
    {
      "source": "Find all files/directories that are not newer than Jul 01 by modification time",
      "target": "find Path ! -newermt Regex",
      "prediction": "<|endoftext|> <|source|> Find all files/directories that are not newer than Jul 01 by modification time <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the latest modified file in the current directory tree. <|source|> find Path -type f -newer File -exec ls -l -r -t -r -n {} \\; | sort | uniq  | tail - Quantity      "
    },
    {
      "source": "Find all *.txt files/directories under current directory",
      "target": "find Path -name Regex",
      "prediction": "<|endoftext|> <|source|> Find all *.txt files/directories under current directory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that have been modified in the last 24 hours. <|source|> find Path -type f -mtime Timespan -exec ls -l {} \\;  | awk Program       | head - Quantity"
    },
    {
      "source": "Change the ownership of all files in the current directory tree from root to www-data",
      "target": "find Path -user Regex -exec chown Regex {} \\;",
      "prediction": "<|endoftext|> <|source|> Change the ownership of all files in the current directory tree from root to www-data <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file is a bitmap of the current directory.\n <|source|> find Path -type f -execdir rename Regex {} \\;                  "
    },
    {
      "source": "Find all files/directories named 'query' under current directory tree",
      "target": "find Path -name Regex",
      "prediction": "<|endoftext|> <|source|> Find all files/directories named 'query' under current directory tree <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are not in the current directory. <|source|> find Path -type f -exec ls -l -l {} \\; | grep -o Regex "
    },
    {
      "source": "search for text files in the current folder which have write access to others",
      "target": "find Path -type f \\( -iname Regex -and -perm -Permission \\)",
      "prediction": "<|endoftext|> <|source|> search for text files in the current folder which have write access to others <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file is a long-running file with a single line of output.\n <|source|> find Path -type f -exec ls -l -r -t -r -t -f File \\;     "
    },
    {
      "source": "Change every file under \"/var/www/html/\" to have permissions 664",
      "target": "find Path -type f -exec chmod Permission {} \\;",
      "prediction": "<|endoftext|> <|source|> Change every file under \"/var/www/html/\" to have permissions 664 <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file is a long listing of all the files in the current directory and below. <|source|> find Path -type f -exec ls -l -r -n -v Regex {} \\;    | xargs"
    },
    {
      "source": "Infinitely print \"1\" then \"0\"",
      "target": "yes Regex | sed Program",
      "prediction": "<|endoftext|> <|source|> Infinitely print \"1\" then \"0\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first and second lines of the file 'file' are the same as in the first and second lines of the file. <|target|> find Path -name Regex -exec echo Regex {} \\; | awk Program "
    },
    {
      "source": "List the current directory recursively ignoring ./src/emacs/ and all its contents",
      "target": "find Path -path Regex -prune -or -print",
      "prediction": "<|endoftext|> <|source|> List the current directory recursively ignoring./src/emacs/ and all its contents <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Print the first line of each line in \"file.txt\" <|target|> cat File | sed Program | tail -n Quantity | sed Program | sed Program | sed Program | head -n Quantity | aw"
    },
    {
      "source": "Remount \"extX\" filesystem \"/dev/hdaX\" on \"/\" without writing in \"/etc/mtab\"",
      "target": "mount -n -o remount -t extX Regex Regex",
      "prediction": "<|endoftext|> <|source|> Remount \"extX\" filesystem \"/dev/hdaX\" on \"/\" without writing in \"/etc/mtab\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>\"I have a question for you. Why are you going to the store? <|source|> Search for the word \"test\" in all the files in the current directory tree and display the file names. <|target|> find"
    },
    {
      "source": "create a zip of log files in the current directory which have not been accessed in the last 3 days (-p is for parallel processing for a 4 cpu machine, -n is for maximum work units)",
      "target": "find Path -name Regex -mtime +Timespan -print0 | xargs -0 -n Quantity -P Quantity -I {} bzip2 {}",
      "prediction": "<|endoftext|> <|source|> create a zip of log files in the current directory which have not been accessed in the last 3 days (-p is for parallel processing for a 4 cpu machine, -n is for maximum work units) <|target|> find Path -type f -atime +Timespan -exec zip -c -v {} \\;                            "
    },
    {
      "source": "Numerically sort standard input by the second word of each line",
      "target": "sort -n -k Number",
      "prediction": "<|endoftext|> <|source|> Numerically sort standard input by the second word of each line <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>\nA new file named \"file.txt\" is created in the current directory and contains the name of the current working directory.\n <|target|> find Path -name Regex -exec file {} +  \\; | awk"
    },
    {
      "source": "display a long listing of all the java files in the current folder in sorted order",
      "target": "find Path -type f -name Regex -ls | sort -k +Number -r",
      "prediction": "<|endoftext|> <|source|> display a long listing of all the java files in the current folder in sorted order <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is the first of a series of files from the current directory tree that are not in the current directory.\n <|target|> find Path -type f -name Regex -execdir rename Regex {} \\;   "
    },
    {
      "source": "Find all regular files that contain 'linux' (case insensitive) in their names under '/root' directory tree",
      "target": "find Path -type f -iname Regex",
      "prediction": "<|endoftext|> <|source|> Find all regular files that contain 'linux' (case insensitive) in their names under '/root' directory tree <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the current working directory. <|target|> ls -l -d File                                       "
    },
    {
      "source": "Find all files under and below /dir that were changed or created less than 60 minutes ago",
      "target": "find Path -cmin -Quantity",
      "prediction": "<|endoftext|> <|source|> Find all files under and below /dir that were changed or created less than 60 minutes ago <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Search the current directory tree for files whose names end in \"test\" and \"test\" <|target|> find Path -name Regex -type f -exec grep -i Regex {} +  -n Regex         | grep"
    },
    {
      "source": "Print the date formatted with \"%a %x %X\" followed by the host name",
      "target": "echo $( date +\"%a %x %X\" ) $( hostname )",
      "prediction": "<|endoftext|> <|source|> Print the date formatted with \"%a %x %X\" followed by the host name <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A man is in the process of having his last name changed after a long-running gunplay.\n <|source|> Find all files in the current directory and change their owner to \"user\" <|target|> find Path -type f -execdir rename Regex {} \\; "
    },
    {
      "source": "Print the list of files in the home directory tree whose names begin with \"Foto\"",
      "target": "find Path -name Regex",
      "prediction": "<|endoftext|> <|source|> Print the list of files in the home directory tree whose names begin with \"Foto\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long-running, long-running, and very long-running, file system. <|source|> Find all files in the current directory tree and below that are newer than the file \"file\" <|target|> find Path -type f -newermt Regex -"
    },
    {
      "source": "Recursively removes all files like '_*' and '.DS_Store' from /var/www/html/ folder.",
      "target": "rm File File",
      "prediction": "<|endoftext|> <|source|> Recursively removes all files like '_*' and '.DS_Store' from /var/www/html/ folder. <|target|><|endoftext|> <|source|> Find all files/directories under current directory and print their names <|target|> find Path -type f -print0 | xargs -0 -I {} rm -r -f {}                "
    },
    {
      "source": "Filters only directories from long file listing of the current directory.",
      "target": "ls -l | grep Regex",
      "prediction": "<|endoftext|> <|source|> Filters only directories from long file listing of the current directory. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new file called \"file.txt\" contains all the files in the current directory tree and contains the names of the files. <|source|> find Path -type f -name Regex -exec ls -l -d {} \\;    | awk Program    "
    },
    {
      "source": "Find all the regular files under '/your/dir' directory tree which are bigger than 5 MB and display them in decreasing order of their sizes",
      "target": "find Path -type f -size +Size -exec du -h {} + | sort -h -r",
      "prediction": "<|endoftext|> <|source|> Find all the regular files under '/your/dir' directory tree which are bigger than 5 MB and display them in decreasing order of their sizes <|target|> find Path -type f -size +Size -exec ls -l -h {} \\; | awk Program                                      "
    },
    {
      "source": "Prints line count of each file within current directory.",
      "target": "find Path -type f -print | xargs -L Quantity -I {} wc -l {}",
      "prediction": "<|endoftext|> <|source|> Prints line count of each file within current directory. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|source|> Print the names of all files in the current directory tree and below <|target|> find Path -type f -name Regex -exec ls -l {} \\;   | awk Program       | sed Program      "
    },
    {
      "source": "Reverse the text in $input by taking each 4 characters as each units and save the result in variable 'output'",
      "target": "echo Regex | fold -w Quantity | tac | tr -d Regex",
      "prediction": "<|endoftext|> <|source|> Reverse the text in $input by taking each 4 characters as each units and save the result in variable 'output' <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files under current directory and change their permission to 755 <|target|> find Path -type f -exec chmod Permission {} \\;            | awk Program         "
    },
    {
      "source": "Find the largest files in a particular location",
      "target": "find Path -type f -exec du -S -h {} + | sort -r -h | head -n Quantity",
      "prediction": "<|endoftext|> <|source|> Find the largest files in a particular location <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are newer than the current one.\n <|target|> find Path -newer File -newer File -exec rm -r -f {} \\;     | grep Regex     "
    },
    {
      "source": "List all regular files from the current directory tree that were modified less than 60 minutes ago",
      "target": "find Path -type f -mmin -Quantity -print0 | xargs -r -0 -I {} ls -l {}",
      "prediction": "<|endoftext|> <|source|> List all regular files from the current directory tree that were modified less than 60 minutes ago <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the latest and greatest files in the current directory tree. <|source|> find Path -type f -name Regex -exec ls -l -s {} \\;  | xargs -I {} ls -l -d {} |"
    },
    {
      "source": "Show directory sizes in KB and sort to give the largest at the end",
      "target": "du -s -k $( find Path -type d ) | sort -n -k Number",
      "prediction": "<|endoftext|> <|source|> Show directory sizes in KB and sort to give the largest at the end <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <| Source | grep -v Regex | grep -v Regex | cut -d Regex -f Number -Number -d Regex       | tr Regex Regex             "
    },
    {
      "source": "List all regular files under current directory ensuring white space safety",
      "target": "find Path -type f -print0 | xargs -0 -n Quantity",
      "prediction": "<|endoftext|> <|source|> List all regular files under current directory ensuring white space safety <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new and expanded version of the standard input file 'file.txt' is available for use with the current shell.\n <|source|> find Path -type f -name Regex -exec echo Regex {} \\; | awk Program    "
    },
    {
      "source": "find all the files in current folder which have been updated in the last 60 minutes",
      "target": "find Path -mmin -Quantity",
      "prediction": "<|endoftext|> <|source|> find all the files in current folder which have been updated in the last 60 minutes <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new file named \"file\" is created in the current directory and saves the file name in variable \"file\" <|target|> find Path -type f -name Regex -execdir rename Regex \\;          "
    },
    {
      "source": "Copies all files like 'lib*.so' to '~/usr/gtest/lib/' directory.",
      "target": "cp File File",
      "prediction": "<|endoftext|> <|source|> Copies all files like 'lib*.so' to '~/usr/gtest/lib/' directory. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of two jobs to be created by the user 'junk' in the current directory tree. <|source|> Create a symbolic link named \"junk\" to the current directory <|target|> ln -s -f File Regex  "
    },
    {
      "source": "Copies defined file to the target folder without overwriting existing files.",
      "target": "cp -n",
      "prediction": "<|endoftext|> <|source|> Copies defined file to the target folder without overwriting existing files. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file is a long listing of all the files in the current directory tree that are newer than the file 'file.txt' and older than the file 'file.txt' <|target|> find Path -type f -name Regex -newer File -"
    },
    {
      "source": "display all the html files in the current folder that have been modified exactly 7*24 hours ago",
      "target": "find Path -mtime Timespan -name Regex -print",
      "prediction": "<|endoftext|> <|source|> display all the html files in the current folder that have been modified exactly 7*24 hours ago <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new file named \"file.txt\" is created in the background and is displayed in the current directory.\n <|source|> find Path -name Regex -exec file File \\;         | sed Program    "
    },
    {
      "source": "Look for regular files in the directory trees 'deferred', 'active', 'maildrop', 'incoming' under /var/spool/postfix/",
      "target": "find Path -type f",
      "prediction": "<|endoftext|> <|source|> Look for regular files in the directory trees 'deferred', 'active','maildrop', 'incoming' under /var/spool/postfix/ <|target|> find Path -type f -execdir grep Regex {} \\;                                         "
    },
    {
      "source": "Search for 'some string' in all *js files under current directory and show the matched lines with line numbers",
      "target": "find Path -name Regex | grep -n Regex",
      "prediction": "<|endoftext|> <|source|> Search for'some string' in all *js files under current directory and show the matched lines with line numbers <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long list of all the files in the current directory tree that are not owned by the user. <|source|> find Path -user Regex -print   -type f -print      | grep Regex    "
    },
    {
      "source": "display all the files in the file system which belong to the group lighttpd",
      "target": "find Path -group Regex -print",
      "prediction": "<|endoftext|> <|source|> display all the files in the file system which belong to the group lighttpd <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the latest release of the latest release of the current kernel.\n <|source|> find all the files in the current directory and delete them <|target|> find Path -type f -name Regex -exec rm -r -"
    },
    {
      "source": "Search directory lpi104-6 for files with inode number 1988884",
      "target": "find Path -inum Quantity",
      "prediction": "<|endoftext|> <|source|> Search directory lpi104-6 for files with inode number 1988884 <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that have been modified in the last 24 hours. <|source|> find Path -type f -newer File -exec ls -l {} \\;     | head       "
    },
    {
      "source": "Find files/directories under current directory that are modified exactly one hour ago",
      "target": "find Path -mtime Timespan",
      "prediction": "<|endoftext|> <|source|> Find files/directories under current directory that are modified exactly one hour ago <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new and improved version of the current version of the current shell.\n <|source|> find Path -mtime Timespan -exec basename Regex {} \\;                       "
    },
    {
      "source": "Get the number of \"use\" statements in all PHP files, ordered",
      "target": "find Path -type f -name Regex -exec grep --with-filename -c Regex {} \\; | sort -t Regex -k Number -n -r",
      "prediction": "<|endoftext|> <|source|> Get the number of \"use\" statements in all PHP files, ordered <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file is a part of the \"new\" directory tree. <|source|> Find all files in the current directory tree and below and print the names of the files that are newer than the current directory. <|target|> find Path -type f -newer File -exec"
    },
    {
      "source": "Finds file 'Subscription.java' and changes to containing folder.",
      "target": "cd $( find Path -name Regex | xargs -I {} dirname {} )",
      "prediction": "<|endoftext|> <|source|> Finds file 'Subscription.java' and changes to containing folder. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A long-awaited file-to-file transfer between two directories is a common occurrence in the home office. File1 is used to handle files with large files and small files, and file2 is used to handle files with large files. File2 is used to handle files with large files."
    },
    {
      "source": "Enables 'nullglob' shell option.",
      "target": "shopt -s nullglob",
      "prediction": "<|endoftext|> <|source|> Enables 'nullglob' shell option. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all files in the current directory tree that are newer than the current directory.\n <|source|> find Path -newer File                          "
    },
    {
      "source": "Find all .java files whose name contains \"Message\"",
      "target": "find Path -print | grep Regex",
      "prediction": "<|endoftext|> <|source|> Find all.java files whose name contains \"Message\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file is a part of the current directory tree <|source|> find Path -type f -name Regex -exec echo Regex {} \\;                           "
    },
    {
      "source": "Move all files from the `sourceDir' directory tree to the `destDir' directory",
      "target": "find Path -mindepth Quantity -exec mv {} --target-directory Directory \\;",
      "prediction": "<|endoftext|> <|source|> Move all files from the `sourceDir' directory tree to the `destDir' directory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of the largest files in the current directory tree is the file \"file.txt\" and contains the first line of each line. <|source|target|> find Path -type f | sed -i Program | head -n Quantity      | tail -n"
    },
    {
      "source": "Search for first match of the case insensitive regex 'oyss' in all *.txt files under current directory and print the file paths along with the matches",
      "target": "find Path -name Regex | xargs -I {} grep -m Quantity -r -i Regex {}",
      "prediction": "<|endoftext|> <|source|> Search for first match of the case insensitive regex 'oyss' in all *.txt files under current directory and print the file paths along with the matches <|target|> find Path -type f -exec grep -i Regex {} \\; | awk Program                                        "
    },
    {
      "source": "Find all PHP files under current directory that contain only one line",
      "target": "find Path -type f -name Regex -exec wc -l {} \\; | grep -E Regex",
      "prediction": "<|endoftext|> <|source|> Find all PHP files under current directory that contain only one line <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Search for all files/directories under current directory and print the names of the files/directories that match the pattern '*.txt' <|target|> find Path -name Regex -exec grep -i Regex {} +  -print   |"
    },
    {
      "source": "list all *.txt files in the user's home directory.",
      "target": "find Path -name Regex",
      "prediction": "<|endoftext|> <|source|> list all *.txt files in the user's home directory. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is the first in a long line of files from the current directory tree that are not in the current directory. <|source|> find Path -type f -name Regex -execdir -execdir rm -r -f {} \\;        "
    },
    {
      "source": "Replace the first occurrence of \"foo\" with \"bar\" on every line in .txt files from the current directory tree",
      "target": "find Path -type f -name Regex | xargs --replace Regex -I {} sed --in-place Regex Program {}",
      "prediction": "<|endoftext|> <|source|> Replace the first occurrence of \"foo\" with \"bar\" on every line in.txt files from the current directory tree <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new report from the U.S Department of Homeland Security (DHS) finds that the number of jobs in the current year is greater than 100,000. <|source|> Find all files under current directory and print the number of jobs <|target|"
    },
    {
      "source": "Print the full path of command \"cc\"",
      "target": "which Regex",
      "prediction": "<|endoftext|> <|source|> Print the full path of command \"cc\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are not in the current directory. <|source|> find Path -type f -name Regex -exec ls -l {} \\;         | grep"
    },
    {
      "source": "Write contents of \"/sys/kernel/debug/tracing/trace_pipe\" to standard output and to \"tracelog.txt\" executing as a root user",
      "target": "cat File | tee File",
      "prediction": "<|endoftext|> <|source|> Write contents of \"/sys/kernel/debug/tracing/trace_pipe\" to standard output and to \"tracelog.txt\" executing as a root user <|target|> cat File | tee File                                                 "
    },
    {
      "source": "Recursively finds all 'STATUS.txt' files containing text 'OPEN' and prints containing folder of them.",
      "target": "find Path -type f -name Regex -exec grep -q Regex {} \\; -exec dirname {} \\;",
      "prediction": "<|endoftext|> <|source|> Recursively finds all 'STATUS.txt' files containing text 'OPEN' and prints containing folder of them. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of two files from the current directory tree that contains the first and second file from the current directory. <|target|> find Path -type f -name Regex -exec basename Regex \\;         | tail"
    },
    {
      "source": "Compress the file 'file' with 'bzip2' and append all output to the file 'logfile' and stdout",
      "target": "bzip2 File | tee -a File",
      "prediction": "<|endoftext|> <|source|> Compress the file 'file' with 'bzip2' and append all output to the file 'logfile' and stdout <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new file system is used to handle all files in the current directory tree. <|source|> find Path -type f -exec basename {} \\;         | awk Program         "
    },
    {
      "source": "Search PATH for utilities called \"rename\", display the type of file (script, executable, ...) for each match found.",
      "target": "which -a Regex | xargs -I {} file -L {}",
      "prediction": "<|endoftext|> <|source|> Search PATH for utilities called \"rename\", display the type of file (script, executable,...) for each match found. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>\"I have a question for the owner of the file 'file' <|target|> find Path -type f -name Regex -exec file File \\;                    "
    },
    {
      "source": "Search the current directory tree for files whose names begin with \"my\" and end with \"p\" followed by any character",
      "target": "find Path -regex Regex",
      "prediction": "<|endoftext|> <|source|> Search the current directory tree for files whose names begin with \"my\" and end with \"p\" followed by any character <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is the first in a long line of new and unique files from the current directory. <|source|> find Path -type f -name Regex -exec ls -l -r -t -s {} \\; | xargs -I {} ls -"
    },
    {
      "source": "Find files newer than start.txt but not newer than end.txt",
      "target": "find Path -newer File -and ! -newer File",
      "prediction": "<|endoftext|> <|source|> Find files newer than start.txt but not newer than end.txt <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first and last word of the name of the current user is \"y\" <|source|> find Path -user Regex -exec sed -i Program File                    "
    },
    {
      "source": "Display all symlinks and their targets in the current directory tree",
      "target": "find -P Path -type l -exec echo -n Regex \\; -exec readlink {} \\;",
      "prediction": "<|endoftext|> <|source|> Display all symlinks and their targets in the current directory tree <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Search for the regex '^' in all files in the current directory tree <|target|> find Path -type f -name Regex -exec grep -i Regex {} \\;       | grep -v"
    },
    {
      "source": "Find all the *.txt files in the current directory older than 48 hours",
      "target": "find Path -maxdepth Quantity -name Regex -mtime +Timespan",
      "prediction": "<|endoftext|> <|source|> Find all the *.txt files in the current directory older than 48 hours <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are newer than the file 'file' in the current directory.\n <|source|> find Path -type f -newer File -exec ls -l -t -r -t"
    },
    {
      "source": "get the root user access",
      "target": "su",
      "prediction": "<|endoftext|> <|source|> get the root user access <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file is a bit long. <|long|> Find all files in the current directory and change their permission to 755. <|> find Path -type f -exec chmod Permission {} \\;   "
    },
    {
      "source": "display all files in the current folder which end with extension \"myfile\" followed by one digit or two digits",
      "target": "find Path \\( -name Regex -or -name Regex \\)",
      "prediction": "<|endoftext|> <|source|> display all files in the current folder which end with extension \"myfile\" followed by one digit or two digits <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the latest and greatest files from the current directory tree.\n <|target|> find Path -type f -exec ls -l -r -s {} \\;     | awk"
    },
    {
      "source": "List the files in \"archive.tar.gz\"",
      "target": "gzip -l Regex",
      "prediction": "<|endoftext|> <|source|> List the files in \"archive.tar.gz\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A man who was in the home for more than a year and who was found to be in the home of the owner of the home.\n <|source|> Search the home directory tree for files that are owned by the user"
    },
    {
      "source": "Create directorie(s) 'some/path' as required in the current directory",
      "target": "mkdir -p Directory",
      "prediction": "<|endoftext|> <|source|> Create directorie(s)'some/path' as required in the current directory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new version of the current shell is in the current directory.\n <|source|> find Path -type f -exec echo Regex Regex \\;              "
    },
    {
      "source": "find all the files in the folder /home which are exactly of size 10MB",
      "target": "find Path -size Size",
      "prediction": "<|endoftext|> <|source|> find all the files in the folder /home which are exactly of size 10MB <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|target|> find Path -type f -printf '%s\\n' | xargs -I {} ls -l {}  | grep -v Regex          "
    },
    {
      "source": "find all the perl files in the current folder and search for a pattern",
      "target": "find Path -name Regex | xargs -I {} grep -L Regex {}",
      "prediction": "<|endoftext|> <|source|> find all the perl files in the current folder and search for a pattern <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of the three files in the current directory tree is a file named \"file1.txt\" and contains the first two files. <|target|> find Path -name Regex -exec basename {} \\; |"
    },
    {
      "source": "Recursively copy /path/foo on host \"prod\" to local directory \"/home/user/Desktop\", connecting as ssh username corresponding to local username.",
      "target": "scp -r File File",
      "prediction": "<|endoftext|> <|source|> Recursively copy /path/foo on host \"prod\" to local directory \"/home/user/Desktop\", connecting as ssh username corresponding to local username. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory and below that are newer than the one in the current directory. <|target|> find Path -type f -name Regex -exec cp -i -v"
    },
    {
      "source": "Move \"tobecopied/tobeexclude\" to \"tobeexclude\"",
      "target": "mv File File",
      "prediction": "<|endoftext|> <|source|> Move \"tobecopied/tobeexclude\" to \"tobeexclude\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A long-awaited new standard in the world of interactive shell.\n <|source|> Prints long listing of all files in a current folder and saves the output in variable \"file\" <|target|> ls -l"
    },
    {
      "source": "Find all files/directories with 'my key phrase' in their names under current directory",
      "target": "find Path -name Regex",
      "prediction": "<|endoftext|> <|source|> Find all files/directories with'my key phrase' in their names under current directory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long list of all the files in the current directory tree that have been modified in the last 24 hours. <|source|> find Path -type f -mtime Timespan -exec ls -l {} \\;"
    },
    {
      "source": "Delete all regular files that start with 'sess_' in their names, are at least 1 level deep and were modified more than $gc_maxlifetime minutes ago under $save_path directory tree",
      "target": "find Path Path -depth -mindepth Quantity -name Regex -ignore_readdir_race -type f -cmin Quantity -delete",
      "prediction": "<|endoftext|> <|source|> Delete all regular files that start with'sess_' in their names, are at least 1 level deep and were modified more than $gc_maxlifetime minutes ago under $save_path directory tree <|target|> find Path -type f -name Regex -mmin +Quantity -delete  -type f -mmin +Quantity -delete  -mmin +Quantity -print            "
    },
    {
      "source": "Move \"file.txt\" to docker container \"$COUNTAINER_ID\" in path \"/var/lib/docker/aufs/mnt/$CONTAINER_ID/rootfs/root/file.txt\"",
      "target": "mv -f File File",
      "prediction": "<|endoftext|> <|source|> Move \"file.txt\" to docker container \"$COUNTAINER_ID\" in path \"/var/lib/docker/aufs/mnt/$CONTAINER_ID/rootfs/root/file.txt\" <|target|> mv File File                                      "
    },
    {
      "source": "Count all the lines of all '*.c' files in current directory recursively",
      "target": "find Path -name Regex -print0 | xargs -0 -I {} cat {} | wc -l",
      "prediction": "<|endoftext|> <|source|> Count all the lines of all '*.c' files in current directory recursively <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>1. Find all the files in the current directory and search for the pattern 'file' in the file 'file' and print the matched lines. <|source|> find Path -type f -exec"
    },
    {
      "source": "Prints long listing of content in a root folder, including hidden files, with human-readable sizes, and stores output to '/root/test.out' file.",
      "target": "echo Regex | bash",
      "prediction": "<|endoftext|> <|source|> Prints long listing of content in a root folder, including hidden files, with human-readable sizes, and stores output to '/root/test.out' file. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the latest and greatest files from the current directory tree. <|source|> find Path -type f -exec ls -l -r -v -t -t -f"
    },
    {
      "source": "Recursively change owner to \"amzadm\" and group to \"root\" of all files in \"/usr/lib/python2.6/site-packages/\"",
      "target": "chown Regex -R File",
      "prediction": "<|endoftext|> <|source|> Recursively change owner to \"amzadm\" and group to \"root\" of all files in \"/usr/lib/python2.6/site-packages/\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new file named \"file.txt\" is created in the current directory and is executable by the user. <|source|> find Path -name Regex -execdir rename Regex {} \\;"
    },
    {
      "source": "Check if \"\\[$VLABEL\\]\" is mounted and save the result in variable \"AMV\"",
      "target": "mount -l | grep Regex",
      "prediction": "<|endoftext|> <|source|> Check if \"\\[$VLABEL\\]\" is mounted and save the result in variable \"AMV\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is the first of a series of \"new\" files from the current directory tree. <|source|> find Path -type f -name Regex -exec ls -l -r -t -"
    },
    {
      "source": "Finds pattern text ignoring letter case in all .js files, prints matched strings and name of file with that strings.",
      "target": "find Path -name Regex -exec grep -i Regex {} \\; -print",
      "prediction": "<|endoftext|> <|source|> Finds pattern text ignoring letter case in all.js files, prints matched strings and name of file with that strings. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the latest and greatest files from the current directory tree. <|source|> Search for files that are newer than the file $1 and newer than the file $2 in the"
    },
    {
      "source": "Prints total count of lines of all *.php files in a current folder and subfolders.",
      "target": "find Path -name Regex -type f -exec cat -- {} + | wc -l",
      "prediction": "<|endoftext|> <|source|> Prints total count of lines of all *.php files in a current folder and subfolders. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree. <|source|> find Path -type f -exec ls -l -d -l -r -s {} \\; |"
    },
    {
      "source": "Print the current directory name without full path",
      "target": "echo Regex | sed Program",
      "prediction": "<|endoftext|> <|source|> Print the current directory name without full path <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory and below.\n <|source|> find Path -type f | xargs -I {} ls -l -s {} | awk"
    },
    {
      "source": "Find all *.c files under and below the current directory that contain \"wait_event_interruptible\"",
      "target": "find Path -name Regex -print | xargs -I {} grep Regex File {}",
      "prediction": "<|endoftext|> <|source|> Find all *.c files under and below the current directory that contain \"wait_event_interruptible\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are newer than the current one.\n <|source|> find Path -newer File -type f -exec ls -l"
    },
    {
      "source": "Find files containing string \"#!/bin/ksh\" and append their names and matching strings to /tmp/allfiles",
      "target": "find Path -type f -execdir grep -i -H Regex {} \\; | tee File",
      "prediction": "<|endoftext|> <|source|> Find files containing string \"#!/bin/ksh\" and append their names and matching strings to /tmp/allfiles <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file is a long listing of all the files in the current directory tree and its parent directory. <|source|> find Path -type f -exec ls -l -r -t {} \\;"
    },
    {
      "source": "Print information of the root mount point",
      "target": "mount -v | grep Regex",
      "prediction": "<|endoftext|> <|source|> Print information of the root mount point <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new file named 'file' is created by replacing the current directory with the current one.\n <|source|> find Path -type f -exec dirname Regex \\;        | sed -e Program          "
    },
    {
      "source": "Search /path/to/your/directory for *.avi and *.flv files",
      "target": "find Path -regex Regex",
      "prediction": "<|endoftext|> <|source|> Search /path/to/your/directory for *.avi and *.flv files <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of the year's largest jobs jobs to be filled by the end of September, and the last day of the month of September, is the day before the start of the second month of the year. <|target|> find Path -type f -daystart -daystart -exec"
    },
    {
      "source": "Source \"lib/B\" relative to the directory of the executing shell script, will fail if currently running script is not in PATH.",
      "target": "source $( dirname $( which Regex ) )",
      "prediction": "<|endoftext|> <|source|> Source \"lib/B\" relative to the directory of the executing shell script, will fail if currently running script is not in PATH. <|target|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and print them in a sorted order <|target|> find Path -type f -exec basename Regex \\;      | sort        | sort     "
    },
    {
      "source": "Print a count of each unique line from standard input sorted from least frequent to most frequent",
      "target": "sort | uniq -c | sort -n",
      "prediction": "<|endoftext|> <|source|> Print a count of each unique line from standard input sorted from least frequent to most frequent <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are newer than the file \"file1\" and are newer than the file \"file2\" <|target|> find Path -type f -newermt Regex -exec ls -l -s {} \\;"
    },
    {
      "source": "search for soft links in current folder and display those links which are not pointed to files in current folder",
      "target": "find Path -type l -exec readlink -f {} \\; | grep -v $( readlink -f File )",
      "prediction": "<|endoftext|> <|source|> search for soft links in current folder and display those links which are not pointed to files in current folder <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>\"I have a long and hard time with the word \"f\" in my home. <|source|> Search for the word \"f\" in all the files in the current directory and below and print the file names and sizes of the files <|target|> find Path -type f"
    },
    {
      "source": "Remove files from the home directory tree that were last accessed more than 100 days ago",
      "target": "find Path -atime +Timespan -delete",
      "prediction": "<|endoftext|> <|source|> Remove files from the home directory tree that were last accessed more than 100 days ago <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are bigger than 100MB.\n <|source|> find Path -size +Size -exec ls -l -r -t -t {} \\; | sort -n | tail - Quantity | cut -f Number"
    },
    {
      "source": "Find all aliencoders.[0-9]+ files under /home/jassi/ directory",
      "target": "find Path -type f -name Regex",
      "prediction": "<|endoftext|> <|source|> Find all aliencoders.[0-9]+ files under /home/jassi/ directory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first time I read a word in a file, I would expect the file to be read in reverse order. <|target|> read Regex -s -r -e Regex                     "
    },
    {
      "source": "Processes all files recursively in /var/spool/cron/tabs folder and filters out all strings with '#'.",
      "target": "grep -v Regex -R File",
      "prediction": "<|endoftext|> <|source|> Processes all files recursively in /var/spool/cron/tabs folder and filters out all strings with '#'. <|target|> find Path -type f -exec grep Regex {} \\; -exec grep -H Regex {} \\; -exec cat {} \\;                               "
    },
    {
      "source": "Print lines in \"file1.txt\" that do not exist in \"file2.txt\"",
      "target": "sort <( sort -u File ) File File | uniq -u",
      "prediction": "<|endoftext|> <|source|> Print lines in \"file1.txt\" that do not exist in \"file2.txt\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Search for the word \"test\" in all the files in the current directory tree and below and print the matched lines. <|target|> find Path -type f -exec grep Regex {} \\; -exec grep Regex {} \\; | sort -n -"
    },
    {
      "source": "display all the regular files in current folder that belong to the user \"tom\"",
      "target": "find Path -type f -user Regex",
      "prediction": "<|endoftext|> <|source|> display all the regular files in current folder that belong to the user \"tom\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first word of the name 'word' in a file 'file' is a common word in all files in a current directory. <|target|> find Path -type f -exec echo Regex {} \\;               "
    },
    {
      "source": "Move all directories in the current directory tree that have been modified in the last day to \"/path/to/target-dir\"",
      "target": "find Path -type d -mtime -Timespan -print0 | xargs -0 -I {} mv -t Directory {}",
      "prediction": "<|endoftext|> <|source|> Move all directories in the current directory tree that have been modified in the last day to \"/path/to/target-dir\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Print the current date in UTC format. <|target|> date -u -d Regex                               "
    },
    {
      "source": "Rename \"www_new\" to \"www\" even if \"www\" directory exists",
      "target": "mv -T File File",
      "prediction": "<|endoftext|> <|source|> Rename \"www_new\" to \"www\" even if \"www\" directory exists <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file is a bit-mapped file, and the file name is a bit-mapped file. <|source|> find Path -type f -name Regex -exec chmod Permission {} \\;        | xargs -"
    },
    {
      "source": "Search the current directory tree for symbolic links to files matching pattern '*/test*'",
      "target": "find -P Path -lname Regex",
      "prediction": "<|endoftext|> <|source|> Search the current directory tree for symbolic links to files matching pattern '*/test*' <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new file named \"file.txt\" is a file with a unique name and a unique path to it.\n <|source|> find Path -type f -name Regex -exec ls -l -r -s -t File \\;    "
    },
    {
      "source": "Print the current date followed by ' doing stuff'",
      "target": "echo $( date ) Regex Regex",
      "prediction": "<|endoftext|> <|source|> Print the current date followed by'doing stuff' <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new file named 'file' is a bitmap of the current directory. <|target|> find Path -type f -exec basename Regex {} \\;     | grep Regex             |"
    },
    {
      "source": "Read a line from standard input with prompt \"Are you alright? (y/n) \" and save the response to variable \"RESP\"",
      "target": "read -p Regex Regex",
      "prediction": "<|endoftext|> <|source|> Read a line from standard input with prompt \"Are you alright? (y/n) \" and save the response to variable \"RESP\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long list of all the files in the current directory tree that are bigger than 10MB and were last modified more than 10 minutes ago. <|source|> find Path -size +Size -mmin +Quantity -type f -exec ls -l {} \\"
    },
    {
      "source": "create a symbolic link named \"/usr/bin/my-editor\" to file \"/usr/share/my-ditor/my-editor-executable\"",
      "target": "ln -s File Regex",
      "prediction": "<|endoftext|> <|source|> create a symbolic link named \"/usr/bin/my-editor\" to file \"/usr/share/my-ditor/my-editor-executable\" <|target|> ln -s File Regex                                                 "
    },
    {
      "source": "Find all empty directories in the current one and delete them",
      "target": "find Path -type d -maxdepth Quantity -empty -print0 | xargs -0 -I {} rmdir {}",
      "prediction": "<|endoftext|> <|source|> Find all empty directories in the current one and delete them <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long list of all the files in the current directory tree that are bigger than 10MB. <|target|> find Path -type f -size +Size -size -Size -exec rm -r -f {} \\;       "
    },
    {
      "source": "search for all the regular/normal files  in the /etc folder which have been modified in the last 24 hours",
      "target": "find Path -type f -mtime -Timespan",
      "prediction": "<|endoftext|> <|source|> search for all the regular/normal files  in the /etc folder which have been modified in the last 24 hours <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Search the current directory recursively for files whose names are shorter than 10 characters and whose names are shorter than 10 characters. <|target|> find Path -type f -name Regex -print0 | xargs -0 -I {} ls"
    },
    {
      "source": "Print the last mounted drive",
      "target": "mount | tail - Quantity | sed Program",
      "prediction": "<|endoftext|> <|source|> Print the last mounted drive <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first two lines of \"file\" are the first line of the file \"file\" and the second line is the second line of \"file\" <|target|> find Path -type f -exec file -i -s Regex -exec sed -i Program {}"
    },
    {
      "source": "Find all *.c files under /home",
      "target": "find Path -name Regex",
      "prediction": "<|endoftext|> <|source|> Find all *.c files under /home <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are bigger than 100k.000k.000.000 and less than 100k.000.000.000.000.000.\n <|source|> find Path -type f -size"
    },
    {
      "source": "Find all file in current directory with have .c extenstion & have 777 permission . delete then",
      "target": "find Path -name Regex -and -perm -Permission | xargs -I {} rm -r -f {}",
      "prediction": "<|endoftext|> <|source|> Find all file in current directory with have.c extenstion & have 777 permission. delete then <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Print the names of all the files in the current directory and below that are newer than the file 'file' <|target|> find Path -newer File -type f -print0 | xargs -0 -I {} echo Regex Regex Regex"
    },
    {
      "source": "Remove \"\\r\" at the end of each line in \"infile\" and display the result as printable characters or backslash escapes",
      "target": "cat File | sed Program | od -c",
      "prediction": "<|endoftext|> <|source|> Remove \"\\r\" at the end of each line in \"infile\" and display the result as printable characters or backslash escapes <|target|><|endoftext|><|endoftext|>\"I have a question for you. <|source|> Print the first line of \"file\" <|target|> paste -d Regex File File                          "
    },
    {
      "source": "Search the path given as the $absolute_dir_path variable for regular files",
      "target": "find Path -type f -print0",
      "prediction": "<|endoftext|> <|source|> Search the path given as the $absolute_dir_path variable for regular files <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of the three files in the current directory tree is a file named \"file1\" and contains the first two lines of the output. <|source|> find Path -type f -name Regex -exec ls -l -a -r -r -t -f File"
    },
    {
      "source": "Send SIGHUP (hangup) signal to nginx master process, causing it to re-read its configuration and restart child processes if necessary.",
      "target": "kill - Regex $( cat File )",
      "prediction": "<|endoftext|> <|source|> Send SIGHUP (hangup) signal to nginx master process, causing it to re-read its configuration and restart child processes if necessary. <|target|> nginx -s -n Regex | tee File                                                "
    },
    {
      "source": "find all PDFs owned by user \u201cseamstress\u201d",
      "target": "find Path -user Regex -iname Regex",
      "prediction": "<|endoftext|> <|source|> find all PDFs owned by user \u201cseamstress\u201d <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new version of the current version of the current user's home directory is available for download. <|source|> find Path -type f -name Regex -exec basename Regex {} \\;            | xargs -I {}"
    },
    {
      "source": "Change to directory 'xyz' and resolve any symlinks in the resulting path, making the physical path the current one.",
      "target": "cd -P Directory",
      "prediction": "<|endoftext|> <|source|> Change to directory 'xyz' and resolve any symlinks in the resulting path, making the physical path the current one. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long and detailed list of all the files in the current directory tree that are not in the current directory. <|target|> find Path -type f -name Regex -execdir ls -l {} \\;            "
    },
    {
      "source": "Find all files under the current directory whose filenames are not \"file.txt\", ignoring the case",
      "target": "find Path -maxdepth Quantity -not -iname Regex",
      "prediction": "<|endoftext|> <|source|> Find all files under the current directory whose filenames are not \"file.txt\", ignoring the case <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Search for the word \"new\" in all the files in the current directory tree and display the matched lines in the output. <|target|> find Path -type f -exec grep -i Regex {} + | xargs -I {} grep Regex {}"
    },
    {
      "source": "Find all files under $x directory and set read-write permission for owner and group and no permission for other for those files",
      "target": "find Path -type f -exec chmod Permission {} \\;",
      "prediction": "<|endoftext|> <|source|> Find all files under $x directory and set read-write permission for owner and group and no permission for other for those files <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Prints long listing of all files in a current folder. <|target|> ls -l | awk Program | sort | uniq -c      | tail -n Quantity       | sort | uniq -c"
    },
    {
      "source": "Search the current directory tree for files whose name is \".note\", case insensitive",
      "target": "find Path -iname Regex | sort",
      "prediction": "<|endoftext|> <|source|> Search the current directory tree for files whose name is \".note\", case insensitive <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long list of all the files in the current directory tree that are modified within the last 24 hours. <|target|> find Path -type f -mtime Timespan -exec ls -l {} \\;    | head -n Quantity     "
    },
    {
      "source": "Print newline, word, and byte counts of each '*.java' file within current directory, and total newline, word, and byte counts",
      "target": "find Path -name Regex | tr Regex Regex | xargs -0 -I {} wc {}",
      "prediction": "<|endoftext|> <|source|> Print newline, word, and byte counts of each '*.java' file within current directory, and total newline, word, and byte counts <|target|> find Path -name Regex -exec echo Regex {} \\; | awk Program       | wc -l                              "
    },
    {
      "source": "Sets shell option 'nounset'.",
      "target": "shopt -s -o nounset",
      "prediction": "<|endoftext|> <|source|> Sets shell option 'nounset'. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory.\n <|source|> find Path -type f -exec ls -l -r -r -f {} \\;          "
    },
    {
      "source": "Find all *.[ch] files under current directory",
      "target": "find Path -name Regex",
      "prediction": "<|endoftext|> <|source|> Find all *.[ch] files under current directory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first time a user has access to the file \"file.txt\" is at the end of the file system.\n <|source|> find Path -type f -exec ls -l -r -n -s File \\;"
    },
    {
      "source": "Find all regular files on the system whose names are 'myfile'",
      "target": "find Path -name Regex -type f -print",
      "prediction": "<|endoftext|> <|source|> Find all regular files on the system whose names are'myfile' <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>In the last 24 hours, the number of users logged in to the system has been changed from 7 to 7.\n <|source|> find Path -type f -exec ls -l -r -s -r -t -t"
    },
    {
      "source": "List all files under the current working directory tree",
      "target": "find Path $( pwd ) -type f",
      "prediction": "<|endoftext|> <|source|> List all files under the current working directory tree <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file is a part of the current directory tree and is not accessible by other users.\n <|source|> find Path -type f -execdir ls -l {} \\;           "
    },
    {
      "source": "search for all the files in the current directory which have been modified in the last 24 hours.",
      "target": "find Path -mtime -Timespan",
      "prediction": "<|endoftext|> <|source|> search for all the files in the current directory which have been modified in the last 24 hours. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new and expanded version of the current user interface (UIT) is available for all users to use.\n <|source|> find Path -type f -user Regex -exec ls -l -s {} \\;  "
    },
    {
      "source": "Find all *.py files/directories under current directory",
      "target": "find Path -name Regex",
      "prediction": "<|endoftext|> <|source|> Find all *.py files/directories under current directory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>\n\"I have been working on this for the last 2 days and have not been home for more than 2 days. <|source|> Find all files in the current directory and below and below the current directory and below the current directory <"
    },
    {
      "source": "Force create a symbolc link named \"/usr/local/bin/fpdf\" to \"/usr/local/bin/findpdftext\"",
      "target": "ln -s -f File Regex",
      "prediction": "<|endoftext|> <|source|> Force create a symbolc link named \"/usr/local/bin/fpdf\" to \"/usr/local/bin/findpdftext\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are not owned by any user. <|source|> find Path -type f -user Regex -ok rm -r -f -f {} \\; "
    },
    {
      "source": "Find all the files which are modified in last 1 hour in entire file system",
      "target": "find Path -mmin -Quantity",
      "prediction": "<|endoftext|> <|source|> Find all the files which are modified in last 1 hour in entire file system <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first word of every word in \"The Timespan\" is \"I\" <|source|> Prints the current user's IP address. <|target|> who | awk Program         "
    },
    {
      "source": "search for a shell script in the current folder and display the current folder path but search from the sub directories",
      "target": "find Path -name Regex -execdir pwd \\;",
      "prediction": "<|endoftext|> <|source|> search for a shell script in the current folder and display the current folder path but search from the sub directories <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new file named \"file.txt\" is a file with a name that is not \"file.txt\" and contains only the name of the file.\n <|source|> find Path -name Regex -exec basename {}"
    },
    {
      "source": "Find files matching pattern $2 in the $1 directory recursively and search them for text $3, where $1, $2, $3 are the command line arguments to the Bash script",
      "target": "find Path -path Regex -prune -or -name Regex -print -exec grep -H -n Regex {} \\;",
      "prediction": "<|endoftext|> <|source|> Find files matching pattern $2 in the $1 directory recursively and search them for text $3, where $1, $2, $3 are the command line arguments to the Bash script <|target|> find Path -name Regex -exec grep -i Regex {} \\; -exec grep -i Regex {} \\;                       "
    },
    {
      "source": "Find all files/directories with '.log' extension that belong to the group 'adm' under '/var/log' directory tree",
      "target": "find Path -group Regex -name Regex",
      "prediction": "<|endoftext|> <|source|> Find all files/directories with '.log' extension that belong to the group 'adm' under '/var/log' directory tree <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Search for the regex'string' in all files in the current directory tree and display the matched lines in the output. <|target|> find Path -type f -exec grep -i Regex"
    },
    {
      "source": "delete all the files in the current folder which end with \".bak\" or \".backup\" and which have not been accessed in the last 30 days",
      "target": "find Path \\( -name Regex -or -name Regex \\) -type f -atime +Timespan -exec rm {} \\;",
      "prediction": "<|endoftext|> <|source|> delete all the files in the current folder which end with \".bak\" or \".backup\" and which have not been accessed in the last 30 days <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>\"I have a long list of all the files in the current directory and display the list of them. <|source|> find Path -type f -exec ls -l -t -r -r -v {} \\"
    },
    {
      "source": "Print the path of all the network mounts",
      "target": "mount | sed -n -e Program",
      "prediction": "<|endoftext|> <|source|> Print the path of all the network mounts <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file is a part of the current directory tree.\n <|source|> find Path -type f -name Regex -exec ls -l {} \\;        | grep Regex "
    },
    {
      "source": "find all text files in user/directory/ which have been modified today and display the last line of these files",
      "target": "find Path -name Regex -mtime Timespan -type f -printf '%p: ' -exec tail - Quantity {} \\;",
      "prediction": "<|endoftext|> <|source|> find all text files in user/directory/ which have been modified today and display the last line of these files <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Print the names of all the files in the current directory tree and its sub-directories. <|target|> find Path -type f | xargs -I {} ls -l -r -"
    },
    {
      "source": "Verbosely compresses all files on fifth and sixth depth level keeping original files in place.",
      "target": "bzip2 -k -v File",
      "prediction": "<|endoftext|> <|source|> Verbosely compresses all files on fifth and sixth depth level keeping original files in place. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>Search for the word \"FooBar\" in all the files in the current directory tree and display the matched lines in the output. <|target|> find Path -type f -exec grep -i Regex -e"
    },
    {
      "source": "Use the first non-zero exit code (if any) of a set of piped commands as the exit code of the full set of commands",
      "target": "set -o pipefail",
      "prediction": "<|endoftext|> <|source|> Use the first non-zero exit code (if any) of a set of piped commands as the exit code of the full set of commands <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Print the first line of output from \"file1\" <|target|> cat File | sed -e Program | cut -d Regex -f Number | head - Quantity     "
    },
    {
      "source": "Prints all child processes of a process with id 20238.",
      "target": "pstree -p Regex | sed Program | grep Regex | sed Program",
      "prediction": "<|endoftext|> <|source|> Prints all child processes of a process with id 20238. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long-running, interactive shell that is used to run all the regular/normal files in the current directory tree.\n <|source|> find Path -type f -exec ls -l -s {} \\"
    },
    {
      "source": "Split \"/usr/bin/firefox\" into 1000 files of about equal size",
      "target": "split -n Quantity File",
      "prediction": "<|endoftext|> <|source|> Split \"/usr/bin/firefox\" into 1000 files of about equal size <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long list of all the files in the current directory tree that are larger than 10MB and less than 10MB.\n <|source|> find Path -type f -size +Size -size -Size -"
    },
    {
      "source": "Set the executable bit for all users on all regular files from directories arch/x86/usr/sbin, arch/x86/usr/X11R6/bin, usr/sbin/",
      "target": "find Path Path Path -type f | xargs -I {} chmod Permission {}",
      "prediction": "<|endoftext|> <|source|> Set the executable bit for all users on all regular files from directories arch/x86/usr/sbin, arch/x86/usr/X11R6/bin, usr/sbin/ <|target|> chmod Permission File                                         "
    },
    {
      "source": "find all the files in the entire file system which belong to the group \"staff\"",
      "target": "find Path -group Regex -print",
      "prediction": "<|endoftext|> <|source|> find all the files in the entire file system which belong to the group \"staff\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|source|> Find all the files in the current directory and below that are not modified in the last 24 hours and delete them. <|target|> find Path -mtime +Timespan -type f -print"
    },
    {
      "source": "find all the html files in the current folder and replace the end of each line with a pattern",
      "target": "find Path -type f -name Regex | xargs -I {} sed -i Program {}",
      "prediction": "<|endoftext|> <|source|> find all the html files in the current folder and replace the end of each line with a pattern <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Search for the regex '^[a-zA-Z]*' in all the files in the current directory tree and display the matched lines in the sorted order of their names <|target|> find Path -type f -exec sed -i Program {} \\;"
    },
    {
      "source": "search for all the files in current folder and display all the file names separated by space",
      "target": "find Path | awk Program",
      "prediction": "<|endoftext|> <|source|> search for all the files in current folder and display all the file names separated by space <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new and long-awaited file system with a unique file system and a unique file system name.\n <|source|> Find all files in the current directory and below and change their permission to 755 <|target|> find Path -type f -exec chmod Permission {} \\;"
    },
    {
      "source": "Replace all newlines from the contents of \"file\" except the last with spaces",
      "target": "sed Program File",
      "prediction": "<|endoftext|> <|source|> Replace all newlines from the contents of \"file\" except the last with spaces <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of the three files from the current directory tree that are not in the current directory tree are not in the current directory. <|source|> find Path -type f -name Regex -exec sed -i Program {} \\;            |"
    },
    {
      "source": "Find all .gz archives in the current directory tree and check if they are valid",
      "target": "find Path -name Regex -exec gunzip {} \\;",
      "prediction": "<|endoftext|> <|source|> Find all.gz archives in the current directory tree and check if they are valid <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new report from the CDC finds that the number of new cases of human-to-be diagnosed human-to-be in the human-to-be-in-the-other-here is greater than 10. <|target|> find Path -type f -iname Regex -"
    },
    {
      "source": "find all files in the current folder which are bigger than 10bytes",
      "target": "find Path -size +Size -print",
      "prediction": "<|endoftext|> <|source|> find all files in the current folder which are bigger than 10bytes <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Search for'string' in all files in the current directory tree and print the matched lines in the output <|target|> find Path -type f -exec grep -i Regex {} + | xargs -r -I {} grep -i Regex {} | x"
    },
    {
      "source": "display the count of number html files in the current folder",
      "target": "find Path -name Regex -print | xargs -l -i -I {} wc {} {}",
      "prediction": "<|endoftext|> <|source|> display the count of number html files in the current folder <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A man who was last in the home of a man and who was last in custody of a man who was last in custody of a man and who was last in the home of a woman.\n <|target|> find Path -type f -name Regex -exec ls -l -r"
    },
    {
      "source": "find and image in current folder (case insensitive search)",
      "target": "find Path -iname Regex",
      "prediction": "<|endoftext|> <|source|> find and image in current folder (case insensitive search) <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new and expanded version of the current version of the current operating system is available for download.\n <|target|> find Path -type f -name Regex -exec basename {} \\;                    "
    },
    {
      "source": "Find all files/directories under current directory tree whose names start with 'test' followed by two digits and end with '.txt' extension",
      "target": "find Path -regextype sed -regex Regex",
      "prediction": "<|endoftext|> <|source|> Find all files/directories under current directory tree whose names start with 'test' followed by two digits and end with '.txt' extension <|target|> find Path -name Regex -print0 | xargs -0 -I {} grep -l Regex {}                                      "
    },
    {
      "source": "change the ownership of all directories in the current folder",
      "target": "find Path -type d -exec chown Regex {} \\;",
      "prediction": "<|endoftext|> <|source|> change the ownership of all directories in the current folder <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of a series of new jobs in the current directory tree, the first one to be created in the current directory.\n <|source|> find Path -type d -execdir rename Regex {} \\;                "
    },
    {
      "source": "Change ownership of \"/data/db\" to the current user",
      "target": "chown $( whoami ) File",
      "prediction": "<|endoftext|> <|source|> Change ownership of \"/data/db\" to the current user <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A long time ago, the world was a place of infinite recursion. <|source|> Search for the word \"test\" in all the files in the current directory tree and display the matched lines in the output. <|target|> find Path -type f -exec grep -i Re"
    },
    {
      "source": "Get a detailed list of all files on the system larger than 10MB",
      "target": "find Path -size +Size -printf \"%12s %t %h/%fn\"",
      "prediction": "<|endoftext|> <|source|> Get a detailed list of all files on the system larger than 10MB <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the latest release of the OpenMP bindings.\n <|source|> find Path -type f -name Regex -exec echo Regex \\;  | xargs -I {} ls -l {}      "
    },
    {
      "source": "Remove the last two alphanumeric file extensions from \"mpc-1.0.1.tar.gz\"",
      "target": "echo Regex | sed -r Program",
      "prediction": "<|endoftext|> <|source|> Remove the last two alphanumeric file extensions from \"mpc-1.0.1.tar.gz\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>\"I have a long and hard time with the word 'bills' in my name. <|source|> Prints a long list of all the files in the current directory tree. <|target|> find Path -type f -exec ls -l"
    },
    {
      "source": "display all the home folder which end with the extension \"sxw\" and which have been accessed in the last 3*24 hours and which belong to the user bruno",
      "target": "find Path -type f -name Regex -atime -Timespan -user Regex",
      "prediction": "<|endoftext|> <|source|> display all the home folder which end with the extension \"sxw\" and which have been accessed in the last 3*24 hours and which belong to the user bruno <|target|> find Path -type f -name Regex -atime +Timespan -exec sed -i Program {} \\;                              "
    },
    {
      "source": "Find all the files which are accessed in last 1 hour in entire file system",
      "target": "find Path -amin -Quantity",
      "prediction": "<|endoftext|> <|source|> Find all the files which are accessed in last 1 hour in entire file system <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A long list of the most common files in the current directory tree, sorted from least frequent to most frequent. <|source|> find Path -type f -name Regex -exec ls -l -s -r -t -r -t -r -"
    },
    {
      "source": "Find all *.sql file that are not newer than  $oldest_to_keep excluding the  $oldest_to_keep file",
      "target": "find Path -name Regex -not -samefile Regex -not -newer File",
      "prediction": "<|endoftext|> <|source|> Find all *.sql file that are not newer than  $oldest_to_keep excluding the  $oldest_to_keep file <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of the year's biggest names is back in the news. <|source|> Find all the files in the current directory tree that are newer than $newest_to_find and delete them <|target|> find Path -newer File -"
    },
    {
      "source": "execute command \"who\" when key \"\\eW\" is pressed",
      "target": "bind -x Regex",
      "prediction": "<|endoftext|> <|source|> execute command \"who\" when key \"\\eW\" is pressed <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new report from the California Program Program (COP) finds all files in a current folder and removes them. <|source|> find Path -type f -name Regex -exec rm -r -f {} \\;       "
    },
    {
      "source": "Print unique lines in sorted \"file1\" compared to sorted file \"file2\"",
      "target": "comm -2 -3 File File",
      "prediction": "<|endoftext|> <|source|> Print unique lines in sorted \"file1\" compared to sorted file \"file2\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the current directory tree. <|source|> find Path -type f -name Regex -exec ls -l -s {} \\; | awk Program       | sort | uniq    "
    }
  ],
  "3.0": [
    {
      "source": "display all the html files in the current folder excluding search in the path ./foo",
      "target": "find Path -path Regex -prune -or -type f -name Regex",
      "prediction": "<|endoftext|> <|source|> display all the html files in the current folder excluding search in the path./foo <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all the files in the current directory tree that are larger than 100 megabytes and move them to another directory. <|target|> find Path -size +Size -size +Size -exec mv -t Directory {} +   "
    },
    {
      "source": "Read a line from standard input into variable \"response\" ignoring backslash escapes and using the prompt \"${1:-Are you sure? [y/N]} \"",
      "target": "read -r -p Regex Regex",
      "prediction": "<|endoftext|> <|source|> Read a line from standard input into variable \"response\" ignoring backslash escapes and using the prompt \"${1:-Are you sure? [y/N]} \" <|target|> read -r -e -n Regex                                              "
    },
    {
      "source": "Finds strings with dot-separated sequence of numbers, and prints part of that sequence before the first dot.",
      "target": "echo Regex | grep -E -o Regex | cut -d Regex -f Number",
      "prediction": "<|endoftext|> <|source|> Finds strings with dot-separated sequence of numbers, and prints part of that sequence before the first dot. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the latest and greatest files from the current directory tree. <|source|> find Path -type f -exec ls -l -a -l {} \\;     | sort -n      | head -"
    },
    {
      "source": "Compare files in \"/tmp/dir1\" and \"/tmp/dir2\", treating absent files as empty and all files as text",
      "target": "diff -N -a -r File File",
      "prediction": "<|endoftext|> <|source|> Compare files in \"/tmp/dir1\" and \"/tmp/dir2\", treating absent files as empty and all files as text <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Print the names of all files in the current directory tree that are not owned by the user 'raptor' <|target|> find Path -nouser -exec grep -i Regex {} \\;      "
    },
    {
      "source": "display all symbolic links in current folder",
      "target": "find Path -lname Regex",
      "prediction": "<|endoftext|> <|source|> display all symbolic links in current folder <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file is a part of the current directory tree.\n <|target|> find Path -type f -name Regex -exec basename {} \\;                      "
    },
    {
      "source": "List the files from the current directory tree that contain lines matching regular expression '^From:.*unique sender', ignoring ~/src and ~/bin",
      "target": "find Path -name Regex -prune -or -name Regex -prune -or -type f -print | xargs -I {} grep -E -i -l Regex {}",
      "prediction": "<|endoftext|> <|source|> List the files from the current directory tree that contain lines matching regular expression '^From:.*unique sender', ignoring ~/src and ~/bin <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under /path/to/files/ directory and print their names and sizes <|target|> find Path -type f -exec ls -l {} \\;           "
    },
    {
      "source": "Print common lines of files \"file1\", \"file2\", \"file3\", and \"file4\"",
      "target": "comm -1 -2 <( comm -1 -2 <( comm -1 -2 <( sort File ) <( sort File ) ) <( sort File ) ) <( sort File )",
      "prediction": "<|endoftext|> <|source|> Print common lines of files \"file1\", \"file2\", \"file3\", and \"file4\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|<|source|> Find all files/directories under current directory and show the file paths of the ones that match the regex expanded by-reference <|target|> find Path -name Regex -exec grep -i -l Regex {} \\;"
    },
    {
      "source": "Remount \"/home/evgeny\" with the \"suid\" flag set",
      "target": "mount Regex -o remount,suid Regex",
      "prediction": "<|endoftext|> <|source|> Remount \"/home/evgeny\" with the \"suid\" flag set <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long list of all the files in the current directory which are not owned by the user \"user\" and which are newer than the file \"file\" <|target|> find Path -newer File -user Regex -print0 | xargs -"
    },
    {
      "source": "Show the last 10 .conf files found by `find' in the /etc directory",
      "target": "find Path -maxdepth Quantity -name Regex | tail",
      "prediction": "<|endoftext|> <|source|> Show the last 10.conf files found by `find' in the /etc directory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the file system containing the file system containing the file system containing the file system containing the file system containing the file system containing the file system containing the file system containing the file system containing the file system containing the file system containing the file system containing the"
    },
    {
      "source": "display all the files on the current folder excluding those that are present in the folder \"./src/emacs\"",
      "target": "find Path -path Regex -prune -or -print",
      "prediction": "<|endoftext|> <|source|> display all the files on the current folder excluding those that are present in the folder \"./src/emacs\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all the files in the current directory tree that are owned by user \"user\" and have not been modified in the last 24 hours and display their names and sizes. <|target|> find Path -user Regex -mtime +Times"
    },
    {
      "source": "search for all the regular/normal mp3 files in the file system and move them to the folder /mnt/mp3",
      "target": "find Path -iname Regex -type f -print0 | xargs -0 -I {} mv {} File",
      "prediction": "<|endoftext|> <|source|> search for all the regular/normal mp3 files in the file system and move them to the folder /mnt/mp3 <|target|><|endoftext|> <|source|> Find all files/directories under /home/user/Music/ that are bigger than 100MB and have been modified in the last 24 hours <|target|> find Path -type f -mtime +Timespan -mtime +Timespan -mtime -Timespan"
    },
    {
      "source": "find all files in the home folder which are modified in the last 2 days.",
      "target": "find Path -type f -mtime -Timespan",
      "prediction": "<|endoftext|> <|source|> find all files in the home folder which are modified in the last 2 days. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files in the current directory tree that are not modified in the last 60 minutes <|target|> find Path -mmin -Quantity -type f -mtime +Timespan                   "
    },
    {
      "source": "Find *.conf files/directories only upto 1 level down under /etc directory and show a few lines of output from the end",
      "target": "find Path -maxdepth Quantity -name Regex | tail",
      "prediction": "<|endoftext|> <|source|> Find *.conf files/directories only upto 1 level down under /etc directory and show a few lines of output from the end <|target|> find Path -maxdepth Quantity -name Regex -exec grep -i -n Regex {} \\;                                        "
    },
    {
      "source": "Find all files owned by the user daniel in the current directory and below.",
      "target": "find Path -user Regex",
      "prediction": "<|endoftext|> <|source|> Find all files owned by the user daniel in the current directory and below. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files in the current directory tree that are larger than 100MB and less than 100MB and display their size in kilobytes. <|target|> find Path -size +Size -size -Size -size -Size -Size -Size -Size    "
    },
    {
      "source": "count all the html files having a specifc word in a folder.",
      "target": "find Path -name Regex -exec grep -l Regex {} \\; | wc -l",
      "prediction": "<|endoftext|> <|source|> count all the html files having a specifc word in a folder. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file contains a list of all files in the current directory tree that are not owned by the user \"user\" and are not newer than \"file\" in their timestamps. <|target|> find Path -user Regex -print0 | xargs -0 -I {} ls -l"
    },
    {
      "source": "List all cron jobs which contain \"word\".",
      "target": "crontab -l | grep -E Regex",
      "prediction": "<|endoftext|> <|source|> List all cron jobs which contain \"word\". <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are not owned by the user \"my_user\" or \"my_user\" and do not search in the sub directories. <|target|> find Path -type f -name Regex -prune -or -name"
    },
    {
      "source": "long list al the files in the current directory which have read permission to the group",
      "target": "find Path -perm -Permission -type f -exec ls -l {} \\;",
      "prediction": "<|endoftext|> <|source|> long list al the files in the current directory which have read permission to the group <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the latest modified files in the current directory tree. <|source|> find Path -type f -name Regex -exec ls -l {} \\; | grep -v Regex | grep -v Regex | cut -d Regex -f Number | xargs"
    },
    {
      "source": "Display all lines containing \"IP_MROUTE\" in the current kernel's compile-time config file.",
      "target": "cat $( uname -r ) | grep Regex",
      "prediction": "<|endoftext|> <|source|> Display all lines containing \"IP_MROUTE\" in the current kernel's compile-time config file. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory that are larger than 100MB and have been modified in the last 24 hours <|target|> find Path -type f -size +Size -mtime Timespan -exec ls -l {} \\;      "
    },
    {
      "source": "Remove all regular non-hidden files modified more than 7 days ago and residing in the /tmp directory tree",
      "target": "find Path -type f -name Regex -mtime +Timespan -print0 | xargs -0 -I {} rm -f {}",
      "prediction": "<|endoftext|> <|source|> Remove all regular non-hidden files modified more than 7 days ago and residing in the /tmp directory tree <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long list of all the files in the current directory tree that are not in the current directory tree. <|target|> find Path -type f -name Regex! -name Regex -ls          | grep -v Regex   "
    },
    {
      "source": "Unzip every \".gz\" file in the current directory tree",
      "target": "find Path -name Regex -exec gunzip {} \\;",
      "prediction": "<|endoftext|> <|source|> Unzip every \".gz\" file in the current directory tree <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the latest regular/normal files in the current directory tree. <|source|> find Path -type f -exec ls -l -r -t {} \\; | sed Program            | tail - Quantity    "
    },
    {
      "source": "change permission of all the files in the entire file system which have the permissions 777.",
      "target": "find Path -type f -perm Permission -print -exec chmod Permission {} \\;",
      "prediction": "<|endoftext|> <|source|> change permission of all the files in the entire file system which have the permissions 777. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all the files in the current directory tree that are not owned by user 'username' and delete them <|target|> find Path -nogroup Regex -user Regex -exec rm {} \\;                "
    },
    {
      "source": "Prints information about active network interfaces in system.",
      "target": "echo $( ifconfig )",
      "prediction": "<|endoftext|> <|source|> Prints information about active network interfaces in system. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A long-running case of mistaken identity has been found in the file system of the user \"jk\" and its sub-directories.\n <|source|> find Path -user Regex -exec ls -l -s {} \\;              "
    },
    {
      "source": "find all the reguar/normal php files in current directory.",
      "target": "find Path -type f -name Regex",
      "prediction": "<|endoftext|> <|source|> find all the reguar/normal php files in current directory. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long-running, long-running, and well-researched list of the top 10 biggest and least frequent files in the current directory.\n <|target|> find Path -type f -exec ls -l {} \\; | sort -n | tail - Quantity | cut -f Number"
    },
    {
      "source": "search  in root  ( / ) directory downwards all files which have less than 2 links.",
      "target": "find Path -links -Quantity -print",
      "prediction": "<|endoftext|> <|source|> search  in root  ( / ) directory downwards all files which have less than 2 links. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are not owned by the user or group of the current user. <|target|> find Path -nogroup -user Regex -exec ls -l {} \\;    | grep Regex       "
    },
    {
      "source": "Find all files/directories under current directory",
      "target": "find Path -print0 | xargs -0",
      "prediction": "<|endoftext|> <|source|> Find all files/directories under current directory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are not owned by the user'myuser' and are not newer than 'file' and 'file' <|target|> find Path -user Regex -newer File  -newer File        "
    },
    {
      "source": "display all regular/normal files in the folder \"dir\" and display the filename along with file size",
      "target": "find Path -type f -printf \"f %s %p\\n\"",
      "prediction": "<|endoftext|> <|source|> display all regular/normal files in the folder \"dir\" and display the filename along with file size <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and change their permission to 755 <|target|> find Path -type f -exec chmod Permission {} \\;                         "
    },
    {
      "source": "find regular file named foo.txt under root / directory.",
      "target": "find Path -name Regex -type f -print",
      "prediction": "<|endoftext|> <|source|> find regular file named foo.txt under root / directory. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and set their permission to 755 <|target|> find Path -type f -exec chmod Permission {} \\;             chmod Permission {}        "
    },
    {
      "source": "Evaluate the output of recursively changing the owner and group of \"/data/*\" to \"mongodb\"",
      "target": "$( chown -R Regex File )",
      "prediction": "<|endoftext|> <|source|> Evaluate the output of recursively changing the owner and group of \"/data/*\" to \"mongodb\" <|target|> chown -R Regex File                                                          "
    },
    {
      "source": "find all files  that names are 'apt'",
      "target": "find Path -name Regex",
      "prediction": "<|endoftext|> <|source|> find all files  that names are 'apt' <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|source|> Find all files/directories under current directory and print the path to them <|target|> find Path -type f -print0 | xargs -0 -I {} dirname {}                   "
    },
    {
      "source": "Print a sorted list of *.so files in the bla directory tree",
      "target": "find Path -name Regex -print0 | sort -r -z",
      "prediction": "<|endoftext|> <|source|> Print a sorted list of *.so files in the bla directory tree <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are larger than 100MB and which are bigger than 100MB.\n <|target|> find Path -type f -size +Size -exec ls -l {} \\;      | grep Regex | sort | uniq"
    },
    {
      "source": "Find all .core files on the system starting from / and delete them",
      "target": "find Path -name Regex | xargs -I {} rm {}",
      "prediction": "<|endoftext|> <|source|> Find all.core files on the system starting from / and delete them <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long list of all the files in the current directory tree that are bigger than 100 megabytes and less than 100 megabytes. <|target|> find Path -type f -size +Size -exec ls -l -s {} \\; -exec ls -s {} \\;    "
    },
    {
      "source": "Find all files/directories that start with 'screen' (case insensitive) in their names under user's home directory tree",
      "target": "find Path -iname Regex",
      "prediction": "<|endoftext|> <|source|> Find all files/directories that start with'screen' (case insensitive) in their names under user's home directory tree <|target|> find Path -iname Regex                                                         "
    },
    {
      "source": "Print characters 2 through 4 of \"abcdefg\"",
      "target": "echo Regex | tail -c +Quantity | head -c Quantity",
      "prediction": "<|endoftext|> <|source|> Print characters 2 through 4 of \"abcdefg\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and print them with their sizes and paths <|target|> find Path -name Regex -exec echo {} \\;   | awk Program          | xargs -I {} ls -l {}"
    },
    {
      "source": "Find files/directories under /users/tom that matches both the pattern \"*.pl\" and  \"*.pm\"",
      "target": "find Path -name Regex -name Regex",
      "prediction": "<|endoftext|> <|source|> Find files/directories under /users/tom that matches both the pattern \"*.pl\" and  \"*.pm\" <|target|> find Path -name Regex -exec grep -i Regex {} \\;                                                "
    },
    {
      "source": "forcibly create a symbolic link named \"linkname\" to file \"new_destination\"",
      "target": "ln -s -f File Regex",
      "prediction": "<|endoftext|> <|source|> forcibly create a symbolic link named \"linkname\" to file \"new_destination\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The latest in a long line of \"new_stuff\" files from the current directory tree, and which are sorted alphabetically.\n <|source|> find Path -type f -exec ls -l -t -r -n {} \\;             "
    },
    {
      "source": "Report file systems disk usage using POSIX output format.",
      "target": "df -P",
      "prediction": "<|endoftext|> <|source|> Report file systems disk usage using POSIX output format. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|source|> Find all files/directories under /path/to/dir/ that are newer than /path/to/dir/ and older than /path/to/dir/to/dir/to/dir/to/to/dir/to/dir/to/dir/to/"
    },
    {
      "source": "Compress every file in the current directory tree with gzip and keep file extensions the same",
      "target": "find Path -type f -exec gzip -9 {} \\; -exec mv File {} \\;",
      "prediction": "<|endoftext|> <|source|> Compress every file in the current directory tree with gzip and keep file extensions the same <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Print the first 10 lines of output of \"file1\" <|target|> cat File | awk Program    | head -n Quantity           | sort -n              |"
    },
    {
      "source": "Find all *.csv files under /foo/bar and move them to some_dir",
      "target": "find Path -name Regex -print0 | xargs -0 -I {} mv -t Directory {}",
      "prediction": "<|endoftext|> <|source|> Find all *.csv files under /foo/bar and move them to some_dir <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long list of all the files in the current directory tree that are not owned by the user'me' or 'other' or 'other' <|target|> find Path -name Regex -exec rm -f {} \\;             "
    },
    {
      "source": "Check if a drive is mounted to nfs",
      "target": "mount | grep Regex",
      "prediction": "<|endoftext|> <|source|> Check if a drive is mounted to nfs <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are modified within the last 60 minutes. <|source|> find Path -mmin -Quantity -type f -ls    | xargs -I {} ls -l {}           "
    },
    {
      "source": "display all the files in the folder \"/dev\" which belong to the user \"peter\"",
      "target": "find Path -user Regex | more",
      "prediction": "<|endoftext|> <|source|> display all the files in the folder \"/dev\" which belong to the user \"peter\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are newer than \"file_name\" <|target|> find Path -newer File -print0 | xargs -0 -I {} ls -l {}               "
    },
    {
      "source": "Move all directories from the `sourceDir' directory tree to the `destDir' directory",
      "target": "find Path -mindepth Quantity -type d -exec mv -t Directory {} +",
      "prediction": "<|endoftext|> <|source|> Move all directories from the `sourceDir' directory tree to the `destDir' directory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files under current directory and print their names with spaces separated by a comma separated value. <|target|> find Path -type f -exec echo {} +  | sed Program              "
    },
    {
      "source": "Search the files residing in the current directory tree whose names contain \"bills\" for \"put\"",
      "target": "find Path -name Regex -print0 | xargs -0 -I {} grep Regex {}",
      "prediction": "<|endoftext|> <|source|> Search the files residing in the current directory tree whose names contain \"bills\" for \"put\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the files in the current directory tree that are not readable by the user. <|source|> find Path -type f! -name Regex! -name Regex! -name Regex -exec ls -l {} \\;   "
    },
    {
      "source": "Print a colon-separated list of all directories from the ~/code directory tree, except hidden ones and those below them",
      "target": "find Path -type d | sed Program | tr Regex Regex | sed Program",
      "prediction": "<|endoftext|> <|source|> Print a colon-separated list of all directories from the ~/code directory tree, except hidden ones and those below them <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and print the names of the files that are newer than the current directory <|target|> find Path -maxdepth Quantity -type f -printf '%h\\n' | sort | uniq -c"
    },
    {
      "source": "Remove all *.tmp files from the /tmp directory tree",
      "target": "find Path -name Regex -print0 | xargs -0 -I {} rm {}",
      "prediction": "<|endoftext|> <|source|> Remove all *.tmp files from the /tmp directory tree <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file is a part of the current directory tree. <|target|> find Path Path -type f -name Regex -print0 | xargs -0 -I {} ls -l {}                "
    },
    {
      "source": "Find all regular files under $d directory tree and change their permissions to 777",
      "target": "find Path -type f -print0 | xargs -0 -I {} chmod Permission {}",
      "prediction": "<|endoftext|> <|source|> Find all regular files under $d directory tree and change their permissions to 777 <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are larger than 10MB. <|source|> find Path -type f -name Regex -exec ls -l {} \\;    | xargs -I {} ls -l {} "
    },
    {
      "source": "Replace newline with \"_\" in \"file\" then search for \"_foo_\" and output with \"_\" characters deleted",
      "target": "grep -o Regex <( paste -s -d Regex File ) | tr -d Regex",
      "prediction": "<|endoftext|> <|source|> Replace newline with \"_\" in \"file\" then search for \"_foo_\" and output with \"_\" characters deleted <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and change their permission to 755 <|target|> find Path -type f -exec chmod Permission {} \\;                Regex"
    },
    {
      "source": "Find all directories under ${1:-.} directory without descending into any sub-directories",
      "target": "find Path -mindepth Quantity -maxdepth Quantity -type d",
      "prediction": "<|endoftext|> <|source|> Find all directories under ${1:-.} directory without descending into any sub-directories <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a common question in the home directory of a user who has been logged in for more than 10 years. <|source|> find Path -user Regex -ok ls -l -r -t -u -i -n -t   -v -t"
    },
    {
      "source": "Print only name and login columns of the currently logged in users",
      "target": "finger -s | awk Program",
      "prediction": "<|endoftext|> <|source|> Print only name and login columns of the currently logged in users <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>Image: File File | grep Regex | grep Regex | cut -d Regex -f Number        | tr Regex Regex                 | tr Regex Regex "
    },
    {
      "source": "Prints all NS servers of domain google.com.",
      "target": "dig Regex Regex | awk Program",
      "prediction": "<|endoftext|> <|source|> Prints all NS servers of domain google.com. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the files in the current directory tree that are newer than the file \"file\" <|target|> find Path -newer File -type f -print0 | xargs -0 -I {} ls -l {}    | grep -"
    },
    {
      "source": "Copy \"source\" recursively to \"destination\" excluding \"path1/to/exclude\" and \"path2/to/exclude\"",
      "target": "rsync -a -v --exclude Regex --exclude Regex File File",
      "prediction": "<|endoftext|> <|source|> Copy \"source\" recursively to \"destination\" excluding \"path1/to/exclude\" and \"path2/to/exclude\" <|target|> rsync -a -v -z -v -z -v File File                                         "
    },
    {
      "source": "Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.",
      "target": "sort File | uniq | cut -f Number -d Regex | uniq -c | rev",
      "prediction": "<|endoftext|> <|source|> Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and print them to stdout.txt <|target|> find Path -type f -exec echo {} \\;                 "
    },
    {
      "source": "list PID of a group leader",
      "target": "jobs -l -p",
      "prediction": "<|endoftext|> <|source|> list PID of a group leader <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the latest files in the current directory tree.\n <|target|> find Path -type f -name Regex -exec ls -l {} \\;    | grep -E Regex       | tail"
    },
    {
      "source": "Search for files/directories with the case insensitive pattern anaconda.* in var/log directory and create an archive (file.tar) of all the files found",
      "target": "find Path -iname Regex -exec tar -r -v -f File {} \\;",
      "prediction": "<|endoftext|> <|source|> Search for files/directories with the case insensitive pattern anaconda.* in var/log directory and create an archive (file.tar) of all the files found <|target|> find Path -iname Regex -exec tar -c -z -f File {} \\;                                   "
    },
    {
      "source": "Copy all .txt files from the dir/ directory tree along with their parent directories hierarchy",
      "target": "find Path -name Regex | xargs -I {} cp -a --target-directory Directory --parents {}",
      "prediction": "<|endoftext|> <|source|> Copy all.txt files from the dir/ directory tree along with their parent directories hierarchy <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file contains all files in the current directory tree that are not modified in the last 24 hours. <|target|> find Path -mtime +Timespan -type f -mtime +Timespan             "
    },
    {
      "source": "Find all foo.mp4 files in the current directory tree and print the pathnames of their parent directories",
      "target": "find Path -name Regex -printf '%h\\n'",
      "prediction": "<|endoftext|> <|source|> Find all foo.mp4 files in the current directory tree and print the pathnames of their parent directories <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>\"I have a long history with the word 'blunder' in my name. <|source|> Find all files in the current directory tree that are not owned by the user 'user' <|target|> find Path -name Regex -not -"
    },
    {
      "source": "Display non-hidden files in the current directory with the given output format",
      "target": "find Path -maxdepth Quantity -name Regex -printf 'Name: %16f Size: %6s\\n'",
      "prediction": "<|endoftext|> <|source|> Display non-hidden files in the current directory with the given output format <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the names of all the regular/normal files in the current directory tree. <|target|> find Path -type f -exec ls -l {} \\;    | grep Regex | xargs -I {} ls -l"
    },
    {
      "source": "Find all files/directories under current directory with null character as the delimiter",
      "target": "find Path -print0",
      "prediction": "<|endoftext|> <|source|> Find all files/directories under current directory with null character as the delimiter <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and change their permission to 755 <|target|> find Path -type f -exec chmod Permission {} \\;          | grep -E Regex"
    },
    {
      "source": "Numberically sort content of file 'files', using for sorting part of second one of dash separated fields beginning from second letter.",
      "target": "cat File | sort -t Regex -k Number -n",
      "prediction": "<|endoftext|> <|source|> Numberically sort content of file 'files', using for sorting part of second one of dash separated fields beginning from second letter. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are newer than the file $1.txt <|source|> find Path -newer File -type f -print0 | xargs -0 -I {} ls -l {}  "
    },
    {
      "source": "Find recursively the files named \"file\" in the current directory ignoring the .git subdirectory",
      "target": "find Path -path Regex -prune -or -name Regex -print",
      "prediction": "<|endoftext|> <|source|> Find recursively the files named \"file\" in the current directory ignoring the.git subdirectory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files under current directory and print the names of the files whose names contain \"foo\" <|target|> find Path -type f -exec basename {} \\;        | grep -E Regex "
    },
    {
      "source": "Find all .java files starting from the current folder",
      "target": "find Path -name Regex",
      "prediction": "<|endoftext|> <|source|> Find all.java files starting from the current folder <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|source|source|> Find all files in the current directory tree that are not owned by user `user' and change their permission to 755 <|target|> find Path -nouser -type f -print0 | xargs -0 -I"
    },
    {
      "source": "Remove the file with inode number 752010",
      "target": "find Path -inum Quantity -exec rm {} \\;",
      "prediction": "<|endoftext|> <|source|> Remove the file with inode number 752010 <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|source|> Find all files/directories under current directory and change their permission to 755 <|target|> find Path -type f -exec chmod Permission {} +      | grep -v Regex      | grep -v Regex "
    },
    {
      "source": "Find all files/directories named 'Desktop' under current directory",
      "target": "find Path -name Regex",
      "prediction": "<|endoftext|> <|source|> Find all files/directories named 'Desktop' under current directory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A man who was last year named \"J.R\" in the name of a local man named \"J.R\" was found in a remote location and was last week named \"J.R\" in the name of a man named \"J.R\" in the name of a local man named \""
    },
    {
      "source": "delete recursively, without prompting, any files or directories under the current directory that case insensitively match the filename \".svn\"",
      "target": "find Path -iname Regex -exec rm -r -f {} \\;",
      "prediction": "<|endoftext|> <|source|> delete recursively, without prompting, any files or directories under the current directory that case insensitively match the filename \".svn\" <|target|> find Path -iname Regex -type f -print0 | xargs -0 -I {} rm -r -f {}                                   "
    },
    {
      "source": "Print the input \"hello world\" to the console followed by a swap of the first two awk fields",
      "target": "echo Regex Regex | tee File | awk Program",
      "prediction": "<|endoftext|> <|source|> Print the input \"hello world\" to the console followed by a swap of the first two awk fields <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Search for the word \"new\" in all the regular/normal files in the current directory tree and print the matched lines along with their names <|target|> find Path -type f -exec grep -l Regex {} \\; -exec grep -l Regex {} \\"
    },
    {
      "source": "Filter contents of 'file' through awk commands written in script.awk, display the result.",
      "target": "awk -f File Program",
      "prediction": "<|endoftext|> <|source|> Filter contents of 'file' through awk commands written in script.awk, display the result. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are modified within the last minute. <|target|> find Path -mmin -Quantity -type f -mtime Timespan     | grep Regex            "
    },
    {
      "source": "delete all the normal/regular files in the current folder",
      "target": "find Path -type f -print -delete",
      "prediction": "<|endoftext|> <|source|> delete all the normal/regular files in the current folder <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new video from the home of the man who was last week named as \"the man\" in the home of the man who was last week named as \"the man\" in the home courtyard of the home of the man who was last Thursday named as \"the man\" in the home courtyard of the residence"
    },
    {
      "source": "Search the current directory tree for all files except SVN ones",
      "target": "find Path | grep -v Regex",
      "prediction": "<|endoftext|> <|source|> Search the current directory tree for all files except SVN ones <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>\nThis file is a part of the current directory. <|source|> Find all files in the current directory and its sub-directories and copy them to /tmp/foo/bar. <|target|> find Path -type f -exec echo {} Regex \\;  | grep -"
    },
    {
      "source": "Find all files residing in /home/dm/Video or below that were last changed at least 10 days ago",
      "target": "find Path -mtime +Timespan",
      "prediction": "<|endoftext|> <|source|> Find all files residing in /home/dm/Video or below that were last changed at least 10 days ago <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A long time ago, the world was awash with a new world. <|source|> Search for the word \"new\" in all files in the current directory tree and display the matched lines in the output. <|target|> find Path -type f -name Regex -exec grep -"
    },
    {
      "source": "Find all files/directories that are not newer than Jul 01 by modification time",
      "target": "find Path ! -newermt Regex",
      "prediction": "<|endoftext|> <|source|> Find all files/directories that are not newer than Jul 01 by modification time <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and print their paths in a sorted order of their names <|target|> find Path -type f -print0 | xargs -0 -I {} dirname {}             "
    },
    {
      "source": "Find all *.txt files/directories under current directory",
      "target": "find Path -name Regex",
      "prediction": "<|endoftext|> <|source|> Find all *.txt files/directories under current directory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|source|source|> Search for 'test' in all files/directories under current directory tree and show the matched lines in sorted order of their names <|target|> find Path -name Regex | xargs -I {} grep -i -n Regex {} | sort | un"
    },
    {
      "source": "Change the ownership of all files in the current directory tree from root to www-data",
      "target": "find Path -user Regex -exec chown Regex {} \\;",
      "prediction": "<|endoftext|> <|source|> Change the ownership of all files in the current directory tree from root to www-data <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long list of all the files in the current directory which are not readable by anyone.\n <|target|> find Path -type f -not -path Regex! -exec ls -l {} \\;   "
    },
    {
      "source": "Find all files/directories named 'query' under current directory tree",
      "target": "find Path -name Regex",
      "prediction": "<|endoftext|> <|source|> Find all files/directories named 'query' under current directory tree <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>\nThis is a long listing of all the files in the current directory tree that are newer than the one in the current directory. <|target|> find Path -newer File -type f -print0 | xargs -0 -"
    },
    {
      "source": "search for text files in the current folder which have write access to others",
      "target": "find Path -type f \\( -iname Regex -and -perm -Permission \\)",
      "prediction": "<|endoftext|> <|source|> search for text files in the current folder which have write access to others <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first word of the name of the name of the current user is a common first word of every user. <|target|> find Path -name Regex -exec grep -i Regex {} \\; -print0 | xargs"
    },
    {
      "source": "Change every file under \"/var/www/html/\" to have permissions 664",
      "target": "find Path -type f -exec chmod Permission {} \\;",
      "prediction": "<|endoftext|> <|source|> Change every file under \"/var/www/html/\" to have permissions 664 <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new version of the GNU C Library is in the works for all users.\n <|target|> find Path -type f -name Regex -exec chmod Permission {} \\;         "
    },
    {
      "source": "Infinitely print \"1\" then \"0\"",
      "target": "yes Regex | sed Program",
      "prediction": "<|endoftext|> <|source|> Infinitely print \"1\" then \"0\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file is a part of the current directory tree, and is not accessible by anyone except those who have permissions to run it.\n <|target|> find Path -type f -exec chmod Permission {} \\;   "
    },
    {
      "source": "List the current directory recursively ignoring ./src/emacs/ and all its contents",
      "target": "find Path -path Regex -prune -or -print",
      "prediction": "<|endoftext|> <|source|> List the current directory recursively ignoring./src/emacs/ and all its contents <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|source|> Find all files in the current directory tree that are modified within the last 24 hours and do not show the last one. <|target|> find Path -mtime -Timespan -print0 | xargs -"
    },
    {
      "source": "Remount \"extX\" filesystem \"/dev/hdaX\" on \"/\" without writing in \"/etc/mtab\"",
      "target": "mount -n -o remount -t extX Regex Regex",
      "prediction": "<|endoftext|> <|source|> Remount \"extX\" filesystem \"/dev/hdaX\" on \"/\" without writing in \"/etc/mtab\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|source|> Search for the word \"test\" in all regular files under current directory and show the file names of the matched files. <|target|> find Path -type f -exec grep -i Regex {}"
    },
    {
      "source": "create a zip of log files in the current directory which have not been accessed in the last 3 days (-p is for parallel processing for a 4 cpu machine, -n is for maximum work units)",
      "target": "find Path -name Regex -mtime +Timespan -print0 | xargs -0 -n Quantity -P Quantity -I {} bzip2 {}",
      "prediction": "<|endoftext|> <|source|> create a zip of log files in the current directory which have not been accessed in the last 3 days (-p is for parallel processing for a 4 cpu machine, -n is for maximum work units) <|target|> find Path -type f -atime +Timespan -exec tar -c -v -f File {} \\;                         "
    },
    {
      "source": "Numerically sort standard input by the second word of each line",
      "target": "sort -n -k Number",
      "prediction": "<|endoftext|> <|source|> Numerically sort standard input by the second word of each line <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files in the current directory tree that are not newer than the file $1 and print the filenames of them. <|target|> find Path -type f -newermt Regex -exec"
    },
    {
      "source": "display a long listing of all the java files in the current folder in sorted order",
      "target": "find Path -type f -name Regex -ls | sort -k +Number -r",
      "prediction": "<|endoftext|> <|source|> display a long listing of all the java files in the current folder in sorted order <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are newer than the file \"file\" <|target|> find Path -type f -newer File -exec ls -l {} \\;   | sort"
    },
    {
      "source": "Find all regular files that contain 'linux' (case insensitive) in their names under '/root' directory tree",
      "target": "find Path -type f -iname Regex",
      "prediction": "<|endoftext|> <|source|> Find all regular files that contain 'linux' (case insensitive) in their names under '/root' directory tree <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the latest modified files in the current directory tree. <|target|> find Path -type f -name Regex -exec ls -l {} \\;    | grep -E -o -v Regex        | xargs"
    },
    {
      "source": "Find all files under and below /dir that were changed or created less than 60 minutes ago",
      "target": "find Path -cmin -Quantity",
      "prediction": "<|endoftext|> <|source|> Find all files under and below /dir that were changed or created less than 60 minutes ago <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long-running, multi layered process that compresses data during transmission. <|target|> ps -e -o compress -o compress -o compress -o compress -o compress -o compress -o compress -o compress -o compress -o compress -o compress -o compress"
    },
    {
      "source": "Print the date formatted with \"%a %x %X\" followed by the host name",
      "target": "echo $( date +\"%a %x %X\" ) $( hostname )",
      "prediction": "<|endoftext|> <|source|> Print the date formatted with \"%a %x %X\" followed by the host name <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file photo was taken in the last 24 hours. <|source|> Find all the files in the current directory tree that were last modified more than 7 days ago and show the oldest file in the current directory tree. <|target|> find Path -mtime +Timespan -type f"
    },
    {
      "source": "Print the list of files in the home directory tree whose names begin with \"Foto\"",
      "target": "find Path -name Regex",
      "prediction": "<|endoftext|> <|source|> Print the list of files in the home directory tree whose names begin with \"Foto\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are newer than the file 'file' <|target|> find Path -type f -newer File -exec ls -l -r -t {} \\;          | grep Re"
    },
    {
      "source": "Recursively removes all files like '_*' and '.DS_Store' from /var/www/html/ folder.",
      "target": "rm File File",
      "prediction": "<|endoftext|> <|source|> Recursively removes all files like '_*' and '.DS_Store' from /var/www/html/ folder. <|target|><|endoftext|> <|source|> Find all *.txt files in the current directory tree and print them with '-' delimited lines <|target|> find Path -name Regex -exec rm -f {} \\;                  "
    },
    {
      "source": "Filters only directories from long file listing of the current directory.",
      "target": "ls -l | grep Regex",
      "prediction": "<|endoftext|> <|source|> Filters only directories from long file listing of the current directory. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|source|> Print the names of all files in the current directory tree and their parent directories. <|target|> find Path -type f -exec ls -l {} \\;   | grep Regex  | grep Regex   | grep -v Regex   "
    },
    {
      "source": "Find all the regular files under '/your/dir' directory tree which are bigger than 5 MB and display them in decreasing order of their sizes",
      "target": "find Path -type f -size +Size -exec du -h {} + | sort -h -r",
      "prediction": "<|endoftext|> <|source|> Find all the regular files under '/your/dir' directory tree which are bigger than 5 MB and display them in decreasing order of their sizes <|target|> find Path -type f -size +Size -exec ls -l -s {} \\; | sort -n | uniq -c                                 "
    },
    {
      "source": "Prints line count of each file within current directory.",
      "target": "find Path -type f -print | xargs -L Quantity -I {} wc -l {}",
      "prediction": "<|endoftext|> <|source|> Prints line count of each file within current directory. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new and long-form video file with the name \"file.txt\" has been created by the name of \"file.txt\" and has been modified to match the name of the current directory. <|target|> find Path -name Regex -execdir -m -i"
    },
    {
      "source": "Reverse the text in $input by taking each 4 characters as each units and save the result in variable 'output'",
      "target": "echo Regex | fold -w Quantity | tac | tr -d Regex",
      "prediction": "<|endoftext|> <|source|> Reverse the text in $input by taking each 4 characters as each units and save the result in variable 'output' <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under /path/to/file/ that are owned by user 'user' <|target|> find Path -user Regex -exec grep -i Regex {} \\;             "
    },
    {
      "source": "Find the largest files in a particular location",
      "target": "find Path -type f -exec du -S -h {} + | sort -r -h | head -n Quantity",
      "prediction": "<|endoftext|> <|source|> Find the largest files in a particular location <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files in the current directory and its sub-directories that are at least 2 levels deep and have not been modified in the last 30 days. <|target|> find Path -mindepth Quantity -maxdepth Quantity -mtime +Timespan   "
    },
    {
      "source": "List all regular files from the current directory tree that were modified less than 60 minutes ago",
      "target": "find Path -type f -mmin -Quantity -print0 | xargs -r -0 -I {} ls -l {}",
      "prediction": "<|endoftext|> <|source|> List all regular files from the current directory tree that were modified less than 60 minutes ago <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long list of all the files in the current directory which are larger than 100 MB. <|source|> find Path -type f -size +Size -exec ls -l {} \\;     | grep -v Regex   "
    },
    {
      "source": "Show directory sizes in KB and sort to give the largest at the end",
      "target": "du -s -k $( find Path -type d ) | sort -n -k Number",
      "prediction": "<|endoftext|> <|source|> Show directory sizes in KB and sort to give the largest at the end <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the latest modified files in the current directory tree. <|target|> find Path -type f -mtime Timespan -exec ls -l {} \\;   | sort | uniq -c | sort -n | tail -"
    },
    {
      "source": "List all regular files under current directory ensuring white space safety",
      "target": "find Path -type f -print0 | xargs -0 -n Quantity",
      "prediction": "<|endoftext|> <|source|> List all regular files under current directory ensuring white space safety <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are larger than 100MB and less than 100MB. <|target|> find Path -type f -size +Size -exec ls -l -l -h {} \\;   "
    },
    {
      "source": "find all the files in current folder which have been updated in the last 60 minutes",
      "target": "find Path -mmin -Quantity",
      "prediction": "<|endoftext|> <|source|> find all the files in current folder which have been updated in the last 60 minutes <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A long-running, long overdue, and often overlooked file, the \"file\" is a file whose name is not \"file\" and whose path is not \"file\" or \"file\" or \"file\" or \"file\" or \"file\" or \"file\""
    },
    {
      "source": "Copies all files like 'lib*.so' to '~/usr/gtest/lib/' directory.",
      "target": "cp File File",
      "prediction": "<|endoftext|> <|source|> Copies all files like 'lib*.so' to '~/usr/gtest/lib/' directory. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This week marks the 100th anniversary of the day of the end of the year. <|target|> find Path -type f -iname Regex -print0 | xargs -0 -I {} cp {} File         "
    },
    {
      "source": "Copies defined file to the target folder without overwriting existing files.",
      "target": "cp -n",
      "prediction": "<|endoftext|> <|source|> Copies defined file to the target folder without overwriting existing files. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are newer than the file \"file_name\" and do not match the file name. <|target|> find Path -newer File -type f -name Regex -print0 |"
    },
    {
      "source": "display all the html files in the current folder that have been modified exactly 7*24 hours ago",
      "target": "find Path -mtime Timespan -name Regex -print",
      "prediction": "<|endoftext|> <|source|> display all the html files in the current folder that have been modified exactly 7*24 hours ago <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new and more detailed version of the history file of the current user's home directory is available for download. <|source|> find Path -name Regex -print0 | xargs -0 -I {} dirname {}        "
    },
    {
      "source": "Look for regular files in the directory trees 'deferred', 'active', 'maildrop', 'incoming' under /var/spool/postfix/",
      "target": "find Path -type f",
      "prediction": "<|endoftext|> <|source|> Look for regular files in the directory trees 'deferred', 'active','maildrop', 'incoming' under /var/spool/postfix/ <|target|> find Path -type f -print0 | xargs -0 -I {} grep -E -n Regex {}                               "
    },
    {
      "source": "Search for 'some string' in all *js files under current directory and show the matched lines with line numbers",
      "target": "find Path -name Regex | grep -n Regex",
      "prediction": "<|endoftext|> <|source|> Search for'some string' in all *js files under current directory and show the matched lines with line numbers <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the files in the current directory that are modified within the last 24 hours. <|target|> find Path -mtime -Timespan -exec ls -l {} \\;            | grep"
    },
    {
      "source": "display all the files in the file system which belong to the group lighttpd",
      "target": "find Path -group Regex -print",
      "prediction": "<|endoftext|> <|source|> display all the files in the file system which belong to the group lighttpd <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are not newer than the file \"file.txt\" <|target|> find Path -type f -not -newermt Regex -exec ls -l {} \\;   "
    },
    {
      "source": "Search directory lpi104-6 for files with inode number 1988884",
      "target": "find Path -inum Quantity",
      "prediction": "<|endoftext|> <|source|> Search directory lpi104-6 for files with inode number 1988884 <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are modified in the last 24 hours. <|target|> find Path -mtime -Timespan -type f -exec ls -l {} \\;      | grep Regex   "
    },
    {
      "source": "Find files/directories under current directory that are modified exactly one hour ago",
      "target": "find Path -mtime Timespan",
      "prediction": "<|endoftext|> <|source|> Find files/directories under current directory that are modified exactly one hour ago <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory that were modified more than 1 day ago. <|source|> find Path -mtime +Timespan -exec ls -l -s {} \\;              "
    },
    {
      "source": "Get the number of \"use\" statements in all PHP files, ordered",
      "target": "find Path -type f -name Regex -exec grep --with-filename -c Regex {} \\; | sort -t Regex -k Number -n -r",
      "prediction": "<|endoftext|> <|source|> Get the number of \"use\" statements in all PHP files, ordered <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the current working directory of the current working directory. <|target|> ls -l -1 -u -f File File        | grep Regex          | grep Regex   "
    },
    {
      "source": "Finds file 'Subscription.java' and changes to containing folder.",
      "target": "cd $( find Path -name Regex | xargs -I {} dirname {} )",
      "prediction": "<|endoftext|> <|source|> Finds file 'Subscription.java' and changes to containing folder. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|source|> Find all files in the current directory recursively that are larger than 10 megabytes and display their sizes in the format '%T+%T+%T+%T+%T+%T+%T+%T+%T+"
    },
    {
      "source": "Enables 'nullglob' shell option.",
      "target": "shopt -s nullglob",
      "prediction": "<|endoftext|> <|source|> Enables 'nullglob' shell option. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long list of the top 10 most common files in the current directory tree. <|target|> find Path -type f -exec ls -l {} \\;   | sort | xargs -I {} ls -l {}   | grep -v Regex |"
    },
    {
      "source": "Find all .java files whose name contains \"Message\"",
      "target": "find Path -print | grep Regex",
      "prediction": "<|endoftext|> <|source|> Find all.java files whose name contains \"Message\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the top 10 most used files in the home directory.\n <|source|> find Path -type f -name Regex -exec ls -l {} \\; | sort -u | awk Program           "
    },
    {
      "source": "Move all files from the `sourceDir' directory tree to the `destDir' directory",
      "target": "find Path -mindepth Quantity -exec mv {} --target-directory Directory \\;",
      "prediction": "<|endoftext|> <|source|> Move all files from the `sourceDir' directory tree to the `destDir' directory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the latest and greatest files in the current directory tree. <|target|> find Path -type f -exec ls -l {} \\;                        "
    },
    {
      "source": "Search for first match of the case insensitive regex 'oyss' in all *.txt files under current directory and print the file paths along with the matches",
      "target": "find Path -name Regex | xargs -I {} grep -m Quantity -r -i Regex {}",
      "prediction": "<|endoftext|> <|source|> Search for first match of the case insensitive regex 'oyss' in all *.txt files under current directory and print the file paths along with the matches <|target|> find Path -type f -name Regex -exec grep -i -l Regex {} \\;     | grep -v Regex                            "
    },
    {
      "source": "Find all PHP files under current directory that contain only one line",
      "target": "find Path -type f -name Regex -exec wc -l {} \\; | grep -E Regex",
      "prediction": "<|endoftext|> <|source|> Find all PHP files under current directory that contain only one line <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A man who was found guilty of shoplifting $1,000 from a shop in the name of a local shop owner has been found in a case of shoplifting.\n <|source|> Find all files under current directory and print the names of the files that were accessed in the last"
    },
    {
      "source": "list all *.txt files in the user's home directory.",
      "target": "find Path -name Regex",
      "prediction": "<|endoftext|> <|source|> list all *.txt files in the user's home directory. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new file in the home directory tree contains the names of all the files in the current directory tree that are newer than the file \"file\" and do not search in the sub directories of the current directory. <|target|> find Path -newer File -print0 | xargs"
    },
    {
      "source": "Replace the first occurrence of \"foo\" with \"bar\" on every line in .txt files from the current directory tree",
      "target": "find Path -type f -name Regex | xargs --replace Regex -I {} sed --in-place Regex Program {}",
      "prediction": "<|endoftext|> <|source|> Replace the first occurrence of \"foo\" with \"bar\" on every line in.txt files from the current directory tree <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file is a part of the \"new\" directory tree. <|source|> Find all files in the current directory and change their permission to 755 <|target|> find Path -type f -exec chmod Permission {} \\;   "
    },
    {
      "source": "Print the full path of command \"cc\"",
      "target": "which Regex",
      "prediction": "<|endoftext|> <|source|> Print the full path of command \"cc\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of the regular files to be accessed by users in the current directory tree, and which are not accessed by anyone, are the first of the regular files to be accessed by users in the current directory tree. <|target|> find Path -type f -"
    },
    {
      "source": "Write contents of \"/sys/kernel/debug/tracing/trace_pipe\" to standard output and to \"tracelog.txt\" executing as a root user",
      "target": "cat File | tee File",
      "prediction": "<|endoftext|> <|source|> Write contents of \"/sys/kernel/debug/tracing/trace_pipe\" to standard output and to \"tracelog.txt\" executing as a root user <|target|> cat File | tee File                                                 "
    },
    {
      "source": "Recursively finds all 'STATUS.txt' files containing text 'OPEN' and prints containing folder of them.",
      "target": "find Path -type f -name Regex -exec grep -q Regex {} \\; -exec dirname {} \\;",
      "prediction": "<|endoftext|> <|source|> Recursively finds all 'STATUS.txt' files containing text 'OPEN' and prints containing folder of them. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long list of the top 10 most used CMS files in the current directory tree. <|source|> find Path -type f -exec ls -l {} \\; | sort -n -r | head - Quantity       "
    },
    {
      "source": "Compress the file 'file' with 'bzip2' and append all output to the file 'logfile' and stdout",
      "target": "bzip2 File | tee -a File",
      "prediction": "<|endoftext|> <|source|> Compress the file 'file' with 'bzip2' and append all output to the file 'logfile' and stdout <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of the many jobs that are not jobs in the current directory tree, but are in the current directory. <|source|> find Path -type f -exec bzip2 {} \\;             "
    },
    {
      "source": "Search PATH for utilities called \"rename\", display the type of file (script, executable, ...) for each match found.",
      "target": "which -a Regex | xargs -I {} file -L {}",
      "prediction": "<|endoftext|> <|source|> Search PATH for utilities called \"rename\", display the type of file (script, executable,...) for each match found. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the latest and greatest files from the current directory tree. <|source|> find Path -type f -name Regex -exec ls -l -s {} \\; | awk Program         "
    },
    {
      "source": "Search the current directory tree for files whose names begin with \"my\" and end with \"p\" followed by any character",
      "target": "find Path -regex Regex",
      "prediction": "<|endoftext|> <|source|> Search the current directory tree for files whose names begin with \"my\" and end with \"p\" followed by any character <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and change their permission to 755 <|target|> find Path -type f -exec chmod Permission {} \\;              "
    },
    {
      "source": "Find files newer than start.txt but not newer than end.txt",
      "target": "find Path -newer File -and ! -newer File",
      "prediction": "<|endoftext|> <|source|> Find files newer than start.txt but not newer than end.txt <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long list of all the files in the current directory tree that are not owned by the user or are not owned by the user. <|target|> find Path -user Regex -not -user Regex -not -user Regex -not"
    },
    {
      "source": "Display all symlinks and their targets in the current directory tree",
      "target": "find -P Path -type l -exec echo -n Regex \\; -exec readlink {} \\;",
      "prediction": "<|endoftext|> <|source|> Display all symlinks and their targets in the current directory tree <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>\nSearch for 'pattern' in all files under current directory and show the matched lines with the matched lines in the output.\n <|target|> find Path -type f -exec grep -i -l Regex {} \\; | grep -l Regex"
    },
    {
      "source": "Find all the *.txt files in the current directory older than 48 hours",
      "target": "find Path -maxdepth Quantity -name Regex -mtime +Timespan",
      "prediction": "<|endoftext|> <|source|> Find all the *.txt files in the current directory older than 48 hours <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the top 10 most used files in the current directory tree.\n <|target|> find Path -type f -name Regex -ls  | xargs -I {} ls -l {}    | sort -u "
    },
    {
      "source": "get the root user access",
      "target": "su",
      "prediction": "<|endoftext|> <|source|> get the root user access <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>Finds a common directory in the current directory and prints the directory name.\n <|target|> find Path -type d -exec basename {} \\;      | grep Regex     "
    },
    {
      "source": "display all files in the current folder which end with extension \"myfile\" followed by one digit or two digits",
      "target": "find Path \\( -name Regex -or -name Regex \\)",
      "prediction": "<|endoftext|> <|source|> display all files in the current folder which end with extension \"myfile\" followed by one digit or two digits <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the latest and greatest files from the current directory tree. <|target|> find Path -type f -name Regex -exec ls -l {} \\; | awk Program    "
    },
    {
      "source": "List the files in \"archive.tar.gz\"",
      "target": "gzip -l Regex",
      "prediction": "<|endoftext|> <|source|> List the files in \"archive.tar.gz\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file is a part of the current directory, and is used to create a directory named \"test\" in the current directory.\n <|target|> find Path -name Regex -execdir ls -l -d {}"
    },
    {
      "source": "Create directorie(s) 'some/path' as required in the current directory",
      "target": "mkdir -p Directory",
      "prediction": "<|endoftext|> <|source|> Create directorie(s)'some/path' as required in the current directory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of many jobs to be created by the user 'jk' in the current directory tree is the one that contains the first two lines of the output of the command'mkdir' and'mkdir' <|target"
    },
    {
      "source": "find all the files in the folder /home which are exactly of size 10MB",
      "target": "find Path -size Size",
      "prediction": "<|endoftext|> <|source|> find all the files in the folder /home which are exactly of size 10MB <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are not owned by the user'sir' or are not owned by the user'sir' or are not owned by the user'sire'"
    },
    {
      "source": "find all the perl files in the current folder and search for a pattern",
      "target": "find Path -name Regex | xargs -I {} grep -L Regex {}",
      "prediction": "<|endoftext|> <|source|> find all the perl files in the current folder and search for a pattern <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory and below. <|target|> find Path -type f -exec ls -l -r -s {} \\;    | grep -v Regex"
    },
    {
      "source": "Recursively copy /path/foo on host \"prod\" to local directory \"/home/user/Desktop\", connecting as ssh username corresponding to local username.",
      "target": "scp -r File File",
      "prediction": "<|endoftext|> <|source|> Recursively copy /path/foo on host \"prod\" to local directory \"/home/user/Desktop\", connecting as ssh username corresponding to local username. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are not owned by the user \"jk\" or have not been modified in the last 60*24 hours. <|source|> find Path -user"
    },
    {
      "source": "Move \"tobecopied/tobeexclude\" to \"tobeexclude\"",
      "target": "mv File File",
      "prediction": "<|endoftext|> <|source|> Move \"tobecopied/tobeexclude\" to \"tobeexclude\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|source|> Print the first line of output from standard input and the second line of output from the command line <|target|> cat File | xargs -I {} echo Regex | cut -d Regex -"
    },
    {
      "source": "Find all files/directories with 'my key phrase' in their names under current directory",
      "target": "find Path -name Regex",
      "prediction": "<|endoftext|> <|source|> Find all files/directories with'my key phrase' in their names under current directory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|source|> Find all files/directories under current directory and print their paths and sizes <|target|> find Path -name Regex -print0 | xargs -0 -I {} echo Regex Regex"
    },
    {
      "source": "Delete all regular files that start with 'sess_' in their names, are at least 1 level deep and were modified more than $gc_maxlifetime minutes ago under $save_path directory tree",
      "target": "find Path Path -depth -mindepth Quantity -name Regex -ignore_readdir_race -type f -cmin Quantity -delete",
      "prediction": "<|endoftext|> <|source|> Delete all regular files that start with'sess_' in their names, are at least 1 level deep and were modified more than $gc_maxlifetime minutes ago under $save_path directory tree <|target|> find Path -type f -name Regex -mmin +Quantity -delete  -type f -name Regex -mmin +Quantity -print | xargs -I {} rm {}        "
    },
    {
      "source": "Move \"file.txt\" to docker container \"$COUNTAINER_ID\" in path \"/var/lib/docker/aufs/mnt/$CONTAINER_ID/rootfs/root/file.txt\"",
      "target": "mv -f File File",
      "prediction": "<|endoftext|> <|source|> Move \"file.txt\" to docker container \"$COUNTAINER_ID\" in path \"/var/lib/docker/aufs/mnt/$CONTAINER_ID/rootfs/root/file.txt\" <|target|> mv File File                                      "
    },
    {
      "source": "Count all the lines of all '*.c' files in current directory recursively",
      "target": "find Path -name Regex -print0 | xargs -0 -I {} cat {} | wc -l",
      "prediction": "<|endoftext|> <|source|> Count all the lines of all '*.c' files in current directory recursively <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file is a long listing of files with names like 'file' and 'file' in their names. <|source|> Find all the files in the current directory and search for 'file' in"
    },
    {
      "source": "Prints long listing of content in a root folder, including hidden files, with human-readable sizes, and stores output to '/root/test.out' file.",
      "target": "echo Regex | bash",
      "prediction": "<|endoftext|> <|source|> Prints long listing of content in a root folder, including hidden files, with human-readable sizes, and stores output to '/root/test.out' file. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the latest regular files from the current directory tree, showing progress of the files.\n <|target|> find Path -type f -exec ls -l -r -d"
    },
    {
      "source": "Recursively change owner to \"amzadm\" and group to \"root\" of all files in \"/usr/lib/python2.6/site-packages/\"",
      "target": "chown Regex -R File",
      "prediction": "<|endoftext|> <|source|> Recursively change owner to \"amzadm\" and group to \"root\" of all files in \"/usr/lib/python2.6/site-packages/\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are larger than 100MB. <|source|> find Path -size +Size -exec ls -l {} \\;  "
    },
    {
      "source": "Check if \"\\[$VLABEL\\]\" is mounted and save the result in variable \"AMV\"",
      "target": "mount -l | grep Regex",
      "prediction": "<|endoftext|> <|source|> Check if \"\\[$VLABEL\\]\" is mounted and save the result in variable \"AMV\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the files in the current directory tree that are not owned by the user. This list is not a directory tree of user or group, it is a list of files in the current"
    },
    {
      "source": "Finds pattern text ignoring letter case in all .js files, prints matched strings and name of file with that strings.",
      "target": "find Path -name Regex -exec grep -i Regex {} \\; -print",
      "prediction": "<|endoftext|> <|source|> Finds pattern text ignoring letter case in all.js files, prints matched strings and name of file with that strings. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory which are not owned by the user \"user\" and do not belong to any other user. <|target|> find Path -user Re"
    },
    {
      "source": "Prints total count of lines of all *.php files in a current folder and subfolders.",
      "target": "find Path -name Regex -type f -exec cat -- {} + | wc -l",
      "prediction": "<|endoftext|> <|source|> Prints total count of lines of all *.php files in a current folder and subfolders. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are not owned by the user or group of which user is logged in. <|target|> find Path -user Regex -"
    },
    {
      "source": "Print the current directory name without full path",
      "target": "echo Regex | sed Program",
      "prediction": "<|endoftext|> <|source|> Print the current directory name without full path <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>\nSearch for the word \"test\" in all the regular files in the current directory tree and display the matched lines with their names.\n <|target|> find Path -type f -print0 |"
    },
    {
      "source": "Find all *.c files under and below the current directory that contain \"wait_event_interruptible\"",
      "target": "find Path -name Regex -print | xargs -I {} grep Regex File {}",
      "prediction": "<|endoftext|> <|source|> Find all *.c files under and below the current directory that contain \"wait_event_interruptible\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>Name:\n <|source|> Find all files/directories under /home/user/path/to/files/ and below that have not been modified in the last 30 days <|target|"
    },
    {
      "source": "Find files containing string \"#!/bin/ksh\" and append their names and matching strings to /tmp/allfiles",
      "target": "find Path -type f -execdir grep -i -H Regex {} \\; | tee File",
      "prediction": "<|endoftext|> <|source|> Find files containing string \"#!/bin/ksh\" and append their names and matching strings to /tmp/allfiles <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the current working directory of the current working directory. <|target|> ls -l -d -a -r -n -e -n File | grep Regex |"
    },
    {
      "source": "Print information of the root mount point",
      "target": "mount -v | grep Regex",
      "prediction": "<|endoftext|> <|source|> Print information of the root mount point <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file is a bit more than 1 minute long.\n <|target|> find Path -mmin -Quantity -type f -printf \"%h/%p\\n\" | awk Program      | grep Regex          "
    },
    {
      "source": "Search /path/to/your/directory for *.avi and *.flv files",
      "target": "find Path -regex Regex",
      "prediction": "<|endoftext|> <|source|> Search /path/to/your/directory for *.avi and *.flv files <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files under current directory and change their permission to 755 <|target|> find Path -type f -exec chmod Permission {} \\;                       "
    },
    {
      "source": "Source \"lib/B\" relative to the directory of the executing shell script, will fail if currently running script is not in PATH.",
      "target": "source $( dirname $( which Regex ) )",
      "prediction": "<|endoftext|> <|source|> Source \"lib/B\" relative to the directory of the executing shell script, will fail if currently running script is not in PATH. <|target|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and print their names <|target|> find Path -name Regex -print0 | xargs -0 -I {} echo {}                  "
    },
    {
      "source": "Print a count of each unique line from standard input sorted from least frequent to most frequent",
      "target": "sort | uniq -c | sort -n",
      "prediction": "<|endoftext|> <|source|> Print a count of each unique line from standard input sorted from least frequent to most frequent <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the files in the current directory tree that were modified more than 7 days ago.\n <|source|> find Path -type f -mtime +Timespan -exec ls -l {} \\;        | sort    "
    },
    {
      "source": "search for soft links in current folder and display those links which are not pointed to files in current folder",
      "target": "find Path -type l -exec readlink -f {} \\; | grep -v $( readlink -f File )",
      "prediction": "<|endoftext|> <|source|> search for soft links in current folder and display those links which are not pointed to files in current folder <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files in the current directory and its subdirectories that are bigger than 100 megabytes and have not been modified in the last 60 minutes <|target|> find Path -mtime +Timespan -type f -size +Size -exec ls -l {}"
    },
    {
      "source": "Remove files from the home directory tree that were last accessed more than 100 days ago",
      "target": "find Path -atime +Timespan -delete",
      "prediction": "<|endoftext|> <|source|> Remove files from the home directory tree that were last accessed more than 100 days ago <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long list of the most used files in the current directory tree. <|source|> find Path -type f -name Regex -ls | xargs -I {} ls -l {} | sort | uniq             |"
    },
    {
      "source": "Find all aliencoders.[0-9]+ files under /home/jassi/ directory",
      "target": "find Path -type f -name Regex",
      "prediction": "<|endoftext|> <|source|> Find all aliencoders.[0-9]+ files under /home/jassi/ directory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are larger than 100MB. <|target|> find Path -type f -size +Size -exec ls -l -s {} \\;   | grep Regex | xargs -I {} ls -l"
    },
    {
      "source": "Processes all files recursively in /var/spool/cron/tabs folder and filters out all strings with '#'.",
      "target": "grep -v Regex -R File",
      "prediction": "<|endoftext|> <|source|> Processes all files recursively in /var/spool/cron/tabs folder and filters out all strings with '#'. <|target|> find Path -type f -exec grep -i Regex {} \\;                                             "
    },
    {
      "source": "Print lines in \"file1.txt\" that do not exist in \"file2.txt\"",
      "target": "sort <( sort -u File ) File File | uniq -u",
      "prediction": "<|endoftext|> <|source|> Print lines in \"file1.txt\" that do not exist in \"file2.txt\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and print their names and sizes <|target|> find Path -type f -exec ls -l {} \\;   | awk Program                "
    },
    {
      "source": "display all the regular files in current folder that belong to the user \"tom\"",
      "target": "find Path -type f -user Regex",
      "prediction": "<|endoftext|> <|source|> display all the regular files in current folder that belong to the user \"tom\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long list of all the files in the current directory tree that are not owned by the user \"jk\" and are not newer than the file \"file\" <|target|> find Path -user Regex -not -newer File -exec ls -l {} \\;"
    },
    {
      "source": "Move all directories in the current directory tree that have been modified in the last day to \"/path/to/target-dir\"",
      "target": "find Path -type d -mtime -Timespan -print0 | xargs -0 -I {} mv -t Directory {}",
      "prediction": "<|endoftext|> <|source|> Move all directories in the current directory tree that have been modified in the last day to \"/path/to/target-dir\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long and detailed list of all the files in the current directory tree that are modified more than 7 days ago. <|target|> find Path -mtime +Timespan -exec ls -l {} \\;          "
    },
    {
      "source": "Rename \"www_new\" to \"www\" even if \"www\" directory exists",
      "target": "mv -T File File",
      "prediction": "<|endoftext|> <|source|> Rename \"www_new\" to \"www\" even if \"www\" directory exists <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|source|> Find all files under current directory and print the lines matching \"file_name\" in those files <|target|> find Path -type f -exec echo {} \\;     | grep Regex        "
    },
    {
      "source": "Search the current directory tree for symbolic links to files matching pattern '*/test*'",
      "target": "find -P Path -lname Regex",
      "prediction": "<|endoftext|> <|source|> Search the current directory tree for symbolic links to files matching pattern '*/test*' <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file is a long listing of the latest and greatest files in the current directory tree. <|source|> find Path -type f -name Regex -exec ls -l -a -v -h {} \\;     | grep -v Regex"
    },
    {
      "source": "Print the current date followed by ' doing stuff'",
      "target": "echo $( date ) Regex Regex",
      "prediction": "<|endoftext|> <|source|> Print the current date followed by'doing stuff' <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>\nThis is a long listing of the files in the current directory tree that are not in the current directory.\n <|target|> find Path -name Regex -exec ls -l -s {} \\;            "
    },
    {
      "source": "Read a line from standard input with prompt \"Are you alright? (y/n) \" and save the response to variable \"RESP\"",
      "target": "read -p Regex Regex",
      "prediction": "<|endoftext|> <|source|> Read a line from standard input with prompt \"Are you alright? (y/n) \" and save the response to variable \"RESP\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>\"I have a question about the use of the word 'blunder' in the current user's home directory. <|target|> grep -q Regex | xargs -I {} echo Regex Regex {}          "
    },
    {
      "source": "create a symbolic link named \"/usr/bin/my-editor\" to file \"/usr/share/my-ditor/my-editor-executable\"",
      "target": "ln -s File Regex",
      "prediction": "<|endoftext|> <|source|> create a symbolic link named \"/usr/bin/my-editor\" to file \"/usr/share/my-ditor/my-editor-executable\" <|target|> ln -s -f File Regex                                               "
    },
    {
      "source": "Find all empty directories in the current one and delete them",
      "target": "find Path -type d -maxdepth Quantity -empty -print0 | xargs -0 -I {} rmdir {}",
      "prediction": "<|endoftext|> <|source|> Find all empty directories in the current one and delete them <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file is a long listing of the latest modified files from the current directory tree.\n <|source|> find Path -type f -exec ls -l {} \\; | sed Program | xargs -0 -I {} rm {}       "
    },
    {
      "source": "search for all the regular/normal files  in the /etc folder which have been modified in the last 24 hours",
      "target": "find Path -type f -mtime -Timespan",
      "prediction": "<|endoftext|> <|source|> search for all the regular/normal files  in the /etc folder which have been modified in the last 24 hours <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the files in the current directory tree that are newer than \"file\" and do not show the newer ones <|target|> find Path -type f -newer File -print0 | xargs -0 -I {} ls -l {}"
    },
    {
      "source": "Print the last mounted drive",
      "target": "mount | tail - Quantity | sed Program",
      "prediction": "<|endoftext|> <|source|> Print the last mounted drive <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file contains a list of all files in the current directory tree that are not owned by any user.\n <|target|> find Path -user Regex -name Regex -exec ls -l {} \\;     | tail -n Quantity  "
    },
    {
      "source": "Find all *.c files under /home",
      "target": "find Path -name Regex",
      "prediction": "<|endoftext|> <|source|> Find all *.c files under /home <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file is a part of the current directory, and not the current directory.\n <|source|> find Path -name Regex -exec echo Regex Regex \\;                   "
    },
    {
      "source": "Find all file in current directory with have .c extenstion & have 777 permission . delete then",
      "target": "find Path -name Regex -and -perm -Permission | xargs -I {} rm -r -f {}",
      "prediction": "<|endoftext|> <|source|> Find all file in current directory with have.c extenstion & have 777 permission. delete then <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are owned by user \"jul\" <|source|> find Path -user Regex -exec ls -l {} \\;         | grep Regex     "
    },
    {
      "source": "Remove \"\\r\" at the end of each line in \"infile\" and display the result as printable characters or backslash escapes",
      "target": "cat File | sed Program | od -c",
      "prediction": "<|endoftext|> <|source|> Remove \"\\r\" at the end of each line in \"infile\" and display the result as printable characters or backslash escapes <|target|><|endoftext|><|endoftext|> <|source|> Prints long listing of all files in a current folder. <|target|> ls -l File | awk Program        | grep Regex            | cut -d Regex -"
    },
    {
      "source": "Search the path given as the $absolute_dir_path variable for regular files",
      "target": "find Path -type f -print0",
      "prediction": "<|endoftext|> <|source|> Search the path given as the $absolute_dir_path variable for regular files <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the latest modified files in the current directory tree.\n <|source|> find Path -type f -name Regex -exec ls -l {} \\;        | grep -v Regex      | head"
    },
    {
      "source": "Send SIGHUP (hangup) signal to nginx master process, causing it to re-read its configuration and restart child processes if necessary.",
      "target": "kill - Regex $( cat File )",
      "prediction": "<|endoftext|> <|source|> Send SIGHUP (hangup) signal to nginx master process, causing it to re-read its configuration and restart child processes if necessary. <|target|> kill - Regex Regex                                                     "
    },
    {
      "source": "find all PDFs owned by user \u201cseamstress\u201d",
      "target": "find Path -user Regex -iname Regex",
      "prediction": "<|endoftext|> <|source|> find all PDFs owned by user \u201cseamstress\u201d <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file is a list of all the files in the current directory tree that are not owned by the user 'tom' or 'tom' or 'tom' or 'tom' or 'tom' or 'tom' or 'tom' or 'tom' or 'tom' or 'tom"
    },
    {
      "source": "Change to directory 'xyz' and resolve any symlinks in the resulting path, making the physical path the current one.",
      "target": "cd -P Directory",
      "prediction": "<|endoftext|> <|source|> Change to directory 'xyz' and resolve any symlinks in the resulting path, making the physical path the current one. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the latest files in the current directory tree, sorted by size. <|target|> find Path -type f -exec ls -l {} \\; | sort -n -r | xargs -I {} ls -l {}      "
    },
    {
      "source": "Find all files under the current directory whose filenames are not \"file.txt\", ignoring the case",
      "target": "find Path -maxdepth Quantity -not -iname Regex",
      "prediction": "<|endoftext|> <|source|> Find all files under the current directory whose filenames are not \"file.txt\", ignoring the case <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files in the current directory tree that are not readable by the user and do not search in the sub directories. <|target|> find Path -type f -not -user Regex -print0 | xargs -0 -I {} grep -i"
    },
    {
      "source": "Find all files under $x directory and set read-write permission for owner and group and no permission for other for those files",
      "target": "find Path -type f -exec chmod Permission {} \\;",
      "prediction": "<|endoftext|> <|source|> Find all files under $x directory and set read-write permission for owner and group and no permission for other for those files <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and set read permission for owner and group and no permission for other for those files/directories <|target|> find Path -type f -exec chmod Permission {} \\;       "
    },
    {
      "source": "Search the current directory tree for files whose name is \".note\", case insensitive",
      "target": "find Path -iname Regex | sort",
      "prediction": "<|endoftext|> <|source|> Search the current directory tree for files whose name is \".note\", case insensitive <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is the first in a series of regular columnist columnist columnistials from the columnist <|source|> recursively.\n <|target|> find Path -type f -iname Regex -exec grep -i Regex {} \\;    "
    },
    {
      "source": "Print newline, word, and byte counts of each '*.java' file within current directory, and total newline, word, and byte counts",
      "target": "find Path -name Regex | tr Regex Regex | xargs -0 -I {} wc {}",
      "prediction": "<|endoftext|> <|source|> Print newline, word, and byte counts of each '*.java' file within current directory, and total newline, word, and byte counts <|target|> find Path -name Regex -exec echo {} \\; | awk Program            | wc -l                           "
    },
    {
      "source": "Sets shell option 'nounset'.",
      "target": "shopt -s -o nounset",
      "prediction": "<|endoftext|> <|source|> Sets shell option 'nounset'. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>To find the latest file in the current directory tree, or to find the latest directory in the current directory tree, or to find the latest directory in the current directory tree, or to find the latest file in the current directory tree, or to"
    },
    {
      "source": "Find all *.[ch] files under current directory",
      "target": "find Path -name Regex",
      "prediction": "<|endoftext|> <|source|> Find all *.[ch] files under current directory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>\nSearch for the word \"test\" in all files under current directory and below. <|target|> find Path -type f -exec grep -E Regex {} + | xargs -I {} grep -i -l Regex"
    },
    {
      "source": "Find all regular files on the system whose names are 'myfile'",
      "target": "find Path -name Regex -type f -print",
      "prediction": "<|endoftext|> <|source|> Find all regular files on the system whose names are'myfile' <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are not modified in the last 24 hours. <|source|> find Path -type f -mtime +Timespan -mtime -Timespan -exec ls"
    },
    {
      "source": "List all files under the current working directory tree",
      "target": "find Path $( pwd ) -type f",
      "prediction": "<|endoftext|> <|source|> List all files under the current working directory tree <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file is a long listing of all the files in the current directory tree that are newer than the file 'file' and older than the file 'file' <|target|> find Path -newer File -type f -name Re"
    },
    {
      "source": "search for all the files in the current directory which have been modified in the last 24 hours.",
      "target": "find Path -mtime -Timespan",
      "prediction": "<|endoftext|> <|source|> search for all the files in the current directory which have been modified in the last 24 hours. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new and unique set of data files from the current directory tree are available for the first time users to download.\n <|target|> find Path -type f -mtime +Timespan -print0 | xargs -0 -"
    },
    {
      "source": "Find all *.py files/directories under current directory",
      "target": "find Path -name Regex",
      "prediction": "<|endoftext|> <|source|> Find all *.py files/directories under current directory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and change their permission to 755. <|target|> find Path -name Regex -exec chmod Permission {} +        "
    },
    {
      "source": "Force create a symbolc link named \"/usr/local/bin/fpdf\" to \"/usr/local/bin/findpdftext\"",
      "target": "ln -s -f File Regex",
      "prediction": "<|endoftext|> <|source|> Force create a symbolc link named \"/usr/local/bin/fpdf\" to \"/usr/local/bin/findpdftext\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are not owned by the user \"jk\" <|target|> find Path -user Regex -not -user Regex -print0 | xargs -"
    },
    {
      "source": "Find all the files which are modified in last 1 hour in entire file system",
      "target": "find Path -mmin -Quantity",
      "prediction": "<|endoftext|> <|source|> Find all the files which are modified in last 1 hour in entire file system <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|source|> Find all files under current directory and change their permission to 755 <|target|> find Path -type f -mtime Timespan -exec chmod Permission {} \\;       "
    },
    {
      "source": "search for a shell script in the current folder and display the current folder path but search from the sub directories",
      "target": "find Path -name Regex -execdir pwd \\;",
      "prediction": "<|endoftext|> <|source|> search for a shell script in the current folder and display the current folder path but search from the sub directories <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long list of all the files in the current directory tree that are not modified in the last 24 hours. <|source|> find Path -mtime +Timespan -print0 | xargs -0 -I {} ls"
    },
    {
      "source": "Find files matching pattern $2 in the $1 directory recursively and search them for text $3, where $1, $2, $3 are the command line arguments to the Bash script",
      "target": "find Path -path Regex -prune -or -name Regex -print -exec grep -H -n Regex {} \\;",
      "prediction": "<|endoftext|> <|source|> Find files matching pattern $2 in the $1 directory recursively and search them for text $3, where $1, $2, $3 are the command line arguments to the Bash script <|target|> find Path -name Regex -exec grep -i Regex {} \\;                                 "
    },
    {
      "source": "Find all files/directories with '.log' extension that belong to the group 'adm' under '/var/log' directory tree",
      "target": "find Path -group Regex -name Regex",
      "prediction": "<|endoftext|> <|source|> Find all files/directories with '.log' extension that belong to the group 'adm' under '/var/log' directory tree <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A long-running search for a cure for the common cold has been found in the last two weeks.\n <|source|> find Path -type f -iname Regex -exec grep -i Regex {} \\"
    },
    {
      "source": "delete all the files in the current folder which end with \".bak\" or \".backup\" and which have not been accessed in the last 30 days",
      "target": "find Path \\( -name Regex -or -name Regex \\) -type f -atime +Timespan -exec rm {} \\;",
      "prediction": "<|endoftext|> <|source|> delete all the files in the current folder which end with \".bak\" or \".backup\" and which have not been accessed in the last 30 days <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the files in the current directory tree that were modified more than 7 days ago. <|target|> find Path -mtime +Timespan -exec rm {} \\;     "
    },
    {
      "source": "Print the path of all the network mounts",
      "target": "mount | sed -n -e Program",
      "prediction": "<|endoftext|> <|source|> Print the path of all the network mounts <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>\nThis is a long listing of all the files in the current directory tree that are newer than the file \"~/.mov\" than the file \"~/.mov\" <|target|> find Path -type f"
    },
    {
      "source": "find all text files in user/directory/ which have been modified today and display the last line of these files",
      "target": "find Path -name Regex -mtime Timespan -type f -printf '%p: ' -exec tail - Quantity {} \\;",
      "prediction": "<|endoftext|> <|source|> find all text files in user/directory/ which have been modified today and display the last line of these files <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the latest version of the regular files in the current directory tree. This file is not a directory, it is a file named \"file\" in the current directory. <|target|> find Path"
    },
    {
      "source": "Verbosely compresses all files on fifth and sixth depth level keeping original files in place.",
      "target": "bzip2 -k -v File",
      "prediction": "<|endoftext|> <|source|> Verbosely compresses all files on fifth and sixth depth level keeping original files in place. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file contains the names of all the users who have been logged in to the last time. <|target|> find Path -type f -iname Regex -printf \"%Tm %f\\n\" | sort"
    },
    {
      "source": "Use the first non-zero exit code (if any) of a set of piped commands as the exit code of the full set of commands",
      "target": "set -o pipefail",
      "prediction": "<|endoftext|> <|source|> Use the first non-zero exit code (if any) of a set of piped commands as the exit code of the full set of commands <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first word of every word in \"file\" is the first line of every file in the current directory tree. <|target|> find Path -name Regex -exec sed -i -i -n Program {} \\"
    },
    {
      "source": "Prints all child processes of a process with id 20238.",
      "target": "pstree -p Regex | sed Program | grep Regex | sed Program",
      "prediction": "<|endoftext|> <|source|> Prints all child processes of a process with id 20238. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file is a part of the current directory tree and contains the directory name of the current directory.\n <|target|> find Path -name Regex -exec dirname {} \\;       "
    },
    {
      "source": "Split \"/usr/bin/firefox\" into 1000 files of about equal size",
      "target": "split -n Quantity File",
      "prediction": "<|endoftext|> <|source|> Split \"/usr/bin/firefox\" into 1000 files of about equal size <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file is a part of the GNU Compiler Archive. <|target|> find Path -name Regex -exec echo Regex Regex \\;              "
    },
    {
      "source": "Set the executable bit for all users on all regular files from directories arch/x86/usr/sbin, arch/x86/usr/X11R6/bin, usr/sbin/",
      "target": "find Path Path Path -type f | xargs -I {} chmod Permission {}",
      "prediction": "<|endoftext|> <|source|> Set the executable bit for all users on all regular files from directories arch/x86/usr/sbin, arch/x86/usr/X11R6/bin, usr/sbin/ <|target|> find Path -type f -exec chmod Permission {} \\;                                "
    },
    {
      "source": "find all the files in the entire file system which belong to the group \"staff\"",
      "target": "find Path -group Regex -print",
      "prediction": "<|endoftext|> <|source|> find all the files in the entire file system which belong to the group \"staff\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file is a list of all the files in the current directory tree that are owned by user \"user\" and have not been modified in the last 24 hours.\n <|target|> find Path -user Regex -"
    },
    {
      "source": "find all the html files in the current folder and replace the end of each line with a pattern",
      "target": "find Path -type f -name Regex | xargs -I {} sed -i Program {}",
      "prediction": "<|endoftext|> <|source|> find all the html files in the current folder and replace the end of each line with a pattern <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the latest release of the \"Linux kernel\" from the kernel release.\n <|target|> find Path -name Regex -printf \"%h\\n\" | sort | uniq -c | tail -n Quantity | sort | uniq -c | sort -"
    },
    {
      "source": "search for all the files in current folder and display all the file names separated by space",
      "target": "find Path | awk Program",
      "prediction": "<|endoftext|> <|source|> search for all the files in current folder and display all the file names separated by space <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long list of all the files in the current directory tree that are not owned by the user \"myusername\" and do not search in the sub directories <|target|> find Path -not -user Regex -exec ls -l {} \\;     | grep Re"
    },
    {
      "source": "Replace all newlines from the contents of \"file\" except the last with spaces",
      "target": "sed Program File",
      "prediction": "<|endoftext|> <|source|> Replace all newlines from the contents of \"file\" except the last with spaces <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|source|> Find all files/directories under current directory and print their names <|target|> find Path -exec echo Regex {} \\;                            "
    },
    {
      "source": "Find all .gz archives in the current directory tree and check if they are valid",
      "target": "find Path -name Regex -exec gunzip {} \\;",
      "prediction": "<|endoftext|> <|source|> Find all.gz archives in the current directory tree and check if they are valid <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and print the names of them <|target|> find Path -name Regex -print0 | xargs -0 -I {} dirname {}                "
    },
    {
      "source": "find all files in the current folder which are bigger than 10bytes",
      "target": "find Path -size +Size -print",
      "prediction": "<|endoftext|> <|source|> find all files in the current folder which are bigger than 10bytes <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new file named 'file.txt' is found in the current directory and prints the path of the file.txt.\n <|target|> find Path -name Regex -or -name Regex -print0 | xargs -0 -I {} dirname {}    "
    },
    {
      "source": "display the count of number html files in the current folder",
      "target": "find Path -name Regex -print | xargs -l -i -I {} wc {} {}",
      "prediction": "<|endoftext|> <|source|> display the count of number html files in the current folder <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are modified within the last 24 hours. <|source|> find Path -mtime Timespan -type f -exec ls -l {} \\;    | grep -E -n | grep -E -n"
    },
    {
      "source": "find and image in current folder (case insensitive search)",
      "target": "find Path -iname Regex",
      "prediction": "<|endoftext|> <|source|> find and image in current folder (case insensitive search) <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the latest and greatest files in the current directory tree. <|source|> find Path -type f -exec ls -l -a -l {} \\;  | sort -n | uniq -c        | sort -n -"
    },
    {
      "source": "Find all files/directories under current directory tree whose names start with 'test' followed by two digits and end with '.txt' extension",
      "target": "find Path -regextype sed -regex Regex",
      "prediction": "<|endoftext|> <|source|> Find all files/directories under current directory tree whose names start with 'test' followed by two digits and end with '.txt' extension <|target|> find Path -name Regex -print0 | xargs -0 -I {} ls -l {}                                        "
    },
    {
      "source": "change the ownership of all directories in the current folder",
      "target": "find Path -type d -exec chown Regex {} \\;",
      "prediction": "<|endoftext|> <|source|> change the ownership of all directories in the current folder <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are newer than the file \"file_name\" <|target|> find Path -type f -newer File -print0 | xargs -0 -I {} ls -l {}      | grep"
    },
    {
      "source": "Change ownership of \"/data/db\" to the current user",
      "target": "chown $( whoami ) File",
      "prediction": "<|endoftext|> <|source|> Change ownership of \"/data/db\" to the current user <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long and detailed look at the history of the first human-readable file in the current directory tree. <|source|> find Path -type f -name Regex -exec ls -l -t {} \\;     | grep Regex      "
    },
    {
      "source": "Get a detailed list of all files on the system larger than 10MB",
      "target": "find Path -size +Size -printf \"%12s %t %h/%fn\"",
      "prediction": "<|endoftext|> <|source|> Get a detailed list of all files on the system larger than 10MB <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>From the beginning of the year 2000 onwards, the current directory tree is the current directory. <|target|> find Path -type d -exec ls -l {} \\;                  "
    },
    {
      "source": "Remove the last two alphanumeric file extensions from \"mpc-1.0.1.tar.gz\"",
      "target": "echo Regex | sed -r Program",
      "prediction": "<|endoftext|> <|source|> Remove the last two alphanumeric file extensions from \"mpc-1.0.1.tar.gz\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and print the names of them <|target|> find Path -name Regex -exec rm -f {} \\;               "
    },
    {
      "source": "display all the home folder which end with the extension \"sxw\" and which have been accessed in the last 3*24 hours and which belong to the user bruno",
      "target": "find Path -type f -name Regex -atime -Timespan -user Regex",
      "prediction": "<|endoftext|> <|source|> display all the home folder which end with the extension \"sxw\" and which have been accessed in the last 3*24 hours and which belong to the user bruno <|target|> find Path -name Regex -atime +Timespan -and -name Regex -atime -Timespan -print                            "
    },
    {
      "source": "Find all the files which are accessed in last 1 hour in entire file system",
      "target": "find Path -amin -Quantity",
      "prediction": "<|endoftext|> <|source|> Find all the files which are accessed in last 1 hour in entire file system <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>Find all files/directories under current directory and print the names of the files/directories that were modified in the last 24 hours.\n <|target|> find Path -mtime Timespan -exec ls -l -t {} \\;   "
    },
    {
      "source": "Find all *.sql file that are not newer than  $oldest_to_keep excluding the  $oldest_to_keep file",
      "target": "find Path -name Regex -not -samefile Regex -not -newer File",
      "prediction": "<|endoftext|> <|source|> Find all *.sql file that are not newer than  $oldest_to_keep excluding the  $oldest_to_keep file <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the latest modified files in the current directory tree. <|source|> find Path -type f -name Regex -exec ls -l {} \\;                "
    },
    {
      "source": "execute command \"who\" when key \"\\eW\" is pressed",
      "target": "bind -x Regex",
      "prediction": "<|endoftext|> <|source|> execute command \"who\" when key \"\\eW\" is pressed <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are newer than the file \"file\" and do not show the newer ones.\n <|source|> find Path -type f -newermt Regex! -newermt Re"
    },
    {
      "source": "Print unique lines in sorted \"file1\" compared to sorted file \"file2\"",
      "target": "comm -2 -3 File File",
      "prediction": "<|endoftext|> <|source|> Print unique lines in sorted \"file1\" compared to sorted file \"file2\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the latest modified kernel release for the current kernel.\n <|target|> find Path -type f -name Regex -exec ls -l {} \\; | sort | uniq -c | sort -n | head - Quantity"
    }
  ],
  "4.0": [
    {
      "source": "display all the html files in the current folder excluding search in the path ./foo",
      "target": "find Path -path Regex -prune -or -type f -name Regex",
      "prediction": "<|endoftext|> <|source|> display all the html files in the current folder excluding search in the path./foo <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all the files/directories under current directory and print their names and sizes <|target|> find Path -name Regex -exec basename {} \\;       | grep -v Regex    "
    },
    {
      "source": "Read a line from standard input into variable \"response\" ignoring backslash escapes and using the prompt \"${1:-Are you sure? [y/N]} \"",
      "target": "read -r -p Regex Regex",
      "prediction": "<|endoftext|> <|source|> Read a line from standard input into variable \"response\" ignoring backslash escapes and using the prompt \"${1:-Are you sure? [y/N]} \" <|target|> read -r -p Regex                                                "
    },
    {
      "source": "Finds strings with dot-separated sequence of numbers, and prints part of that sequence before the first dot.",
      "target": "echo Regex | grep -E -o Regex | cut -d Regex -f Number",
      "prediction": "<|endoftext|> <|source|> Finds strings with dot-separated sequence of numbers, and prints part of that sequence before the first dot. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are not newer than the file $1.txt. <|source|> find Path -newer File -print         | grep -E Regex  "
    },
    {
      "source": "Compare files in \"/tmp/dir1\" and \"/tmp/dir2\", treating absent files as empty and all files as text",
      "target": "diff -N -a -r File File",
      "prediction": "<|endoftext|> <|source|> Compare files in \"/tmp/dir1\" and \"/tmp/dir2\", treating absent files as empty and all files as text <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Search the current directory tree for files whose names begin with \"~\" and end with \"~\" <|target|> find Path -name Regex -type f -print0 | xargs -0 -I {} ls -l {} "
    },
    {
      "source": "display all symbolic links in current folder",
      "target": "find Path -lname Regex",
      "prediction": "<|endoftext|> <|source|> display all symbolic links in current folder <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Print the names of all users who are logged in to the system <|target|> find Path -type f -name Regex -exec echo {} \\;    | tr Regex Regex        "
    },
    {
      "source": "List the files from the current directory tree that contain lines matching regular expression '^From:.*unique sender', ignoring ~/src and ~/bin",
      "target": "find Path -name Regex -prune -or -name Regex -prune -or -type f -print | xargs -I {} grep -E -i -l Regex {}",
      "prediction": "<|endoftext|> <|source|> List the files from the current directory tree that contain lines matching regular expression '^From:.*unique sender', ignoring ~/src and ~/bin <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and print the names of the files/directories that contain the string'myfile' <|target|> find Path -name Regex -print0 | xargs -0 -I {} grep"
    },
    {
      "source": "Print common lines of files \"file1\", \"file2\", \"file3\", and \"file4\"",
      "target": "comm -1 -2 <( comm -1 -2 <( comm -1 -2 <( sort File ) <( sort File ) ) <( sort File ) ) <( sort File )",
      "prediction": "<|endoftext|> <|source|> Print common lines of files \"file1\", \"file2\", \"file3\", and \"file4\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are owned by user \"user\" <|target|> find Path -user Regex -exec ls -l {} \\;      | grep Regex     "
    },
    {
      "source": "Remount \"/home/evgeny\" with the \"suid\" flag set",
      "target": "mount Regex -o remount,suid Regex",
      "prediction": "<|endoftext|> <|source|> Remount \"/home/evgeny\" with the \"suid\" flag set <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>Search for the regex 'foo' in all files under current directory and print the matched lines along with their names and sizes. <|target|> find Path -type f -exec grep -i Regex {} \\; -exec sed -i Regex {} \\;"
    },
    {
      "source": "Show the last 10 .conf files found by `find' in the /etc directory",
      "target": "find Path -maxdepth Quantity -name Regex | tail",
      "prediction": "<|endoftext|> <|source|> Show the last 10.conf files found by `find' in the /etc directory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|source|> Print the names of all files in the current directory tree that match the regex '^[0-9]+*[0-9]+*[0-9]+*[0-9]+*[0-9]+*' <|"
    },
    {
      "source": "display all the files on the current folder excluding those that are present in the folder \"./src/emacs\"",
      "target": "find Path -path Regex -prune -or -print",
      "prediction": "<|endoftext|> <|source|> display all the files on the current folder excluding those that are present in the folder \"./src/emacs\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are newer than the file \"file_new_file\" <|target|> find Path -newer File -exec ls -l {} \\;         "
    },
    {
      "source": "search for all the regular/normal mp3 files in the file system and move them to the folder /mnt/mp3",
      "target": "find Path -iname Regex -type f -print0 | xargs -0 -I {} mv {} File",
      "prediction": "<|endoftext|> <|source|> search for all the regular/normal mp3 files in the file system and move them to the folder /mnt/mp3 <|target|><|endoftext|> <|source|> find all the files in the current folder which have been modified in the last 24 hours <|target|> find Path -mtime -Timespan -type f -name Regex -print0 | xargs -0 -I {} mv {} File     "
    },
    {
      "source": "find all files in the home folder which are modified in the last 2 days.",
      "target": "find Path -type f -mtime -Timespan",
      "prediction": "<|endoftext|> <|source|> find all files in the home folder which are modified in the last 2 days. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file system is a large file system with many users, and the user's name is the first field of each file. <|target|> find Path -type f -user Regex -execdir echo {} \\;            | awk Program "
    },
    {
      "source": "Find *.conf files/directories only upto 1 level down under /etc directory and show a few lines of output from the end",
      "target": "find Path -maxdepth Quantity -name Regex | tail",
      "prediction": "<|endoftext|> <|source|> Find *.conf files/directories only upto 1 level down under /etc directory and show a few lines of output from the end <|target|> find Path -maxdepth Quantity -name Regex -exec sed -i Program {} \\;       | tail -n Quantity                                "
    },
    {
      "source": "Find all files owned by the user daniel in the current directory and below.",
      "target": "find Path -user Regex",
      "prediction": "<|endoftext|> <|source|> Find all files owned by the user daniel in the current directory and below. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are not newer than the file 'file' <|target|> find Path -newer File -type f -print0 | xargs -0 -I {} ls -l {}  | grep -v Regex | x"
    },
    {
      "source": "count all the html files having a specifc word in a folder.",
      "target": "find Path -name Regex -exec grep -l Regex {} \\; | wc -l",
      "prediction": "<|endoftext|> <|source|> count all the html files having a specifc word in a folder. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new file named \"file\" is found in the /home/user/dir directory and is used to create a symbolic link to it. <|target|> find Path -name Regex -exec ln -s {} File \\;            "
    },
    {
      "source": "List all cron jobs which contain \"word\".",
      "target": "crontab -l | grep -E Regex",
      "prediction": "<|endoftext|> <|source|> List all cron jobs which contain \"word\". <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are not newer than the file $1.txt and are not newer than the file $2.txt. <|target|> find Path -type f -newermt Regex! -newermt Regex! -"
    },
    {
      "source": "long list al the files in the current directory which have read permission to the group",
      "target": "find Path -perm -Permission -type f -exec ls -l {} \\;",
      "prediction": "<|endoftext|> <|source|> long list al the files in the current directory which have read permission to the group <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|source|> Find all files/directories under current directory and print their paths and sizes <|target|> find Path -name Regex -printf \"%h\\n\" | sort -u     | head -n Quantity           "
    },
    {
      "source": "Display all lines containing \"IP_MROUTE\" in the current kernel's compile-time config file.",
      "target": "cat $( uname -r ) | grep Regex",
      "prediction": "<|endoftext|> <|source|> Display all lines containing \"IP_MROUTE\" in the current kernel's compile-time config file. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory tree that are owned by user 'user' <|target|> find Path -user Regex -exec grep -i Regex {} \\;                  "
    },
    {
      "source": "Remove all regular non-hidden files modified more than 7 days ago and residing in the /tmp directory tree",
      "target": "find Path -type f -name Regex -mtime +Timespan -print0 | xargs -0 -I {} rm -f {}",
      "prediction": "<|endoftext|> <|source|> Remove all regular non-hidden files modified more than 7 days ago and residing in the /tmp directory tree <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|source|> Find all files/directories under current directory tree that are owned by user 'username' <|target|> find Path -user Regex -type f -user Regex                   "
    },
    {
      "source": "Unzip every \".gz\" file in the current directory tree",
      "target": "find Path -name Regex -exec gunzip {} \\;",
      "prediction": "<|endoftext|> <|source|> Unzip every \".gz\" file in the current directory tree <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are owned by the user \"user\" and do not belong to the user \"other\" or any other user. <|target|> find Path -user Regex -type f -user Regex -exec ls -l {}"
    },
    {
      "source": "change permission of all the files in the entire file system which have the permissions 777.",
      "target": "find Path -type f -perm Permission -print -exec chmod Permission {} \\;",
      "prediction": "<|endoftext|> <|source|> change permission of all the files in the entire file system which have the permissions 777. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and print their names and paths <|target|> find Path -type f -exec chmod Permission {} \\;        | grep -v Regex             "
    },
    {
      "source": "Prints information about active network interfaces in system.",
      "target": "echo $( ifconfig )",
      "prediction": "<|endoftext|> <|source|> Prints information about active network interfaces in system. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the latest release of the \"Linux\" kernel.\n <|source|> find Path -name Regex -type f -exec ls -l {} \\;    | tail -n Quantity          | awk Program     "
    },
    {
      "source": "find all the reguar/normal php files in current directory.",
      "target": "find Path -type f -name Regex",
      "prediction": "<|endoftext|> <|source|> find all the reguar/normal php files in current directory. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all the files in the current directory and its sub-directories that are not readable by the user and do not have the permission given to the user by the file or directory. <|target|> find Path -type f -perm Permission -print       "
    },
    {
      "source": "search  in root  ( / ) directory downwards all files which have less than 2 links.",
      "target": "find Path -links -Quantity -print",
      "prediction": "<|endoftext|> <|source|> search  in root  ( / ) directory downwards all files which have less than 2 links. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and print the names of the files/directories that match the regex '^[0-9]*' <|target|> find Path -name Regex -exec grep -l Regex {} \\;     | grep -"
    },
    {
      "source": "Find all files/directories under current directory",
      "target": "find Path -print0 | xargs -0",
      "prediction": "<|endoftext|> <|source|> Find all files/directories under current directory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new file named 'file' is created every minute. <|source|> find Path -type f -print0 | xargs -0 -I {} file {} | xargs -0 -I {} file {}                    "
    },
    {
      "source": "display all regular/normal files in the folder \"dir\" and display the filename along with file size",
      "target": "find Path -type f -printf \"f %s %p\\n\"",
      "prediction": "<|endoftext|> <|source|> display all regular/normal files in the folder \"dir\" and display the filename along with file size <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and print the file name <|target|> find Path -type f -exec echo {} \\;                              "
    },
    {
      "source": "find regular file named foo.txt under root / directory.",
      "target": "find Path -name Regex -type f -print",
      "prediction": "<|endoftext|> <|source|> find regular file named foo.txt under root / directory. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|source|> Search for 'foo' in all regular files under current directory and print the matched lines matching with the regex 'foo' in each of them. <|target|> find Path -type f -exec grep -i -l Regex {} \\;   | grep -E -"
    },
    {
      "source": "Evaluate the output of recursively changing the owner and group of \"/data/*\" to \"mongodb\"",
      "target": "$( chown -R Regex File )",
      "prediction": "<|endoftext|> <|source|> Evaluate the output of recursively changing the owner and group of \"/data/*\" to \"mongodb\" <|target|> chown -R Regex File                                                          "
    },
    {
      "source": "find all files  that names are 'apt'",
      "target": "find Path -name Regex",
      "prediction": "<|endoftext|> <|source|> find all files  that names are 'apt' <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long list of all the files in the current directory tree that are not owned by user \"user\" and do not have the permission to be accessed by anyone. <|source|> find Path -nouser -or -type f -perm Permission -exec ls -l {} \\;  "
    },
    {
      "source": "Print a sorted list of *.so files in the bla directory tree",
      "target": "find Path -name Regex -print0 | sort -r -z",
      "prediction": "<|endoftext|> <|source|> Print a sorted list of *.so files in the bla directory tree <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and print their names and paths <|target|> find Path -exec echo {} \\;                                "
    },
    {
      "source": "Find all .core files on the system starting from / and delete them",
      "target": "find Path -name Regex | xargs -I {} rm {}",
      "prediction": "<|endoftext|> <|source|> Find all.core files on the system starting from / and delete them <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are owned by user \"jul\" and have not been accessed in the last 30 days.\n <|target|> find Path -user Regex -atime +Timespan -exec ls -l {} \\;    "
    },
    {
      "source": "Find all files/directories that start with 'screen' (case insensitive) in their names under user's home directory tree",
      "target": "find Path -iname Regex",
      "prediction": "<|endoftext|> <|source|> Find all files/directories that start with'screen' (case insensitive) in their names under user's home directory tree <|target|> find Path -iname Regex                                                         "
    },
    {
      "source": "Print characters 2 through 4 of \"abcdefg\"",
      "target": "echo Regex | tail -c +Quantity | head -c Quantity",
      "prediction": "<|endoftext|> <|source|> Print characters 2 through 4 of \"abcdefg\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and print their names <|target|> find Path -name Regex -print0 | xargs -0 -I {} echo {}                      "
    },
    {
      "source": "Find files/directories under /users/tom that matches both the pattern \"*.pl\" and  \"*.pm\"",
      "target": "find Path -name Regex -name Regex",
      "prediction": "<|endoftext|> <|source|> Find files/directories under /users/tom that matches both the pattern \"*.pl\" and  \"*.pm\" <|target|> find Path -name Regex -print0 | xargs -0 -I {} grep -l Regex {}                                         "
    },
    {
      "source": "forcibly create a symbolic link named \"linkname\" to file \"new_destination\"",
      "target": "ln -s -f File Regex",
      "prediction": "<|endoftext|> <|source|> forcibly create a symbolic link named \"linkname\" to file \"new_destination\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|target|> Find all files/directories under current directory and print them with the file name of the current user. <|target|> find Path -user Regex -execdir echo {} \\;                  "
    },
    {
      "source": "Report file systems disk usage using POSIX output format.",
      "target": "df -P",
      "prediction": "<|endoftext|> <|source|> Report file systems disk usage using POSIX output format. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|source|> Find all files under /home/myfiles/ directory and print their names and sizes. <|target|> find Path -type f -exec ls -l {} \\;    | awk Program            | sort |"
    },
    {
      "source": "Compress every file in the current directory tree with gzip and keep file extensions the same",
      "target": "find Path -type f -exec gzip -9 {} \\; -exec mv File {} \\;",
      "prediction": "<|endoftext|> <|source|> Compress every file in the current directory tree with gzip and keep file extensions the same <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Search for the regex 'pattern' in all files under current directory tree and display the matched lines along with their names. <|target|> find Path -type f -exec grep -i Regex {} \\; -print0 | xargs -0 -I {} grep -l Re"
    },
    {
      "source": "Find all *.csv files under /foo/bar and move them to some_dir",
      "target": "find Path -name Regex -print0 | xargs -0 -I {} mv -t Directory {}",
      "prediction": "<|endoftext|> <|source|> Find all *.csv files under /foo/bar and move them to some_dir <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory <|target|> find Path -type f -name Regex -exec mv {} File \\;                            "
    },
    {
      "source": "Check if a drive is mounted to nfs",
      "target": "mount | grep Regex",
      "prediction": "<|endoftext|> <|source|> Check if a drive is mounted to nfs <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the files in the current directory tree that are newer than the file $1.txt in the current directory tree. <|target|> find Path -newer File -type f -print0 | xargs -0 -I {} ls -l {}   | grep -v"
    },
    {
      "source": "display all the files in the folder \"/dev\" which belong to the user \"peter\"",
      "target": "find Path -user Regex | more",
      "prediction": "<|endoftext|> <|source|> display all the files in the folder \"/dev\" which belong to the user \"peter\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all the files in the current directory tree that are modified in less than 5 minutes ago <|target|> find Path -mmin -Quantity -mmin -Quantity                        "
    },
    {
      "source": "Move all directories from the `sourceDir' directory tree to the `destDir' directory",
      "target": "find Path -mindepth Quantity -type d -exec mv -t Directory {} +",
      "prediction": "<|endoftext|> <|source|> Move all directories from the `sourceDir' directory tree to the `destDir' directory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Print the first 10 lines of a file 'file' in a current folder. <|target|> find Path -name Regex | xargs -I {} echo Regex {}  | awk Program     | sort | uniq -"
    },
    {
      "source": "Search the files residing in the current directory tree whose names contain \"bills\" for \"put\"",
      "target": "find Path -name Regex -print0 | xargs -0 -I {} grep Regex {}",
      "prediction": "<|endoftext|> <|source|> Search the files residing in the current directory tree whose names contain \"bills\" for \"put\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new and unique way to create a symbolic link to the current directory in the current directory. <|target|> ln -s -f $( pwd ) Regex                     "
    },
    {
      "source": "Print a colon-separated list of all directories from the ~/code directory tree, except hidden ones and those below them",
      "target": "find Path -type d | sed Program | tr Regex Regex | sed Program",
      "prediction": "<|endoftext|> <|source|> Print a colon-separated list of all directories from the ~/code directory tree, except hidden ones and those below them <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Search for all files/directories with the name \"foo\" in their names and copy them to /tmp/foo/bar <|target|> find Path -name Regex -exec cp File {} \\;    | grep -v Re"
    },
    {
      "source": "Remove all *.tmp files from the /tmp directory tree",
      "target": "find Path -name Regex -print0 | xargs -0 -I {} rm {}",
      "prediction": "<|endoftext|> <|source|> Remove all *.tmp files from the /tmp directory tree <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file is a part of the current directory tree. It contains the current directory and all files in it. <|target|> find Path -type f -execdir dirname {} \\;                 "
    },
    {
      "source": "Find all regular files under $d directory tree and change their permissions to 777",
      "target": "find Path -type f -print0 | xargs -0 -I {} chmod Permission {}",
      "prediction": "<|endoftext|> <|source|> Find all regular files under $d directory tree and change their permissions to 777 <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file is a subset of the file 'file', which is a file with at most 10 lines each. <|target|> find Path -type f -exec ls -l {} \\;   | grep -E -o Regex      | sort"
    },
    {
      "source": "Replace newline with \"_\" in \"file\" then search for \"_foo_\" and output with \"_\" characters deleted",
      "target": "grep -o Regex <( paste -s -d Regex File ) | tr -d Regex",
      "prediction": "<|endoftext|> <|source|> Replace newline with \"_\" in \"file\" then search for \"_foo_\" and output with \"_\" characters deleted <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files under /path/to/search/ and print their names and sizes <|target|> find Path -type f -exec sed -i Program {} \\;      | awk Program       "
    },
    {
      "source": "Find all directories under ${1:-.} directory without descending into any sub-directories",
      "target": "find Path -mindepth Quantity -maxdepth Quantity -type d",
      "prediction": "<|endoftext|> <|source|> Find all directories under ${1:-.} directory without descending into any sub-directories <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file is a copy of the file 'file' in the current directory tree. <|source|> find Path -type f -name Regex -exec cp {} File \\;      | grep -v Regex        "
    },
    {
      "source": "Print only name and login columns of the currently logged in users",
      "target": "finger -s | awk Program",
      "prediction": "<|endoftext|> <|source|> Print only name and login columns of the currently logged in users <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file contains all files in the current directory tree that are not owned by user 'user' and are not owned by the user 'other' <|target|> find Path -not -user Regex -not -user Regex -not -user Regex -not -"
    },
    {
      "source": "Prints all NS servers of domain google.com.",
      "target": "dig Regex Regex | awk Program",
      "prediction": "<|endoftext|> <|source|> Prints all NS servers of domain google.com. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new file named \"fileName\" is created every minute and every two minutes. <|target|> find Path -name Regex -print0 | xargs -I {} echo Regex {}                "
    },
    {
      "source": "Copy \"source\" recursively to \"destination\" excluding \"path1/to/exclude\" and \"path2/to/exclude\"",
      "target": "rsync -a -v --exclude Regex --exclude Regex File File",
      "prediction": "<|endoftext|> <|source|> Copy \"source\" recursively to \"destination\" excluding \"path1/to/exclude\" and \"path2/to/exclude\" <|target|> rsync -r -r -v File File File                                              "
    },
    {
      "source": "Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.",
      "target": "sort File | uniq | cut -f Number -d Regex | uniq -c | rev",
      "prediction": "<|endoftext|> <|source|> Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and print the names of the files/directories that contain the string'subdomain' <|target|> find Path -name Regex -exec grep -i Regex {} \\;  "
    },
    {
      "source": "list PID of a group leader",
      "target": "jobs -l -p",
      "prediction": "<|endoftext|> <|source|> list PID of a group leader <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>\nSearch for a word in all files under current directory and print the matched lines in the output. <|target|> find Path -name Regex -exec grep -i Regex {} \\; -print     | grep -E -v Regex"
    },
    {
      "source": "Search for files/directories with the case insensitive pattern anaconda.* in var/log directory and create an archive (file.tar) of all the files found",
      "target": "find Path -iname Regex -exec tar -r -v -f File {} \\;",
      "prediction": "<|endoftext|> <|source|> Search for files/directories with the case insensitive pattern anaconda.* in var/log directory and create an archive (file.tar) of all the files found <|target|> find Path -iname Regex -exec tar -c -v -f File {} \\;                                   "
    },
    {
      "source": "Copy all .txt files from the dir/ directory tree along with their parent directories hierarchy",
      "target": "find Path -name Regex | xargs -I {} cp -a --target-directory Directory --parents {}",
      "prediction": "<|endoftext|> <|source|> Copy all.txt files from the dir/ directory tree along with their parent directories hierarchy <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long list of all the files in the current directory tree that are not in the directory tree \"test\" and do not have the extension \"test\" <|target|> find Path -name Regex -type f -not -name Regex -exec"
    },
    {
      "source": "Find all foo.mp4 files in the current directory tree and print the pathnames of their parent directories",
      "target": "find Path -name Regex -printf '%h\\n'",
      "prediction": "<|endoftext|> <|source|> Find all foo.mp4 files in the current directory tree and print the pathnames of their parent directories <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are newer than the file /tmp/foo.mp4.txt and newer than the file /tmp/foo.txt. <|target|> find Path -newer File -print0"
    },
    {
      "source": "Display non-hidden files in the current directory with the given output format",
      "target": "find Path -maxdepth Quantity -name Regex -printf 'Name: %16f Size: %6s\\n'",
      "prediction": "<|endoftext|> <|source|> Display non-hidden files in the current directory with the given output format <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory tree that are owned by user 'user' <|target|> find Path -user Regex -exec grep -i -l Regex {} \\;         |"
    },
    {
      "source": "Find all files/directories under current directory with null character as the delimiter",
      "target": "find Path -print0",
      "prediction": "<|endoftext|> <|source|> Find all files/directories under current directory with null character as the delimiter <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Print the names of all files/directories under current directory and their sizes <|target|> find Path -type f -exec basename {} \\;  | awk Program             "
    },
    {
      "source": "Numberically sort content of file 'files', using for sorting part of second one of dash separated fields beginning from second letter.",
      "target": "cat File | sort -t Regex -k Number -n",
      "prediction": "<|endoftext|> <|source|> Numberically sort content of file 'files', using for sorting part of second one of dash separated fields beginning from second letter. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are owned by the user \"user\" <|target|> find Path -user Regex -exec ls -l -r -t {} \\;    | sort -n -r"
    },
    {
      "source": "Find recursively the files named \"file\" in the current directory ignoring the .git subdirectory",
      "target": "find Path -path Regex -prune -or -name Regex -print",
      "prediction": "<|endoftext|> <|source|> Find recursively the files named \"file\" in the current directory ignoring the.git subdirectory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and print the names of the files/directories with the name \"foo\" <|target|> find Path -name Regex -exec echo Regex \\;     | awk"
    },
    {
      "source": "Find all .java files starting from the current folder",
      "target": "find Path -name Regex",
      "prediction": "<|endoftext|> <|source|> Find all.java files starting from the current folder <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file is a part of the current directory. <|target|> find Path -type f -name Regex -exec ls -l {} \\;   | grep -E -v Regex         | awk Program "
    },
    {
      "source": "Remove the file with inode number 752010",
      "target": "find Path -inum Quantity -exec rm {} \\;",
      "prediction": "<|endoftext|> <|source|> Remove the file with inode number 752010 <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The current version of Windows has a number of hidden directories and subdirectories, which are called \"subdirectories\" or \"subdirectory\" in the name. <|target|> find Path -type d -name Regex -execdir rename Regex {} \\;      "
    },
    {
      "source": "Find all files/directories named 'Desktop' under current directory",
      "target": "find Path -name Regex",
      "prediction": "<|endoftext|> <|source|> Find all files/directories named 'Desktop' under current directory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Search for the first line of the regex 'foo' in all files under current directory and print the matched lines along with their names <|target|> find Path -type f -exec grep -i Regex {} \\; -print  | xargs -0 -I {}"
    },
    {
      "source": "delete recursively, without prompting, any files or directories under the current directory that case insensitively match the filename \".svn\"",
      "target": "find Path -iname Regex -exec rm -r -f {} \\;",
      "prediction": "<|endoftext|> <|source|> delete recursively, without prompting, any files or directories under the current directory that case insensitively match the filename \".svn\" <|target|> find Path -type f -iname Regex -exec rm -f {} \\;                                            "
    },
    {
      "source": "Print the input \"hello world\" to the console followed by a swap of the first two awk fields",
      "target": "echo Regex Regex | tee File | awk Program",
      "prediction": "<|endoftext|> <|source|> Print the input \"hello world\" to the console followed by a swap of the first two awk fields <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and print their names <|target|> find Path -name Regex -exec echo Regex {} \\;                         "
    },
    {
      "source": "Filter contents of 'file' through awk commands written in script.awk, display the result.",
      "target": "awk -f File Program",
      "prediction": "<|endoftext|> <|source|> Filter contents of 'file' through awk commands written in script.awk, display the result. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of the seven largest files in the current directory tree is a directory named \"file\" <|target|> find Path -type f -name Regex -execdir dirname {} \\;      rename Regex             "
    },
    {
      "source": "delete all the normal/regular files in the current folder",
      "target": "find Path -type f -print -delete",
      "prediction": "<|endoftext|> <|source|> delete all the normal/regular files in the current folder <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file is a copy of the current directory tree, and contains all files in the current directory. <|target|> find Path -type f -print0 | xargs -0 -I {} ls -l {} | grep Regex | xargs -I {} rm {}     "
    },
    {
      "source": "Search the current directory tree for all files except SVN ones",
      "target": "find Path | grep -v Regex",
      "prediction": "<|endoftext|> <|source|> Search the current directory tree for all files except SVN ones <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long and detailed list of all files in the current directory tree that are owned by the user'my_user' and have not been modified in the last 30 days. <|target|> find Path -user Regex -type f -mtime +Timespan -exec ls -l"
    },
    {
      "source": "Find all files residing in /home/dm/Video or below that were last changed at least 10 days ago",
      "target": "find Path -mtime +Timespan",
      "prediction": "<|endoftext|> <|source|> Find all files residing in /home/dm/Video or below that were last changed at least 10 days ago <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and change their permission to 755 <|target|> find Path -type d -exec chmod Permission {} \\;                      "
    },
    {
      "source": "Find all files/directories that are not newer than Jul 01 by modification time",
      "target": "find Path ! -newermt Regex",
      "prediction": "<|endoftext|> <|source|> Find all files/directories that are not newer than Jul 01 by modification time <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and set their permission to 755 <|target|> find Path -type f -newermt Regex! -newermt Regex! -newermt Regex           "
    },
    {
      "source": "Find all *.txt files/directories under current directory",
      "target": "find Path -name Regex",
      "prediction": "<|endoftext|> <|source|> Find all *.txt files/directories under current directory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and print them with spaces in their names <|target|> find Path -name Regex -exec echo Regex \\; -print                    "
    },
    {
      "source": "Change the ownership of all files in the current directory tree from root to www-data",
      "target": "find Path -user Regex -exec chown Regex {} \\;",
      "prediction": "<|endoftext|> <|source|> Change the ownership of all files in the current directory tree from root to www-data <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree. <|target|> find Path -type f -exec ls -l {} \\;         | awk Program    "
    },
    {
      "source": "Find all files/directories named 'query' under current directory tree",
      "target": "find Path -name Regex",
      "prediction": "<|endoftext|> <|source|> Find all files/directories named 'query' under current directory tree <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file is a part of the current directory, and not the last one. <|target|> find Path -type f -name Regex -execdir rename Regex {} \\;          "
    },
    {
      "source": "search for text files in the current folder which have write access to others",
      "target": "find Path -type f \\( -iname Regex -and -perm -Permission \\)",
      "prediction": "<|endoftext|> <|source|> search for text files in the current folder which have write access to others <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the largest files in the current directory tree. <|target|> find Path -type f -exec ls -l -s {} \\;  | awk Program     | sort | uniq"
    },
    {
      "source": "Change every file under \"/var/www/html/\" to have permissions 664",
      "target": "find Path -type f -exec chmod Permission {} \\;",
      "prediction": "<|endoftext|> <|source|> Change every file under \"/var/www/html/\" to have permissions 664 <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are owned by the user \"jul\" and have not been accessed in the last 30 days. <|target|> find Path -user Regex -atime"
    },
    {
      "source": "Infinitely print \"1\" then \"0\"",
      "target": "yes Regex | sed Program",
      "prediction": "<|endoftext|> <|source|> Infinitely print \"1\" then \"0\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>\nThe most common question in the world is \"Are you sure?\"\n <|target|> yes | head -n Quantity | awk Program                   "
    },
    {
      "source": "List the current directory recursively ignoring ./src/emacs/ and all its contents",
      "target": "find Path -path Regex -prune -or -print",
      "prediction": "<|endoftext|> <|source|> List the current directory recursively ignoring./src/emacs/ and all its contents <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A long list of the top 10 most used utilities in the current directory tree is a list of the top 10 most used utilities. <|source|> find Path -type f -name Regex -exec ls -l {} \\; |"
    },
    {
      "source": "Remount \"extX\" filesystem \"/dev/hdaX\" on \"/\" without writing in \"/etc/mtab\"",
      "target": "mount -n -o remount -t extX Regex Regex",
      "prediction": "<|endoftext|> <|source|> Remount \"extX\" filesystem \"/dev/hdaX\" on \"/\" without writing in \"/etc/mtab\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and print their names and sizes <|target|> find Path -type f -print0 | xargs -0 -I {} ls -l {} | awk Program"
    },
    {
      "source": "create a zip of log files in the current directory which have not been accessed in the last 3 days (-p is for parallel processing for a 4 cpu machine, -n is for maximum work units)",
      "target": "find Path -name Regex -mtime +Timespan -print0 | xargs -0 -n Quantity -P Quantity -I {} bzip2 {}",
      "prediction": "<|endoftext|> <|source|> create a zip of log files in the current directory which have not been accessed in the last 3 days (-p is for parallel processing for a 4 cpu machine, -n is for maximum work units) <|target|> find Path -type f -atime +Timespan -exec zcat {} \\;                               "
    },
    {
      "source": "Numerically sort standard input by the second word of each line",
      "target": "sort -n -k Number",
      "prediction": "<|endoftext|> <|source|> Numerically sort standard input by the second word of each line <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file is a bit hard to read. <|source|> find Path -type f -name Regex -exec sort -u {} File | sort -u | cut -d Regex -f Number      "
    },
    {
      "source": "display a long listing of all the java files in the current folder in sorted order",
      "target": "find Path -type f -name Regex -ls | sort -k +Number -r",
      "prediction": "<|endoftext|> <|source|> display a long listing of all the java files in the current folder in sorted order <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|source|> Find all the files in the current directory tree that are less than 50 KM and have not been accessed in the last 30 days. <|target|> find Path -type f -atime -mtime -Times"
    },
    {
      "source": "Find all regular files that contain 'linux' (case insensitive) in their names under '/root' directory tree",
      "target": "find Path -type f -iname Regex",
      "prediction": "<|endoftext|> <|source|> Find all regular files that contain 'linux' (case insensitive) in their names under '/root' directory tree <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under /home/user/public_html/ directory and change their permission to 755 <|target|> find Path -type f -exec chmod Permission {} \\;             "
    },
    {
      "source": "Find all files under and below /dir that were changed or created less than 60 minutes ago",
      "target": "find Path -cmin -Quantity",
      "prediction": "<|endoftext|> <|source|> Find all files under and below /dir that were changed or created less than 60 minutes ago <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|source|> Find all files/directories under /dir/to/search/ that are newer than /dir/to/search/ by modification time <|target|> find Path -newer File -print        -newer File  "
    },
    {
      "source": "Print the date formatted with \"%a %x %X\" followed by the host name",
      "target": "echo $( date +\"%a %x %X\" ) $( hostname )",
      "prediction": "<|endoftext|> <|source|> Print the date formatted with \"%a %x %X\" followed by the host name <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|source|source|> Find all files/directories under current directory and print their names and sizes <|target|> find Path -type f -name Regex -exec echo Regex {} \\;     | sort -n | uniq     | tail"
    },
    {
      "source": "Print the list of files in the home directory tree whose names begin with \"Foto\"",
      "target": "find Path -name Regex",
      "prediction": "<|endoftext|> <|source|> Print the list of files in the home directory tree whose names begin with \"Foto\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are newer than the file \"file.txt\" <|target|> find Path -newer File -name Regex -printf '%h\\n'      | sort -n | head - Quantity"
    },
    {
      "source": "Recursively removes all files like '_*' and '.DS_Store' from /var/www/html/ folder.",
      "target": "rm File File",
      "prediction": "<|endoftext|> <|source|> Recursively removes all files like '_*' and '.DS_Store' from /var/www/html/ folder. <|target|><|endoftext|> <|target|> find Path -name Regex -exec rm -r -f {} \\;                                        "
    },
    {
      "source": "Filters only directories from long file listing of the current directory.",
      "target": "ls -l | grep Regex",
      "prediction": "<|endoftext|> <|source|> Filters only directories from long file listing of the current directory. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file is a part of the current directory tree. <|source|> find Path -type d -name Regex -exec ls -l -t -r -n {} \\;                      "
    },
    {
      "source": "Find all the regular files under '/your/dir' directory tree which are bigger than 5 MB and display them in decreasing order of their sizes",
      "target": "find Path -type f -size +Size -exec du -h {} + | sort -h -r",
      "prediction": "<|endoftext|> <|source|> Find all the regular files under '/your/dir' directory tree which are bigger than 5 MB and display them in decreasing order of their sizes <|target|> find Path -type f -size +Size -exec ls -l -t {} \\;                                          "
    },
    {
      "source": "Prints line count of each file within current directory.",
      "target": "find Path -type f -print | xargs -L Quantity -I {} wc -l {}",
      "prediction": "<|endoftext|> <|source|> Prints line count of each file within current directory. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|source|source|> Print the current date and time for each day in the current month. <|target|> date -u -d Regex -d Regex                        "
    },
    {
      "source": "Reverse the text in $input by taking each 4 characters as each units and save the result in variable 'output'",
      "target": "echo Regex | fold -w Quantity | tac | tr -d Regex",
      "prediction": "<|endoftext|> <|source|> Reverse the text in $input by taking each 4 characters as each units and save the result in variable 'output' <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and print them with their contents. <|target|> find Path -name Regex -print0 | xargs -0 -I {} echo {}               | aw"
    },
    {
      "source": "Find the largest files in a particular location",
      "target": "find Path -type f -exec du -S -h {} + | sort -r -h | head -n Quantity",
      "prediction": "<|endoftext|> <|source|> Find the largest files in a particular location <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Print the list of all files in the current directory and its subdirectories <|target|> find Path -type f -exec ls -l -i {} \\;  | sort | uniq -c | sort -n  | head      |"
    },
    {
      "source": "List all regular files from the current directory tree that were modified less than 60 minutes ago",
      "target": "find Path -type f -mmin -Quantity -print0 | xargs -r -0 -I {} ls -l {}",
      "prediction": "<|endoftext|> <|source|> List all regular files from the current directory tree that were modified less than 60 minutes ago <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long and detailed list of all the files in the current directory tree that are not owned by the user 'user' and do not have the permission to run. <|target|> find Path -user Regex -perm -Permission -exec ls -"
    },
    {
      "source": "Show directory sizes in KB and sort to give the largest at the end",
      "target": "du -s -k $( find Path -type d ) | sort -n -k Number",
      "prediction": "<|endoftext|> <|source|> Show directory sizes in KB and sort to give the largest at the end <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Search for 'file' in all files under current directory and print the output. <|target|> find Path -type f -exec ls -l -t {} \\; | awk Program        | sort "
    },
    {
      "source": "List all regular files under current directory ensuring white space safety",
      "target": "find Path -type f -print0 | xargs -0 -n Quantity",
      "prediction": "<|endoftext|> <|source|> List all regular files under current directory ensuring white space safety <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>Find all the files in the current directory and below that have not been modified in the last 30 days.\n <|target|> find Path -type f -mtime +Timespan -exec ls -l -r -t {} \\;   | sort -"
    },
    {
      "source": "find all the files in current folder which have been updated in the last 60 minutes",
      "target": "find Path -mmin -Quantity",
      "prediction": "<|endoftext|> <|source|> find all the files in current folder which have been updated in the last 60 minutes <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|source|> Find all files under current directory and print their names and file type <|target|> find Path -type f -printf '%h/%p\\n'      | grep -E -v Regex "
    },
    {
      "source": "Copies all files like 'lib*.so' to '~/usr/gtest/lib/' directory.",
      "target": "cp File File",
      "prediction": "<|endoftext|> <|source|> Copies all files like 'lib*.so' to '~/usr/gtest/lib/' directory. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are not owned by the user \"jk\" and do not belong to the user \"jk\" <|target|> find Path -nogroup -not -user Regex -print"
    },
    {
      "source": "Copies defined file to the target folder without overwriting existing files.",
      "target": "cp -n",
      "prediction": "<|endoftext|> <|source|> Copies defined file to the target folder without overwriting existing files. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>Find all the files in the current directory and below that have been modified in the last 24 hours.\n <|target|> find Path -mtime -Timespan -type f -exec ls -l {} \\;          "
    },
    {
      "source": "display all the html files in the current folder that have been modified exactly 7*24 hours ago",
      "target": "find Path -mtime Timespan -name Regex -print",
      "prediction": "<|endoftext|> <|source|> display all the html files in the current folder that have been modified exactly 7*24 hours ago <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under /home/user/directory/ that are owned by user'myusername' and have not been accessed in over 90 days and delete them. <|target|> find Path -user Regex -atime"
    },
    {
      "source": "Look for regular files in the directory trees 'deferred', 'active', 'maildrop', 'incoming' under /var/spool/postfix/",
      "target": "find Path -type f",
      "prediction": "<|endoftext|> <|source|> Look for regular files in the directory trees 'deferred', 'active','maildrop', 'incoming' under /var/spool/postfix/ <|target|> find Path -type f -iname Regex -execdir grep -H -n Regex {} \\;                                "
    },
    {
      "source": "Search for 'some string' in all *js files under current directory and show the matched lines with line numbers",
      "target": "find Path -name Regex | grep -n Regex",
      "prediction": "<|endoftext|> <|source|> Search for'some string' in all *js files under current directory and show the matched lines with line numbers <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long list of all the files in the current directory tree that are not present in the directory tree \"./tmp/test/index.html\" <|target|> find Path -type f! -name Regex! -name Regex! -name"
    },
    {
      "source": "display all the files in the file system which belong to the group lighttpd",
      "target": "find Path -group Regex -print",
      "prediction": "<|endoftext|> <|source|> display all the files in the file system which belong to the group lighttpd <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|source|> Find all files/directories under current directory that are at least 2 levels deep and print the path names of them <|target|> find Path -mindepth Quantity -mindepth Quantity -type f -exec echo Regex Regex"
    },
    {
      "source": "Search directory lpi104-6 for files with inode number 1988884",
      "target": "find Path -inum Quantity",
      "prediction": "<|endoftext|> <|source|> Search directory lpi104-6 for files with inode number 1988884 <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|source|> Find all files/directories under current directory and print the path names of the directories they are in. <|target|> find Path -type f -exec basename {} \\;      | grep -i Regex     "
    },
    {
      "source": "Find files/directories under current directory that are modified exactly one hour ago",
      "target": "find Path -mtime Timespan",
      "prediction": "<|endoftext|> <|source|> Find files/directories under current directory that are modified exactly one hour ago <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory. <|target|> find Path -mmin Quantity -print0 | xargs -0 -I {} ls -l -r -t {}               "
    },
    {
      "source": "Get the number of \"use\" statements in all PHP files, ordered",
      "target": "find Path -type f -name Regex -exec grep --with-filename -c Regex {} \\; | sort -t Regex -k Number -n -r",
      "prediction": "<|endoftext|> <|source|> Get the number of \"use\" statements in all PHP files, ordered <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file is a part cubed file with a number in the name of the current directory. <|target|> find Path -type f -name Regex -exec nl -n -s {} \\;    | grep Regex        "
    },
    {
      "source": "Finds file 'Subscription.java' and changes to containing folder.",
      "target": "cd $( find Path -name Regex | xargs -I {} dirname {} )",
      "prediction": "<|endoftext|> <|source|> Finds file 'Subscription.java' and changes to containing folder. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new file system containing the current user's login name and the current user's group name.\n <|source|> find Path -user Regex -execdir basename {} \\;                    "
    },
    {
      "source": "Enables 'nullglob' shell option.",
      "target": "shopt -s nullglob",
      "prediction": "<|endoftext|> <|source|> Enables 'nullglob' shell option. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are not owned by the user or have not been modified in the last 30 days.\n <|source|> find Path -user Regex -mtime +Timespan -exec ls -l {} \\; "
    },
    {
      "source": "Find all .java files whose name contains \"Message\"",
      "target": "find Path -print | grep Regex",
      "prediction": "<|endoftext|> <|source|> Find all.java files whose name contains \"Message\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new file with the name \"file_name\" is a file with the name \"file_name\" in the current directory tree. <|target|> find Path -name Regex -exec file {} \\;     | grep Regex      "
    },
    {
      "source": "Move all files from the `sourceDir' directory tree to the `destDir' directory",
      "target": "find Path -mindepth Quantity -exec mv {} --target-directory Directory \\;",
      "prediction": "<|endoftext|> <|source|> Move all files from the `sourceDir' directory tree to the `destDir' directory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the latest and greatest files from the current directory tree. <|source|> find Path -type f -name Regex -exec ls -l {} \\;     | grep Regex  | sed Program        "
    },
    {
      "source": "Search for first match of the case insensitive regex 'oyss' in all *.txt files under current directory and print the file paths along with the matches",
      "target": "find Path -name Regex | xargs -I {} grep -m Quantity -r -i Regex {}",
      "prediction": "<|endoftext|> <|source|> Search for first match of the case insensitive regex 'oyss' in all *.txt files under current directory and print the file paths along with the matches <|target|> find Path -type f -name Regex | grep -E -o Regex | xargs -I {} grep -l Regex {}     | grep -E -o Regex       | xargs -I {} grep -l Regex {}"
    },
    {
      "source": "Find all PHP files under current directory that contain only one line",
      "target": "find Path -type f -name Regex -exec wc -l {} \\; | grep -E Regex",
      "prediction": "<|endoftext|> <|source|> Find all PHP files under current directory that contain only one line <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>Find all files/directories under current directory that are less than 50 bytes in size and delete them.\n <|target|> find Path -size -Size -exec rm -f {} \\;       -n -r -t {} \\;   "
    },
    {
      "source": "list all *.txt files in the user's home directory.",
      "target": "find Path -name Regex",
      "prediction": "<|endoftext|> <|source|> list all *.txt files in the user's home directory. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Search for the regex 'pattern' in all files under current directory and print the matched lines with the matched lines <|target|> find Path -type f -exec grep -i Regex {} \\;  | grep -i Regex     "
    },
    {
      "source": "Replace the first occurrence of \"foo\" with \"bar\" on every line in .txt files from the current directory tree",
      "target": "find Path -type f -name Regex | xargs --replace Regex -I {} sed --in-place Regex Program {}",
      "prediction": "<|endoftext|> <|source|> Replace the first occurrence of \"foo\" with \"bar\" on every line in.txt files from the current directory tree <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long one. <|source|> Find all files/directories under /home/user/projects directory <|target|> find Path -name Regex -exec echo Regex \\;      | awk Program  "
    },
    {
      "source": "Print the full path of command \"cc\"",
      "target": "which Regex",
      "prediction": "<|endoftext|> <|source|> Print the full path of command \"cc\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>Press \"ctrl\" to quit the shell and execute commands.\n <|target|> yes Regex | tee -a File           | tee -a File             "
    },
    {
      "source": "Write contents of \"/sys/kernel/debug/tracing/trace_pipe\" to standard output and to \"tracelog.txt\" executing as a root user",
      "target": "cat File | tee File",
      "prediction": "<|endoftext|> <|source|> Write contents of \"/sys/kernel/debug/tracing/trace_pipe\" to standard output and to \"tracelog.txt\" executing as a root user <|target|> tee File                                                    "
    },
    {
      "source": "Recursively finds all 'STATUS.txt' files containing text 'OPEN' and prints containing folder of them.",
      "target": "find Path -type f -name Regex -exec grep -q Regex {} \\; -exec dirname {} \\;",
      "prediction": "<|endoftext|> <|source|> Recursively finds all 'STATUS.txt' files containing text 'OPEN' and prints containing folder of them. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Prints calendar of the current month. <|target|> cal -h | awk Program      | sort | uniq      | sort | uniq         |"
    },
    {
      "source": "Compress the file 'file' with 'bzip2' and append all output to the file 'logfile' and stdout",
      "target": "bzip2 File | tee -a File",
      "prediction": "<|endoftext|> <|source|> Compress the file 'file' with 'bzip2' and append all output to the file 'logfile' and stdout <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory tree that are not owned by user 'tom' and delete them. <|target|> find Path -not -user Regex -not -name Regex -not -user Regex -"
    },
    {
      "source": "Search PATH for utilities called \"rename\", display the type of file (script, executable, ...) for each match found.",
      "target": "which -a Regex | xargs -I {} file -L {}",
      "prediction": "<|endoftext|> <|source|> Search PATH for utilities called \"rename\", display the type of file (script, executable,...) for each match found. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Print the names of all files/directories under current directory tree <|target|> find Path -exec echo Regex Regex \\;                    "
    },
    {
      "source": "Search the current directory tree for files whose names begin with \"my\" and end with \"p\" followed by any character",
      "target": "find Path -regex Regex",
      "prediction": "<|endoftext|> <|source|> Search the current directory tree for files whose names begin with \"my\" and end with \"p\" followed by any character <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and print the path to them <|target|> find Path -name Regex -print0 | xargs -0 -I {} echo {}          "
    },
    {
      "source": "Find files newer than start.txt but not newer than end.txt",
      "target": "find Path -newer File -and ! -newer File",
      "prediction": "<|endoftext|> <|source|> Find files newer than start.txt but not newer than end.txt <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|source|> Find all files/directories under current directory and print their paths <|target|> find Path -type f -exec echo {} \\;         | grep -E Regex      "
    },
    {
      "source": "Display all symlinks and their targets in the current directory tree",
      "target": "find -P Path -type l -exec echo -n Regex \\; -exec readlink {} \\;",
      "prediction": "<|endoftext|> <|source|> Display all symlinks and their targets in the current directory tree <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the latest modified files in the /usr/share directory tree. <|target|> find Path -type f -name Regex -print0 | xargs -0 -I {} ls -l -t -r -t {}"
    },
    {
      "source": "Find all the *.txt files in the current directory older than 48 hours",
      "target": "find Path -maxdepth Quantity -name Regex -mtime +Timespan",
      "prediction": "<|endoftext|> <|source|> Find all the *.txt files in the current directory older than 48 hours <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the latest modified files in the current directory tree. This is a common occurrence for files with names ending with \"~\" in their names. <|target|> find Path -name Regex -type f -printf '%h\\"
    },
    {
      "source": "get the root user access",
      "target": "su",
      "prediction": "<|endoftext|> <|source|> get the root user access <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and print their names. <|target|> find Path -type f -exec echo Regex {} \\;        | awk"
    },
    {
      "source": "display all files in the current folder which end with extension \"myfile\" followed by one digit or two digits",
      "target": "find Path \\( -name Regex -or -name Regex \\)",
      "prediction": "<|endoftext|> <|source|> display all files in the current folder which end with extension \"myfile\" followed by one digit or two digits <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files in the current directory tree that are not owned by the user 'tom' and delete them <|target|> find Path -not -user Regex -type f -name Regex -"
    },
    {
      "source": "List the files in \"archive.tar.gz\"",
      "target": "gzip -l Regex",
      "prediction": "<|endoftext|> <|source|> List the files in \"archive.tar.gz\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the current directory of the current directory.\n <|target|> find Path -type d -exec ls -l -r -t {} \\;     | tail -n Quantity "
    },
    {
      "source": "Create directorie(s) 'some/path' as required in the current directory",
      "target": "mkdir -p Directory",
      "prediction": "<|endoftext|> <|source|> Create directorie(s)'some/path' as required in the current directory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|source|> Find all files under current directory and print their names and sizes <|target|> find Path -type f -exec basename {} \\;       | awk Program   "
    },
    {
      "source": "find all the files in the folder /home which are exactly of size 10MB",
      "target": "find Path -size Size",
      "prediction": "<|endoftext|> <|source|> find all the files in the folder /home which are exactly of size 10MB <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and print their names and sizes <|target|> find Path -name Regex -exec echo {} \\; -exec echo {} \\;    "
    },
    {
      "source": "find all the perl files in the current folder and search for a pattern",
      "target": "find Path -name Regex | xargs -I {} grep -L Regex {}",
      "prediction": "<|endoftext|> <|source|> find all the perl files in the current folder and search for a pattern <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file is a part of the current directory tree that contains all the files in the current directory. This file is not a part of the current directory tree.\n <|target|> find Path -type f -exec ls -"
    },
    {
      "source": "Recursively copy /path/foo on host \"prod\" to local directory \"/home/user/Desktop\", connecting as ssh username corresponding to local username.",
      "target": "scp -r File File",
      "prediction": "<|endoftext|> <|source|> Recursively copy /path/foo on host \"prod\" to local directory \"/home/user/Desktop\", connecting as ssh username corresponding to local username. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory tree that are not owned by user 'amzadm' <|target|> find Path -nouser -or -nogroup -user Re"
    },
    {
      "source": "Move \"tobecopied/tobeexclude\" to \"tobeexclude\"",
      "target": "mv File File",
      "prediction": "<|endoftext|> <|source|> Move \"tobecopied/tobeexclude\" to \"tobeexclude\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|target|> find Path -name Regex -execdir rename Regex Regex {} \\;                         "
    },
    {
      "source": "Find all files/directories with 'my key phrase' in their names under current directory",
      "target": "find Path -name Regex",
      "prediction": "<|endoftext|> <|source|> Find all files/directories with'my key phrase' in their names under current directory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file is a part of the current directory tree. It is not a part of the current directory tree. <|target|> find Path -type f -exec echo {} \\;   | tr -d Regex "
    },
    {
      "source": "Delete all regular files that start with 'sess_' in their names, are at least 1 level deep and were modified more than $gc_maxlifetime minutes ago under $save_path directory tree",
      "target": "find Path Path -depth -mindepth Quantity -name Regex -ignore_readdir_race -type f -cmin Quantity -delete",
      "prediction": "<|endoftext|> <|source|> Delete all regular files that start with'sess_' in their names, are at least 1 level deep and were modified more than $gc_maxlifetime minutes ago under $save_path directory tree <|target|> find Path -name Regex -type f -mmin +Quantity -delete  -type f -mmin +Quantity -delete  -type f -mmin +Quantity -delete  -type f -mmin +Quantity"
    },
    {
      "source": "Move \"file.txt\" to docker container \"$COUNTAINER_ID\" in path \"/var/lib/docker/aufs/mnt/$CONTAINER_ID/rootfs/root/file.txt\"",
      "target": "mv -f File File",
      "prediction": "<|endoftext|> <|source|> Move \"file.txt\" to docker container \"$COUNTAINER_ID\" in path \"/var/lib/docker/aufs/mnt/$CONTAINER_ID/rootfs/root/file.txt\" <|target|> mv File File                                      "
    },
    {
      "source": "Count all the lines of all '*.c' files in current directory recursively",
      "target": "find Path -name Regex -print0 | xargs -0 -I {} cat {} | wc -l",
      "prediction": "<|endoftext|> <|source|> Count all the lines of all '*.c' files in current directory recursively <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and print their names and sizes. <|target|> find Path -type f -exec echo {} \\; | awk Program "
    },
    {
      "source": "Prints long listing of content in a root folder, including hidden files, with human-readable sizes, and stores output to '/root/test.out' file.",
      "target": "echo Regex | bash",
      "prediction": "<|endoftext|> <|source|> Prints long listing of content in a root folder, including hidden files, with human-readable sizes, and stores output to '/root/test.out' file. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of two jobs to be created for the current user by replacing the last comma-separated field of each line in \"file\" <|target|> paste -d File File File   "
    },
    {
      "source": "Recursively change owner to \"amzadm\" and group to \"root\" of all files in \"/usr/lib/python2.6/site-packages/\"",
      "target": "chown Regex -R File",
      "prediction": "<|endoftext|> <|source|> Recursively change owner to \"amzadm\" and group to \"root\" of all files in \"/usr/lib/python2.6/site-packages/\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long-running, multi layered, and interactive, interactive shell with a built-in \"wait\" function.\n <|target|> set -o sleep Timespan     "
    },
    {
      "source": "Check if \"\\[$VLABEL\\]\" is mounted and save the result in variable \"AMV\"",
      "target": "mount -l | grep Regex",
      "prediction": "<|endoftext|> <|source|> Check if \"\\[$VLABEL\\]\" is mounted and save the result in variable \"AMV\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|source|> Find all files under current directory and change their permission to 755 <|target|> find Path -type f -exec chmod Permission {} \\;     "
    },
    {
      "source": "Finds pattern text ignoring letter case in all .js files, prints matched strings and name of file with that strings.",
      "target": "find Path -name Regex -exec grep -i Regex {} \\; -print",
      "prediction": "<|endoftext|> <|source|> Finds pattern text ignoring letter case in all.js files, prints matched strings and name of file with that strings. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and print them with their sizes and paths. <|target|> find Path -type f -exec sed -i Program {} \\;"
    },
    {
      "source": "Prints total count of lines of all *.php files in a current folder and subfolders.",
      "target": "find Path -name Regex -type f -exec cat -- {} + | wc -l",
      "prediction": "<|endoftext|> <|source|> Prints total count of lines of all *.php files in a current folder and subfolders. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and print the names of them <|target|> find Path -name Regex -print0 | xargs -0 -I {}"
    },
    {
      "source": "Print the current directory name without full path",
      "target": "echo Regex | sed Program",
      "prediction": "<|endoftext|> <|source|> Print the current directory name without full path <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>Find all files in the current directory tree that are not newer than the current directory and delete them.\n <|target|> find Path -newer File -print0 | xargs -0 -I"
    },
    {
      "source": "Find all *.c files under and below the current directory that contain \"wait_event_interruptible\"",
      "target": "find Path -name Regex -print | xargs -I {} grep Regex File {}",
      "prediction": "<|endoftext|> <|source|> Find all *.c files under and below the current directory that contain \"wait_event_interruptible\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|source|> Find all files in the current directory tree and search for the regex \"pattern\" in them. <|target|> find Path -type f -exec grep -E Regex {}"
    },
    {
      "source": "Find files containing string \"#!/bin/ksh\" and append their names and matching strings to /tmp/allfiles",
      "target": "find Path -type f -execdir grep -i -H Regex {} \\; | tee File",
      "prediction": "<|endoftext|> <|source|> Find files containing string \"#!/bin/ksh\" and append their names and matching strings to /tmp/allfiles <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long list of the most used files in the current directory tree. <|source|> find Path -type f -exec ls -l -t {} \\; | awk Program  "
    },
    {
      "source": "Print information of the root mount point",
      "target": "mount -v | grep Regex",
      "prediction": "<|endoftext|> <|source|> Print information of the root mount point <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|source|> Find all files/directories under current directory and search for the regex 'pattern' in them. <|target|> find Path -name Regex -exec grep -i -n Regex {} \\;   | grep Regex      "
    },
    {
      "source": "Search /path/to/your/directory for *.avi and *.flv files",
      "target": "find Path -regex Regex",
      "prediction": "<|endoftext|> <|source|> Search /path/to/your/directory for *.avi and *.flv files <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the latest version of PHP, using the latest version of PHP, and using the latest version of the regular file. <|target|> find Path -type f -name Regex -execdir -i -i -v $( pwd ) {} + | grep"
    },
    {
      "source": "Source \"lib/B\" relative to the directory of the executing shell script, will fail if currently running script is not in PATH.",
      "target": "source $( dirname $( which Regex ) )",
      "prediction": "<|endoftext|> <|source|> Source \"lib/B\" relative to the directory of the executing shell script, will fail if currently running script is not in PATH. <|target|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory tree that are not owned by user \"user\" <|target|> find Path -nouser -or -nouser -or -nogroup  -print          "
    },
    {
      "source": "Print a count of each unique line from standard input sorted from least frequent to most frequent",
      "target": "sort | uniq -c | sort -n",
      "prediction": "<|endoftext|> <|source|> Print a count of each unique line from standard input sorted from least frequent to most frequent <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is the first in a long line of jobs that are jobs that are not jobs in the current user's home directory.\n <|target|> find Path -type f -name Regex -exec grep -i Regex {} \\;  | sort -k Number | uniq -"
    },
    {
      "source": "search for soft links in current folder and display those links which are not pointed to files in current folder",
      "target": "find Path -type l -exec readlink -f {} \\; | grep -v $( readlink -f File )",
      "prediction": "<|endoftext|> <|source|> search for soft links in current folder and display those links which are not pointed to files in current folder <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new report from the Timespan Archive finds that the largest files in the current directory are bigger than 10MB. <|target|> find Path -type f -size +Size -exec ls -l -h -t {} + | sort -n -r | xargs -I {}"
    },
    {
      "source": "Remove files from the home directory tree that were last accessed more than 100 days ago",
      "target": "find Path -atime +Timespan -delete",
      "prediction": "<|endoftext|> <|source|> Remove files from the home directory tree that were last accessed more than 100 days ago <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory and its sub-directories. <|target|> find Path -name Regex -exec ls -l {} \\;     | sort -n -r      | awk Program  "
    },
    {
      "source": "Find all aliencoders.[0-9]+ files under /home/jassi/ directory",
      "target": "find Path -type f -name Regex",
      "prediction": "<|endoftext|> <|source|> Find all aliencoders.[0-9]+ files under /home/jassi/ directory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and print their paths <|target|> find Path -type f -exec echo {} \\;         | awk Program              "
    },
    {
      "source": "Processes all files recursively in /var/spool/cron/tabs folder and filters out all strings with '#'.",
      "target": "grep -v Regex -R File",
      "prediction": "<|endoftext|> <|source|> Processes all files recursively in /var/spool/cron/tabs folder and filters out all strings with '#'. <|target|> find Path -type f -exec grep Regex {} \\; -print | xargs -I {} cat {} \\;             Regex                Regex    "
    },
    {
      "source": "Print lines in \"file1.txt\" that do not exist in \"file2.txt\"",
      "target": "sort <( sort -u File ) File File | uniq -u",
      "prediction": "<|endoftext|> <|source|> Print lines in \"file1.txt\" that do not exist in \"file2.txt\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under /path/to/directory/ that are not owned by user 'root' or 'other' users and copy them to /path/to/directory/directory/with-owner-group-name <|target|> find Path"
    },
    {
      "source": "display all the regular files in current folder that belong to the user \"tom\"",
      "target": "find Path -type f -user Regex",
      "prediction": "<|endoftext|> <|source|> display all the regular files in current folder that belong to the user \"tom\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are not owned by the user \"user\" and are not newer than the file \"new\" <|target|> find Path -type f -not -user Regex -not -newer File! -name Re"
    },
    {
      "source": "Move all directories in the current directory tree that have been modified in the last day to \"/path/to/target-dir\"",
      "target": "find Path -type d -mtime -Timespan -print0 | xargs -0 -I {} mv -t Directory {}",
      "prediction": "<|endoftext|> <|source|> Move all directories in the current directory tree that have been modified in the last day to \"/path/to/target-dir\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and print their paths <|target|> find Path -type f -execdirname {} \\;                     "
    },
    {
      "source": "Rename \"www_new\" to \"www\" even if \"www\" directory exists",
      "target": "mv -T File File",
      "prediction": "<|endoftext|> <|source|> Rename \"www_new\" to \"www\" even if \"www\" directory exists <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long-running, multi threaded process that compresses all files in a current folder. This process is used to compress all files in a current folder. This process is used to compress files in the background.\n <|target|> find Path -type f -"
    },
    {
      "source": "Search the current directory tree for symbolic links to files matching pattern '*/test*'",
      "target": "find -P Path -lname Regex",
      "prediction": "<|endoftext|> <|source|> Search the current directory tree for symbolic links to files matching pattern '*/test*' <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new set of data files from the current directory tree that are not in the directory tree /home/test/data.txt.\n <|source|> find Path -type f -name Regex -execdir rename Regex {} \\;     "
    },
    {
      "source": "Print the current date followed by ' doing stuff'",
      "target": "echo $( date ) Regex Regex",
      "prediction": "<|endoftext|> <|source|> Print the current date followed by'doing stuff' <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>Find all files under current directory and below that are newer than any other file in the current directory and print the names of the files that are newer than any other file in the current directory. <|target|> find Path -newer File -print0 | xargs -"
    },
    {
      "source": "Read a line from standard input with prompt \"Are you alright? (y/n) \" and save the response to variable \"RESP\"",
      "target": "read -p Regex Regex",
      "prediction": "<|endoftext|> <|source|> Read a line from standard input with prompt \"Are you alright? (y/n) \" and save the response to variable \"RESP\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and print their names <|target|> find Path -type f -exec echo {} \\;                      "
    },
    {
      "source": "create a symbolic link named \"/usr/bin/my-editor\" to file \"/usr/share/my-ditor/my-editor-executable\"",
      "target": "ln -s File Regex",
      "prediction": "<|endoftext|> <|source|> create a symbolic link named \"/usr/bin/my-editor\" to file \"/usr/share/my-ditor/my-editor-executable\" <|target|> ln -s File Regex                                                 "
    },
    {
      "source": "Find all empty directories in the current one and delete them",
      "target": "find Path -type d -maxdepth Quantity -empty -print0 | xargs -0 -I {} rmdir {}",
      "prediction": "<|endoftext|> <|source|> Find all empty directories in the current one and delete them <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|source|> Find all files in the current directory tree that are modified in the last 60 minutes <|target|> find Path -mmin -Quantity -type f -mmin -Quantity -print0 | xargs -0 -I {} rm -"
    },
    {
      "source": "search for all the regular/normal files  in the /etc folder which have been modified in the last 24 hours",
      "target": "find Path -type f -mtime -Timespan",
      "prediction": "<|endoftext|> <|source|> search for all the regular/normal files  in the /etc folder which have been modified in the last 24 hours <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This week, the first of the month of the year, the first day of the month of the year, the first day of the month of the year, the first day of the month of the year, the first day of the month of the year, and the first day"
    },
    {
      "source": "Print the last mounted drive",
      "target": "mount | tail - Quantity | sed Program",
      "prediction": "<|endoftext|> <|source|> Print the last mounted drive <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and print their names and sizes <|target|> find Path -name Regex -exec ls -l {} \\;   | awk Program        | tail - Quantity"
    },
    {
      "source": "Find all *.c files under /home",
      "target": "find Path -name Regex",
      "prediction": "<|endoftext|> <|source|> Find all *.c files under /home <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Print the names of all regular files in the current directory tree <|target|> find Path -type f -exec echo {} \\;  | grep Regex        | tr -d Regex     "
    },
    {
      "source": "Find all file in current directory with have .c extenstion & have 777 permission . delete then",
      "target": "find Path -name Regex -and -perm -Permission | xargs -I {} rm -r -f {}",
      "prediction": "<|endoftext|> <|source|> Find all file in current directory with have.c extenstion & have 777 permission. delete then <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and copy them to /tmp/ <|target|> find Path -type f -exec cp File {} \\;   | sed Program       | sed Program       "
    },
    {
      "source": "Remove \"\\r\" at the end of each line in \"infile\" and display the result as printable characters or backslash escapes",
      "target": "cat File | sed Program | od -c",
      "prediction": "<|endoftext|> <|source|> Remove \"\\r\" at the end of each line in \"infile\" and display the result as printable characters or backslash escapes <|target|><|endoftext|><|endoftext|> <|source|> Print the names of all files in the current directory tree whose names contain \"foo\" <|target|> find Path -name Regex -exec echo {} \\;       | sed -n Program         |"
    },
    {
      "source": "Search the path given as the $absolute_dir_path variable for regular files",
      "target": "find Path -type f -print0",
      "prediction": "<|endoftext|> <|source|> Search the path given as the $absolute_dir_path variable for regular files <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Print the names of all files under current directory and below <|target|> find Path -type f -execdir rename Regex {} \\;         | grep -E -o Regex        "
    },
    {
      "source": "Send SIGHUP (hangup) signal to nginx master process, causing it to re-read its configuration and restart child processes if necessary.",
      "target": "kill - Regex $( cat File )",
      "prediction": "<|endoftext|> <|source|> Send SIGHUP (hangup) signal to nginx master process, causing it to re-read its configuration and restart child processes if necessary. <|target|> kill $( nginx -l )  Regex                                                 "
    },
    {
      "source": "find all PDFs owned by user \u201cseamstress\u201d",
      "target": "find Path -user Regex -iname Regex",
      "prediction": "<|endoftext|> <|source|> find all PDFs owned by user \u201cseamstress\u201d <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|source|source|> Find all files/directories under current directory and print their names <|target|> find Path -name Regex -print0 | xargs -0 -I {} echo {}    | grep -E -E Regex    "
    },
    {
      "source": "Change to directory 'xyz' and resolve any symlinks in the resulting path, making the physical path the current one.",
      "target": "cd -P Directory",
      "prediction": "<|endoftext|> <|source|> Change to directory 'xyz' and resolve any symlinks in the resulting path, making the physical path the current one. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and print their names and sizes. <|target|> find Path -exec ls -l -t {} \\;     | grep -E -v Regex         "
    },
    {
      "source": "Find all files under the current directory whose filenames are not \"file.txt\", ignoring the case",
      "target": "find Path -maxdepth Quantity -not -iname Regex",
      "prediction": "<|endoftext|> <|source|> Find all files under the current directory whose filenames are not \"file.txt\", ignoring the case <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are newer than the file $1 and newer than the file $2.txt. <|target|> find Path -newer File -type f -name Regex -print0 | xargs -I {}"
    },
    {
      "source": "Find all files under $x directory and set read-write permission for owner and group and no permission for other for those files",
      "target": "find Path -type f -exec chmod Permission {} \\;",
      "prediction": "<|endoftext|> <|source|> Find all files under $x directory and set read-write permission for owner and group and no permission for other for those files <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under $x directory and set read guarantees for read and write permission for owner and no permission for other for other for those files. <|target|> find Path -type f -exec chmod Permission {} \\;   "
    },
    {
      "source": "Search the current directory tree for files whose name is \".note\", case insensitive",
      "target": "find Path -iname Regex | sort",
      "prediction": "<|endoftext|> <|source|> Search the current directory tree for files whose name is \".note\", case insensitive <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|source|> Find all files/directories under current directory and set their permission to 755 <|target|> find Path -type f -exec chmod Permission {} \\;                   "
    },
    {
      "source": "Print newline, word, and byte counts of each '*.java' file within current directory, and total newline, word, and byte counts",
      "target": "find Path -name Regex | tr Regex Regex | xargs -0 -I {} wc {}",
      "prediction": "<|endoftext|> <|source|> Print newline, word, and byte counts of each '*.java' file within current directory, and total newline, word, and byte counts <|target|> find Path -name Regex -exec wc -l {} \\;        | awk Program              | sort -n  | head - Quantity           "
    },
    {
      "source": "Sets shell option 'nounset'.",
      "target": "shopt -s -o nounset",
      "prediction": "<|endoftext|> <|source|> Sets shell option 'nounset'. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|source|source|> Find all files in the current directory tree that were last modified more than 7 days ago <|target|> find Path -mtime +Timespan -type f -mtime +Timespan -exec ls"
    },
    {
      "source": "Find all *.[ch] files under current directory",
      "target": "find Path -name Regex",
      "prediction": "<|endoftext|> <|source|> Find all *.[ch] files under current directory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file is a copy of the file 'file' in the current directory.\n <|target|> find Path -type f -name Regex -exec cp -t File {} \\;     | tr Regex Re"
    },
    {
      "source": "Find all regular files on the system whose names are 'myfile'",
      "target": "find Path -name Regex -type f -print",
      "prediction": "<|endoftext|> <|source|> Find all regular files on the system whose names are'myfile' <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|source|> Find all files/directories under current directory and print their paths and sizes <|target|> find Path -type f -exec basename {} \\;            "
    },
    {
      "source": "List all files under the current working directory tree",
      "target": "find Path $( pwd ) -type f",
      "prediction": "<|endoftext|> <|source|> List all files under the current working directory tree <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>Find all files/directories under current directory and print the names of the files/directories that are newer than the current directory. <|target|> find Path -type f -name Regex -print0 | xargs -0"
    },
    {
      "source": "search for all the files in the current directory which have been modified in the last 24 hours.",
      "target": "find Path -mtime -Timespan",
      "prediction": "<|endoftext|> <|source|> search for all the files in the current directory which have been modified in the last 24 hours. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all the files in the current directory tree that are owned by user \"user\" and have not been accessed in the last 24 hours. <|target|> find Path -user Regex -atime Timespan"
    },
    {
      "source": "Find all *.py files/directories under current directory",
      "target": "find Path -name Regex",
      "prediction": "<|endoftext|> <|source|> Find all *.py files/directories under current directory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>\nIncoming\n <|target|> find Path -name Regex -type f -exec grep Regex {} \\;     | awk Program               |"
    },
    {
      "source": "Force create a symbolc link named \"/usr/local/bin/fpdf\" to \"/usr/local/bin/findpdftext\"",
      "target": "ln -s -f File Regex",
      "prediction": "<|endoftext|> <|source|> Force create a symbolc link named \"/usr/local/bin/fpdf\" to \"/usr/local/bin/findpdftext\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Print the names of all files in the current directory tree that are not owned by any user <|target|> find Path -type f! -nouser -print0 | xargs -0 -I {}"
    },
    {
      "source": "Find all the files which are modified in last 1 hour in entire file system",
      "target": "find Path -mmin -Quantity",
      "prediction": "<|endoftext|> <|source|> Find all the files which are modified in last 1 hour in entire file system <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>\nThis is the first in a long list of the top 10 most used files in the current directory tree. <|source|> find Path -type f -name Regex -exec ls -l {} \\;  | awk Program"
    },
    {
      "source": "search for a shell script in the current folder and display the current folder path but search from the sub directories",
      "target": "find Path -name Regex -execdir pwd \\;",
      "prediction": "<|endoftext|> <|source|> search for a shell script in the current folder and display the current folder path but search from the sub directories <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file is a list of all the files in the current directory and do not search in the subdirectories.\n <|target|> find Path -maxdepth Quantity -name Regex -exec ls -l {} \\;  "
    },
    {
      "source": "Find files matching pattern $2 in the $1 directory recursively and search them for text $3, where $1, $2, $3 are the command line arguments to the Bash script",
      "target": "find Path -path Regex -prune -or -name Regex -print -exec grep -H -n Regex {} \\;",
      "prediction": "<|endoftext|> <|source|> Find files matching pattern $2 in the $1 directory recursively and search them for text $3, where $1, $2, $3 are the command line arguments to the Bash script <|target|> find Path -name Regex -exec grep -H Regex {} \\;                                 "
    },
    {
      "source": "Find all files/directories with '.log' extension that belong to the group 'adm' under '/var/log' directory tree",
      "target": "find Path -group Regex -name Regex",
      "prediction": "<|endoftext|> <|source|> Find all files/directories with '.log' extension that belong to the group 'adm' under '/var/log' directory tree <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long list of all the files in the current directory tree that are not in the current directory. <|source|> find Path -type f -not -name Regex -or -name Regex -or"
    },
    {
      "source": "delete all the files in the current folder which end with \".bak\" or \".backup\" and which have not been accessed in the last 30 days",
      "target": "find Path \\( -name Regex -or -name Regex \\) -type f -atime +Timespan -exec rm {} \\;",
      "prediction": "<|endoftext|> <|source|> delete all the files in the current folder which end with \".bak\" or \".backup\" and which have not been accessed in the last 30 days <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the files in the current directory tree that are not newer than the file \"file\" and do not contain the string \"new\" in their names. <|target|> find Path -type f"
    },
    {
      "source": "Print the path of all the network mounts",
      "target": "mount | sed -n -e Program",
      "prediction": "<|endoftext|> <|source|> Print the path of all the network mounts <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>\nThis file is a long listing of all the files in the current directory tree that are newer than the file 'file' <|target|> find Path -newer File -exec ls -l {} \\;  "
    },
    {
      "source": "find all text files in user/directory/ which have been modified today and display the last line of these files",
      "target": "find Path -name Regex -mtime Timespan -type f -printf '%p: ' -exec tail - Quantity {} \\;",
      "prediction": "<|endoftext|> <|source|> find all text files in user/directory/ which have been modified today and display the last line of these files <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file is a part of the current directory, and contains all files in the current directory that are not in the current directory. <|target|> find Path -type f! -name Regex -prune -or"
    },
    {
      "source": "Verbosely compresses all files on fifth and sixth depth level keeping original files in place.",
      "target": "bzip2 -k -v File",
      "prediction": "<|endoftext|> <|source|> Verbosely compresses all files on fifth and sixth depth level keeping original files in place. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file is a long listing of all the files in the current directory tree that are not in the current directory. <|source|> find Path -type f -name Regex -not -name Regex -not -"
    },
    {
      "source": "Use the first non-zero exit code (if any) of a set of piped commands as the exit code of the full set of commands",
      "target": "set -o pipefail",
      "prediction": "<|endoftext|> <|source|> Use the first non-zero exit code (if any) of a set of piped commands as the exit code of the full set of commands <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file is a list of all files in the current directory tree that are not owned by user'me' and are not newer than 'today' in their names. <|source|> find Path -type f -user"
    },
    {
      "source": "Prints all child processes of a process with id 20238.",
      "target": "pstree -p Regex | sed Program | grep Regex | sed Program",
      "prediction": "<|endoftext|> <|source|> Prints all child processes of a process with id 20238. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Search the current directory tree for files whose names are \"file1\" <|target|> find Path -name Regex -execdir file1 -execdir file1 -execdir file2 -"
    },
    {
      "source": "Split \"/usr/bin/firefox\" into 1000 files of about equal size",
      "target": "split -n Quantity File",
      "prediction": "<|endoftext|> <|source|> Split \"/usr/bin/firefox\" into 1000 files of about equal size <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|source|> Find all files/directories under current directory and print the names of the directories they are in the current directory <|target|> find Path -type f -execdir echo {} \\;  "
    },
    {
      "source": "Set the executable bit for all users on all regular files from directories arch/x86/usr/sbin, arch/x86/usr/X11R6/bin, usr/sbin/",
      "target": "find Path Path Path -type f | xargs -I {} chmod Permission {}",
      "prediction": "<|endoftext|> <|source|> Set the executable bit for all users on all regular files from directories arch/x86/usr/sbin, arch/x86/usr/X11R6/bin, usr/sbin/ <|target|> find Path -type f -exec chmod Permission {} \\;                                "
    },
    {
      "source": "find all the files in the entire file system which belong to the group \"staff\"",
      "target": "find Path -group Regex -print",
      "prediction": "<|endoftext|> <|source|> find all the files in the entire file system which belong to the group \"staff\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>\nFind all the files in the current directory tree that are not newer than the file $newerthan and do not match the file $oldestfile in their paths. <|target|> find Path -type f -"
    },
    {
      "source": "find all the html files in the current folder and replace the end of each line with a pattern",
      "target": "find Path -type f -name Regex | xargs -I {} sed -i Program {}",
      "prediction": "<|endoftext|> <|source|> find all the html files in the current folder and replace the end of each line with a pattern <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of two jobs that would be created by the current user's user, or by virtue of virtue of the user's choice, is created.\n <|target|> find Path -user Regex -type f -exec sed -i Program {} \\;       "
    },
    {
      "source": "search for all the files in current folder and display all the file names separated by space",
      "target": "find Path | awk Program",
      "prediction": "<|endoftext|> <|source|> search for all the files in current folder and display all the file names separated by space <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new file named \"file.txt\" is created in the current directory and saves path to it in a variable \"file\" and saves path to it in \"file.txt\" as the current user's user's name.\n <|target|> cat File | sed Program | xargs -"
    },
    {
      "source": "Replace all newlines from the contents of \"file\" except the last with spaces",
      "target": "sed Program File",
      "prediction": "<|endoftext|> <|source|> Replace all newlines from the contents of \"file\" except the last with spaces <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Print the names of all files in the current directory tree and its subdirectories. <|target|> find Path -type f -exec sed -i Program {} \\;     | sed Program             "
    },
    {
      "source": "Find all .gz archives in the current directory tree and check if they are valid",
      "target": "find Path -name Regex -exec gunzip {} \\;",
      "prediction": "<|endoftext|> <|source|> Find all.gz archives in the current directory tree and check if they are valid <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Search for files that are writable by both their owner and their group and print their names and their sizes. <|target|> find Path -perm -Permission -exec ls -l {} \\;   | grep Regex | grep -E -v Regex"
    },
    {
      "source": "find all files in the current folder which are bigger than 10bytes",
      "target": "find Path -size +Size -print",
      "prediction": "<|endoftext|> <|source|> find all files in the current folder which are bigger than 10bytes <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file is a long listing of the latest modified files in the current directory. <|target|> find Path -type f -name Regex -exec ls -l {} \\;  | sort -n | xargs -I {} ls -l {} | tail -n Quantity | tail -"
    },
    {
      "source": "display the count of number html files in the current folder",
      "target": "find Path -name Regex -print | xargs -l -i -I {} wc {} {}",
      "prediction": "<|endoftext|> <|source|> display the count of number html files in the current folder <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and search for the regex 'pattern' in those files/directories. <|target|> find Path -name Regex -exec grep -i -l Regex {} + | grep -v Regex    "
    },
    {
      "source": "find and image in current folder (case insensitive search)",
      "target": "find Path -iname Regex",
      "prediction": "<|endoftext|> <|source|> find and image in current folder (case insensitive search) <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are newer than the file /tmp/test/test_1.txt.txt.\n <|target|> find Path -type f -newer File -exec ls -l -r -t -t {} \\"
    },
    {
      "source": "Find all files/directories under current directory tree whose names start with 'test' followed by two digits and end with '.txt' extension",
      "target": "find Path -regextype sed -regex Regex",
      "prediction": "<|endoftext|> <|source|> Find all files/directories under current directory tree whose names start with 'test' followed by two digits and end with '.txt' extension <|target|> find Path -name Regex -type f -print0 | xargs -0 -I {} grep -l -i -r Regex {}                               "
    },
    {
      "source": "change the ownership of all directories in the current folder",
      "target": "find Path -type d -exec chown Regex {} \\;",
      "prediction": "<|endoftext|> <|source|> change the ownership of all directories in the current folder <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of the many jobs that are not jobs in the current directory tree, but are in the sub-directory /home/test/ to /home/test/ <|target|> find Path -type d -name Regex -execdir rename Regex {} \\;    "
    },
    {
      "source": "Change ownership of \"/data/db\" to the current user",
      "target": "chown $( whoami ) File",
      "prediction": "<|endoftext|> <|source|> Change ownership of \"/data/db\" to the current user <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory and its subdirectories that are newer than the current directory. <|target|> find Path -newer File -type f -exec ls -l -r -t {} \\;     | grep -v Re"
    },
    {
      "source": "Get a detailed list of all files on the system larger than 10MB",
      "target": "find Path -size +Size -printf \"%12s %t %h/%fn\"",
      "prediction": "<|endoftext|> <|source|> Get a detailed list of all files on the system larger than 10MB <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|source|> Search for the regex '^[^=]*' in all files under current directory tree and show the matched lines with the matched lines in sorted order <|target|> find Path -type f -exec grep -i -l Regex"
    },
    {
      "source": "Remove the last two alphanumeric file extensions from \"mpc-1.0.1.tar.gz\"",
      "target": "echo Regex | sed -r Program",
      "prediction": "<|endoftext|> <|source|> Remove the last two alphanumeric file extensions from \"mpc-1.0.1.tar.gz\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are newer than the file \"file\" <|target|> find Path -newer File -type f -print0 | xargs -0 -I {} rm -f {}  "
    },
    {
      "source": "display all the home folder which end with the extension \"sxw\" and which have been accessed in the last 3*24 hours and which belong to the user bruno",
      "target": "find Path -type f -name Regex -atime -Timespan -user Regex",
      "prediction": "<|endoftext|> <|source|> display all the home folder which end with the extension \"sxw\" and which have been accessed in the last 3*24 hours and which belong to the user bruno <|target|> find Path -name Regex -atime +Timespan -or -name Regex -atime +Timespan -or -name Regex -atime +Timespan -or -name Regex -atime +Timespan -or -name Regex"
    },
    {
      "source": "Find all the files which are accessed in last 1 hour in entire file system",
      "target": "find Path -amin -Quantity",
      "prediction": "<|endoftext|> <|source|> Find all the files which are accessed in last 1 hour in entire file system <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the current directory tree, with the last modified file name. <|target|> find Path -type f -mtime Timespan -exec ls -l {} \\; | awk Program      | tail - Quantity"
    },
    {
      "source": "Find all *.sql file that are not newer than  $oldest_to_keep excluding the  $oldest_to_keep file",
      "target": "find Path -name Regex -not -samefile Regex -not -newer File",
      "prediction": "<|endoftext|> <|source|> Find all *.sql file that are not newer than  $oldest_to_keep excluding the  $oldest_to_keep file <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory <|target|> find Path -name Regex                             "
    },
    {
      "source": "execute command \"who\" when key \"\\eW\" is pressed",
      "target": "bind -x Regex",
      "prediction": "<|endoftext|> <|source|> execute command \"who\" when key \"\\eW\" is pressed <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>Find all files in the current directory tree that are less than 100 megabytes in size and search for \"file\" in those files. <|target|> find Path -size -Size -size -Size -size -Size -exec grep -H -n Re"
    },
    {
      "source": "Print unique lines in sorted \"file1\" compared to sorted file \"file2\"",
      "target": "comm -2 -3 File File",
      "prediction": "<|endoftext|> <|source|> Print unique lines in sorted \"file1\" compared to sorted file \"file2\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new and more detailed set of statistics from the current directory tree show the total size of all files in the current directory tree <|target|> find Path -type f -exec du -s -s {} \\; | awk Program     "
    }
  ],
  "5.0": [
    {
      "source": "display all the html files in the current folder excluding search in the path ./foo",
      "target": "find Path -path Regex -prune -or -type f -name Regex",
      "prediction": "<|endoftext|> <|source|> display all the html files in the current folder excluding search in the path./foo <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Search for the regex 'expr' in all the regular files in the current directory tree and print the matched lines along with their names and file type <|target|> find Path -type f -exec grep -i Regex {} +  "
    },
    {
      "source": "Read a line from standard input into variable \"response\" ignoring backslash escapes and using the prompt \"${1:-Are you sure? [y/N]} \"",
      "target": "read -r -p Regex Regex",
      "prediction": "<|endoftext|> <|source|> Read a line from standard input into variable \"response\" ignoring backslash escapes and using the prompt \"${1:-Are you sure? [y/N]} \" <|target|> read -r -p Regex Regex                                              "
    },
    {
      "source": "Finds strings with dot-separated sequence of numbers, and prints part of that sequence before the first dot.",
      "target": "echo Regex | grep -E -o Regex | cut -d Regex -f Number",
      "prediction": "<|endoftext|> <|source|> Finds strings with dot-separated sequence of numbers, and prints part of that sequence before the first dot. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and print the names of the users who are currently logged in <|target|> find Path -name Regex -exec echo {} Regex \\;      | grep Regex "
    },
    {
      "source": "Compare files in \"/tmp/dir1\" and \"/tmp/dir2\", treating absent files as empty and all files as text",
      "target": "diff -N -a -r File File",
      "prediction": "<|endoftext|> <|source|> Compare files in \"/tmp/dir1\" and \"/tmp/dir2\", treating absent files as empty and all files as text <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and print the names of the directories they are in <|target|> find Path -exec echo Regex {} \\;                "
    },
    {
      "source": "display all symbolic links in current folder",
      "target": "find Path -lname Regex",
      "prediction": "<|endoftext|> <|source|> display all symbolic links in current folder <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>Name: <|source|> Find all files under current directory and below that are newer than /tmp/foo and delete them <|target|> find Path -type f -newer File -print0 | xargs -0 -I {} rm -r -"
    },
    {
      "source": "List the files from the current directory tree that contain lines matching regular expression '^From:.*unique sender', ignoring ~/src and ~/bin",
      "target": "find Path -name Regex -prune -or -name Regex -prune -or -type f -print | xargs -I {} grep -E -i -l Regex {}",
      "prediction": "<|endoftext|> <|source|> List the files from the current directory tree that contain lines matching regular expression '^From:.*unique sender', ignoring ~/src and ~/bin <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Search for all files that are writable by owner and group <|target|> find Path -perm Permission             -perm Permission        -perm Permission"
    },
    {
      "source": "Print common lines of files \"file1\", \"file2\", \"file3\", and \"file4\"",
      "target": "comm -1 -2 <( comm -1 -2 <( comm -1 -2 <( sort File ) <( sort File ) ) <( sort File ) ) <( sort File )",
      "prediction": "<|endoftext|> <|source|> Print common lines of files \"file1\", \"file2\", \"file3\", and \"file4\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are newer than the file \"file1\" and newer than the file \"file2\" and do not search in the sub directories. <|target|> find Path -type f -newer"
    },
    {
      "source": "Remount \"/home/evgeny\" with the \"suid\" flag set",
      "target": "mount Regex -o remount,suid Regex",
      "prediction": "<|endoftext|> <|source|> Remount \"/home/evgeny\" with the \"suid\" flag set <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long and hard-to-read file. <|source|> Find all files in the current directory tree that are not readable by the user and delete them. <|target|> find Path -type f -not -iname Regex -exec"
    },
    {
      "source": "Show the last 10 .conf files found by `find' in the /etc directory",
      "target": "find Path -maxdepth Quantity -name Regex | tail",
      "prediction": "<|endoftext|> <|source|> Show the last 10.conf files found by `find' in the /etc directory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are owned by the user `user' or `other' <|target|> find Path -user Regex -exec ls -l {} \\;     | tail - Quantity "
    },
    {
      "source": "display all the files on the current folder excluding those that are present in the folder \"./src/emacs\"",
      "target": "find Path -path Regex -prune -or -print",
      "prediction": "<|endoftext|> <|source|> display all the files on the current folder excluding those that are present in the folder \"./src/emacs\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new report from the Open Source Program (www.openssl.org) shows the top 10 biggest files in the current directory tree, sorted from smallest to largest. <|target|> find Path -type f -name Regex -exec ls -l {} \\"
    },
    {
      "source": "search for all the regular/normal mp3 files in the file system and move them to the folder /mnt/mp3",
      "target": "find Path -iname Regex -type f -print0 | xargs -0 -I {} mv {} File",
      "prediction": "<|endoftext|> <|source|> search for all the regular/normal mp3 files in the file system and move them to the folder /mnt/mp3 <|target|><|endoftext|> <|source|> Find all files/directories under current directory and move them to the folder /mnt/mp3 <|target|> find Path -type f -name Regex -exec mv {} File \\;            -delete "
    },
    {
      "source": "find all files in the home folder which are modified in the last 2 days.",
      "target": "find Path -type f -mtime -Timespan",
      "prediction": "<|endoftext|> <|source|> find all files in the home folder which are modified in the last 2 days. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are not owned by any user. <|source|> find Path -nouser -or -nogroup  -u -m  -t  -t File           "
    },
    {
      "source": "Find *.conf files/directories only upto 1 level down under /etc directory and show a few lines of output from the end",
      "target": "find Path -maxdepth Quantity -name Regex | tail",
      "prediction": "<|endoftext|> <|source|> Find *.conf files/directories only upto 1 level down under /etc directory and show a few lines of output from the end <|target|> find Path -maxdepth Quantity -name Regex | xargs -I {} grep -l Regex {}         | head -n Quantity                           "
    },
    {
      "source": "Find all files owned by the user daniel in the current directory and below.",
      "target": "find Path -user Regex",
      "prediction": "<|endoftext|> <|source|> Find all files owned by the user daniel in the current directory and below. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are newer than the file \"file.txt\" and older than \"file.txt\" and delete them. <|target|> find Path -newer File -print0 | xargs -0 -I {} rm -f"
    },
    {
      "source": "count all the html files having a specifc word in a folder.",
      "target": "find Path -name Regex -exec grep -l Regex {} \\; | wc -l",
      "prediction": "<|endoftext|> <|source|> count all the html files having a specifc word in a folder. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all the files in the current directory tree that are less than 1 minute ago <|target|> find Path -mmin -Quantity -type f -print0 | xargs -0 -I {} ls -1 -l {}       | sort |"
    },
    {
      "source": "List all cron jobs which contain \"word\".",
      "target": "crontab -l | grep -E Regex",
      "prediction": "<|endoftext|> <|source|> List all cron jobs which contain \"word\". <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new file called 'file' is created in the current directory and saves path to it in 'file' variable.\n <|target|> find Path -name Regex -execdir rename Regex {} \\;        | tee File       "
    },
    {
      "source": "long list al the files in the current directory which have read permission to the group",
      "target": "find Path -perm -Permission -type f -exec ls -l {} \\;",
      "prediction": "<|endoftext|> <|source|> long list al the files in the current directory which have read permission to the group <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and set their permission to 755 <|target|> find Path -type f -exec chmod Permission {} +       Regex           Regex   "
    },
    {
      "source": "Display all lines containing \"IP_MROUTE\" in the current kernel's compile-time config file.",
      "target": "cat $( uname -r ) | grep Regex",
      "prediction": "<|endoftext|> <|source|> Display all lines containing \"IP_MROUTE\" in the current kernel's compile-time config file. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and set their permission to 755 <|target|> find Path -type f -exec chmod Permission {} \\;       | grep Regex       | awk -F Re"
    },
    {
      "source": "Remove all regular non-hidden files modified more than 7 days ago and residing in the /tmp directory tree",
      "target": "find Path -type f -name Regex -mtime +Timespan -print0 | xargs -0 -I {} rm -f {}",
      "prediction": "<|endoftext|> <|source|> Remove all regular non-hidden files modified more than 7 days ago and residing in the /tmp directory tree <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files in the current directory tree that are not newer than the file $newerthan and delete them <|target|> find Path -type f -not -newer File -exec rm {} \\;    | xargs -I {} rm {} \\;"
    },
    {
      "source": "Unzip every \".gz\" file in the current directory tree",
      "target": "find Path -name Regex -exec gunzip {} \\;",
      "prediction": "<|endoftext|> <|source|> Unzip every \".gz\" file in the current directory tree <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are not newer than \"file_1\" and do not contain any files newer than \"file_1\" <|target|> find Path -newer File -type f -print0 | xargs -0 -I {}"
    },
    {
      "source": "change permission of all the files in the entire file system which have the permissions 777.",
      "target": "find Path -type f -perm Permission -print -exec chmod Permission {} \\;",
      "prediction": "<|endoftext|> <|source|> change permission of all the files in the entire file system which have the permissions 777. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory tree that are less than 100MB <|target|> find Path -size -Size -Size -print                             "
    },
    {
      "source": "Prints information about active network interfaces in system.",
      "target": "echo $( ifconfig )",
      "prediction": "<|endoftext|> <|source|> Prints information about active network interfaces in system. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|source|> Find all files/directories under current directory and print their names and sizes <|target|> find Path -exec ls -l -d -1 | xargs -0 -I {} ls -l -d -1 {} | tail -n Quantity      "
    },
    {
      "source": "find all the reguar/normal php files in current directory.",
      "target": "find Path -type f -name Regex",
      "prediction": "<|endoftext|> <|source|> find all the reguar/normal php files in current directory. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Search for the word \"test\" in all the files in the current directory tree and show the matched lines with their names <|target|> find Path -type f -exec grep -i Regex {} \\; -exec grep -i Regex {} \\;    | grep -"
    },
    {
      "source": "search  in root  ( / ) directory downwards all files which have less than 2 links.",
      "target": "find Path -links -Quantity -print",
      "prediction": "<|endoftext|> <|source|> search  in root  ( / ) directory downwards all files which have less than 2 links. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under /path/to/dir that are owned by the user 'username' and have not been modified in the last 30 days <|target|> find Path -user Regex -mtime +Timespan -type f -print0 | xargs -0"
    },
    {
      "source": "Find all files/directories under current directory",
      "target": "find Path -print0 | xargs -0",
      "prediction": "<|endoftext|> <|source|> Find all files/directories under current directory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new version of the standard input format is available for all users. <|target|> find Path -type f | sed Program         | grep Regex                          "
    },
    {
      "source": "display all regular/normal files in the folder \"dir\" and display the filename along with file size",
      "target": "find Path -type f -printf \"f %s %p\\n\"",
      "prediction": "<|endoftext|> <|source|> display all regular/normal files in the folder \"dir\" and display the filename along with file size <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Print the names of all files in the current directory tree that are newer than the file $newerthan and older than the file $olderthan <|target|> find Path -type f -newerthan {} -print  | sed -n Program        "
    },
    {
      "source": "find regular file named foo.txt under root / directory.",
      "target": "find Path -name Regex -type f -print",
      "prediction": "<|endoftext|> <|source|> find regular file named foo.txt under root / directory. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files under /home/myuser/dir and below that are greater than 100MB in size <|target|> find Path -type f -size +Size -size +Size -exec ls -l {} \\;      | grep Regex    "
    },
    {
      "source": "Evaluate the output of recursively changing the owner and group of \"/data/*\" to \"mongodb\"",
      "target": "$( chown -R Regex File )",
      "prediction": "<|endoftext|> <|source|> Evaluate the output of recursively changing the owner and group of \"/data/*\" to \"mongodb\" <|target|> chown -R Regex File        Regex                                                 "
    },
    {
      "source": "find all files  that names are 'apt'",
      "target": "find Path -name Regex",
      "prediction": "<|endoftext|> <|source|> find all files  that names are 'apt' <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>Find all the files in the current directory tree that are owned by user 'tom' and have not been accessed in over 90 days. <|source|> find Path -user Regex -atime +Timespan -type f -print              | grep Re"
    },
    {
      "source": "Print a sorted list of *.so files in the bla directory tree",
      "target": "find Path -name Regex -print0 | sort -r -z",
      "prediction": "<|endoftext|> <|source|> Print a sorted list of *.so files in the bla directory tree <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file contains a list of all the files in the current directory tree that are not owned by any user. <|target|> find Path -nouser -or -nogroup -print0 | xargs -0 -I {} ls -l {}    | sort -n | tail - Quantity"
    },
    {
      "source": "Find all .core files on the system starting from / and delete them",
      "target": "find Path -name Regex | xargs -I {} rm {}",
      "prediction": "<|endoftext|> <|source|> Find all.core files on the system starting from / and delete them <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and print their names and sizes <|target|> find Path -name Regex -exec rm {} \\;          | sed -n Program             "
    },
    {
      "source": "Find all files/directories that start with 'screen' (case insensitive) in their names under user's home directory tree",
      "target": "find Path -iname Regex",
      "prediction": "<|endoftext|> <|source|> Find all files/directories that start with'screen' (case insensitive) in their names under user's home directory tree <|target|> find Path -iname Regex                                                         "
    },
    {
      "source": "Print characters 2 through 4 of \"abcdefg\"",
      "target": "echo Regex | tail -c +Quantity | head -c Quantity",
      "prediction": "<|endoftext|> <|source|> Print characters 2 through 4 of \"abcdefg\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and print their contents. <|target|> find Path -name Regex -print0 | xargs -0 -I {} cat {} | awk Program        | tr Regex Regex    "
    },
    {
      "source": "Find files/directories under /users/tom that matches both the pattern \"*.pl\" and  \"*.pm\"",
      "target": "find Path -name Regex -name Regex",
      "prediction": "<|endoftext|> <|source|> Find files/directories under /users/tom that matches both the pattern \"*.pl\" and  \"*.pm\" <|target|> find Path -name Regex                                                          "
    },
    {
      "source": "forcibly create a symbolic link named \"linkname\" to file \"new_destination\"",
      "target": "ln -s -f File Regex",
      "prediction": "<|endoftext|> <|source|> forcibly create a symbolic link named \"linkname\" to file \"new_destination\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and print the pathnames of their parent directories <|target|> find Path -type f -exec echo Regex {} \\;                       "
    },
    {
      "source": "Report file systems disk usage using POSIX output format.",
      "target": "df -P",
      "prediction": "<|endoftext|> <|source|> Report file systems disk usage using POSIX output format. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and show the output of each one in a neat row <|target|> find Path -type f -exec ls -l -l {} \\; | sort  | uniq    | sort  | sort  | uniq "
    },
    {
      "source": "Compress every file in the current directory tree with gzip and keep file extensions the same",
      "target": "find Path -type f -exec gzip -9 {} \\; -exec mv File {} \\;",
      "prediction": "<|endoftext|> <|source|> Compress every file in the current directory tree with gzip and keep file extensions the same <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory tree that are owned by user 'j' and have not been modified in the last 60 minutes <|target|> find Path -user Regex -mmin -Quantity -print0 | xargs -0 -I {} gzip {} "
    },
    {
      "source": "Find all *.csv files under /foo/bar and move them to some_dir",
      "target": "find Path -name Regex -print0 | xargs -0 -I {} mv -t Directory {}",
      "prediction": "<|endoftext|> <|source|> Find all *.csv files under /foo/bar and move them to some_dir <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under /usr/share/doc and change their permission to 755 <|target|> find Path -type f -exec chmod Permission {} +      -exec chmod Permission {} +     -exec chmod"
    },
    {
      "source": "Check if a drive is mounted to nfs",
      "target": "mount | grep Regex",
      "prediction": "<|endoftext|> <|source|> Check if a drive is mounted to nfs <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long and detailed look at the history of the world's largest file system. <|source|> Search for 'file' in all files under current directory tree and display the number of lines matching lines. <|target|> find Path -type f -exec grep -l Regex {} + "
    },
    {
      "source": "display all the files in the folder \"/dev\" which belong to the user \"peter\"",
      "target": "find Path -user Regex | more",
      "prediction": "<|endoftext|> <|source|> display all the files in the folder \"/dev\" which belong to the user \"peter\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long list of all the files in the current directory tree that are not readable by anyone but the user. <|target|> find Path! -perm Permission -exec ls -l {} \\;    | grep Regex             "
    },
    {
      "source": "Move all directories from the `sourceDir' directory tree to the `destDir' directory",
      "target": "find Path -mindepth Quantity -type d -exec mv -t Directory {} +",
      "prediction": "<|endoftext|> <|source|> Move all directories from the `sourceDir' directory tree to the `destDir' directory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file is a part-time job for a current user.\n <|source|> find Path -type d -execdir rename Regex {} \\;                        "
    },
    {
      "source": "Search the files residing in the current directory tree whose names contain \"bills\" for \"put\"",
      "target": "find Path -name Regex -print0 | xargs -0 -I {} grep Regex {}",
      "prediction": "<|endoftext|> <|source|> Search the files residing in the current directory tree whose names contain \"bills\" for \"put\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|source|> Find all files under current directory and change their permission to 755. <|target|> find Path -type f -exec chmod Permission {} \\;                 "
    },
    {
      "source": "Print a colon-separated list of all directories from the ~/code directory tree, except hidden ones and those below them",
      "target": "find Path -type d | sed Program | tr Regex Regex | sed Program",
      "prediction": "<|endoftext|> <|source|> Print a colon-separated list of all directories from the ~/code directory tree, except hidden ones and those below them <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the names of all the files in the current directory tree that are not in the current directory and do not match the pattern \"/tmp/file_name\" in their names. <|source|> find Path -type f -not -name Regex"
    },
    {
      "source": "Remove all *.tmp files from the /tmp directory tree",
      "target": "find Path -name Regex -print0 | xargs -0 -I {} rm {}",
      "prediction": "<|endoftext|> <|source|> Remove all *.tmp files from the /tmp directory tree <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are owned by user'me' and have not been accessed in over 90 days. <|target|> find Path -user Regex -atime +Timespan -exec ls -l -t {}"
    },
    {
      "source": "Find all regular files under $d directory tree and change their permissions to 777",
      "target": "find Path -type f -print0 | xargs -0 -I {} chmod Permission {}",
      "prediction": "<|endoftext|> <|source|> Find all regular files under $d directory tree and change their permissions to 777 <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new type of 'file' is a file that contains all files in a current folder. <|target|> find Path -type f -execdir rename Regex {} +       | grep Regex         | x"
    },
    {
      "source": "Replace newline with \"_\" in \"file\" then search for \"_foo_\" and output with \"_\" characters deleted",
      "target": "grep -o Regex <( paste -s -d Regex File ) | tr -d Regex",
      "prediction": "<|endoftext|> <|source|> Replace newline with \"_\" in \"file\" then search for \"_foo_\" and output with \"_\" characters deleted <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory tree that are owned by user'me' <|target|> find Path -user Regex -user Regex -execdir rename Regex {} \\;      | sed -n Program"
    },
    {
      "source": "Find all directories under ${1:-.} directory without descending into any sub-directories",
      "target": "find Path -mindepth Quantity -maxdepth Quantity -type d",
      "prediction": "<|endoftext|> <|source|> Find all directories under ${1:-.} directory without descending into any sub-directories <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are newer than the file $1 and older than the file $2. <|target|> find Path -type f -newer File -print0 | xargs -0 -I {} ls -"
    },
    {
      "source": "Print only name and login columns of the currently logged in users",
      "target": "finger -s | awk Program",
      "prediction": "<|endoftext|> <|source|> Print only name and login columns of the currently logged in users <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long and detailed list of all the files in the current directory tree that are not newer than the file \"file1\" and not newer than \"file2\" <|target|> find Path -not -newer File -not -name Regex -not -"
    },
    {
      "source": "Prints all NS servers of domain google.com.",
      "target": "dig Regex Regex | awk Program",
      "prediction": "<|endoftext|> <|source|> Prints all NS servers of domain google.com. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a list of all files in the current directory tree that are not newer than the file \"file.txt\" and do not contain the file \"file.txt\" <|target|> find Path -type f -not -newer File! -newer File!"
    },
    {
      "source": "Copy \"source\" recursively to \"destination\" excluding \"path1/to/exclude\" and \"path2/to/exclude\"",
      "target": "rsync -a -v --exclude Regex --exclude Regex File File",
      "prediction": "<|endoftext|> <|source|> Copy \"source\" recursively to \"destination\" excluding \"path1/to/exclude\" and \"path2/to/exclude\" <|target|> rsync -r -v -v -v -e File File File                                          "
    },
    {
      "source": "Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.",
      "target": "sort File | uniq | cut -f Number -d Regex | uniq -c | rev",
      "prediction": "<|endoftext|> <|source|> Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and print the names of all files/directories that match pattern 'pattern' <|target|> find Path -name Regex -exec grep -l Regex {} \\;    "
    },
    {
      "source": "list PID of a group leader",
      "target": "jobs -l -p",
      "prediction": "<|endoftext|> <|source|> list PID of a group leader <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>Find all files in the current directory tree that are bigger than 10 megabytes and less than 10 Gigabytes and print the total size of them. <|target|> find Path -size +Size -size +Size -Size -Size -print0 | xargs -"
    },
    {
      "source": "Search for files/directories with the case insensitive pattern anaconda.* in var/log directory and create an archive (file.tar) of all the files found",
      "target": "find Path -iname Regex -exec tar -r -v -f File {} \\;",
      "prediction": "<|endoftext|> <|source|> Search for files/directories with the case insensitive pattern anaconda.* in var/log directory and create an archive (file.tar) of all the files found <|target|> find Path -iname Regex -exec tar -c -f File {} \\;                                     "
    },
    {
      "source": "Copy all .txt files from the dir/ directory tree along with their parent directories hierarchy",
      "target": "find Path -name Regex | xargs -I {} cp -a --target-directory Directory --parents {}",
      "prediction": "<|endoftext|> <|source|> Copy all.txt files from the dir/ directory tree along with their parent directories hierarchy <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Print the names of all regular files in the current directory tree that are newer than the current one <|target|> find Path -type f -newer File! -newer File! -newer File! -newer File! -"
    },
    {
      "source": "Find all foo.mp4 files in the current directory tree and print the pathnames of their parent directories",
      "target": "find Path -name Regex -printf '%h\\n'",
      "prediction": "<|endoftext|> <|source|> Find all foo.mp4 files in the current directory tree and print the pathnames of their parent directories <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>AUSTIN, TX - TX -0.0.0 (PREMIER) -- AUSTIN, TX -0.0 Receiver -- AUSTIN, TX -0.0 Receiver -- Receiver -- Regex -- Regex -- Regex -- Regex --"
    },
    {
      "source": "Display non-hidden files in the current directory with the given output format",
      "target": "find Path -maxdepth Quantity -name Regex -printf 'Name: %16f Size: %6s\\n'",
      "prediction": "<|endoftext|> <|source|> Display non-hidden files in the current directory with the given output format <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|source|> Find all files/directories under current directory and print them with the current directory name <|target|> find Path -name Regex -print0 | xargs -0 -I {} echo Regex {}     "
    },
    {
      "source": "Find all files/directories under current directory with null character as the delimiter",
      "target": "find Path -print0",
      "prediction": "<|endoftext|> <|source|> Find all files/directories under current directory with null character as the delimiter <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files/directories under current directory that are newer than the file /tmp/test/ and do not have the permission to be read by others. <|target|> find Path -newer File -print0 | xargs"
    },
    {
      "source": "Numberically sort content of file 'files', using for sorting part of second one of dash separated fields beginning from second letter.",
      "target": "cat File | sort -t Regex -k Number -n",
      "prediction": "<|endoftext|> <|source|> Numberically sort content of file 'files', using for sorting part of second one of dash separated fields beginning from second letter. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new report from the Times Square Archive finds the largest files in the current directory tree and prints the total size of them. <|source|> find Path -type f -exec du -k -s -t {} \\; | sort -n | head - Quantity"
    },
    {
      "source": "Find recursively the files named \"file\" in the current directory ignoring the .git subdirectory",
      "target": "find Path -path Regex -prune -or -name Regex -print",
      "prediction": "<|endoftext|> <|source|> Find recursively the files named \"file\" in the current directory ignoring the.git subdirectory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory that are greater than 10 megabytes in size and print the names of the files they are in the current directory <|target|> find Path -size +Size -exec ls -l {} \\;"
    },
    {
      "source": "Find all .java files starting from the current folder",
      "target": "find Path -name Regex",
      "prediction": "<|endoftext|> <|source|> Find all.java files starting from the current folder <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long list of all the files in the current directory tree that are not newer than the file \"file1\" and do not match the pattern \"file2\" in their names. <|target|> find Path -type f -not -name Regex"
    },
    {
      "source": "Remove the file with inode number 752010",
      "target": "find Path -inum Quantity -exec rm {} \\;",
      "prediction": "<|endoftext|> <|source|> Remove the file with inode number 752010 <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file is a part of the current directory tree, and is used to create directories in the current directory. <|target|> find Path -type d -exec mkdir -p Directory \\;                     "
    },
    {
      "source": "Find all files/directories named 'Desktop' under current directory",
      "target": "find Path -name Regex",
      "prediction": "<|endoftext|> <|source|> Find all files/directories named 'Desktop' under current directory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|source|> Find all files/directories under current directory and print their names and their contents <|target|> find Path -name Regex -print0 | xargs -0 -I {} cat {} | awk Program             "
    },
    {
      "source": "delete recursively, without prompting, any files or directories under the current directory that case insensitively match the filename \".svn\"",
      "target": "find Path -iname Regex -exec rm -r -f {} \\;",
      "prediction": "<|endoftext|> <|source|> delete recursively, without prompting, any files or directories under the current directory that case insensitively match the filename \".svn\" <|target|> find Path -iname Regex -exec rm -r -f {} \\;                                             "
    },
    {
      "source": "Print the input \"hello world\" to the console followed by a swap of the first two awk fields",
      "target": "echo Regex Regex | tee File | awk Program",
      "prediction": "<|endoftext|> <|source|> Print the input \"hello world\" to the console followed by a swap of the first two awk fields <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and change their permission to 755 <|target|> find Path -type f -exec chmod Permission {} \\;                      "
    },
    {
      "source": "Filter contents of 'file' through awk commands written in script.awk, display the result.",
      "target": "awk -f File Program",
      "prediction": "<|endoftext|> <|source|> Filter contents of 'file' through awk commands written in script.awk, display the result. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Print the names of all files under current directory tree that are newer than the file 'file' <|target|> find Path -newer File -print0 | xargs -0 -I {} echo Regex {}            "
    },
    {
      "source": "delete all the normal/regular files in the current folder",
      "target": "find Path -type f -print -delete",
      "prediction": "<|endoftext|> <|source|> delete all the normal/regular files in the current folder <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new year is a time of year in which we all join in the common cause of the day. <|target|> find Path -type f -iname Regex -exec rm -f {} \\;                  "
    },
    {
      "source": "Search the current directory tree for all files except SVN ones",
      "target": "find Path | grep -v Regex",
      "prediction": "<|endoftext|> <|source|> Search the current directory tree for all files except SVN ones <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are newer than the file $file. <|target|> find Path -type f -newer File -print0 | xargs -0 -I {} ls -l {}         | grep"
    },
    {
      "source": "Find all files residing in /home/dm/Video or below that were last changed at least 10 days ago",
      "target": "find Path -mtime +Timespan",
      "prediction": "<|endoftext|> <|source|> Find all files residing in /home/dm/Video or below that were last changed at least 10 days ago <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory that are owned by user 'user' <|target|> find Path -user Regex -print                           "
    },
    {
      "source": "Find all files/directories that are not newer than Jul 01 by modification time",
      "target": "find Path ! -newermt Regex",
      "prediction": "<|endoftext|> <|source|> Find all files/directories that are not newer than Jul 01 by modification time <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and its sub-directories and print the output with line numbers <|target|> find Path -maxdepth Quantity -type f -exec echo Regex Regex \\;      | awk Program   "
    },
    {
      "source": "Find all *.txt files/directories under current directory",
      "target": "find Path -name Regex",
      "prediction": "<|endoftext|> <|source|> Find all *.txt files/directories under current directory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long and detailed list of all the files in the current directory tree that are not owned by any user. <|source|> find Path -user Regex -not -user Regex -print0 | xargs -0 -I {} ls -l {}      "
    },
    {
      "source": "Change the ownership of all files in the current directory tree from root to www-data",
      "target": "find Path -user Regex -exec chown Regex {} \\;",
      "prediction": "<|endoftext|> <|source|> Change the ownership of all files in the current directory tree from root to www-data <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long one. <|source|> Find all files in the current directory tree that are bigger than 100 megabytes and do not have the word \"big\" in their names. <|target|> find Path -type f"
    },
    {
      "source": "Find all files/directories named 'query' under current directory tree",
      "target": "find Path -name Regex",
      "prediction": "<|endoftext|> <|source|> Find all files/directories named 'query' under current directory tree <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>Find all the files in the current directory tree that are owned by user 'user' and delete them. <|target|> find Path -user Regex -exec rm -r -f {} \\;     | xargs"
    },
    {
      "source": "search for text files in the current folder which have write access to others",
      "target": "find Path -type f \\( -iname Regex -and -perm -Permission \\)",
      "prediction": "<|endoftext|> <|source|> search for text files in the current folder which have write access to others <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>\nThis file is a part of the current directory tree, and it is used to create a symbolic link to the current directory. <|target|> find Path -type l -exec ln -s {} Regex {} \\; "
    },
    {
      "source": "Change every file under \"/var/www/html/\" to have permissions 664",
      "target": "find Path -type f -exec chmod Permission {} \\;",
      "prediction": "<|endoftext|> <|source|> Change every file under \"/var/www/html/\" to have permissions 664 <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>Find all files/directories under current directory and print the output to console.\n <|target|> find Path -name Regex -print0 | xargs -0 -I {} echo {}       | tr"
    },
    {
      "source": "Infinitely print \"1\" then \"0\"",
      "target": "yes Regex | sed Program",
      "prediction": "<|endoftext|> <|source|> Infinitely print \"1\" then \"0\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Print the names of all files in the current directory tree and print the names of the files in the subdirectories. <|target|> find Path -maxdepth Quantity -type f | xargs -I {}"
    },
    {
      "source": "List the current directory recursively ignoring ./src/emacs/ and all its contents",
      "target": "find Path -path Regex -prune -or -print",
      "prediction": "<|endoftext|> <|source|> List the current directory recursively ignoring./src/emacs/ and all its contents <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A common problem in the home office is that of keeping a single file with multiple users. <|target|> find Path -type f -exec ls -1 -l -r -s -t {} \\;  | grep Regex"
    },
    {
      "source": "Remount \"extX\" filesystem \"/dev/hdaX\" on \"/\" without writing in \"/etc/mtab\"",
      "target": "mount -n -o remount -t extX Regex Regex",
      "prediction": "<|endoftext|> <|source|> Remount \"extX\" filesystem \"/dev/hdaX\" on \"/\" without writing in \"/etc/mtab\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file is a part of the current directory, and is not accessible by anyone. <|target|> find Path -type f -name Regex -print0 | xargs -0 -I {} chmod Permission {}  "
    },
    {
      "source": "create a zip of log files in the current directory which have not been accessed in the last 3 days (-p is for parallel processing for a 4 cpu machine, -n is for maximum work units)",
      "target": "find Path -name Regex -mtime +Timespan -print0 | xargs -0 -n Quantity -P Quantity -I {} bzip2 {}",
      "prediction": "<|endoftext|> <|source|> create a zip of log files in the current directory which have not been accessed in the last 3 days (-p is for parallel processing for a 4 cpu machine, -n is for maximum work units) <|target|> find Path -type f -atime +Timespan -exec zcat {} \\;                               "
    },
    {
      "source": "Numerically sort standard input by the second word of each line",
      "target": "sort -n -k Number",
      "prediction": "<|endoftext|> <|source|> Numerically sort standard input by the second word of each line <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first word of every line in \"file\" is the first line in \"file\" and the second line in \"file\" is the second line in \"file\" and the third line in \"file\" is the last line in \"file"
    },
    {
      "source": "display a long listing of all the java files in the current folder in sorted order",
      "target": "find Path -type f -name Regex -ls | sort -k +Number -r",
      "prediction": "<|endoftext|> <|source|> display a long listing of all the java files in the current folder in sorted order <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|source|> Find all the files in the current directory tree that are not owned by user'me' <|target|> find Path -user Regex -not -user Regex -not -user Regex -not -"
    },
    {
      "source": "Find all regular files that contain 'linux' (case insensitive) in their names under '/root' directory tree",
      "target": "find Path -type f -iname Regex",
      "prediction": "<|endoftext|> <|source|> Find all regular files that contain 'linux' (case insensitive) in their names under '/root' directory tree <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Search for the regex 'foo' in all the regular files in the current directory tree and print the names of the files <|target|> find Path -type f -exec grep -i -l Regex {} \\;  | grep -v Regex   "
    },
    {
      "source": "Find all files under and below /dir that were changed or created less than 60 minutes ago",
      "target": "find Path -cmin -Quantity",
      "prediction": "<|endoftext|> <|source|> Find all files under and below /dir that were changed or created less than 60 minutes ago <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under /dir directory and print the first 10 lines of their names <|target|> find Path -name Regex -print0 | xargs -0 -I {} cat {} | awk Program         |"
    },
    {
      "source": "Print the date formatted with \"%a %x %X\" followed by the host name",
      "target": "echo $( date +\"%a %x %X\" ) $( hostname )",
      "prediction": "<|endoftext|> <|source|> Print the date formatted with \"%a %x %X\" followed by the host name <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|source|> Search for 'foo' in all files under current directory tree and print the names of the files that match the regex 'foo' <|target|> find Path -exec grep Regex {} \\; -print | grep -E Regex      | grep"
    },
    {
      "source": "Print the list of files in the home directory tree whose names begin with \"Foto\"",
      "target": "find Path -name Regex",
      "prediction": "<|endoftext|> <|source|> Print the list of files in the home directory tree whose names begin with \"Foto\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Search for the regex'subdomainA.example.com' in all files under current directory and show the matched lines with their filenames <|target|> find Path -type f -exec grep Regex {} \\; -exec grep -l Regex {} \\"
    },
    {
      "source": "Recursively removes all files like '_*' and '.DS_Store' from /var/www/html/ folder.",
      "target": "rm File File",
      "prediction": "<|endoftext|> <|source|> Recursively removes all files like '_*' and '.DS_Store' from /var/www/html/ folder. <|target|><|endoftext|> <|source|> Find all files/directories under current directory and print their paths <|target|> find Path -name Regex -exec rm -f {} \\;                        "
    },
    {
      "source": "Filters only directories from long file listing of the current directory.",
      "target": "ls -l | grep Regex",
      "prediction": "<|endoftext|> <|source|> Filters only directories from long file listing of the current directory. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files under current directory and print their names <|target|> find Path -type f -exec ls -l -r -s -d -t {} \\;    | awk Program             "
    },
    {
      "source": "Find all the regular files under '/your/dir' directory tree which are bigger than 5 MB and display them in decreasing order of their sizes",
      "target": "find Path -type f -size +Size -exec du -h {} + | sort -h -r",
      "prediction": "<|endoftext|> <|source|> Find all the regular files under '/your/dir' directory tree which are bigger than 5 MB and display them in decreasing order of their sizes <|target|> find Path -type f -size +Size -exec ls -l -s {} \\;      | sort                                   "
    },
    {
      "source": "Prints line count of each file within current directory.",
      "target": "find Path -type f -print | xargs -L Quantity -I {} wc -l {}",
      "prediction": "<|endoftext|> <|source|> Prints line count of each file within current directory. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|source|> Print the names of all files in the current directory tree and its subdirectories. <|target|> find Path -type f -exec echo {} \\;  | grep -E Regex         | sort | uniq "
    },
    {
      "source": "Reverse the text in $input by taking each 4 characters as each units and save the result in variable 'output'",
      "target": "echo Regex | fold -w Quantity | tac | tr -d Regex",
      "prediction": "<|endoftext|> <|source|> Reverse the text in $input by taking each 4 characters as each units and save the result in variable 'output' <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory tree that are owned by user 'username' and delete them <|target|> find Path -user Regex -exec rm -r -f {} \\;         | grep Regex  "
    },
    {
      "source": "Find the largest files in a particular location",
      "target": "find Path -type f -exec du -S -h {} + | sort -r -h | head -n Quantity",
      "prediction": "<|endoftext|> <|source|> Find the largest files in a particular location <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file is a bit of a long-shot, but it's a long-shot. <|source|> Find all the files in the current directory tree that are bigger than 100 megabytes and less than 100 megabytes. <|target|> find Path -type f -size +Size"
    },
    {
      "source": "List all regular files from the current directory tree that were modified less than 60 minutes ago",
      "target": "find Path -type f -mmin -Quantity -print0 | xargs -r -0 -I {} ls -l {}",
      "prediction": "<|endoftext|> <|source|> List all regular files from the current directory tree that were modified less than 60 minutes ago <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long list of the top 10 biggest files in the current directory tree. <|target|> find Path -type f -exec ls -l {} \\; | sort | uniq -c  | sort -n | head -n Quantity   "
    },
    {
      "source": "Show directory sizes in KB and sort to give the largest at the end",
      "target": "du -s -k $( find Path -type d ) | sort -n -k Number",
      "prediction": "<|endoftext|> <|source|> Show directory sizes in KB and sort to give the largest at the end <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and print the names of them <|target|> find Path -exec dirname Regex -exec ls -l {} \\;      | sort -n | head - Quantity "
    },
    {
      "source": "List all regular files under current directory ensuring white space safety",
      "target": "find Path -type f -print0 | xargs -0 -n Quantity",
      "prediction": "<|endoftext|> <|source|> List all regular files under current directory ensuring white space safety <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A common question in the current session of the \"Search for\" command is \"Are you sure? \" and \"Are you sure? \" is followed by the number of occurrences of both \"yes\" and \"no\" <|target|> yes | nl | yes"
    },
    {
      "source": "find all the files in current folder which have been updated in the last 60 minutes",
      "target": "find Path -mmin -Quantity",
      "prediction": "<|endoftext|> <|source|> find all the files in current folder which have been updated in the last 60 minutes <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the latest and greatest files in the current directory tree. <|source|> find Path -type f -name Regex -exec ls -l {} \\; | sort -n | head -n Quantity | tail -n Quantity | x"
    },
    {
      "source": "Copies all files like 'lib*.so' to '~/usr/gtest/lib/' directory.",
      "target": "cp File File",
      "prediction": "<|endoftext|> <|source|> Copies all files like 'lib*.so' to '~/usr/gtest/lib/' directory. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Print the names of all files and directories in the current directory tree <|target|> find Path -name Regex -exec echo {} \\;  | grep Regex               "
    },
    {
      "source": "Copies defined file to the target folder without overwriting existing files.",
      "target": "cp -n",
      "prediction": "<|endoftext|> <|source|> Copies defined file to the target folder without overwriting existing files. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|source|> Find all files/directories under current directory and print their names and sizes <|target|> find Path -type f -exec basename {} \\;     | awk Program        "
    },
    {
      "source": "display all the html files in the current folder that have been modified exactly 7*24 hours ago",
      "target": "find Path -mtime Timespan -name Regex -print",
      "prediction": "<|endoftext|> <|source|> display all the html files in the current folder that have been modified exactly 7*24 hours ago <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|source|> Find all files in the current directory tree that are not owned by user'me' and delete them <|target|> find Path -user Regex -not -user Regex -not -user Regex -not -user Re"
    },
    {
      "source": "Look for regular files in the directory trees 'deferred', 'active', 'maildrop', 'incoming' under /var/spool/postfix/",
      "target": "find Path -type f",
      "prediction": "<|endoftext|> <|source|> Look for regular files in the directory trees 'deferred', 'active','maildrop', 'incoming' under /var/spool/postfix/ <|target|> find Path -type f -name Regex -print                                            "
    },
    {
      "source": "Search for 'some string' in all *js files under current directory and show the matched lines with line numbers",
      "target": "find Path -name Regex | grep -n Regex",
      "prediction": "<|endoftext|> <|source|> Search for'some string' in all *js files under current directory and show the matched lines with line numbers <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files under current directory and set their permission to 755 <|target|> find Path -type f -exec chmod Permission {} \\;       | grep Regex        "
    },
    {
      "source": "display all the files in the file system which belong to the group lighttpd",
      "target": "find Path -group Regex -print",
      "prediction": "<|endoftext|> <|source|> display all the files in the file system which belong to the group lighttpd <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>In this file photo taken from the beginning of the day, the first day of the month, the day of the year, the day of the year, and the day of the year. (cal.date) is the day of the first Tuesday in February, and the"
    },
    {
      "source": "Search directory lpi104-6 for files with inode number 1988884",
      "target": "find Path -inum Quantity",
      "prediction": "<|endoftext|> <|source|> Search directory lpi104-6 for files with inode number 1988884 <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long list of all the files in the current directory tree that are not in the path $path/to/dir. <|target|> find Path -type f! -path Regex -print0       | grep -v Regex  "
    },
    {
      "source": "Find files/directories under current directory that are modified exactly one hour ago",
      "target": "find Path -mtime Timespan",
      "prediction": "<|endoftext|> <|source|> Find files/directories under current directory that are modified exactly one hour ago <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long-running, multi threaded process with multiple processes. For each line in \"file1\" and \"file2\" that is not a line, the output will be different. For each line in \"file3\" and \"file1\" that is not a line, the"
    },
    {
      "source": "Get the number of \"use\" statements in all PHP files, ordered",
      "target": "find Path -type f -name Regex -exec grep --with-filename -c Regex {} \\; | sort -t Regex -k Number -n -r",
      "prediction": "<|endoftext|> <|source|> Get the number of \"use\" statements in all PHP files, ordered <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long list of the files in the current directory tree that are not in the directory tree \"~/.git\" <|target|> find Path -type f -not -path Regex -exec ls -l {} \\;  | grep -E -v Regex |"
    },
    {
      "source": "Finds file 'Subscription.java' and changes to containing folder.",
      "target": "cd $( find Path -name Regex | xargs -I {} dirname {} )",
      "prediction": "<|endoftext|> <|source|> Finds file 'Subscription.java' and changes to containing folder. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new and expanded version of the \"numerics\" shell is in the current directory. <|source|> find Path -name Regex -exec grep -i Regex {} \\;          Regex        "
    },
    {
      "source": "Enables 'nullglob' shell option.",
      "target": "shopt -s nullglob",
      "prediction": "<|endoftext|> <|source|> Enables 'nullglob' shell option. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|source|> Print the names of all regular files in the current directory tree and its subdirectories. <|target|> find Path -type f -exec basename {} \\;     | tr -d Regex Regex       "
    },
    {
      "source": "Find all .java files whose name contains \"Message\"",
      "target": "find Path -print | grep Regex",
      "prediction": "<|endoftext|> <|source|> Find all.java files whose name contains \"Message\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long list of all the files in the current directory tree that are not modified in the last 60 minutes. <|target|> find Path -mmin -Quantity -type f -exec ls -l -a -r -t {} \\;   | grep -E"
    },
    {
      "source": "Move all files from the `sourceDir' directory tree to the `destDir' directory",
      "target": "find Path -mindepth Quantity -exec mv {} --target-directory Directory \\;",
      "prediction": "<|endoftext|> <|source|> Move all files from the `sourceDir' directory tree to the `destDir' directory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file is a part of the current directory tree, and contains the directory where the file is located. <|target|> find Path -type d -name Regex -execdir mv {} File \\;               "
    },
    {
      "source": "Search for first match of the case insensitive regex 'oyss' in all *.txt files under current directory and print the file paths along with the matches",
      "target": "find Path -name Regex | xargs -I {} grep -m Quantity -r -i Regex {}",
      "prediction": "<|endoftext|> <|source|> Search for first match of the case insensitive regex 'oyss' in all *.txt files under current directory and print the file paths along with the matches <|target|> find Path -type f -iname Regex -exec grep -i -l Regex {} \\;      | awk Program           | grep -l Regex            "
    },
    {
      "source": "Find all PHP files under current directory that contain only one line",
      "target": "find Path -type f -name Regex -exec wc -l {} \\; | grep -E Regex",
      "prediction": "<|endoftext|> <|source|> Find all PHP files under current directory that contain only one line <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|source|> Print the names of all the files in the current directory tree that are not owned by the user 'tom' or 'tom' <|target|> find Path -nouser -user Regex -type f -exec grep -i Regex {} \\;"
    },
    {
      "source": "list all *.txt files in the user's home directory.",
      "target": "find Path -name Regex",
      "prediction": "<|endoftext|> <|source|> list all *.txt files in the user's home directory. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Search for the regex regex 'expr' in all files under current directory and show the matched lines along with the filenames <|target|> find Path -type f -exec grep -i Regex {} \\;  | sed -i Program -e Program"
    },
    {
      "source": "Replace the first occurrence of \"foo\" with \"bar\" on every line in .txt files from the current directory tree",
      "target": "find Path -type f -name Regex | xargs --replace Regex -I {} sed --in-place Regex Program {}",
      "prediction": "<|endoftext|> <|source|> Replace the first occurrence of \"foo\" with \"bar\" on every line in.txt files from the current directory tree <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and print their names <|target|> find Path -print0 | xargs -0 -I {} -n Quantity -i -r -v Regex       "
    },
    {
      "source": "Print the full path of command \"cc\"",
      "target": "which Regex",
      "prediction": "<|endoftext|> <|source|> Print the full path of command \"cc\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the current directory of the current directory. <|target|> find Path -type d -name Regex -exec ls -l -r -t {} \\;        | grep Regex   "
    },
    {
      "source": "Write contents of \"/sys/kernel/debug/tracing/trace_pipe\" to standard output and to \"tracelog.txt\" executing as a root user",
      "target": "cat File | tee File",
      "prediction": "<|endoftext|> <|source|> Write contents of \"/sys/kernel/debug/tracing/trace_pipe\" to standard output and to \"tracelog.txt\" executing as a root user <|target|> cat File | tee File                                                 "
    },
    {
      "source": "Recursively finds all 'STATUS.txt' files containing text 'OPEN' and prints containing folder of them.",
      "target": "find Path -type f -name Regex -exec grep -q Regex {} \\; -exec dirname {} \\;",
      "prediction": "<|endoftext|> <|source|> Recursively finds all 'STATUS.txt' files containing text 'OPEN' and prints containing folder of them. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are owned by the user 'tom' and are not newer than 'new' files. <|target|> find Path -user Regex -newer File -print0 | xargs"
    },
    {
      "source": "Compress the file 'file' with 'bzip2' and append all output to the file 'logfile' and stdout",
      "target": "bzip2 File | tee -a File",
      "prediction": "<|endoftext|> <|source|> Compress the file 'file' with 'bzip2' and append all output to the file 'logfile' and stdout <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory that are owned by the user 'amzadze' and have not been accessed in the last 30 days <|target|> find Path -user Regex -atime +Timespan -"
    },
    {
      "source": "Search PATH for utilities called \"rename\", display the type of file (script, executable, ...) for each match found.",
      "target": "which -a Regex | xargs -I {} file -L {}",
      "prediction": "<|endoftext|> <|source|> Search PATH for utilities called \"rename\", display the type of file (script, executable,...) for each match found. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and set their permission to 755 <|target|> find Path -type f -exec chmod Permission {} \\;         | grep -E Regex"
    },
    {
      "source": "Search the current directory tree for files whose names begin with \"my\" and end with \"p\" followed by any character",
      "target": "find Path -regex Regex",
      "prediction": "<|endoftext|> <|source|> Search the current directory tree for files whose names begin with \"my\" and end with \"p\" followed by any character <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and print their paths and sizes <|target|> find Path -name Regex -print0        | xargs -0 -I {} echo Regex {} "
    },
    {
      "source": "Find files newer than start.txt but not newer than end.txt",
      "target": "find Path -newer File -and ! -newer File",
      "prediction": "<|endoftext|> <|source|> Find files newer than start.txt but not newer than end.txt <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A common pattern in all regular files of the current directory tree is \"file1\" <|target|> find Path -type f -name Regex -print0 | xargs -0 -I {} echo {}          "
    },
    {
      "source": "Display all symlinks and their targets in the current directory tree",
      "target": "find -P Path -type l -exec echo -n Regex \\; -exec readlink {} \\;",
      "prediction": "<|endoftext|> <|source|> Display all symlinks and their targets in the current directory tree <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first word of the name of the current user's user name is \"username\" <|target|> find Path -user Regex Regex -type f -exec grep Regex {} \\;             "
    },
    {
      "source": "Find all the *.txt files in the current directory older than 48 hours",
      "target": "find Path -maxdepth Quantity -name Regex -mtime +Timespan",
      "prediction": "<|endoftext|> <|source|> Find all the *.txt files in the current directory older than 48 hours <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files under current directory and print them along with their names and their sizes <|target|> find Path -type f -name Regex -exec ls -l {} \\;    | awk Program    "
    },
    {
      "source": "get the root user access",
      "target": "su",
      "prediction": "<|endoftext|> <|source|> get the root user access <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files under current directory and print their paths <|target|> find Path -type f -exec echo Regex {} +   | awk -F Regex Program     |"
    },
    {
      "source": "display all files in the current folder which end with extension \"myfile\" followed by one digit or two digits",
      "target": "find Path \\( -name Regex -or -name Regex \\)",
      "prediction": "<|endoftext|> <|source|> display all files in the current folder which end with extension \"myfile\" followed by one digit or two digits <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is the second in a series of columns from the current month. <|source|> Find all files in the current directory tree that are not owned by user 'user' <|target|> find Path -not -user"
    },
    {
      "source": "List the files in \"archive.tar.gz\"",
      "target": "gzip -l Regex",
      "prediction": "<|endoftext|> <|source|> List the files in \"archive.tar.gz\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>\nThis file is a part devoted to the creation of a new file named \"file.dat\" with the same name and with the same name and with the same file name in the current directory.\n <|target|> find"
    },
    {
      "source": "Create directorie(s) 'some/path' as required in the current directory",
      "target": "mkdir -p Directory",
      "prediction": "<|endoftext|> <|source|> Create directorie(s)'some/path' as required in the current directory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the latest modified files in the current directory tree. <|source|> find Path -type f -printf '%T@ %p\\n' | sort | uniq -c | xargs"
    },
    {
      "source": "find all the files in the folder /home which are exactly of size 10MB",
      "target": "find Path -size Size",
      "prediction": "<|endoftext|> <|source|> find all the files in the folder /home which are exactly of size 10MB <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>1. Find all files in the current directory and below that are not owned by the user 'user' and have not been accessed in over 90 days. <|target|> find Path -user Regex -type f -at"
    },
    {
      "source": "find all the perl files in the current folder and search for a pattern",
      "target": "find Path -name Regex | xargs -I {} grep -L Regex {}",
      "prediction": "<|endoftext|> <|source|> find all the perl files in the current folder and search for a pattern <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>\nThis file is a copy of the file 'file.txt' which is located in the current directory.\n <|target|> find Path -name Regex -exec cp {} File \\;      "
    },
    {
      "source": "Recursively copy /path/foo on host \"prod\" to local directory \"/home/user/Desktop\", connecting as ssh username corresponding to local username.",
      "target": "scp -r File File",
      "prediction": "<|endoftext|> <|source|> Recursively copy /path/foo on host \"prod\" to local directory \"/home/user/Desktop\", connecting as ssh username corresponding to local username. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are bigger than 10MB. <|source|> find Path -size +Size -exec ls -l -h {} \\;     "
    },
    {
      "source": "Move \"tobecopied/tobeexclude\" to \"tobeexclude\"",
      "target": "mv File File",
      "prediction": "<|endoftext|> <|source|> Move \"tobecopied/tobeexclude\" to \"tobeexclude\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new and more detailed list of all the files in the current directory tree that are newer than the file \"file\" and older than the file \"file\" <|target|> find Path -newerct Regex -print"
    },
    {
      "source": "Find all files/directories with 'my key phrase' in their names under current directory",
      "target": "find Path -name Regex",
      "prediction": "<|endoftext|> <|source|> Find all files/directories with'my key phrase' in their names under current directory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new and unique way to view the current working directory.\n <|source|> find Path -name Regex -execdir echo Regex \\;               "
    },
    {
      "source": "Delete all regular files that start with 'sess_' in their names, are at least 1 level deep and were modified more than $gc_maxlifetime minutes ago under $save_path directory tree",
      "target": "find Path Path -depth -mindepth Quantity -name Regex -ignore_readdir_race -type f -cmin Quantity -delete",
      "prediction": "<|endoftext|> <|source|> Delete all regular files that start with'sess_' in their names, are at least 1 level deep and were modified more than $gc_maxlifetime minutes ago under $save_path directory tree <|target|> find Path -mindepth Quantity -maxdepth Quantity -type f -name Regex -mmin +Quantity -delete  -type f -mtime +Timespan -mtime +Timespan -mtime -Timespan"
    },
    {
      "source": "Move \"file.txt\" to docker container \"$COUNTAINER_ID\" in path \"/var/lib/docker/aufs/mnt/$CONTAINER_ID/rootfs/root/file.txt\"",
      "target": "mv -f File File",
      "prediction": "<|endoftext|> <|source|> Move \"file.txt\" to docker container \"$COUNTAINER_ID\" in path \"/var/lib/docker/aufs/mnt/$CONTAINER_ID/rootfs/root/file.txt\" <|target|> mv $( docker -i -d Regex ) File                              "
    },
    {
      "source": "Count all the lines of all '*.c' files in current directory recursively",
      "target": "find Path -name Regex -print0 | xargs -0 -I {} cat {} | wc -l",
      "prediction": "<|endoftext|> <|source|> Count all the lines of all '*.c' files in current directory recursively <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|source|> Find all files/directories under current directory and print the path to them <|target|> find Path -exec dirname {} Path -exec dirname {} Path -print Path"
    },
    {
      "source": "Prints long listing of content in a root folder, including hidden files, with human-readable sizes, and stores output to '/root/test.out' file.",
      "target": "echo Regex | bash",
      "prediction": "<|endoftext|> <|source|> Prints long listing of content in a root folder, including hidden files, with human-readable sizes, and stores output to '/root/test.out' file. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long and detailed list of all the files in the current directory tree that are not owned by the user or group by any user. <|source|> find Path -user Regex -perm"
    },
    {
      "source": "Recursively change owner to \"amzadm\" and group to \"root\" of all files in \"/usr/lib/python2.6/site-packages/\"",
      "target": "chown Regex -R File",
      "prediction": "<|endoftext|> <|source|> Recursively change owner to \"amzadm\" and group to \"root\" of all files in \"/usr/lib/python2.6/site-packages/\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new report from the Times of World finds that the number of jobs in the current directory tree is decreasing each day. This is a common occurrence, and a common one for all regular jobs. <|source"
    },
    {
      "source": "Check if \"\\[$VLABEL\\]\" is mounted and save the result in variable \"AMV\"",
      "target": "mount -l | grep Regex",
      "prediction": "<|endoftext|> <|source|> Check if \"\\[$VLABEL\\]\" is mounted and save the result in variable \"AMV\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|source|> Find all files/directories under current directory <|target|> find Path -type f -name Regex -print0 | xargs -0 -I {} echo Regex"
    },
    {
      "source": "Finds pattern text ignoring letter case in all .js files, prints matched strings and name of file with that strings.",
      "target": "find Path -name Regex -exec grep -i Regex {} \\; -print",
      "prediction": "<|endoftext|> <|source|> Finds pattern text ignoring letter case in all.js files, prints matched strings and name of file with that strings. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file is a copy of the current directory, and saves the path to it in variable 'copy' <|target|> find Path -type d -name Regex -execdir dirname {} \\"
    },
    {
      "source": "Prints total count of lines of all *.php files in a current folder and subfolders.",
      "target": "find Path -name Regex -type f -exec cat -- {} + | wc -l",
      "prediction": "<|endoftext|> <|source|> Prints total count of lines of all *.php files in a current folder and subfolders. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>\n\"This is a long listing of the files from the /home/user/dir directory tree that were last modified more than 2 days ago. <|target|> find Path -mtime +Times"
    },
    {
      "source": "Print the current directory name without full path",
      "target": "echo Regex | sed Program",
      "prediction": "<|endoftext|> <|source|> Print the current directory name without full path <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file is for copying files from one directory to another directory. <|target|> find Path -type f -name Regex -exec cp {} File \\;      | xargs"
    },
    {
      "source": "Find all *.c files under and below the current directory that contain \"wait_event_interruptible\"",
      "target": "find Path -name Regex -print | xargs -I {} grep Regex File {}",
      "prediction": "<|endoftext|> <|source|> Find all *.c files under and below the current directory that contain \"wait_event_interruptible\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file is a part of the current directory tree. <|source|> Find all files in the current directory tree that are not modified in the last 24 hours <|target|> find Path -m"
    },
    {
      "source": "Find files containing string \"#!/bin/ksh\" and append their names and matching strings to /tmp/allfiles",
      "target": "find Path -type f -execdir grep -i -H Regex {} \\; | tee File",
      "prediction": "<|endoftext|> <|source|> Find files containing string \"#!/bin/ksh\" and append their names and matching strings to /tmp/allfiles <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|source|> Find all files/directories under current directory that are owned by user 'tom' <|target|> find Path -user Regex -print       "
    },
    {
      "source": "Print information of the root mount point",
      "target": "mount -v | grep Regex",
      "prediction": "<|endoftext|> <|source|> Print information of the root mount point <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the files in the current directory tree that are not in the user's home directory. <|target|> find Path -type f -not -name Regex -exec ls -l {} \\;    | grep Regex      |"
    },
    {
      "source": "Search /path/to/your/directory for *.avi and *.flv files",
      "target": "find Path -regex Regex",
      "prediction": "<|endoftext|> <|source|> Search /path/to/your/directory for *.avi and *.flv files <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is the first of a two part series on the history of the history of the world. <|source|> Search the history file for the first match of \"file\" <|target|> find Path -name Regex -print0 | xargs -0 -I {} grep -"
    },
    {
      "source": "Source \"lib/B\" relative to the directory of the executing shell script, will fail if currently running script is not in PATH.",
      "target": "source $( dirname $( which Regex ) )",
      "prediction": "<|endoftext|> <|source|> Source \"lib/B\" relative to the directory of the executing shell script, will fail if currently running script is not in PATH. <|target|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and set their permission to 640 <|target|> find Path -exec chmod Permission {} +         Regex             Regex "
    },
    {
      "source": "Print a count of each unique line from standard input sorted from least frequent to most frequent",
      "target": "sort | uniq -c | sort -n",
      "prediction": "<|endoftext|> <|source|> Print a count of each unique line from standard input sorted from least frequent to most frequent <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new video game called \"Diretrovirus\" is a common, non-invasive, non-invasive, non-invasive, non-interactive (NIT) way to kill all human beings in the current directory. <|target|> find Path -iname"
    },
    {
      "source": "search for soft links in current folder and display those links which are not pointed to files in current folder",
      "target": "find Path -type l -exec readlink -f {} \\; | grep -v $( readlink -f File )",
      "prediction": "<|endoftext|> <|source|> search for soft links in current folder and display those links which are not pointed to files in current folder <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A long-running, open source-based, open source, and open source video editor, OpenCL.\n <|source|> Find all files in the current directory tree that are not owned by any user and do not have the permission to run. <|target|> find Path!"
    },
    {
      "source": "Remove files from the home directory tree that were last accessed more than 100 days ago",
      "target": "find Path -atime +Timespan -delete",
      "prediction": "<|endoftext|> <|source|> Remove files from the home directory tree that were last accessed more than 100 days ago <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|source|> Find all files/directories under current directory tree that are owned by user'me' <|target|> find Path -user Regex -user Regex -print0 | xargs -0 -I {} rm -r -f {}   "
    },
    {
      "source": "Find all aliencoders.[0-9]+ files under /home/jassi/ directory",
      "target": "find Path -type f -name Regex",
      "prediction": "<|endoftext|> <|source|> Find all aliencoders.[0-9]+ files under /home/jassi/ directory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|source|> Find all files/directories under current directory that are owned by user'me' <|target|> find Path -user Regex -print0 | xargs -0 -I {} ls -l {}       | grep Regex"
    },
    {
      "source": "Processes all files recursively in /var/spool/cron/tabs folder and filters out all strings with '#'.",
      "target": "grep -v Regex -R File",
      "prediction": "<|endoftext|> <|source|> Processes all files recursively in /var/spool/cron/tabs folder and filters out all strings with '#'. <|target|> cat File | xargs -I {} grep -i -l -r Regex {} | xargs -I {} grep -l -r Regex {}                            "
    },
    {
      "source": "Print lines in \"file1.txt\" that do not exist in \"file2.txt\"",
      "target": "sort <( sort -u File ) File File | uniq -u",
      "prediction": "<|endoftext|> <|source|> Print lines in \"file1.txt\" that do not exist in \"file2.txt\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and print the names of the directories they belong to <|target|> find Path -mindepth Quantity -maxdepth Quantity -type f -exec echo {} +  | cut -f Number -d Regex | x"
    },
    {
      "source": "display all the regular files in current folder that belong to the user \"tom\"",
      "target": "find Path -type f -user Regex",
      "prediction": "<|endoftext|> <|source|> display all the regular files in current folder that belong to the user \"tom\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new version of the GNU C bindings for Mac OS X. <|source|> Find all files in the current directory tree that are not owned by any user or group <|target|> find Path! -nouser -or -nogroup       "
    },
    {
      "source": "Move all directories in the current directory tree that have been modified in the last day to \"/path/to/target-dir\"",
      "target": "find Path -type d -mtime -Timespan -print0 | xargs -0 -I {} mv -t Directory {}",
      "prediction": "<|endoftext|> <|source|> Move all directories in the current directory tree that have been modified in the last day to \"/path/to/target-dir\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and change their permission to 755 <|target|> find Path -type f -exec chmod Permission {} +  -print0 | xargs -0 -I {} chmod Permission {}"
    },
    {
      "source": "Rename \"www_new\" to \"www\" even if \"www\" directory exists",
      "target": "mv -T File File",
      "prediction": "<|endoftext|> <|source|> Rename \"www_new\" to \"www\" even if \"www\" directory exists <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and print the names of the directories they are in <|target|> find Path -name Regex -print0 | xargs -0 -I {} rename Regex {}      "
    },
    {
      "source": "Search the current directory tree for symbolic links to files matching pattern '*/test*'",
      "target": "find -P Path -lname Regex",
      "prediction": "<|endoftext|> <|source|> Search the current directory tree for symbolic links to files matching pattern '*/test*' <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>The first of many jobs to be created for the current user will be created in the current user's home directory. <|source|> find Path -name Regex -execdir rename Regex {} \\;             "
    },
    {
      "source": "Print the current date followed by ' doing stuff'",
      "target": "echo $( date ) Regex Regex",
      "prediction": "<|endoftext|> <|source|> Print the current date followed by'doing stuff' <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>Are you a regular user of the current directory tree?\n <|target|> find Path -type d -exec echo Regex Regex {} \\;         | tr Regex            "
    },
    {
      "source": "Read a line from standard input with prompt \"Are you alright? (y/n) \" and save the response to variable \"RESP\"",
      "target": "read -p Regex Regex",
      "prediction": "<|endoftext|> <|source|> Read a line from standard input with prompt \"Are you alright? (y/n) \" and save the response to variable \"RESP\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and print their paths <|target|> find Path -print0 | xargs -0 -I {} echo Regex {}                "
    },
    {
      "source": "create a symbolic link named \"/usr/bin/my-editor\" to file \"/usr/share/my-ditor/my-editor-executable\"",
      "target": "ln -s File Regex",
      "prediction": "<|endoftext|> <|source|> create a symbolic link named \"/usr/bin/my-editor\" to file \"/usr/share/my-ditor/my-editor-executable\" <|target|> ln -s File Regex                                                 "
    },
    {
      "source": "Find all empty directories in the current one and delete them",
      "target": "find Path -type d -maxdepth Quantity -empty -print0 | xargs -0 -I {} rmdir {}",
      "prediction": "<|endoftext|> <|source|> Find all empty directories in the current one and delete them <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and print their names and sizes <|target|> find Path -type f -exec ls -l -a -l {} \\;    | awk Program       "
    },
    {
      "source": "search for all the regular/normal files  in the /etc folder which have been modified in the last 24 hours",
      "target": "find Path -type f -mtime -Timespan",
      "prediction": "<|endoftext|> <|source|> search for all the regular/normal files  in the /etc folder which have been modified in the last 24 hours <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Search for the regex 'foo' in all the files under current directory tree and show the matched lines with their filenames <|target|> find Path -type f -regex Regex -exec grep -H Regex {} \\; "
    },
    {
      "source": "Print the last mounted drive",
      "target": "mount | tail - Quantity | sed Program",
      "prediction": "<|endoftext|> <|source|> Print the last mounted drive <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file is a regular file with a number in the variable 'number' and prints the number of lines in each file. <|source|> find Path -type f -name Regex -exec sed Program File {} \\; | awk Program     "
    },
    {
      "source": "Find all *.c files under /home",
      "target": "find Path -name Regex",
      "prediction": "<|endoftext|> <|source|> Find all *.c files under /home <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new file with a new line in it.\n <|target|> find Path -name Regex -exec ls -l -s {} \\;   | awk Program       | grep -v Regex      "
    },
    {
      "source": "Find all file in current directory with have .c extenstion & have 777 permission . delete then",
      "target": "find Path -name Regex -and -perm -Permission | xargs -I {} rm -r -f {}",
      "prediction": "<|endoftext|> <|source|> Find all file in current directory with have.c extenstion & have 777 permission. delete then <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory with the permission 777 and show the output of those files/directories with the permission 777 <|target|> find Path -type f -perm Permission -print0 | xargs -0 -I {} ls -"
    },
    {
      "source": "Remove \"\\r\" at the end of each line in \"infile\" and display the result as printable characters or backslash escapes",
      "target": "cat File | sed Program | od -c",
      "prediction": "<|endoftext|> <|source|> Remove \"\\r\" at the end of each line in \"infile\" and display the result as printable characters or backslash escapes <|target|><|endoftext|><|endoftext|> <|source|> Print the names of all files in the current directory tree that are not owned by the user \"jul\" <|target|> find Path -not -user Regex -not -name Regex -print0 | xargs -0 -I {} grep -"
    },
    {
      "source": "Search the path given as the $absolute_dir_path variable for regular files",
      "target": "find Path -type f -print0",
      "prediction": "<|endoftext|> <|source|> Search the path given as the $absolute_dir_path variable for regular files <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|source|> Find all files under current directory and print the lines in their names <|target|> find Path -type f -name Regex -exec grep -H -n Regex {} \\;      | grep Regex    "
    },
    {
      "source": "Send SIGHUP (hangup) signal to nginx master process, causing it to re-read its configuration and restart child processes if necessary.",
      "target": "kill - Regex $( cat File )",
      "prediction": "<|endoftext|> <|source|> Send SIGHUP (hangup) signal to nginx master process, causing it to re-read its configuration and restart child processes if necessary. <|target|> ps -n -s -i -p | grep Regex | xargs -I {} sleep -n Quantity                                    "
    },
    {
      "source": "find all PDFs owned by user \u201cseamstress\u201d",
      "target": "find Path -user Regex -iname Regex",
      "prediction": "<|endoftext|> <|source|> find all PDFs owned by user \u201cseamstress\u201d <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the latest regular files in the current directory tree. <|target|> find Path -type f -print0 | xargs -0 -I {} ls -l {}  | tail - Quantity      | xargs -0 -I {}"
    },
    {
      "source": "Change to directory 'xyz' and resolve any symlinks in the resulting path, making the physical path the current one.",
      "target": "cd -P Directory",
      "prediction": "<|endoftext|> <|source|> Change to directory 'xyz' and resolve any symlinks in the resulting path, making the physical path the current one. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|source|> Find all files/directories under current directory and print their names and sizes <|target|> find Path -type f -exec ls -l {} \\;                     "
    },
    {
      "source": "Find all files under the current directory whose filenames are not \"file.txt\", ignoring the case",
      "target": "find Path -maxdepth Quantity -not -iname Regex",
      "prediction": "<|endoftext|> <|source|> Find all files under the current directory whose filenames are not \"file.txt\", ignoring the case <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the top 10 biggest files in the current directory tree. <|target|> find Path -type f -name Regex -exec ls -l {} \\; | sort -n -r | head - Quantity        | sort -"
    },
    {
      "source": "Find all files under $x directory and set read-write permission for owner and group and no permission for other for those files",
      "target": "find Path -type f -exec chmod Permission {} \\;",
      "prediction": "<|endoftext|> <|source|> Find all files under $x directory and set read-write permission for owner and group and no permission for other for those files <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and set read-write permission for group and no permission for others for those files/directories <|target|> find Path -type f -exec chmod Permission {} \\;       "
    },
    {
      "source": "Search the current directory tree for files whose name is \".note\", case insensitive",
      "target": "find Path -iname Regex | sort",
      "prediction": "<|endoftext|> <|source|> Search the current directory tree for files whose name is \".note\", case insensitive <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long list of the names of all the regular/normal files in the current directory tree that are newer than \"file\" and do not contain the string \"filename\" <|target|> find Path -type f -newer File -print0 | xargs -0 -"
    },
    {
      "source": "Print newline, word, and byte counts of each '*.java' file within current directory, and total newline, word, and byte counts",
      "target": "find Path -name Regex | tr Regex Regex | xargs -0 -I {} wc {}",
      "prediction": "<|endoftext|> <|source|> Print newline, word, and byte counts of each '*.java' file within current directory, and total newline, word, and byte counts <|target|> echo Regex | wc -c       | head - Quantity                                         "
    },
    {
      "source": "Sets shell option 'nounset'.",
      "target": "shopt -s -o nounset",
      "prediction": "<|endoftext|> <|source|> Sets shell option 'nounset'. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>Find all the files in the current directory tree that are not owned by any user. <|source|> find Path -nouser | grep -v Regex          | grep -v Regex"
    },
    {
      "source": "Find all *.[ch] files under current directory",
      "target": "find Path -name Regex",
      "prediction": "<|endoftext|> <|source|> Find all *.[ch] files under current directory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>Find all the files in the current directory and below that are larger than 100MB and delete them.\n <|target|> find Path -size +Size -exec rm -r {} \\;       | xargs"
    },
    {
      "source": "Find all regular files on the system whose names are 'myfile'",
      "target": "find Path -name Regex -type f -print",
      "prediction": "<|endoftext|> <|source|> Find all regular files on the system whose names are'myfile' <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new file named 'file' is created in the current directory and is then placed in the current directory. <|source|> Find all files/directories under current directory and print the pathnames of the files/directories <|"
    },
    {
      "source": "List all files under the current working directory tree",
      "target": "find Path $( pwd ) -type f",
      "prediction": "<|endoftext|> <|source|> List all files under the current working directory tree <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and print the lines matching lines with their names <|target|> find Path -print0 | xargs -0 -I {} grep -i -l -n Re"
    },
    {
      "source": "search for all the files in the current directory which have been modified in the last 24 hours.",
      "target": "find Path -mtime -Timespan",
      "prediction": "<|endoftext|> <|source|> search for all the files in the current directory which have been modified in the last 24 hours. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and change their permission to 755 <|target|> find Path -type f -exec chmod Permission {} \\;         "
    },
    {
      "source": "Find all *.py files/directories under current directory",
      "target": "find Path -name Regex",
      "prediction": "<|endoftext|> <|source|> Find all *.py files/directories under current directory <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory <|target|> find Path -name Regex                        "
    },
    {
      "source": "Force create a symbolc link named \"/usr/local/bin/fpdf\" to \"/usr/local/bin/findpdftext\"",
      "target": "ln -s -f File Regex",
      "prediction": "<|endoftext|> <|source|> Force create a symbolc link named \"/usr/local/bin/fpdf\" to \"/usr/local/bin/findpdftext\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory and print the path to them <|target|> find Path -print0 | xargs -0 -I {} echo Regex {}       "
    },
    {
      "source": "Find all the files which are modified in last 1 hour in entire file system",
      "target": "find Path -mmin -Quantity",
      "prediction": "<|endoftext|> <|source|> Find all the files which are modified in last 1 hour in entire file system <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are not newer than the file 'file' and do not contain any new files. <|target|> find Path -type f -mtime +Timespanels"
    },
    {
      "source": "search for a shell script in the current folder and display the current folder path but search from the sub directories",
      "target": "find Path -name Regex -execdir pwd \\;",
      "prediction": "<|endoftext|> <|source|> search for a shell script in the current folder and display the current folder path but search from the sub directories <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of all the files in the current directory tree that are newer than the file \"file_name\" <|target|> find Path -newer File -type f -print0 | xargs -0 -I"
    },
    {
      "source": "Find files matching pattern $2 in the $1 directory recursively and search them for text $3, where $1, $2, $3 are the command line arguments to the Bash script",
      "target": "find Path -path Regex -prune -or -name Regex -print -exec grep -H -n Regex {} \\;",
      "prediction": "<|endoftext|> <|source|> Find files matching pattern $2 in the $1 directory recursively and search them for text $3, where $1, $2, $3 are the command line arguments to the Bash script <|target|> find Path -name Regex -exec grep -H Regex {} \\;                                 "
    },
    {
      "source": "Find all files/directories with '.log' extension that belong to the group 'adm' under '/var/log' directory tree",
      "target": "find Path -group Regex -name Regex",
      "prediction": "<|endoftext|> <|source|> Find all files/directories with '.log' extension that belong to the group 'adm' under '/var/log' directory tree <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long-running question: what is the difference between \"foo\" and \"bar\" in the current directory tree? <|target|> find Path -name Regex -exec echo Regex \\;  "
    },
    {
      "source": "delete all the files in the current folder which end with \".bak\" or \".backup\" and which have not been accessed in the last 30 days",
      "target": "find Path \\( -name Regex -or -name Regex \\) -type f -atime +Timespan -exec rm {} \\;",
      "prediction": "<|endoftext|> <|source|> delete all the files in the current folder which end with \".bak\" or \".backup\" and which have not been accessed in the last 30 days <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Search for the word \"bak\" in all the files in the current directory tree and display the matched files along with their names and their sizes. <|target|> find Path -name Regex"
    },
    {
      "source": "Print the path of all the network mounts",
      "target": "mount | sed -n -e Program",
      "prediction": "<|endoftext|> <|source|> Print the path of all the network mounts <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>'This is the first in a line of commands for the '~' command. <|source|> find Path -type f -exec ls -l {} \\;    | sed -n Program   "
    },
    {
      "source": "find all text files in user/directory/ which have been modified today and display the last line of these files",
      "target": "find Path -name Regex -mtime Timespan -type f -printf '%p: ' -exec tail - Quantity {} \\;",
      "prediction": "<|endoftext|> <|source|> find all text files in user/directory/ which have been modified today and display the last line of these files <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long list of all the files in the current directory tree that are not owned by any user. <|target|> find Path -not -user Regex -type f -not -user Regex -exec"
    },
    {
      "source": "Verbosely compresses all files on fifth and sixth depth level keeping original files in place.",
      "target": "bzip2 -k -v File",
      "prediction": "<|endoftext|> <|source|> Verbosely compresses all files on fifth and sixth depth level keeping original files in place. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the files in the current directory tree that are not owned by the user \"jknew\" and do not have the permission \"share\" in their names. <|target|> find Path -"
    },
    {
      "source": "Use the first non-zero exit code (if any) of a set of piped commands as the exit code of the full set of commands",
      "target": "set -o pipefail",
      "prediction": "<|endoftext|> <|source|> Use the first non-zero exit code (if any) of a set of piped commands as the exit code of the full set of commands <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory that are owned by user 'tom' <|target|> find Path -user Regex -exec echo Regex \\;      "
    },
    {
      "source": "Prints all child processes of a process with id 20238.",
      "target": "pstree -p Regex | sed Program | grep Regex | sed Program",
      "prediction": "<|endoftext|> <|source|> Prints all child processes of a process with id 20238. <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>\nThis is a long listing of the files from the current directory tree that are not in the current directory. <|target|> find Path -type f -not -name Regex -exec ls -l {} \\;"
    },
    {
      "source": "Split \"/usr/bin/firefox\" into 1000 files of about equal size",
      "target": "split -n Quantity File",
      "prediction": "<|endoftext|> <|source|> Split \"/usr/bin/firefox\" into 1000 files of about equal size <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>Search for the regex '^(c|h)$' in all regular files under current directory tree and show the matched files in sorted order of their names <|target|> find Path -type f -exec grep -"
    },
    {
      "source": "Set the executable bit for all users on all regular files from directories arch/x86/usr/sbin, arch/x86/usr/X11R6/bin, usr/sbin/",
      "target": "find Path Path Path -type f | xargs -I {} chmod Permission {}",
      "prediction": "<|endoftext|> <|source|> Set the executable bit for all users on all regular files from directories arch/x86/usr/sbin, arch/x86/usr/X11R6/bin, usr/sbin/ <|target|> find Path -type f -exec chmod Permission {} \\;                                "
    },
    {
      "source": "find all the files in the entire file system which belong to the group \"staff\"",
      "target": "find Path -group Regex -print",
      "prediction": "<|endoftext|> <|source|> find all the files in the entire file system which belong to the group \"staff\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|source|> Find all files under /home/user1/directory and change their permission to 755 <|target|> find Path -group Regex -exec chmod Permission {} \\;   "
    },
    {
      "source": "find all the html files in the current folder and replace the end of each line with a pattern",
      "target": "find Path -type f -name Regex | xargs -I {} sed -i Program {}",
      "prediction": "<|endoftext|> <|source|> find all the html files in the current folder and replace the end of each line with a pattern <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|source|source|> Search for the regex '^[0-9]*' in all the regular files from the current directory tree <|target|> find Path -type f -exec grep -i Regex {} \\;     | xargs -I {} grep"
    },
    {
      "source": "search for all the files in current folder and display all the file names separated by space",
      "target": "find Path | awk Program",
      "prediction": "<|endoftext|> <|source|> search for all the files in current folder and display all the file names separated by space <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|source|> Find all the files in the current directory tree that are less than 50 bytes in size <|target|> find Path -size +Size -print0 | xargs -0 -I {} size -b -Size -n Quantity       "
    },
    {
      "source": "Replace all newlines from the contents of \"file\" except the last with spaces",
      "target": "sed Program File",
      "prediction": "<|endoftext|> <|source|> Replace all newlines from the contents of \"file\" except the last with spaces <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A group of users are using bots to search for \"foo\" in a file, and display the number of lines matching the regex \"foo\" in the file.\n <|source|> find Path -type f -exec grep -l Regex {} + | grep -E Regex | cut"
    },
    {
      "source": "Find all .gz archives in the current directory tree and check if they are valid",
      "target": "find Path -name Regex -exec gunzip {} \\;",
      "prediction": "<|endoftext|> <|source|> Find all.gz archives in the current directory tree and check if they are valid <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Find all files/directories under current directory that are owned by user 'user' and have not been modified in the last 30 days <|target|> find Path -user Regex -mtime +Timespan -exec grep -H -n Regex {} \\;"
    },
    {
      "source": "find all files in the current folder which are bigger than 10bytes",
      "target": "find Path -size +Size -print",
      "prediction": "<|endoftext|> <|source|> find all files in the current folder which are bigger than 10bytes <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|source|> Search for 'foo' in all regular files under current directory and show the matched lines along with the file names <|target|> find Path -type f -exec grep -E Regex {} +   | head - Quantity      | grep -v"
    },
    {
      "source": "display the count of number html files in the current folder",
      "target": "find Path -name Regex -print | xargs -l -i -I {} wc {} {}",
      "prediction": "<|endoftext|> <|source|> display the count of number html files in the current folder <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|source|> Find all files under current directory and print their names <|target|> find Path -type f -exec echo Regex {} + | wc -l      | sed -n Program         | sed -n Program "
    },
    {
      "source": "find and image in current folder (case insensitive search)",
      "target": "find Path -iname Regex",
      "prediction": "<|endoftext|> <|source|> find and image in current folder (case insensitive search) <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A new version of the \"compat\" utility for Mac OS users.\n <|source|> find Path -name Regex -type f -exec echo Regex {} +     | grep Regex      | sed Program        "
    },
    {
      "source": "Find all files/directories under current directory tree whose names start with 'test' followed by two digits and end with '.txt' extension",
      "target": "find Path -regextype sed -regex Regex",
      "prediction": "<|endoftext|> <|source|> Find all files/directories under current directory tree whose names start with 'test' followed by two digits and end with '.txt' extension <|target|> find Path -name Regex -print0 | xargs -0 -I {} echo Regex {}                                        "
    },
    {
      "source": "change the ownership of all directories in the current folder",
      "target": "find Path -type d -exec chown Regex {} \\;",
      "prediction": "<|endoftext|> <|source|> change the ownership of all directories in the current folder <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|> Print the names and sizes of all files in the current directory tree <|target|> find Path -type f -exec ls -l {} \\;  | sort | uniq | xargs -n Quantity -I {} echo Regex Regex Regex {}  "
    },
    {
      "source": "Change ownership of \"/data/db\" to the current user",
      "target": "chown $( whoami ) File",
      "prediction": "<|endoftext|> <|source|> Change ownership of \"/data/db\" to the current user <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the latest modified file in the current directory. <|source|> find Path -type f -name Regex -printf \"%h\\n\" | sort | uniq | xargs -I {} ls -l -t -r -t {} | head - Quantity"
    },
    {
      "source": "Get a detailed list of all files on the system larger than 10MB",
      "target": "find Path -size +Size -printf \"%12s %t %h/%fn\"",
      "prediction": "<|endoftext|> <|source|> Get a detailed list of all files on the system larger than 10MB <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>A long-running search for a single word in all the.c and.h files in the current directory tree, and display the matched lines along with their names.\n <|source|> find Path -name Regex -exec grep -l Regex {}"
    },
    {
      "source": "Remove the last two alphanumeric file extensions from \"mpc-1.0.1.tar.gz\"",
      "target": "echo Regex | sed -r Program",
      "prediction": "<|endoftext|> <|source|> Remove the last two alphanumeric file extensions from \"mpc-1.0.1.tar.gz\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file is a copy of the file \"file.txt\" in the current directory. <|target|> find Path -type f -name Regex -exec cp File {} \\;    | tail - Quantity        "
    },
    {
      "source": "display all the home folder which end with the extension \"sxw\" and which have been accessed in the last 3*24 hours and which belong to the user bruno",
      "target": "find Path -type f -name Regex -atime -Timespan -user Regex",
      "prediction": "<|endoftext|> <|source|> display all the home folder which end with the extension \"sxw\" and which have been accessed in the last 3*24 hours and which belong to the user bruno <|target|> find Path -name Regex -atime +Timespan -or -user Regex -user Regex                                "
    },
    {
      "source": "Find all the files which are accessed in last 1 hour in entire file system",
      "target": "find Path -amin -Quantity",
      "prediction": "<|endoftext|> <|source|> Find all the files which are accessed in last 1 hour in entire file system <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This file is a copy of the file 'file.txt' in the current directory. <|source|> find Path -type f -name Regex -or -name Regex -or -name Regex -or -name Regex -or -name"
    },
    {
      "source": "Find all *.sql file that are not newer than  $oldest_to_keep excluding the  $oldest_to_keep file",
      "target": "find Path -name Regex -not -samefile Regex -not -newer File",
      "prediction": "<|endoftext|> <|source|> Find all *.sql file that are not newer than  $oldest_to_keep excluding the  $oldest_to_keep file <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> <|source|source|> Find all files under /path/to/directory/ that are newer than /path/to/directory/ and delete them <|target|> find Path -type f -newer File! -newer File -print0"
    },
    {
      "source": "execute command \"who\" when key \"\\eW\" is pressed",
      "target": "bind -x Regex",
      "prediction": "<|endoftext|> <|source|> execute command \"who\" when key \"\\eW\" is pressed <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>\nThis file is a part of the current directory tree. <|target|> find Path -type f -name Regex -execdir rename Regex {} \\;                   "
    },
    {
      "source": "Print unique lines in sorted \"file1\" compared to sorted file \"file2\"",
      "target": "comm -2 -3 File File",
      "prediction": "<|endoftext|> <|source|> Print unique lines in sorted \"file1\" compared to sorted file \"file2\" <|target|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>This is a long listing of the largest files in the current directory tree, sorted from oldest to newest. <|source|> find Path -type f -exec ls -s {} + | awk Program | sort | uniq -c | sort -n "
    }
  ]
}